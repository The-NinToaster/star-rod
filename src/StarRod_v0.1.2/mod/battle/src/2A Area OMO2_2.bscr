% Script File: 2A Area OMO2_2.bscr
% Decoded from: 5483E0 to 54CC70 (2A Area OMO2_2)

% Origin: HINT
#new:Function $Function_80231000
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_8023102C
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       {Func:GetActor}
    C:  LW        A0, 148 (A0)
   10:  LW        V1, 8 (V0)
   14:  SB        R0, 6 (V1)
   18:  LW        RA, 10 (SP)
   1C:  ADDIU     V0, R0, 2
   20:  JR        RA
   24:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_80231054
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80231120
.Status:Normal    00700001
.Status:Stone     00700000
.Status:Sleep     00700004
.Status:Poison    00700001
.Status:Stop      00700000
.Status:Static    00700000
.Status:Paralyze  00700000
.Status:Paralyze  00700000
.Status:Dizzy     00700000
.Status:Fear      00700000
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80231174
.Status:Normal    00710000
.Status:End

% Origin: HINT
#new:DefenseTable $DefenseTable_80231180
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:DefenseTable $DefenseTable_8023118C
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End

% Origin: HINT
#new:StatusTable $StatusTable_802311A0
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

% Origin: HINT
#new:StatusTable $StatusTable_8023124C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

% Origin: HINT
#new:SpriteTable $SpriteTable_802312F8
00020001 01000000 001800FF $IdleAnimations_80233E98 $DefenseTable_8023118C 00000000 00000000 FFF60000 00000000 
00020001 02000000 002800FF $IdleAnimations_80231120 $DefenseTable_80231180 00000000 00000000 FFFB0000 00000000 
00800001 03004A00 00F800FF 00000000 $DefenseTable_80231180 00000000 00000000 FFFD0000 00000000 
00022001 04FE0000 001800FF 00000000 $DefenseTable_80231180 00000000 00000000 FF050000 00000000 
20120001 05000000 000000FF $IdleAnimations_80231174 $DefenseTable_80231180 00000000 00000000 00000000 00000000 
20120001 06000000 000000FF $IdleAnimations_80231174 $DefenseTable_80231180 00000000 00000000 00000000 00000000 
20120001 07000000 000000FF $IdleAnimations_80231174 $DefenseTable_80231180 00000000 00000000 00000000 00000000 
20120001 08000000 000000FF $IdleAnimations_80231174 $DefenseTable_80231180 00000000 00000000 00000000 00000000 

% Origin: HINT
#new:Actor $StiltGuy
% stats
[Index]        A6b 
[Level]         0`b 
[MaxHP]         7`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802311A0 
% ai
[SpriteCount]   8`s 
[SpriteTable] $SpriteTable_802312F8 
[Script]      $Script_Init_80231440 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  75`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  70`b % dx dy
[StatusIcon]   10`b  65`b % dx dy

% Origin: HINT
#new:Script $Script_Init_80231440
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80232C78 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802322D0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8023239C )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   6C:  Call     8026D158 ( FFFFFF81 00000004 00000001 00000001 )
   88:  Call     8027D970 ( FFFFFF81 00000001 00000018 0000001E )
   A4:  Call     UseIdleAnimation 	( .Actor:Self .False )
   B8:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   CC:  Call     SetSpriteRotationOffset 	( .Actor:Self 00000008 00000000 0000000D 00000000 )
   EC:  Call     SetSpriteRotationOffset 	( .Actor:Self 00000007 00000000 0000000D 00000000 )
  10C:  Call     SetSpriteRotationOffset 	( .Actor:Self 00000006 00000000 0000000D 00000000 )
  12C:  Call     SetSpriteRotationOffset 	( .Actor:Self 00000005 00000000 0000000D 00000000 )
  14C:  Thread
  154:  	Set  *Var[0]  0000005A 
  164:  	Set  *Var[1]  0000010E 
  174:  	Loop     00000005 
  180:  		Loop     00000002 
  18C:  			Label    00000000 
  198:  			Call     SetSpriteRotation 	( .Actor:Self 00000008 *Var[1] 00000000 00000000 )
  1B8:  			Wait     00000001 
  1C4:  			Sub  *Var[1]  *Var[0] 
  1D4:  			If  *Var[1]  >=  FFFFFFA6 
  1E4:  				Goto     00000000 
  1F0:  			EndIf
  1F8:  			Add  *Var[1]  00000168 
  208:  		EndLoop
  210:  		Sub  *Var[0]  0000000F 
  220:  	EndLoop
  228:  	Call     SetSpriteRotation 	( .Actor:Self 00000008 FFFFFFA6 00000000 00000000 )
  248:  EndThread
  250:  Thread
  258:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000008 *Fixed[0.60058594] )
  270:  	Call     SetAnimation 	( .Actor:Self 00000008 00710003 )
  288:  	Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
  2A4:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  2BC:  	If  *Var[1]  ==  00000000 
  2CC:  		Set  *Var[0]  0000000A 
  2DC:  		Call     PlaySound   	( 00000305 )
  2EC:  	Else
  2F4:  		Set  *Var[0]  00000032 
  304:  		Call     PlaySound   	( 00000306 )
  314:  	EndIf
  31C:  	Sub  *Var[2]  0000000D 
  32C:  	Call     SetSpritePos 	( .Actor:Self 00000008 *Var[0] 000000C8 *Var[2] )
  34C:  	Call     SetActorPos 	( .Actor:Self *Var[0] 000000C8 *Var[2] )
  368:  	Call     SetAnimation 	( .Actor:Enemy0 00000001 00760002 )
  380:  	Call     SetAnimation 	( .Actor:Enemy0 00000001 0076000A )
  398:  	Call     PlaySoundAtSprite 	( .Actor:Enemy0 00000001 .Sound:GeneralWhistle )
  3B0:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000008 00000001 .False )
  3CC:  	Call     JumpSpriteB 	( .Actor:Self 00000008 *Var[0] FFFFFFF7 *Var[2] 00000050 )
  3F0:  EndThread
  3F8:  Thread
  400:  	Wait     0000000F 
  40C:  	Set  *Var[0]  0000005A 
  41C:  	Set  *Var[1]  000001C2 
  42C:  	Loop     00000005 
  438:  		Loop     00000002 
  444:  			Label    00000001 
  450:  			Call     SetSpriteRotation 	( .Actor:Self 00000007 *Var[1] 00000000 00000000 )
  470:  			Wait     00000001 
  47C:  			Sub  *Var[1]  *Var[0] 
  48C:  			If  *Var[1]  >=  0000005A 
  49C:  				Goto     00000001 
  4A8:  			EndIf
  4B0:  			Add  *Var[1]  00000168 
  4C0:  		EndLoop
  4C8:  		Sub  *Var[0]  0000000F 
  4D8:  	EndLoop
  4E0:  	Call     SetSpriteRotation 	( .Actor:Self 00000007 0000005A 00000000 00000000 )
  500:  EndThread
  508:  Thread
  510:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000007 *Fixed[0.60058594] )
  528:  	Call     SetAnimation 	( .Actor:Self 00000007 00710002 )
  540:  	Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
  55C:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  574:  	If  *Var[0]  ==  00000000 
  584:  		Set  *Var[0]  0000000A 
  594:  	Else
  59C:  		Set  *Var[0]  00000032 
  5AC:  	EndIf
  5B4:  	Sub  *Var[2]  0000000D 
  5C4:  	Call     SetSpritePos 	( .Actor:Self 00000007 *Var[0] 000000C8 *Var[2] )
  5E4:  	Wait     0000000F 
  5F0:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000007 00000001 .False )
  60C:  	Call     JumpSpriteB 	( .Actor:Self 00000007 *Var[0] FFFFFFF7 *Var[2] 00000050 )
  630:  EndThread
  638:  Thread
  640:  	Wait     0000001E 
  64C:  	Set  *Var[0]  0000005A 
  65C:  	Set  *Var[1]  0000010E 
  66C:  	Loop     00000005 
  678:  		Loop     00000002 
  684:  			Label    00000002 
  690:  			Call     SetSpriteRotation 	( .Actor:Self 00000006 *Var[1] 00000000 00000000 )
  6B0:  			Wait     00000001 
  6BC:  			Sub  *Var[1]  *Var[0] 
  6CC:  			If  *Var[1]  >=  FFFFFFA6 
  6DC:  				Goto     00000002 
  6E8:  			EndIf
  6F0:  			Add  *Var[1]  00000168 
  700:  		EndLoop
  708:  		Sub  *Var[0]  0000000F 
  718:  	EndLoop
  720:  	Call     SetSpriteRotation 	( .Actor:Self 00000006 FFFFFFA6 00000000 00000000 )
  740:  EndThread
  748:  Thread
  750:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.60058594] )
  768:  	Call     SetAnimation 	( .Actor:Self 00000006 00710001 )
  780:  	Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
  79C:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  7B4:  	If  *Var[0]  ==  00000000 
  7C4:  		Set  *Var[0]  0000000A 
  7D4:  	Else
  7DC:  		Set  *Var[0]  00000032 
  7EC:  	EndIf
  7F4:  	Sub  *Var[2]  0000000D 
  804:  	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] 000000C8 *Var[2] )
  824:  	Wait     0000001E 
  830:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
  84C:  	Call     JumpSpriteB 	( .Actor:Self 00000006 *Var[0] FFFFFFF7 *Var[2] 00000050 )
  870:  EndThread
  878:  Thread
  880:  	Wait     0000002D 
  88C:  	Set  *Var[0]  0000005A 
  89C:  	Set  *Var[1]  000001C2 
  8AC:  	Loop     00000005 
  8B8:  		Loop     00000002 
  8C4:  			Label    00000003 
  8D0:  			Call     SetSpriteRotation 	( .Actor:Self 00000005 *Var[1] 00000000 00000000 )
  8F0:  			Wait     00000001 
  8FC:  			Sub  *Var[1]  *Var[0] 
  90C:  			If  *Var[1]  >=  0000005A 
  91C:  				Goto     00000003 
  928:  			EndIf
  930:  			Add  *Var[1]  00000168 
  940:  		EndLoop
  948:  		Sub  *Var[0]  0000000F 
  958:  	EndLoop
  960:  	Call     SetSpriteRotation 	( .Actor:Self 00000005 0000005A 00000000 00000000 )
  980:  EndThread
  988:  Thread
  990:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000005 *Fixed[0.60058594] )
  9A8:  	Call     SetAnimation 	( .Actor:Self 00000005 00710000 )
  9C0:  	Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
  9DC:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  9F4:  	If  *Var[0]  ==  00000000 
  A04:  		Set  *Var[0]  0000000A 
  A14:  	Else
  A1C:  		Set  *Var[0]  00000032 
  A2C:  	EndIf
  A34:  	Sub  *Var[2]  0000000D 
  A44:  	Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] 000000C8 *Var[2] )
  A64:  	Wait     0000002D 
  A70:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .False )
  A8C:  	Call     JumpSpriteB 	( .Actor:Self 00000005 *Var[0] FFFFFFF7 *Var[2] 00000050 )
  AB0:  	Wait     0000000F 
  ABC:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  AD8:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000007 00000001 .True )
  AF4:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000008 00000001 .True )
  B10:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  B2C:  	Call     GetSpriteOffset 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
  B4C:  	Add  *Var[2]  0000000D 
  B5C:  	Call     ForceHomePos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  B78:  	Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] 00000000 *Var[2] )
  B98:  	Call     GetSpriteOffset 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  BB8:  	Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] 00000000 *Var[2] )
  BD8:  	Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 00000000 )
  BF8:  	Call     SetSpriteRotationOffset 	( .Actor:Self 00000008 00000000 00000000 00000000 )
  C18:  	Call     SetSpriteRotationOffset 	( .Actor:Self 00000007 00000000 00000000 00000000 )
  C38:  	Call     SetSpriteRotationOffset 	( .Actor:Self 00000006 00000000 00000000 00000000 )
  C58:  	Call     SetSpriteRotationOffset 	( .Actor:Self 00000005 00000000 00000000 00000000 )
  C78:  	Call     PlaySoundAtSprite 	( .Actor:Self 00000005 00002065 )
  C90:  	Call     SetAnimation 	( .Actor:Self 00000005 00710005 )
  CA8:  	Call     8026ED20 ( FFFFFF81 00000005 00000001 )
  CC0:  	Call     8026EBF8 ( FFFFFF81 00000005 00000001 00000000 00000000 00000024 00000000 000000FF 00000000 00000000 )
  CF4:  	Call     8026EA7C ( FFFFFF81 00000005 00000010 )
  D0C:  	Wait     00000012 
  D18:  	Call     8026ED20 ( FFFFFF81 00000005 00000000 )
  D30:  	Call     SetAnimation 	( .Actor:Self 00000005 00710004 )
  D48:  	Wait     00000005 
  D54:  	Loop     00000014 
  D60:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .False )
  D7C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  D98:  		Wait     00000001 
  DA4:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
  DC0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  DDC:  		Wait     00000001 
  DE8:  	EndLoop
  DF0:  	Call     HPBarToHome 	( .Actor:Self )
  E00:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  E14:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  E28:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  E40:  	If  *Var[0]  ==  00000001 
  E50:  		Call     SetActorVar 	( .Actor:Enemy1 00000001 00000003 )
  E68:  	Else
  E70:  	EndIf
  E78:  EndThread
  E80:  Return
  E88:  End

% Origin: HINT
#new:Script $Script_Idle_802322D0
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Goto     00000000 
   24:  Return
   2C:  End

% Origin: HINT
#new:Script $Script_80232304
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_80234040 
   34:  	Return
   3C:  EndIf
   44:  SetConst  *Var[0]  00000002 
   54:  SetConst  *Var[1]  00700003 
   64:  ExecWait DoReturnHome 
   70:  Call     SetAnimation 	( .Actor:Self 00000002 00700001 )
   88:  Return
   90:  End

% Origin: HINT
#new:Script $Script_HandleEvent_8023239C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetLastElement ( *Var[F] )
   24:  Call     GetEventType 	( .Actor:Self *Var[0] )
   38:  Switch  *Var[0] 
   44:  	Case  ==  .Event:BeginFirstStrike
   50:  	Case  ==  .Event:HitCombo
   5C:  		ExecWait $Script_80232A78 
   68:  		SetConst  *Var[0]  00000002 
   78:  		SetConst  *Var[1]  00700006 
   88:  		ExecWait DoNormalHit 
   94:  	Case  ==  00000017
   A0:  		SetConst  *Var[0]  00000002 
   B0:  		SetConst  *Var[1]  00700006 
   C0:  		ExecWait DoNormalHit 
   CC:  	CaseOR  ==  .Event:Immune
   D8:  	CaseOR  ==  .Event:Hit
   E4:  	CaseOR  ==  .Event:MultibounceHit
   F0:  	CaseOR  ==  00000011
   FC:  		Call     GetBattleFlags ( *Var[2] )
  10C:  		If  *Var[2]  &  00080000 
  11C:  			Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  134:  			If  *Var[2]  ==  000000B7 
  144:  				Set  *Var[0]  00000002 
  154:  				Set  *Var[1]  00700001 
  164:  				ExecWait DoImmune 
  170:  				Call     UseIdleAnimation 	( .Actor:Self .True )
  184:  				Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  19C:  				Return
  1A4:  			EndIf
  1AC:  		EndIf
  1B4:  		SetConst  *Var[0]  00000002 
  1C4:  		SetConst  *Var[1]  00700006 
  1D4:  		ExecWait DoNormalHit 
  1E0:  		ExecWait $Script_80232B84 
  1EC:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  204:  		If  *Var[0]  !=  00000000 
  214:  			ExecWait $Script_802333A4 
  220:  		EndIf
  228:  		Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  240:  	EndCaseGroup
  248:  	Case  ==  .Event:BeginAirLift
  254:  		Call     SetAnimation 	( .Actor:Self 00000002 00700006 )
  26C:  		Wait     000003E8 
  278:  	Case  ==  .Event:AirLiftFailed
  284:  		Set  *Var[0]  00000002 
  294:  		Set  *Var[1]  00700001 
  2A4:  		ExecWait DoImmune 
  2B0:  	Case  ==  .Event:BurnHit
  2BC:  		Call     80269E80 ( *Var[0] )
  2CC:  		If  *Var[0]  !=  00000009 
  2DC:  			Set  *Var[0]  00000002 
  2EC:  			Set  *Var[1]  00700009 
  2FC:  			Set  *Var[2]  0070000A 
  30C:  			ExecWait DoBurnHit 
  318:  		Else
  320:  			Set  *Var[0]  00000002 
  330:  			Set  *Var[1]  00700009 
  340:  			Set  *Var[2]  0070000A 
  350:  			ExecWait DoBurnHit 
  35C:  			ExecWait $Script_802333A4 
  368:  		EndIf
  370:  	Case  ==  .Event:BurnDeath
  37C:  		Set  *Var[0]  00000002 
  38C:  		Set  *Var[1]  00700009 
  39C:  		Set  *Var[2]  0070000A 
  3AC:  		ExecWait DoBurnHit 
  3B8:  		Wait     0000000A 
  3C4:  		SetConst  *Var[0]  00000002 
  3D4:  		SetConst  *Var[1]  0070000A 
  3E4:  		ExecWait $Script_8023379C 
  3F0:  		Return
  3F8:  	Case  ==  .Event:MultibounceDeath
  404:  		SetConst  *Var[0]  00000002 
  414:  		SetConst  *Var[1]  00700006 
  424:  		ExecWait DoNormalHit 
  430:  		SetConst  *Var[0]  00000002 
  440:  		SetConst  *Var[1]  00700007 
  450:  		ExecWait $Script_8023379C 
  45C:  		Return
  464:  	Case  ==  .Event:ShockHit
  470:  		SetConst  *Var[0]  00000002 
  480:  		SetConst  *Var[1]  00700006 
  490:  		ExecWait DoShockHit 
  49C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  4B0:  		ExecWait $Script_80232304 
  4BC:  	Case  ==  .Event:ShockDeath
  4C8:  		SetConst  *Var[0]  00000002 
  4D8:  		SetConst  *Var[1]  00700006 
  4E8:  		ExecWait DoShockHit 
  4F4:  		SetConst  *Var[0]  00000002 
  504:  		SetConst  *Var[1]  00700007 
  514:  		ExecWait $Script_8023379C 
  520:  		Return
  528:  	Case  ==  .Event:Death
  534:  		SetConst  *Var[0]  00000002 
  544:  		SetConst  *Var[1]  00700006 
  554:  		ExecWait DoNormalHit 
  560:  		Wait     0000000A 
  56C:  		SetConst  *Var[0]  00000002 
  57C:  		SetConst  *Var[1]  00700007 
  58C:  		ExecWait $Script_8023379C 
  598:  		Return
  5A0:  	Case  ==  .Event:EndFirstStrike
  5AC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  5C0:  		ExecWait $Script_80232304 
  5CC:  		Call     HPBarToHome 	( .Actor:Self )
  5DC:  	Case  ==  .Event:RecoverStatus
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00700001 
  608:  		ExecWait DoRecover 
  614:  	Case  ==  00000030
  620:  		SetConst  *Var[0]  00000002 
  630:  		SetConst  *Var[1]  00700006 
  640:  		ExecWait DoNormalHit 
  64C:  		Wait     000003E8 
  658:  	Case  ==  .Event:ScareAway
  664:  		SetConst  *Var[0]  00000002 
  674:  		SetConst  *Var[1]  00700003 
  684:  		SetConst  *Var[2]  00700003 
  694:  		ExecWait DoScareAway 
  6A0:  		Return
  6A8:  	Default
  6B0:  EndSwitch
  6B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6CC:  Return
  6D4:  End

% Origin: HINT
#new:Script $Script_80232A78
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80231000 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

% Origin: HINT
#new:Script $Script_80232B84
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[F]  &  00000080 
   30:  		If  *Var[0]  &  00000240 
   40:  			Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   58:  		EndIf
   60:  	EndIf
   68:  	If  *Var[F]  &  00000C00 
   78:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   90:  	EndIf
   98:  EndIf
   A0:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   B4:  If  *Var[0]  &  002D1000 
   C4:  	Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   DC:  EndIf
   E4:  Return
   EC:  End

% Origin: HINT
#new:Script $Script_TakeTurn_80232C78
    0:  ExecWait $Script_80232C94 
    C:  Return
   14:  End

% Origin: HINT
#new:Script $Script_80232C94
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     SetCamOffsetZ 	( 00000028 )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     MoveCamOver 	( 00000014 )
   7C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   94:  Call     SetAnimation 	( .Actor:Self 00000002 00700003 )
   AC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   C0:  Call     SetGoalToTarget 	( .Actor:Self )
   D0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Add  *Var[0]  00000032 
   FC:  Set  *Var[1]  00000000 
  10C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  128:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  140:  Call     SetAnimation 	( .Actor:Self 00000002 00700004 )
  158:  Wait     00000008 
  164:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  188:  Switch  *Var[0] 
  194:  	CaseOR  ==  00000006 
  1A0:  	CaseOR  ==  00000005 
  1AC:  		Set  *Var[A]  *Var[0] 
  1BC:  		Thread
  1C4:  			Wait     00000009 
  1D0:  			Call     SetAnimation 	( .Actor:Self 00000002 00700004 )
  1E8:  		EndThread
  1F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00700005 )
  208:  		Call     SetGoalToTarget 	( .Actor:Self )
  218:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  		Sub  *Var[0]  0000000F 
  244:  		Set  *Var[1]  00000000 
  254:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  268:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  27C:  		Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  290:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2AC:  		Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  2CC:  		Call     PlaySoundAtActor 	( .Actor:Self 00002066 )
  2E0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  		Sub  *Var[0]  00000019 
  30C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  328:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  348:  		Call     PlaySoundAtActor 	( .Actor:Self 00002066 )
  35C:  		Wait     0000000F 
  368:  		If  *Var[A]  ==  00000005 
  378:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  39C:  		EndIf
  3A4:  		Call     UseCamPreset 	( 00000002 )
  3B4:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3C8:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3E4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  3F8:  		ExecWait $Script_80232304 
  404:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  41C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  430:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  444:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  458:  		Return
  460:  	EndCaseGroup
  468:  EndSwitch
  470:  Thread
  478:  	Wait     00000008 
  484:  	Call     SetAnimation 	( .Actor:Self 00000002 00700004 )
  49C:  EndThread
  4A4:  Call     SetAnimation 	( .Actor:Self 00000002 00700005 )
  4BC:  Call     SetGoalToTarget 	( .Actor:Self )
  4CC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4E8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  4FC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  510:  Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  524:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  560:  Wait     00000002 
  56C:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000004 00000020 )
  594:  Set  *Var[F]  *Var[0] 
  5A4:  Switch  *Var[F] 
  5B0:  	CaseOR  ==  00000000 
  5BC:  	CaseOR  ==  00000002 
  5C8:  	CaseOR  ==  0000000A 
  5D4:  		Call     UseCamPreset 	( 00000002 )
  5E4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  600:  		Add  *Var[0]  0000001E 
  610:  		Set  *Var[1]  00000000 
  620:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  634:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  650:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  670:  		Call     PlaySoundAtActor 	( .Actor:Self 00002066 )
  684:  		Call     SetAnimation 	( .Actor:Self 00000002 00700001 )
  69C:  		Wait     00000008 
  6A8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  6BC:  		ExecWait $Script_80232304 
  6C8:  	EndCaseGroup
  6D0:  EndSwitch
  6D8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6EC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  700:  Return
  708:  End

% Origin: HINT
#new:Script $Script_802333A4
    0:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
   18:  Call     SetSpriteFlags ( .Actor:Self 00000001 00800004 )
   30:  Call     SetSpriteFlags ( .Actor:Self 00000003 00020005 )
   48:  Call     SetSpriteFlags ( .Actor:Self 00000004 00020005 )
   60:  Call     SetAnimation 	( .Actor:Self 00000001 003B000C )
   78:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   94:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   A8:  If  *Var[3]  !&  00080000 
   B8:  	Add  *Var[1]  00000032 
   C8:  Else
   D0:  	Add  *Var[1]  00000014 
   E0:  EndIf
   E8:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  104:  Thread
  10C:  	Wait     00000006 
  118:  	Call     PlaySoundAtSprite 	( .Actor:Self 00000002 00002067 )
  130:  EndThread
  138:  Thread
  140:  	Call     SetAnimation 	( .Actor:Self 00000002 00700008 )
  158:  	Set  *Var[0]  00000000 
  168:  	Loop     0000000F 
  174:  		Add  *Var[0]  00000006 
  184:  		Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
  1A4:  		Wait     00000001 
  1B0:  	EndLoop
  1B8:  	Call     SetSpriteFlags ( .Actor:Self 00000002 00020005 )
  1D0:  EndThread
  1D8:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 00000301 )
  1F0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  204:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  218:  Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  234:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  254:  Call     RandInt     	( 00000064 *Var[1] )
  268:  If  *Var[1]  <  00000032 
  278:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  294:  	Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  2B4:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  2D0:  	Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  2F0:  Else
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 003B0010 )
  310:  	Wait     0000000A 
  31C:  EndIf
  324:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80235830 )
  338:  Call     BindIdle    	( .Actor:Self $Script_Idle_80233F30 )
  34C:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802340A4 )
  360:  Call     SetActorType 	( FFFFFF81 0000001F )
  374:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  38C:  Call     HPBarToHome 	( .Actor:Self )
  39C:  Call     8026F6EC ( FFFFFF81 )
  3AC:  Call     8027D8E0 ( FFFFFF81 *Var[0] *Var[1] )
  3C4:  Call     8027D810 ( FFFFFF81 00000018 *Var[1] )
  3DC:  Call     $Function_8023102C ( )
  3E8:  Return
  3F0:  End

% Origin: HINT
#new:Script $Script_8023379C
    0:  ExecWait 8029AF08 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
   28:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00000001 .True )
   44:  Call     GetActorVar 	( .Actor:Enemy1 00000002 *Var[0] )
   5C:  Add  *Var[0]  00000001 
   6C:  Call     SetActorVar 	( .Actor:Enemy1 00000002 *Var[0] )
   84:  If  *Var[0]  >=  00000002 
   94:  	Call     8026BF48 ( 00000001 )
   A4:  EndIf
   AC:  Call     UseCamPreset 	( 00000002 )
   BC:  Call     MoveCamOver 	( 00000064 )
   CC:  Call     RemoveActor 	( .Actor:Self )
   DC:  Return
   E4:  End

% Origin: HINT
#new:Script $Script_80233888
    0:  Set  *Var[0]  00000000 
   10:  Label    00000000 
   1C:  Sub  *Var[0]  0000001E 
   2C:  If  *Var[0]  <  00000000 
   3C:  	Add  *Var[0]  00000168 
   4C:  EndIf
   54:  Call     SetActorAngle 	( .Actor:Self *Var[0] )
   68:  Wait     00000001 
   74:  Goto     00000000 
   80:  Return
   88:  End

% Origin: HINT
#new:Script $Script_80233918
    0:  Exec     $Script_80233888 *Var[E] 
   10:  Call     GetSpriteEventFlags 	( .Actor:Self *Var[0] *Var[A] )
   28:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   40:  Call     8026E2CC ( 00010004 )
   50:  Call     InitTargetIterator 	( )
   5C:  Label    00000000 
   68:  Call     GetOwnerID  	( *Var[1] )
   78:  Call     GetOwnerTarget ( *Var[0] *Var[9] )
   8C:  If  *Var[1]  !=  *Var[0] 
   9C:  	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   B0:  	Goto     00000000 
   BC:  EndIf
   C4:  Label    00000001 
   D0:  Add  *Var[F]  00000001 
   E0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   F4:  If  *Var[0]  ==  FFFFFFFF 
  104:  	Goto     0000000A 
  110:  EndIf
  118:  Call     GetOwnerTarget ( *Var[0] *Var[9] )
  12C:  Call     GetActorFlags 	( *Var[0] *Var[1] )
  140:  If  *Var[1]  &  00004000 
  150:  	Goto     00000001 
  15C:  EndIf
  164:  Call     SetGoalToTarget 	( .Actor:Self )
  174:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  190:  Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  1AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.10058594] )
  1C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  1D4:  Call     JumpToGoal  	( .Actor:Self 00000000 00000000 00000001 00000000 )
  1F4:  Thread
  1FC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  218:  EndThread
  220:  Call     SetGoalToTarget 	( .Actor:Self )
  230:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  244:  Call     DamageTarget 	( .Actor:Self *Var[0] 28000000 0000FFFF 00000000 00000001 00000020 )
  26C:  Goto     00000001 
  278:  Label    0000000A 
  284:  Call     UseCamPreset 	( 00000003 )
  294:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.10058594] )
  2A8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  2BC:  Call     8027D8E0 ( FFFFFF81 *Var[0] *Var[3] )
  2D4:  Div  *Var[3]  00000002 
  2E4:  Set  *Var[4]  00000046 
  2F4:  Sub  *Var[4]  *Var[3] 
  304:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  320:  Set  *Var[5]  *Var[4] 
  330:  Sub  *Var[5]  *Var[0] 
  340:  If  *Var[5]  <  00000006 
  350:  	Set  *Var[5]  00000001 
  360:  Else
  368:  	Set  *Var[5]  00000000 
  378:  EndIf
  380:  Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[1] *Var[2] )
  39C:  Call     JumpToGoal  	( .Actor:Self *Var[5] 00000000 00000001 00000000 )
  3BC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  3D0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  3E4:  Call     SetGoalToHome 	( .Actor:Self )
  3F4:  Call     GetGoalPos  	( .Actor:Self *Var[6] *Var[7] *Var[8] )
  410:  Sub  *Var[4]  00000012 
  420:  If  *Var[4]  <=  *Var[6] 
  430:  	Set  *Var[4]  *Var[6] 
  440:  	Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[1] *Var[2] )
  45C:  	Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  47C:  Else
  484:  	Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[1] *Var[2] )
  4A0:  	Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  4C0:  	Call     SetGoalToHome 	( .Actor:Self )
  4D0:  	Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[7] *Var[8] )
  4EC:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  500:  	Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[1] *Var[2] )
  51C:  	Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  53C:  EndIf
  544:  Kill     *Var[E] 
  550:  Call     SetActorAngle 	( .Actor:Self 00000000 )
  564:  Wait     0000000A 
  570:  Return
  578:  End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80233E98
.Status:Normal    003B0001
.Status:Stone     003B0000
.Status:Sleep     003B0012
.Status:Poison    003B0001
.Status:Stop      003B0000
.Status:Static    003B0001
.Status:Paralyze  003B0000
.Status:Dizzy     003B0013
.Status:Fear      003B0013
.Status:End

% Origin: HEURISTIC
#new:Script $Script_80233EE4
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80235830 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80233F30 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802340A4 )
   3C:  Return
   44:  End

% Origin: HINT
#new:Script $Script_Idle_80233F30
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 0000000E )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call     $Function_80231054 ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call     $Function_80231054 ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

% Origin: HINT
#new:Script $Script_80234040
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  SetConst  *Var[0]  00000001 
   20:  SetConst  *Var[1]  003B0003 
   30:  ExecWait DoReturnHome 
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
   54:  Return
   5C:  End

% Origin: HINT
#new:Script $Script_HandleEvent_802340A4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  003B000C 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  003B000D 
   AC:  		SetConst  *Var[2]  003B000E 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  003B000D 
   F4:  		SetConst  *Var[2]  003B000E 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  003B000E 
  130:  		ExecWait $Script_8023379C 
  13C:  		Return
  144:  	Case  ==  .Event:MultibounceHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  003B000C 
  170:  		ExecWait $Script_80233918 
  17C:  	Case  ==  .Event:MultibounceDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  003B000C 
  1A8:  		ExecWait $Script_80233918 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  003B000C 
  1D4:  		ExecWait $Script_8023379C 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  003B000C 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  003B000C 
  240:  		ExecWait 8029BD70 
  24C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait $Script_80234040 
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  003B000C 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  003B000C 
  2C4:  		ExecWait $Script_8023379C 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  003B0001 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  003B000C 
  35C:  		ExecWait DoNormalHit 
  368:  		Wait     0000000A 
  374:  		SetConst  *Var[0]  00000001 
  384:  		SetConst  *Var[1]  003B000C 
  394:  		ExecWait $Script_8023379C 
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus
  3B4:  		SetConst  *Var[0]  00000001 
  3C4:  		SetConst  *Var[1]  003B0001 
  3D4:  		ExecWait DoRecover 
  3E0:  	Case  ==  .Event:ScareAway
  3EC:  		SetConst  *Var[0]  00000001 
  3FC:  		SetConst  *Var[1]  003B0003 
  40C:  		SetConst  *Var[2]  003B0014 
  41C:  		ExecWait DoScareAway 
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift
  43C:  		SetConst  *Var[0]  00000001 
  44C:  		SetConst  *Var[1]  003B000C 
  45C:  		ExecWait DoAirLift 
  468:  	Case  ==  .Event:BlowAway
  474:  		SetConst  *Var[0]  00000001 
  484:  		SetConst  *Var[1]  003B000C 
  494:  		ExecWait DoBlowAway 
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4CC:  Return
  4D4:  End

% Origin: HINT
#new:Script $Script_80234580
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 00000014 )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
   9C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   B0:  Call     SetGoalToTarget 	( .Actor:Self )
   C0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Add  *Var[0]  00000032 
   EC:  Set  *Var[1]  00000000 
   FC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  118:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  130:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  154:  Switch  *Var[0] 
  160:  	CaseOR  ==  00000006 
  16C:  	CaseOR  ==  00000005 
  178:  		Set  *Var[A]  *Var[0] 
  188:  		Call     8026F740 ( FFFFFF81 00000002 000002EF 00000000 )
  1A4:  		Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  1C0:  		Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  1DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  1F0:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  208:  		Call     SetGoalToTarget 	( .Actor:Self )
  218:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  230:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  248:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  25C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  270:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  28C:  		Sub  *Var[0]  0000001E 
  29C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2D8:  		If  *Var[A]  ==  00000005 
  2E8:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call     8026F6EC ( FFFFFF81 )
  324:  		Sub  *Var[0]  00000014 
  334:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  350:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  370:  		Wait     0000000F 
  37C:  		Call     UseCamPreset 	( 00000002 )
  38C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var[0]  00000001 
  3E0:  		SetConst  *Var[1]  003B0004 
  3F0:  		ExecWait DoReturnHome 
  3FC:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  414:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  428:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  440:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  454:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait     00000003 
  494:  	Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  4CC:  Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  4E8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  4FC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  514:  Call     SetGoalToTarget 	( .Actor:Self )
  524:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  Add  *Var[0]  0000000A 
  550:  Set  *Var[1]  00000000 
  560:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  594:  Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  5AC:  Wait     00000002 
  5B8:  Call     SetGoalToTarget 	( .Actor:Self )
  5C8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  5F0:  Call     8026F6EC ( FFFFFF81 )
  600:  Call     UseCamPreset 	( 00000002 )
  610:  Call     MoveCamOver 	( 0000000F )
  620:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  Add  *Var[0]  0000001E 
  64C:  Set  *Var[1]  00000000 
  65C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  670:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  68C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  6AC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  6C4:  Wait     00000008 
  6D0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait $Script_80234040 
  6F0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  704:  Call     UseIdleAnimation 	( .Actor:Self .True )
  718:  Return
  720:  End

% Origin: HINT
#new:Script $Script_80234CA8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 00000014 )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     PlaySoundAtActor 	( .Actor:Self 00000234 )
   98:  Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
   B0:  Wait     00000014 
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
   D4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
   E8:  Call     SetGoalToTarget 	( .Actor:Self )
   F8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  114:  Add  *Var[0]  00000050 
  124:  Set  *Var[1]  00000000 
  134:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  150:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  168:  Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  184:  Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  1B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1CC:  Sub  *Var[0]  00000028 
  1DC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  210:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  234:  Switch  *Var[0] 
  240:  	CaseOR  ==  00000006 
  24C:  	CaseOR  ==  00000005 
  258:  		Set  *Var[A]  *Var[0] 
  268:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  27C:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  294:  		Thread
  29C:  			Wait     0000000C 
  2A8:  			Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
  2C0:  		EndThread
  2C8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  2DC:  		Call     SetGoalToTarget 	( .Actor:Self )
  2EC:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  308:  		Sub  *Var[0]  0000000A 
  318:  		Set  *Var[1]  00000000 
  328:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  344:  		Call     JumpToGoal  	( .Actor:Self 00000018 00000000 00000001 00000000 )
  364:  		If  *Var[A]  ==  00000005 
  374:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  3B8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  3CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  3E0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3FC:  		Sub  *Var[0]  0000001E 
  40C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  428:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  448:  		Sub  *Var[0]  00000014 
  458:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  474:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  494:  		Wait     0000000F 
  4A0:  		Call     UseCamPreset 	( 00000002 )
  4B0:  		Call     MoveCamOver 	( 0000000F )
  4C0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  4D4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var[0]  00000001 
  514:  		SetConst  *Var[1]  003B0004 
  524:  		ExecWait DoReturnHome 
  530:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  548:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  55C:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  574:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  5C8:  Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  5E0:  Thread
  5E8:  	Wait     00000009 
  5F4:  	Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
  60C:  EndThread
  614:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  628:  Call     SetGoalToTarget 	( .Actor:Self )
  638:  Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  658:  Wait     00000002 
  664:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var[0] 
  698:  	CaseOR  ==  00000000 
  6A4:  	CaseOR  ==  00000002 
  6B0:  		Call     UseCamPreset 	( 00000002 )
  6C0:  		Call     MoveCamOver 	( 0000000F )
  6D0:  		Thread
  6D8:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set  *Var[3]  00000000 
  704:  			Loop     00000014 
  710:  				Sub  *Var[3]  0000001E 
  720:  				If  *Var[3]  <  00000000 
  730:  					Add  *Var[3]  00000168 
  740:  				EndIf
  748:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[3] )
  764:  				Wait     00000001 
  770:  			EndLoop
  778:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call     GetBattleFlags ( *Var[0] )
  7C8:  		If  *Var[0]  &  80000000 
  7D8:  			Goto     00000001 
  7E4:  		EndIf
  7EC:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  800:  		If  *Var[0]  ==  00000000 
  810:  			Goto     00000001 
  81C:  		EndIf
  824:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  840:  		Add  *Var[0]  00000028 
  850:  		Set  *Var[1]  00000000 
  860:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  874:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  890:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  8B0:  		Call     PlaySoundAtActor 	( .Actor:Self 00000349 )
  8C4:  		Call     PlaySoundAtActor 	( .Actor:Self 00000749 )
  8D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  8F0:  		Wait     0000000A 
  8FC:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0007 )
  914:  		Wait     0000000F 
  920:  		Goto     00000002 
  92C:  		Label    00000001 
  938:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  954:  		Add  *Var[0]  00000028 
  964:  		Set  *Var[1]  00000000 
  974:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  988:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9A4:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  9C4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E4 )
  9D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0010 )
  9F0:  		Wait     0000000A 
  9FC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020C3 )
  A10:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call     RandInt     	( 00000064 *Var[0] )
  A40:  		If  *Var[0]  <  00000032 
  A50:  			Call     SetAnimation 	( .Actor:Self 00000001 003B0011 )
  A68:  		Else
  A70:  			Call     SetAnimation 	( .Actor:Self 00000001 003B0013 )
  A88:  		EndIf
  A90:  		Wait     00000019 
  A9C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  AB4:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  AC8:  		Label    00000002 
  AD4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var[0]  00000001 
  AF8:  		SetConst  *Var[1]  003B0004 
  B08:  		ExecWait DoReturnHome 
  B14:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  B28:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B64:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B78:  Return
  B80:  End

% Origin: HINT
#new:Script $Script_TakeTurn_80235830
    0:  Call     RandInt     	( 00000001 *Var[0] )
   14:  If  *Var[0]  ==  00000000 
   24:  	ExecWait $Script_80234580 
   30:  Else
   38:  	ExecWait $Script_80234CA8 
   44:  EndIf
   4C:  Return
   54:  End

PADDING: 8023588C to 80235890 (0054CC6C to 0054CC70)
00000000 

