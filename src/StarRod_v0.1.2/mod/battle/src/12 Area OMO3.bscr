% Script File: 12 Area OMO3.bscr
% Decoded from: 5573E0 to 56E2A0 (12 Area OMO3)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       {Func:GetActor}
    C:  LW        A0, 148 (A0)
   10:  LUI       A1, 435C
   14:  JAL       80137DA4
   18:  ADDIU     A0, R0, D
   1C:  LUI       A1, 4348
   20:  JAL       801380D4
   24:  ADDIU     A0, R0, 1
   28:  LW        RA, 10 (SP)
   2C:  ADDIU     V0, R0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18

#new:Function $Function_80218038
    0:  LW        V1, 80 (A0)
    4:  SUBU      A2, A1, V1
    8:  SLTI      V0, A2, 4
    C:  BNE       V0, R0, .o1C
   10:  SLTI      V0, A2, FFFC
   14:  BEQ       R0, R0, .o2C
   18:  ADDIU     V0, V1, 4
        .o1C
   1C:  BNE       V0, R0, .o2C
   20:  ADDIU     V0, V1, FFFC
   24:  BEQ       R0, R0, .o30
   28:  SW        A1, 80 (A0)
        .o2C
   2C:  SW        V0, 80 (A0)
        .o30
   30:  JR        RA
   34:  LW        V0, 80 (A0)

#new:Function $Function_80218070
    0:  ADDIU     SP, SP, FF88
    4:  SW        S0, 30 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 44 (SP)
   10:  SW        S4, 40 (SP)
   14:  SW        S3, 3C (SP)
   18:  SW        S2, 38 (SP)
   1C:  SW        S1, 34 (SP)
   20:  SDC1      F30, 70 (SP)
   24:  SDC1      F28, 68 (SP)
   28:  SDC1      F26, 60 (SP)
   2C:  SDC1      F24, 58 (SP)
   30:  SDC1      F22, 50 (SP)
   34:  SDC1      F20, 48 (SP)
   38:  LW        V0, C (S0)
   3C:  JAL       {Func:GetVariable}
   40:  LW        A1, 0 (V0)
   44:  LW        A0, 148 (S0)
   48:  JAL       {Func:GetActor}
   4C:  DADDU     S3, V0, R0
   50:  DADDU     S2, V0, R0
   54:  BNE       S2, R0, .o6C
   58:  ADDIU     A0, R0, 1
   5C:  JAL       801380D4
   60:  DADDU     A1, R0, R0
   64:  BEQ       R0, R0, .o3E8
   68:  DADDU     V0, R0, R0
        .o6C
   6C:  BEQ       S3, R0, .o78
   70:  ADDIU     S1, S2, C
   74:  LW        S4, C (S3)
        .o78
   78:  DADDU     A0, S2, R0
   7C:  LWC1      F2, 160 (S2)
   80:  LWC1      F0, 18C (S2)
   84:  LWC1      F30, 144 (S2)
   88:  LWC1      F6, 148 (S2)
   8C:  ADDIU     A1, R0, 1
   90:  SWC1      F6, 24 (SP)
   94:  LWC1      F6, 14C (S2)
   98:  SWC1      F6, 28 (SP)
   9C:  LWC1      F28, 15C (S2)
   A0:  LWC1      F26, 164 (S2)
   A4:  JAL       {Func:GetSprite}
   A8:  ADD.S     F20, F2, F0
   AC:  LUI       V1, 6D
   B0:  LW        V0, 88 (V0)
   B4:  ORI       V1, V1, C
   B8:  BNE       V0, V1, .oC4
   BC:  ADDIU     A1, R0, 1
   C0:  DADDU     A1, R0, R0
        .oC4
   C4:  ADDIU     A2, SP, 18
   C8:  LW        V1, 1F4 (S2)
   CC:  ADDIU     V0, SP, 20
   D0:  SW        V0, 10 (SP)
   D4:  LW        A0, 84 (V1)
   D8:  JAL       802DE8DC
   DC:  ADDIU     A3, SP, 1C
   E0:  LWC1      F24, 18 (SP)
   E4:  CVT.S.W   F24, F24
   E8:  LAD       F0, $ConstDouble_8022EB70
   F0:  CVT.D.S   F24, F24
   F4:  MUL.D     F24, F24, F0
   F8:  NOP
   FC:  LW        V0, 1C (SP)
  100:  ADDIU     V0, V0, 14
  104:  MTC1      V0, F22
  108:  NOP
  10C:  CVT.S.W   F22, F22
  110:  CVT.D.S   F22, F22
  114:  MUL.D     F22, F22, F0
  118:  NOP
  11C:  MOV.S     F12, F20
  120:  SW        V0, 1C (SP)
  124:  CVT.S.D   F24, F24
  128:  JAL       {Func:CosDeg}
  12C:  CVT.S.D   F22, F22
  130:  LAD       F2, $ConstDouble_8022EB78
  138:  CVT.D.S   F12, F28
  13C:  ADD.D     F12, F12, F2
  140:  MUL.S     F24, F24, F0
  144:  NOP
  148:  JAL       {Func:SinDeg}
  14C:  CVT.S.D   F12, F12
  150:  MUL.S     F22, F22, F0
  154:  NOP
  158:  JAL       {Func:CosDeg}
  15C:  MOV.S     F12, F26
  160:  MOV.S     F12, F26
  164:  JAL       {Func:SinDeg}
  168:  MOV.S     F20, F0
  16C:  MUL.S     F20, F24, F20
  170:  NOP
  174:  MUL.S     F0, F22, F0
  178:  NOP
  17C:  ADD.S     F20, F20, F0
  180:  TRUNC.W.S F6, F20
  184:  SWC1      F6, 18 (SP)
  188:  JAL       {Func:SinDeg}
  18C:  MOV.S     F12, F26
  190:  MOV.S     F12, F26
  194:  JAL       {Func:CosDeg}
  198:  MOV.S     F20, F0
  19C:  NEG.S     F20, F20
  1A0:  MUL.S     F24, F24, F20
  1A4:  NOP
  1A8:  MUL.S     F22, F22, F0
  1AC:  NOP
  1B0:  LW        V1, 7C (S1)
  1B4:  ADD.S     F24, F24, F22
  1B8:  SLTIU     V0, V1, C
  1BC:  TRUNC.W.S F6, F24
  1C0:  SWC1      F6, 1C (SP)
  1C4:  BEQ       V0, R0, .o2D8
  1C8:  SLL       V0, V1, 2
  1CC:  LTW       V0, V0 ($JumpTable_8022EB80)
  1D8:  JR        V0
  1DC:  NOP
% LBL: from $JumpTable_8022EB80 , entry 0`
  1E0:  DADDU     A0, S1, R0
  1E4:  JAL       $Function_80218038
  1E8:  ADDIU     A1, R0, 122
  1EC:  BEQ       R0, R0, .o2DC
  1F0:  NOP
% LBL: from $JumpTable_8022EB80 , entry 1`
  1F4:  DADDU     A0, S1, R0
  1F8:  BEQ       R0, R0, .o268
  1FC:  ADDIU     A1, R0, FA
% LBL: from $JumpTable_8022EB80 , entry 2`
  200:  DADDU     A0, S1, R0
  204:  BEQ       R0, R0, .o268
  208:  ADDIU     A1, R0, F0
% LBL: from $JumpTable_8022EB80 , entry 3`
  20C:  DADDU     A0, S1, R0
  210:  BEQ       R0, R0, .o268
  214:  ADDIU     A1, R0, E6
% LBL: from $JumpTable_8022EB80 , entry 4`
  218:  DADDU     A0, S1, R0
  21C:  BEQ       R0, R0, .o268
  220:  ADDIU     A1, R0, DC
% LBL: from $JumpTable_8022EB80 , entry 5`
  224:  DADDU     A0, S1, R0
  228:  BEQ       R0, R0, .o268
  22C:  ADDIU     A1, R0, D2
% LBL: from $JumpTable_8022EB80 , entry 6`
  230:  DADDU     A0, S1, R0
  234:  BEQ       R0, R0, .o268
  238:  ADDIU     A1, R0, B4
% LBL: from $JumpTable_8022EB80 , entry 7`
  23C:  DADDU     A0, S1, R0
  240:  BEQ       R0, R0, .o268
  244:  ADDIU     A1, R0, 8C
% LBL: from $JumpTable_8022EB80 , entry 8`
  248:  DADDU     A0, S1, R0
  24C:  BEQ       R0, R0, .o268
  250:  ADDIU     A1, R0, 64
% LBL: from $JumpTable_8022EB80 , entry 9`
  254:  DADDU     A0, S1, R0
  258:  BEQ       R0, R0, .o268
  25C:  ADDIU     A1, R0, 46
% LBL: from $JumpTable_8022EB80 , entry 10`
  260:  DADDU     A0, S1, R0
  264:  ADDIU     A1, R0, 28
        .o268
  268:  JAL       $Function_80218038
  26C:  NOP
  270:  ADDIU     A0, R0, 4000
  274:  JAL       {Func:GetRandom}
  278:  DADDU     S0, V0, R0
  27C:  LIO       V1, 66666667
  284:  MULT      V0, V1
  288:  SRA       V1, V0, 1F
  28C:  MFHI      T0
  290:  SRA       A0, T0, 1
  294:  SUBU      A0, A0, V1
  298:  SLL       V1, A0, 2
  29C:  ADDU      V1, V1, A0
  2A0:  SUBU      V0, V0, V1
  2A4:  BEQ       R0, R0, .o2DC
  2A8:  ADDU      V0, S0, V0
% LBL: from $JumpTable_8022EB80 , entry 11`
  2AC:  DADDU     A0, S1, R0
  2B0:  JAL       $Function_80218038
  2B4:  ADDIU     A1, R0, 14
  2B8:  DADDU     A0, S1, R0
  2BC:  JAL       $Function_80218038
  2C0:  ADDIU     A1, R0, 14
  2C4:  DADDU     A0, S1, R0
  2C8:  JAL       $Function_80218038
  2CC:  ADDIU     A1, R0, 14
  2D0:  BEQ       R0, R0, .o2DC
  2D4:  NOP
        .o2D8
  2D8:  DADDU     V0, R0, R0
        .o2DC
  2DC:  MTC1      V0, F6
  2E0:  NOP
  2E4:  CVT.S.W   F6, F6
  2E8:  MFC1      A1, F6
  2EC:  JAL       801380D4
  2F0:  ADDIU     A0, R0, 1
  2F4:  LWC1      F4, 18 (SP)
  2F8:  CVT.S.W   F4, F4
  2FC:  ADDIU     A0, R0, 1
  300:  LWC1      F2, 20 (SP)
  304:  CVT.S.W   F2, F2
  308:  ADD.S     F4, F30, F4
  30C:  LWC1      F6, 28 (SP)
  310:  ADD.S     F2, F6, F2
  314:  LWC1      F6, 24 (SP)
  318:  LWC1      F0, 1C (SP)
  31C:  CVT.S.W   F0, F0
  320:  ADD.S     F0, F6, F0
  324:  TRUNC.W.S F6, F2
  328:  SWC1      F6, 10 (SP)
  32C:  TRUNC.W.S F6, F4
  330:  MFC1      A2, F6
  334:  TRUNC.W.S F6, F0
  338:  MFC1      A3, F6
  33C:  JAL       80137EC0
  340:  DADDU     A1, R0, R0
  344:  LWC1      F4, 18 (SP)
  348:  CVT.S.W   F4, F4
  34C:  DADDU     A0, S2, R0
  350:  LWC1      F2, 1C (SP)
  354:  CVT.S.W   F2, F2
  358:  ADD.S     F4, F30, F4
  35C:  LWC1      F6, 24 (SP)
  360:  ADD.S     F2, F6, F2
  364:  LWC1      F6, 28 (SP)
  368:  LWC1      F0, 20 (SP)
  36C:  CVT.S.W   F0, F0
  370:  ADD.S     F0, F6, F0
  374:  TRUNC.W.S F6, F4
  378:  SWC1      F6, 84 (S1)
  37C:  TRUNC.W.S F6, F2
  380:  SWC1      F6, 88 (S1)
  384:  TRUNC.W.S F6, F0
  388:  SWC1      F6, 8C (S1)
  38C:  JAL       {Func:GetSprite}
  390:  ADDIU     A1, R0, 2
  394:  DADDU     A0, V0, R0
  398:  LHU       V0, 1A (SP)
  39C:  LHU       V1, 1E (SP)
  3A0:  ADDIU     V0, V0, FFFB
  3A4:  ADDIU     V1, V1, 5
  3A8:  SH        V0, 14 (A0)
  3AC:  BEQ       S3, R0, .o3E4
  3B0:  SH        V1, 16 (A0)
  3B4:  LWC1      F0, 84 (S1)
  3B8:  CVT.S.W   F0, F0
  3BC:  SWC1      F0, 4 (S4)
  3C0:  LWC1      F0, 88 (S1)
  3C4:  CVT.S.W   F0, F0
  3C8:  SWC1      F0, 8 (S4)
  3CC:  LW        V0, 8C (S1)
  3D0:  ADDIU     V0, V0, 19
  3D4:  MTC1      V0, F0
  3D8:  NOP
  3DC:  CVT.S.W   F0, F0
  3E0:  SWC1      F0, C (S4)
        .o3E4
  3E4:  ADDIU     V0, R0, 2
        .o3E8
  3E8:  LW        RA, 44 (SP)
  3EC:  LW        S4, 40 (SP)
  3F0:  LW        S3, 3C (SP)
  3F4:  LW        S2, 38 (SP)
  3F8:  LW        S1, 34 (SP)
  3FC:  LW        S0, 30 (SP)
  400:  LDC1      F30, 70 (SP)
  404:  LDC1      F28, 68 (SP)
  408:  LDC1      F26, 60 (SP)
  40C:  LDC1      F24, 58 (SP)
  410:  LDC1      F22, 50 (SP)
  414:  LDC1      F20, 48 (SP)
  418:  JR        RA
  41C:  ADDIU     SP, SP, 78

#new:Function $Function_80218490
    0:  ADDIU     SP, SP, FF30
    4:  SW        S5, AC (SP)
    8:  SW        RA, B0 (SP)
    C:  SW        S4, A8 (SP)
   10:  SW        S3, A4 (SP)
   14:  SW        S2, A0 (SP)
   18:  SW        S1, 9C (SP)
   1C:  SW        S0, 98 (SP)
   20:  SDC1      F24, C8 (SP)
   24:  SDC1      F22, C0 (SP)
   28:  SDC1      F20, B8 (SP)
   2C:  BEQ       A1, R0, .oAC
   30:  DADDU     S5, A0, R0
   34:  JAL       8002ACE4
   38:  ADDIU     A0, R0, 18
   3C:  DADDU     S2, V0, R0
   40:  DADDU     S4, R0, R0
   44:  ADDIU     S0, S2, C
   48:  LIA       S3, $Script_8021B254
   50:  LIF       F20, 3.5
   58:  LIA       S1, $???_8021B250
   60:  SW        S2, 70 (S5)
        .o64
   64:  LW        V0, 0 (S1)
   68:  ADDIU     S1, S1, 4
   6C:  ADDIU     S4, S4, 1
   70:  SW        V0, 4 (S0)
   74:  DADDU     A0, V0, R0
   78:  LW        V0, 0 (S3)
   7C:  ADDIU     S3, S3, 4
   80:  JAL       8011B010
   84:  SW        V0, 8 (S0)
   88:  JAL       8011AD30
   8C:  DADDU     A0, V0, R0
   90:  SW        R0, 0 (S2)
   94:  SW        R0, FFF8 (S0)
   98:  SWC1      F20, FFFC (S0)
   9C:  SW        R0, 0 (S0)
   A0:  ADDIU     S0, S0, 18
   A4:  BEQ       S4, R0, .o64
   A8:  ADDIU     S2, S2, 18
        .oAC
   AC:  DADDU     S4, R0, R0
   B0:  ADDIU     S3, SP, 58
   B4:  LW        S2, 70 (S5)
   B8:  MTC1      R0, F24
   BC:  ADDIU     S1, S2, 4
        .oC0
   C0:  LWC1      F12, 8 (S1)
   C4:  LWC1      F0, 4 (S1)
   C8:  ADD.S     F12, F12, F0
   CC:  JAL       80029B24
   D0:  SWC1      F12, 8 (S1)
   D4:  LIO       AT, 4048F5C3
   DC:  MTC1      AT, F12
   E0:  NOP
   E4:  MUL.S     F12, F0, F12
   E8:  NOP
   EC:  LIF       F2, 180.0
   F4:  SWC1      F0, 8 (S1)
   F8:  JAL       {Func:SinRad}
   FC:  DIV.S     F12, F12, F2
  100:  LIF       F2, 20.0
  108:  NOP
  10C:  MUL.S     F20, F0, F2
  110:  NOP
  114:  MUL.S     F22, F20, F20
  118:  NOP
  11C:  ADDIU     S4, S4, 1
  120:  LIF       F0, 90.0
  128:  LW        A0, C (S1)
  12C:  JAL       8011B010
  130:  DIV.S     F22, F22, F0
  134:  JAL       8011AD30
  138:  DADDU     A0, V0, R0
  13C:  DADDU     S0, V0, R0
  140:  LHU       V0, 0 (S0)
  144:  MFC1      A2, F24
  148:  ORI       V0, V0, 1400
  14C:  SH        V0, 0 (S0)
  150:  LWC1      F0, 0 (S2)
  154:  LWC1      F2, 0 (S1)
  158:  NEG.S     F0, F0
  15C:  NEG.S     F2, F2
  160:  MFC1      A1, F0
  164:  MFC1      A3, F2
  168:  JAL       80067900
  16C:  ADDIU     A0, SP, 18
  170:  MFC1      A1, F20
  174:  MFC1      A2, F24
  178:  MFC1      A3, F24
  17C:  LIF       F0, 1.0
  184:  DADDU     A0, S3, R0
  188:  JAL       80067B20
  18C:  SWC1      F0, 10 (SP)
  190:  ADDIU     A0, SP, 18
  194:  DADDU     A1, S3, R0
  198:  ADDIU     S0, S0, 58
  19C:  JAL       80067600
  1A0:  DADDU     A2, S0, R0
  1A4:  ADDIU     A0, SP, 18
  1A8:  LW        A3, 0 (S1)
  1AC:  ADDIU     S1, S1, 18
  1B0:  LW        A1, 0 (S2)
  1B4:  MFC1      A2, F22
  1B8:  JAL       80067900
  1BC:  ADDIU     S2, S2, 18
  1C0:  DADDU     A0, S0, R0
  1C4:  ADDIU     A1, SP, 18
  1C8:  JAL       80067600
  1CC:  DADDU     A2, A0, R0
  1D0:  BEQ       S4, R0, .oC0
  1D4:  DADDU     V0, R0, R0
  1D8:  LW        RA, B0 (SP)
  1DC:  LW        S5, AC (SP)
  1E0:  LW        S4, A8 (SP)
  1E4:  LW        S3, A4 (SP)
  1E8:  LW        S2, A0 (SP)
  1EC:  LW        S1, 9C (SP)
  1F0:  LW        S0, 98 (SP)
  1F4:  LDC1      F24, C8 (SP)
  1F8:  LDC1      F22, C0 (SP)
  1FC:  LDC1      F20, B8 (SP)
  200:  JR        RA
  204:  ADDIU     SP, SP, D0

PADDING: 80218698 to 802186A0 (00557A78 to 00557A80)
00000000 00000000 

#new:Function $Function_802186A0
    0:  LAW       V0, 8007419C
    8:  SW        R0, 84 (A0)
    C:  LBU       V0, AA (V0)
   10:  ANDI      V0, V0, 1
   14:  BEQ       V0, R0, .o20
   18:  ADDIU     V0, R0, 1
   1C:  SW        V0, 84 (A0)
        .o20
   20:  JR        RA
   24:  ADDIU     V0, R0, 2

#new:Function $Function_802186C8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       800EA0C0
    C:  ADDIU     A0, R0, 1
   10:  LW        RA, 10 (SP)
   14:  ADDIU     V0, R0, 2
   18:  JR        RA
   1C:  ADDIU     SP, SP, 18

PADDING: 802186E8 to 802186F0 (00557AC8 to 00557AD0)
00000000 00000000 

#new:Function $Function_802186F0
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       80028FF0
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  DADDU     A0, R0, R0
   44:  ADDIU     A2, R0, 5A
   48:  DADDU     A1, A0, R0
   4C:  LIA       A3, $FloatTable_8021DCD4
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  DADDU     A2, V1, R0
   90:  DADDU     A0, V1, R0
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021DCD4)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021DCD4)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  DADDU     V1, A2, R0
   F0:  DADDU     V1, A0, R0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  ADDIU     V0, R0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  ADDIU     V0, R0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28

#new:Function $Function_8021887C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  DADDU     A0, S4, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S0, V0, R0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  DADDU     A0, S4, R0
   50:  JAL       {Func:GetVariable}
   54:  DADDU     S1, V0, R0
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  DADDU     A0, S4, R0
   68:  JAL       {Func:GetVariable}
   6C:  SUBU      S3, S3, S0
   70:  DADDU     S0, V0, R0
   74:  DADDU     A0, S4, R0
   78:  LW        A1, 0 (S2)
   7C:  JAL       {Func:GetVariable}
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  DADDU     A0, S4, R0
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  DADDU     A2, V0, R0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_802186F0
   B8:  CVT.S.W   F14, F14
   BC:  DADDU     A0, S4, R0
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       {Func:SetVariable}
   CC:  NOP
   D0:  ADDIU     V0, R0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28

#new:Function $Function_80218970
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

#new:Function $Function_80218A24
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

PADDING: 80218AD8 to 80218AE0 (00557EB8 to 00557EC0)
00000000 00000000 

#new:Function $Function_80218AE0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 80218BAC to 80218BB0 (00557F8C to 00557F90)
00000000 

#new:Function $Function_80218BB0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218C7C
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

PADDING: 80218CD4 to 80218CE0 (005580B4 to 005580C0)
00000000 00000000 00000000 

#new:Function $Function_80218CE0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 80218DAC to 80218DB0 (0055818C to 00558190)
00000000 

#new:DefenseTable $DefenseTable_80218DB0
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80218DBC
.Element:Normal 00000063
.Element:End

#new:StatusTable $StatusTable_80218DC8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   60`
.Status:Shrink      0`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80218E74
00820000 01000000 003600FF $IdleAnimations_80218EE4 $DefenseTable_80218DB0 00000000 00000000 FBF60000 00000000 
00002001 02D80000 000000FF $IdleAnimations_80218EE4 $DefenseTable_80218DBC 00000000 00000000 00F70000 0029007F 

#new:Actor $BigLanternGhost
% stats
[Index]        B1b 
[Level]        42`b 
[MaxHP]        40`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218DC8 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_80218E74 
[Script]      $Script_Init_80218F38 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         86`b  60`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -30`b  55`b % dx dy
[StatusIcon]   20`b  45`b % dx dy

#new:IdleAnimations $IdleAnimations_80218EE4
.Status:Normal    006D0001
.Status:Stone     006D0000
.Status:Sleep     006D000C
.Status:Poison    006D0001
.Status:Stop      006D0000
.Status:Static    006D0000
.Status:Paralyze  006D0000
.Status:Paralyze  006D0000
.Status:Dizzy     006D000D
.Status:Fear      006D000D
.Status:End

#new:Script $Script_Init_80218F38
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021AF4C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802192B0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219328 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_802190E4 )
   50:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000006 0000000A )
   80:  Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
   98:  Call     SetActorVar 	( .Actor:Self 00000001 000000F0 )
   B0:  Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
   C8:  Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
   E0:  Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
   F8:  Call     PlayEffect  	( 0000003C 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0] *Var[0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  13C:  Call     SetActorVar 	( .Actor:Self 0000000A *Var[0] )
  154:  Call     $Function_80218000 ( )
  160:  Exec     $Script_80219204 
  16C:  ExecWait $Script_8021B14C 
  178:  Wait     00000002 
  184:  Call     SetActorVar 	( .Actor:Self 0000000D 00000000 )
  19C:  Return
  1A4:  End

#new:Script $Script_NextTurn_802190E4
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:PlayerBegin
   28:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
   40:  		If  *Var[0]  !&  00000001 
   50:  			ConstOR  *Var[0] 00000001 
   60:  			Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
   78:  			Call     UseCamPreset 	( 0000000E )
   88:  			Call     CamTargetActor ( .Actor:Self )
   98:  			Call     SetCamOffsetZ 	( 00000028 )
   A8:  			Call     MoveCamOver 	( 0000001E )
   B8:  			Wait     0000001E 
   C4:  			Call     SayMessage  	( 000F0051 .Actor:Self 00000001 006D0005 006D0001 ) % Wee hee hee... I'll take care of you quickly, then ...
   E4:  			Call     UseCamPreset 	( 00000002 )
   F4:  		EndIf
   FC:  	Case  ==  .Phase:EnemyBegin
  108:  EndSwitch
  110:  Return
  118:  End

#new:Script $Script_80219204
    0:  SetPriority 00000063 
    C:  Label    00000000 
   18:  Call     ActorExists 	( .Actor:Self *Var[0] )
   2C:  If  *Var[0]  !=  00000000 
   3C:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
   54:  Else
   5C:  	Set  *Var[0]  00000000 
   6C:  EndIf
   74:  Call     $Function_80218070 ( *Var[0] )
   84:  Wait     00000001 
   90:  Goto     00000000 
   9C:  Return
   A4:  End

#new:Script $Script_Idle_802192B0
    0:  Label    00000000 
    C:  Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
   20:  If  *Var[0]  !=  00000000 
   30:  	Wait     00000001 
   3C:  	Goto     00000000 
   48:  EndIf
   50:  Wait     00000001 
   5C:  Goto     00000000 
   68:  Return
   70:  End

#new:Script $Script_HandleEvent_80219328
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	Case  ==  .Event:BeginFirstStrike
   40:  	CaseOR  ==  .Event:HitCombo
   4C:  	CaseOR  ==  .Event:Hit
   58:  		ExecWait $Script_80219B00 
   64:  		ExecWait $Script_80219BA8 
   70:  		SetConst  *Var[0]  00000001 
   80:  		SetConst  *Var[1]  006D0009 
   90:  		ExecWait DoNormalHit 
   9C:  	EndCaseGroup
   A4:  	Case  ==  .Event:BurnHit
   B0:  		ExecWait $Script_80219B00 
   BC:  		ExecWait $Script_80219BA8 
   C8:  		Set  *Var[0]  00000001 
   D8:  		Set  *Var[1]  006D000A 
   E8:  		Set  *Var[2]  006D000B 
   F8:  		ExecWait DoBurnHit 
  104:  	Case  ==  .Event:BurnDeath
  110:  		ExecWait $Script_80219B00 
  11C:  		Set  *Var[0]  00000001 
  12C:  		Set  *Var[1]  006D000A 
  13C:  		Set  *Var[2]  006D000B 
  14C:  		ExecWait DoBurnHit 
  158:  		Wait     0000000A 
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  006D000B 
  184:  		ExecWait $Script_8021B1FC 
  190:  		Return
  198:  	Case  ==  .Event:MultibounceHit
  1A4:  		ExecWait $Script_80219B00 
  1B0:  		ExecWait $Script_80219BA8 
  1BC:  		SetConst  *Var[0]  00000001 
  1CC:  		SetConst  *Var[1]  006D0009 
  1DC:  		ExecWait 8029B998 
  1E8:  	Case  ==  .Event:MultibounceDeath
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  006D0009 
  214:  		ExecWait 8029B998 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  006D0009 
  240:  		ExecWait $Script_8021B1FC 
  24C:  		Return
  254:  	Case  ==  .Event:ShockHit
  260:  		ExecWait $Script_80219B00 
  26C:  		SetConst  *Var[0]  00000001 
  27C:  		SetConst  *Var[1]  006D0009 
  28C:  		ExecWait DoShockHit 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  006D0009 
  2B8:  		ExecWait 8029BD70 
  2C4:  		ExecWait $Script_8021B0F8 
  2D0:  	Case  ==  .Event:ShockDeath
  2DC:  		ExecWait $Script_80219B00 
  2E8:  		SetConst  *Var[0]  00000001 
  2F8:  		SetConst  *Var[1]  006D0009 
  308:  		ExecWait DoShockHit 
  314:  		SetConst  *Var[0]  00000001 
  324:  		SetConst  *Var[1]  006D0009 
  334:  		ExecWait 8029BD70 
  340:  		SetConst  *Var[0]  00000001 
  350:  		SetConst  *Var[1]  006D0009 
  360:  		ExecWait $Script_8021B1FC 
  36C:  		Return
  374:  	CaseOR  ==  00000017
  380:  	CaseOR  ==  .Event:Immune
  38C:  		Call     8026E914 ( *Var[0] *Var[1] )
  3A0:  		If  *Var[1]  ==  00000002 
  3B0:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[2] )
  3C8:  			If  *Var[2]  <  0000000A 
  3D8:  				Add  *Var[2]  00000002 
  3E8:  				Call     GetActorVar 	( .Actor:Self 0000000D *Var[0] )
  400:  				Switch  *Var[0] 
  40C:  					Case  ==  00000000 
  418:  						Call     PlaySoundAtActor 	( .Actor:Self 000003A3 )
  42C:  						Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
  444:  					Case  ==  00000001 
  450:  						Call     PlaySoundAtActor 	( .Actor:Self 000003A4 )
  464:  						Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
  47C:  					Case  ==  00000002 
  488:  						Call     PlaySoundAtActor 	( .Actor:Self 000003A5 )
  49C:  						Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
  4B4:  					Case  ==  00000003 
  4C0:  						Call     PlaySoundAtActor 	( .Actor:Self 000003A6 )
  4D4:  						Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
  4EC:  					Default
  4F4:  				EndSwitch
  4FC:  				If  *Var[2]  >  0000000A 
  50C:  					Set  *Var[2]  0000000A 
  51C:  				EndIf
  524:  				Call     SetActorVar 	( .Actor:Self 00000000 *Var[2] )
  53C:  				ExecWait $Script_8021B14C 
  548:  				Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  560:  				If  *Var[0]  >=  00000006 
  570:  					ExecWait $Script_80219BA8 
  57C:  				EndIf
  584:  			EndIf
  58C:  		EndIf
  594:  		SetConst  *Var[0]  00000001 
  5A4:  		SetConst  *Var[1]  006D0001 
  5B4:  		ExecWait DoImmune 
  5C0:  	EndCaseGroup
  5C8:  	Case  ==  .Event:AirLiftFailed
  5D4:  		SetConst  *Var[0]  00000001 
  5E4:  		SetConst  *Var[1]  006D0001 
  5F4:  		ExecWait DoImmune 
  600:  	Case  ==  .Event:SpikeTaunt
  60C:  		SetConst  *Var[0]  00000001 
  61C:  		SetConst  *Var[1]  006D0001 
  62C:  		ExecWait DoImmune 
  638:  	Case  ==  .Event:Death
  644:  		SetConst  *Var[0]  00000001 
  654:  		SetConst  *Var[1]  006D0009 
  664:  		ExecWait DoNormalHit 
  670:  		Wait     0000000A 
  67C:  		SetConst  *Var[0]  00000001 
  68C:  		SetConst  *Var[1]  006D0009 
  69C:  		ExecWait $Script_8021B1FC 
  6A8:  		Return
  6B0:  	Case  ==  .Event:EndFirstStrike
  6BC:  		ExecWait $Script_8021B0F8 
  6C8:  		Call     HPBarToHome 	( .Actor:Self )
  6D8:  	Case  ==  .Event:RecoverStatus
  6E4:  		SetConst  *Var[0]  00000001 
  6F4:  		SetConst  *Var[1]  006D0001 
  704:  		ExecWait DoRecover 
  710:  	Case  ==  00000030
  71C:  		SetConst  *Var[0]  00000001 
  72C:  		SetConst  *Var[1]  006D0009 
  73C:  		ExecWait DoNormalHit 
  748:  		Wait     000003E8 
  754:  	Case  ==  .Event:ScareAway
  760:  		SetConst  *Var[0]  00000001 
  770:  		SetConst  *Var[1]  006D0001 
  780:  		SetConst  *Var[2]  006D0009 
  790:  		ExecWait DoScareAway 
  79C:  		Return
  7A4:  	Default
  7AC:  EndSwitch
  7B4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  Return
  7D0:  End

#new:Script $Script_80219B00
    0:  Call     8026E914 ( *Var[0] *Var[1] )
   14:  If  *Var[1]  !=  00000001 
   24:  	Return
   2C:  EndIf
   34:  Call     GetLastDamage 	( .Actor:Self *Var[1] )
   48:  Mul  *Var[1]  0000000A 
   58:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
   70:  Add  *Var[0]  *Var[1] 
   80:  Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
   98:  Return
   A0:  End

#new:Script $Script_80219BA8
    0:  Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
   18:  If  *Var[0]  !=  00000002 
   28:  	Call     SetActorVar 	( .Actor:Self 0000000B 00000001 )
   40:  EndIf
   48:  Return
   50:  End

#new:Script $Script_80219C00
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  >=  00000006 
   28:  	ExecWait $Script_80219BA8 
   34:  EndIf
   3C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   50:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   64:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   78:  Call     UseCamPreset 	( 0000003F )
   88:  Call     SetCamZoom  	( 00000104 )
   98:  Call     CamTargetActor ( .Actor:Self )
   A8:  Call     MoveCamOver 	( 00000014 )
   B8:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   D0:  Call     SetGoalToTarget 	( .Actor:Self )
   E0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   FC:  Add  *Var[0]  00000032 
  10C:  Set  *Var[1]  00000000 
  11C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  130:  Call     SetAnimation 	( .Actor:Self 00000001 006D0006 )
  148:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  164:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
  194:  Wait     00000008 
  1A0:  Call     8026F740 ( FFFFFF81 00000002 000003E7 00000000 )
  1BC:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  1E0:  Switch  *Var[A] 
  1EC:  	CaseOR  ==  00000006 
  1F8:  	CaseOR  ==  00000005 
  204:  		Call     SetAnimation 	( .Actor:Self 00000001 006D0010 )
  21C:  		Thread
  224:  			Wait     0000000A 
  230:  			Call     SetAnimation 	( .Actor:Self 00000001 006D0011 )
  248:  		EndThread
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  264:  		Call     SetGoalToTarget 	( .Actor:Self )
  274:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  290:  		Sub  *Var[0]  00000014 
  2A0:  		Set  *Var[1]  00000000 
  2B0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2CC:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  2EC:  		Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
  300:  		Call     8026F838 ( FFFFFF81 00000002 )
  314:  		Sub  *Var[0]  0000000F 
  324:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  338:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  354:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  374:  		Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
  38C:  		Sub  *Var[0]  0000000A 
  39C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  3D8:  		Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
  3EC:  		Wait     00000008 
  3F8:  		If  *Var[A]  ==  00000005 
  408:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  42C:  		EndIf
  434:  		Call     UseCamPreset 	( 00000002 )
  444:  		ExecWait $Script_8021B0F8 
  450:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  464:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  478:  		Return
  480:  	EndCaseGroup
  488:  EndSwitch
  490:  Call     SetAnimation 	( .Actor:Self 00000001 006D0010 )
  4A8:  Thread
  4B0:  	Wait     00000007 
  4BC:  	Call     SetAnimation 	( .Actor:Self 00000001 006D0011 )
  4D4:  EndThread
  4DC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  4F0:  Call     SetGoalToTarget 	( .Actor:Self )
  500:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  520:  Wait     00000002 
  52C:  Call     SetGoalToTarget 	( .Actor:Self )
  53C:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
  564:  Set  *Var[F]  *Var[0] 
  574:  Switch  *Var[F] 
  580:  	CaseOR  ==  00000000 
  58C:  	CaseOR  ==  00000002 
  598:  		Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
  5AC:  		Call     8026F838 ( FFFFFF81 00000002 )
  5C0:  		Call     UseCamPreset 	( 0000003F )
  5D0:  		Call     SetCamZoom  	( 00000140 )
  5E0:  		Call     CamTargetActor ( .Actor:Self )
  5F0:  		Call     MoveCamOver 	( 00000014 )
  600:  		Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  618:  		Thread
  620:  			Wait     00000005 
  62C:  			Call     SetAnimation 	( .Actor:Self 00000001 006D0010 )
  644:  		EndThread
  64C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  668:  		Add  *Var[0]  00000028 
  678:  		Set  *Var[1]  00000000 
  688:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  69C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B8:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  6D8:  		Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
  6EC:  		Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
  704:  		Add  *Var[0]  00000014 
  714:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  730:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  750:  		Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
  764:  		Wait     00000008 
  770:  		Call     UseCamPreset 	( 00000002 )
  780:  		Call     MoveCamOver 	( 00000014 )
  790:  		ExecWait $Script_8021B0F8 
  79C:  	EndCaseGroup
  7A4:  EndSwitch
  7AC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7C0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7D4:  Return
  7DC:  End

#new:Script $Script_8021A3E4
    0:  Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 0000000C 00000003 )
   30:  Call     UseIdleAnimation 	( .Actor:Self .False )
   44:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   58:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   6C:  Call     UseCamPreset 	( 0000000D )
   7C:  Call     SetCamZoom  	( 000000F0 )
   8C:  Call     CamTargetActor ( .Actor:Self )
   9C:  Call     MoveCamOver 	( 00000014 )
   AC:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   C4:  Call     SetGoalToTarget 	( .Actor:Self )
   D4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   F0:  Add  *Var[0]  00000050 
  100:  Set  *Var[1]  00000000 
  110:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 006D0006 )
  13C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  158:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  170:  Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
  188:  Wait     00000014 
  194:  Call     UseCamPreset 	( 00000005 )
  1A4:  Call     SetCamZoom  	( 0000015E )
  1B4:  Call     SetCamOffsetZ 	( 00000023 )
  1C4:  Call     CamTargetActor ( .Actor:Self )
  1D4:  Call     MoveCamOver 	( 00000008 )
  1E4:  Call     PlaySoundAtActor 	( .Actor:Self 000002EB )
  1F8:  Call     SetAnimation 	( .Actor:Self 00000001 006D000F )
  210:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[5] )
  228:  Call     SetActorVar 	( .Actor:Self 00000000 0000000B )
  240:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  258:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  270:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[2] )
  288:  Add  *Var[1]  0000000A 
  298:  Add  *Var[2]  00000002 
  2A8:  Thread
  2B0:  	Wait     00000001 
  2BC:  	Call     PlayEffect  	( {FX:LightRays:SharpA} *Var[0] *Var[1] *Var[2] *Fixed[1.0] *Var[B] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  300:  	Wait     0000001E 
  30C:  	Call     RemoveEffect 	( *Var[B] )
  31C:  EndThread
  324:  Thread
  32C:  	Wait     00000001 
  338:  	Call     PlayEffect  	( 0000004F 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndThread
  384:  Wait     00000005 
  390:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  3B4:  Switch  *Var[A] 
  3C0:  	CaseOR  ==  00000006 
  3CC:  	CaseOR  ==  00000005 
  3D8:  		If  *Var[A]  ==  00000005 
  3E8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  40C:  		EndIf
  414:  		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  428:  		Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  44C:  		Switch  *Var[A] 
  458:  			Case  ==  00000006 
  464:  			Default
  46C:  				Call     ActorExists 	( .Actor:Partner *Var[0] )
  480:  				If  *Var[0]  ==  00000001 
  490:  					Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  4A4:  					Call     SetGoalToTarget 	( .Actor:Self )
  4B4:  					Call     DamageTarget 	( .Actor:Self *Var[D] 00000000 0000FFFF 00000000 00000002 00000020 )
  4DC:  				EndIf
  4E4:  		EndSwitch
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait     00000002 
  508:  		Call     SetGoalToTarget 	( .Actor:Self )
  518:  		Call     DamageTarget 	( .Actor:Self *Var[E] 20000000 0000FFFF 00000000 00000002 00000020 )
  540:  		Wait     00000002 
  54C:  		Call     ActorExists 	( .Actor:Partner *Var[0] )
  560:  		If  *Var[0]  ==  00000001 
  570:  			Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  584:  			Call     SetGoalToTarget 	( .Actor:Self )
  594:  			Call     DamageTarget 	( .Actor:Self *Var[D] 20000000 0000FFFF 00000000 00000002 00000020 )
  5BC:  		EndIf
  5C4:  EndSwitch
  5CC:  Wait     00000028 
  5D8:  Call     SetActorVar 	( .Actor:Self 00000000 *Var[5] )
  5F0:  Thread
  5F8:  	Call     GetActorVar 	( .Actor:Self 0000000D *Var[0] )
  610:  	Wait     0000000A 
  61C:  	Switch  *Var[0] 
  628:  		Case  ==  00000000 
  634:  			Call     PlaySoundAtActor 	( .Actor:Self 000003AA )
  648:  		Case  ==  00000001 
  654:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A9 )
  668:  		Case  ==  00000002 
  674:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A8 )
  688:  		Case  ==  00000003 
  694:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A7 )
  6A8:  	EndSwitch
  6B0:  EndThread
  6B8:  Call     SetAnimation 	( .Actor:Self 00000001 006D0014 )
  6D0:  Wait     0000003C 
  6DC:  Call     UseCamPreset 	( 00000002 )
  6EC:  ExecWait $Script_8021B0F8 
  6F8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  70C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  720:  Return
  728:  End

#new:Script $Script_8021AB14
    0:  Call     SetActorVar 	( .Actor:Self 00000005 00000001 )
   18:  Call     SetActorVar 	( .Actor:Self 00000006 000003E8 )
   30:  Call     SetActorVar 	( .Actor:Self 0000000B 00000002 )
   48:  Call     UseIdleAnimation 	( .Actor:Self .False )
   5C:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   70:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
   88:  If  *Var[0]  !&  00000002 
   98:  	ConstOR  *Var[0] 00000002 
   A8:  	Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
   C0:  	Call     UseCamPreset 	( 0000000E )
   D0:  	Call     SetCamOffsetZ 	( 00000028 )
   E0:  	Call     CamTargetActor ( .Actor:Self )
   F0:  	Call     MoveCamOver 	( 0000001E )
  100:  	Wait     0000001E 
  10C:  	Call     GetEnemyMaxHP 	( .Actor:Self *Var[0] )
  120:  	Call     GetActorHP  	( .Actor:Self *Var[1] )
  134:  	If  *Var[0]  ==  *Var[1] 
  144:  		Call     SayMessage  	( 000F0053 .Actor:Self 00000001 006D0005 006D0001 ) % Ow, that light! It's so bright... This is no good. ...
  164:  	Else
  16C:  		Call     SayMessage  	( 000F0052 .Actor:Self 00000001 006D0005 006D0001 ) % Woooaaahh!! I hate light!!! I'll make it darker... ...
  18C:  	EndIf
  194:  EndIf
  19C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  1B0:  Call     UseCamPreset 	( 0000000D )
  1C0:  Call     SetCamZoom  	( 000000E6 )
  1D0:  Call     SetCamOffsetZ 	( 00000019 )
  1E0:  Call     CamTargetActor ( .Actor:Self )
  1F0:  Call     MoveCamOver 	( 00000014 )
  200:  Wait     00000014 
  20C:  Call     PlaySoundAtActor 	( .Actor:Self 000003CF )
  220:  Call     SetAnimation 	( .Actor:Self 00000001 006D000F )
  238:  Wait     00000008 
  244:  Thread
  24C:  	Wait     00000002 
  258:  	Call     PlaySoundAtActor 	( .Actor:Self 000003D0 )
  26C:  EndThread
  274:  Call     SetAnimation 	( .Actor:Self 00000001 006D000E )
  28C:  Wait     00000005 
  298:  Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
  2B0:  Thread
  2B8:  	Call     GetActorVar 	( .Actor:Self 0000000D *Var[0] )
  2D0:  	Call     SetActorVar 	( .Actor:Self 0000000D 00000000 )
  2E8:  	Wait     0000000A 
  2F4:  	Switch  *Var[0] 
  300:  		Case  ==  00000004 
  30C:  			Call     PlaySoundAtActor 	( .Actor:Self 000003AA )
  320:  		Case  ==  00000003 
  32C:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A9 )
  340:  		Case  ==  00000002 
  34C:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A8 )
  360:  		Case  ==  00000001 
  36C:  			Call     PlaySoundAtActor 	( .Actor:Self 000003A7 )
  380:  	EndSwitch
  388:  EndThread
  390:  Wait     0000000E 
  39C:  Wait     00000001 
  3A8:  Wait     0000000F 
  3B4:  Call     UseCamPreset 	( 00000002 )
  3C4:  Wait     00000002 
  3D0:  Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
  3E8:  ExecWait $Script_8021B14C 
  3F4:  Wait     0000001E 
  400:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  414:  Call     UseIdleAnimation 	( .Actor:Self .True )
  428:  Return
  430:  End

#new:Script $Script_TakeTurn_8021AF4C
    0:  Call     GetActorVar 	( .Actor:Self 0000000C *Var[0] )
   18:  If  *Var[0]  >  00000000 
   28:  	Sub  *Var[0]  00000001 
   38:  	Call     SetActorVar 	( .Actor:Self 0000000C *Var[0] )
   50:  EndIf
   58:  Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
   70:  Switch  *Var[0] 
   7C:  	Case  ==  00000002 
   88:  		Call     GetActorVar 	( .Actor:Self 0000000C *Var[0] )
   A0:  		If  *Var[0]  >  00000000 
   B0:  			Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
   C8:  		EndIf
   D0:  	Case  ==  00000001 
   DC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   F4:  		If  *Var[0]  <  00000006 
  104:  			Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
  11C:  		EndIf
  124:  EndSwitch
  12C:  Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
  144:  Switch  *Var[0] 
  150:  	Case  ==  00000002 
  15C:  		ExecWait $Script_8021A3E4 
  168:  	Case  ==  00000001 
  174:  		ExecWait $Script_8021AB14 
  180:  	Default
  188:  		ExecWait $Script_80219C00 
  194:  EndSwitch
  19C:  Return
  1A4:  End

#new:Script $Script_8021B0F8
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  006D0007 
   20:  ExecWait DoReturnHome 
   2C:  Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
   44:  Return
   4C:  End

#new:Script $Script_8021B14C
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  <  00000005 
   30:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   4C:  	Case  <  00000008 
   58:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
   74:  	Default
   7C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
   98:  EndSwitch
   A0:  Return
   A8:  End

#new:Script $Script_8021B1FC
    0:  ExecWait 8029AF08 
    C:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
   24:  Call     RemoveEffect 	( *Var[0] )
   34:  Call     RemoveActor 	( .Actor:Self )
   44:  Return
   4C:  End

#new:Unknown $???_8021B250
00000019 

#new:Script $Script_8021B254
    0:  Call     $Function_80218490 ( )
    C:  Return
   14:  End

#new:Script $Script_BeforeBattle_8021B270
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Thread
   34:  	SetF  *Var[0]  *Fixed[0.0] 
   44:  	SetF  *Var[1]  *Fixed[0.0] 
   54:  	Loop     
   60:  		Call     RotateModel 	( 00000017 *Var[1] 00000000 00000000 00000001 )
   80:  		Call     RotateModel 	( 00000015 *Var[0] 00000000 00000000 00000001 )
   A0:  		SubF  *Var[0]  *Fixed[0.60058594] 
   B0:  		SubF  *Var[1]  *Fixed[7.2001953] 
   C0:  		Call     ClampFloat  	( *Var[0] )
   D0:  		Call     ClampFloat  	( *Var[1] )
   E0:  		Wait     00000001 
   EC:  	EndLoop
   F4:  EndThread
   FC:  Exec     $Script_8021B254 
  108:  Return
  110:  End

#new:Script $Script_AfterBattle_8021B388
    0:  Return
    8:  End

#new:Stage $Stage_8021B398
$ASCII_8022EBD8  % omo_tex
$ASCII_8022EBC8  % omo_bt01_shape
$ASCII_8022EBB8  % omo_bt01_hit
$Script_BeforeBattle_8021B270 
$Script_AfterBattle_8021B388 
$ASCII_8022EBB0  % omo_bg
00000000 
00000000 
00000000 
00000000 

#new:Script $Script_BeforeBattle_8021B3C0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8021B3FC
    0:  Return
    8:  End

#new:Stage $Stage_8021B40C
$ASCII_8022EC08  % omo_tex
$ASCII_8022EBF8  % omo_bt02_shape
$ASCII_8022EBE8  % omo_bt02_hit
$Script_BeforeBattle_8021B3C0 
$Script_AfterBattle_8021B3FC 
$ASCII_8022EBE0  % omo_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 8021B434 to 8021B440 (0055A814 to 0055A820)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021B440
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000012 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_8021B490
    0:  Return
    8:  End

#new:Stage $Stage_8021B4A0
$ASCII_8022EC38  % omo_tex
$ASCII_8022EC28  % omo_bt03_shape
$ASCII_8022EC18  % omo_bt03_hit
$Script_BeforeBattle_8021B440 
$Script_AfterBattle_8021B490 
$ASCII_8022EC10  % omo_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 8021B4C8 to 8021B4D0 (0055A8A8 to 0055A8B0)
00000000 00000000 

#new:Script $Script_BeforeBattle_8021B4D0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8021B50C
    0:  Return
    8:  End

#new:Stage $Stage_8021B51C
$ASCII_8022EC68  % omo_tex
$ASCII_8022EC58  % omo_bt03_shape
$ASCII_8022EC48  % omo_bt03_hit
$Script_BeforeBattle_8021B4D0 
$Script_AfterBattle_8021B50C 
$ASCII_8022EC40  % omo_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 8021B544 to 8021B550 (0055A924 to 0055A930)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021B550
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     SetTexPanner 	( 0000001D 0000000A )
   40:  Thread
   48:  	Set  *Var[E]  00000000 
   58:  	Loop     
   64:  		Add  *Var[E]  00008000 
   74:  		Call     802C9364 ( 0000000A 00000000 *Var[E] 00000000 )
   90:  		Wait     0000000A 
   9C:  	EndLoop
   A4:  EndThread
   AC:  Return
   B4:  End

#new:Script $Script_AfterBattle_8021B60C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021B61C
00000012 00000011 0000000D 00000000 

#new:Stage $Stage_8021B62C
$ASCII_8022EC98  % omo_tex
$ASCII_8022EC88  % omo_bt04_shape
$ASCII_8022EC78  % omo_bt04_hit
$Script_BeforeBattle_8021B550 
$Script_AfterBattle_8021B60C 
$ASCII_8022EC70  % omo_bg
$ForegroundModelList_8021B61C 
00000004 
$SpecialFormation_8021B684 
00000000 

#new:Vector3D $Vector3D_8021B654
-49` 56` -68`

#new:Vector3D $Vector3D_8021B660
-13` 56` -68`

#new:Vector3D $Vector3D_8021B66C
20` 56` -68`

#new:Vector3D $Vector3D_8021B678
53` 56` -68`

#new:SpecialFormation $SpecialFormation_8021B684
$SlotMachineStart $Vector3D_8021B654 00000000 00000000 00000000 00000000 00000000 
$SlotMachineStop $Vector3D_8021B660 00000000 00000001 00000000 00000000 00000000 
$SlotMachineStop $Vector3D_8021B66C 00000000 00000002 00000000 00000000 00000000 
$SlotMachineStop $Vector3D_8021B678 00000000 00000003 00000000 00000000 00000000 

#new:IntTable $IntTable_8021B6F4
00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002 

#new:IntTable $IntTable_8021B714
00000000 00000001 00000000 00000002 00000001 00000002 00000000 00000002 

#new:IntTable $IntTable_8021B734
00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002 

#new:DefenseTable $DefenseTable_8021B754
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021B760
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021B80C
00800000 01000000 000000FF 00000000 $DefenseTable_8021B754 00000000 00000000 00000000 00000000 

#new:Actor $SlotMachineStop
% stats
[Index]        CFb 
[Level]        99`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00244005 
[StatusTable] $StatusTable_8021B760 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021B80C 
[Script]      $Script_Init_8021B880 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   0`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Actor $SlotMachineStart
% stats
[Index]        CEb 
[Level]        99`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00244005 
[StatusTable] $StatusTable_8021B760 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021B80C 
[Script]      $Script_Init_8021B880 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   0`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_8021B880
    0:  UseArray $End[0] 
    C:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021CCC8 )
   20:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021BA18 )
   34:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021C574 )
   48:  Set  *Array[1]  00000000 
   58:  Set  *Array[2]  00000000 
   68:  Set  *Array[3]  00000000 
   78:  Set  *Array[4]  00000000 
   88:  Call     RandInt     	( 00000008 *Var[0] )
   9C:  Mul  *Var[0]  0000002D 
   AC:  Set  *Array[5]  *Var[0] 
   BC:  Call     RandInt     	( 00000008 *Var[0] )
   D0:  Mul  *Var[0]  0000002D 
   E0:  Set  *Array[6]  *Var[0] 
   F0:  Call     RandInt     	( 00000008 *Var[0] )
  104:  Mul  *Var[0]  0000002D 
  114:  Set  *Array[7]  *Var[0] 
  124:  Call     $Function_802186A0 ( )
  130:  If  *Var[0]  ==  00000001 
  140:  	Set  *Array[1]  00000001 
  150:  	Set  *Array[2]  00000001 
  160:  	Set  *Array[3]  00000001 
  170:  	Set  *Array[4]  00000001 
  180:  EndIf
  188:  Return
  190:  End

#new:Script $Script_Idle_8021BA18
    0:  UseArray $End[0] 
    C:  Call     EnableTexPanning 	( 0000002D .True )
   20:  Set  *Var[E]  00000000 
   30:  Set  *Var[F]  00000000 
   40:  Label    00000000 
   4C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   64:  Switch  *Var[0] 
   70:  	Case  ==  00000000 
   7C:  	Case  ==  00000001 
   88:  		Switch  *Array[2] 
   94:  			Case  ==  00000000 
   A0:  			Case  ==  00000001 
   AC:  				Add  *Array[5]  00000005 
   BC:  			Case  ==  00000002 
   C8:  				If  *Array[8]  >  00000000 
   D8:  					Add  *Array[5]  00000005 
   E8:  					Sub  *Array[8]  00000005 
   F8:  					BreakCase
  100:  				EndIf
  108:  				Set  *Var[0]  *Array[5] 
  118:  				Mod  *Var[0]  0000002D 
  128:  				If  *Var[0]  !=  00000000 
  138:  					Add  *Array[5]  00000005 
  148:  				Else
  150:  					Set  *Array[2]  00000003 
  160:  				EndIf
  168:  		EndSwitch
  170:  		Call     RotateModel 	( 00000020 *Array[5] 00000001 00000000 00000000 )
  190:  		Call     RotateModel 	( 00000021 *Array[5] 00000001 00000000 00000000 )
  1B0:  		Call     RotateModel 	( 00000022 *Array[5] 00000001 00000000 00000000 )
  1D0:  	Case  ==  00000002 
  1DC:  		Switch  *Array[3] 
  1E8:  			Case  ==  00000000 
  1F4:  			Case  ==  00000001 
  200:  				Add  *Array[6]  00000005 
  210:  			Case  ==  00000002 
  21C:  				If  *Array[9]  >  00000000 
  22C:  					Add  *Array[6]  00000005 
  23C:  					Sub  *Array[9]  00000005 
  24C:  					BreakCase
  254:  				EndIf
  25C:  				Set  *Var[0]  *Array[6] 
  26C:  				Mod  *Var[0]  0000002D 
  27C:  				If  *Var[0]  !=  00000000 
  28C:  					Add  *Array[6]  00000005 
  29C:  				Else
  2A4:  					Set  *Array[3]  00000003 
  2B4:  				EndIf
  2BC:  		EndSwitch
  2C4:  		Call     RotateModel 	( 00000024 *Array[6] 00000001 00000000 00000000 )
  2E4:  		Call     RotateModel 	( 00000025 *Array[6] 00000001 00000000 00000000 )
  304:  		Call     RotateModel 	( 00000026 *Array[6] 00000001 00000000 00000000 )
  324:  	Case  ==  00000003 
  330:  		Switch  *Array[4] 
  33C:  			Case  ==  00000000 
  348:  			Case  ==  00000001 
  354:  				Add  *Array[7]  00000005 
  364:  			Case  ==  00000002 
  370:  				If  *Array[A]  >  00000000 
  380:  					Add  *Array[7]  00000005 
  390:  					Sub  *Array[A]  00000005 
  3A0:  					BreakCase
  3A8:  				EndIf
  3B0:  				Set  *Var[0]  *Array[7] 
  3C0:  				Mod  *Var[0]  0000002D 
  3D0:  				If  *Var[0]  !=  00000000 
  3E0:  					Add  *Array[7]  00000005 
  3F0:  				Else
  3F8:  					Set  *Array[4]  00000003 
  408:  				EndIf
  410:  		EndSwitch
  418:  		Call     RotateModel 	( 00000028 *Array[7] 00000001 00000000 00000000 )
  438:  		Call     RotateModel 	( 00000029 *Array[7] 00000001 00000000 00000000 )
  458:  		Call     RotateModel 	( 0000002A *Array[7] 00000001 00000000 00000000 )
  478:  EndSwitch
  480:  If  *Array[5]  >=  00000168 
  490:  	Sub  *Array[5]  00000168 
  4A0:  EndIf
  4A8:  If  *Array[6]  >=  00000168 
  4B8:  	Sub  *Array[6]  00000168 
  4C8:  EndIf
  4D0:  If  *Array[7]  >=  00000168 
  4E0:  	Sub  *Array[7]  00000168 
  4F0:  EndIf
  4F8:  If  *Array[1]  ==  00000000 
  508:  	Add  *Var[F]  FFFFFEEB 
  518:  	Call     802C9364 ( 0000000B 00000000 00000000 *Var[F] )
  534:  EndIf
  53C:  If  *Array[1]  ==  00000001 
  54C:  	Add  *Var[F]  FFFFFBAA 
  55C:  	Call     802C9364 ( 0000000B 00000000 00000000 *Var[F] )
  578:  EndIf
  580:  If  *Array[1]  ==  00000002 
  590:  	Add  *Var[F]  FFFFF2FE 
  5A0:  	Call     802C9364 ( 0000000B 00000000 00000000 *Var[F] )
  5BC:  EndIf
  5C4:  If  *Array[1]  ==  00000002 
  5D4:  	Goto     00000001 
  5E0:  EndIf
  5E8:  If  *Array[1]  ==  00000000 
  5F8:  	Goto     00000001 
  604:  EndIf
  60C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  624:  If  *Var[0]  !=  00000000 
  634:  	Goto     00000001 
  640:  EndIf
  648:  Set  *Var[0]  *Array[2] 
  658:  Add  *Var[0]  *Array[3] 
  668:  Add  *Var[0]  *Array[4] 
  678:  If  *Var[0]  ==  00000009 
  688:  	Set  *Var[0]  *Array[5] 
  698:  	Div  *Var[0]  0000002D 
  6A8:  	UseIntBuffer $IntTable_8021B6F4 
  6B4:  	GetIntN  *Var[A] *Var[0] 
  6C4:  	Set  *Var[0]  *Array[6] 
  6D4:  	Div  *Var[0]  0000002D 
  6E4:  	UseIntBuffer $IntTable_8021B714 
  6F0:  	GetIntN  *Var[B] *Var[0] 
  700:  	Set  *Var[0]  *Array[7] 
  710:  	Div  *Var[0]  0000002D 
  720:  	UseIntBuffer $IntTable_8021B734 
  72C:  	GetIntN  *Var[C] *Var[0] 
  73C:  	Loop     
  748:  		If  *Var[A]  !=  *Var[B] 
  758:  			BreakLoop
  760:  		EndIf
  768:  		If  *Var[A]  !=  *Var[C] 
  778:  			BreakLoop
  780:  		EndIf
  788:  		If  *Var[B]  !=  *Var[C] 
  798:  			BreakLoop
  7A0:  		EndIf
  7A8:  		Thread
  7B0:  			Call     8026BF48 ( 00000001 )
  7C0:  			Call     UseCamPreset 	( 00000013 )
  7D0:  			Call     SetCamTarget 	( 00000000 00000064 00000000 )
  7E8:  			Call     SetCamOffsetZ 	( 00000000 )
  7F8:  			Call     SetCamZoom  	( 00000154 )
  808:  			Call     MoveCamOver 	( 0000000A )
  818:  			Switch  *Var[A] 
  824:  				Case  ==  00000000 
  830:  					Loop     0000000A 
  83C:  						Call     MakeItemEntity ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 0000001A 00000000 )
  860:  						Call     $Function_802186C8 ( )
  86C:  						Wait     00000001 
  878:  						Call     MakeItemEntity ( .Item:Coin 00000011 00000069 FFFFFFB6 0000001A 00000000 )
  89C:  						Call     $Function_802186C8 ( )
  8A8:  						Wait     00000001 
  8B4:  						Call     MakeItemEntity ( .Item:Coin 0000002A 00000069 FFFFFFB6 0000001A 00000000 )
  8D8:  						Call     $Function_802186C8 ( )
  8E4:  						Wait     0000000A 
  8F0:  					EndLoop
  8F8:  				Case  ==  00000001 
  904:  					Loop     0000000A 
  910:  						Call     MakeItemEntity ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 0000001A 00000000 )
  934:  						Call     $Function_802186C8 ( )
  940:  						Wait     00000001 
  94C:  						Call     MakeItemEntity ( .Item:Coin 00000011 00000069 FFFFFFB6 0000001A 00000000 )
  970:  						Call     $Function_802186C8 ( )
  97C:  						Wait     00000001 
  988:  						Call     MakeItemEntity ( .Item:Coin 0000002A 00000069 FFFFFFB6 0000001A 00000000 )
  9AC:  						Call     $Function_802186C8 ( )
  9B8:  						Wait     0000000A 
  9C4:  					EndLoop
  9CC:  				Case  ==  00000002 
  9D8:  					Loop     0000000A 
  9E4:  						Call     MakeItemEntity ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 0000001A 00000000 )
  A08:  						Call     $Function_802186C8 ( )
  A14:  						Wait     00000001 
  A20:  						Call     MakeItemEntity ( .Item:Coin 00000011 00000069 FFFFFFB6 0000001A 00000000 )
  A44:  						Call     $Function_802186C8 ( )
  A50:  						Wait     00000001 
  A5C:  						Call     MakeItemEntity ( .Item:Coin 0000002A 00000069 FFFFFFB6 0000001A 00000000 )
  A80:  						Call     $Function_802186C8 ( )
  A8C:  						Wait     0000000A 
  A98:  					EndLoop
  AA0:  			EndSwitch
  AA8:  			Set  *Array[1]  00000000 
  AB8:  			Set  *Array[2]  00000000 
  AC8:  			Set  *Array[3]  00000000 
  AD8:  			Set  *Array[4]  00000000 
  AE8:  			Call     8026BF48 ( 00000000 )
  AF8:  		EndThread
  B00:  		Set  *Array[1]  00000002 
  B10:  		BreakLoop
  B18:  	EndLoop
  B20:  EndIf
  B28:  Label    00000001 
  B34:  Wait     00000001 
  B40:  Goto     00000000 
  B4C:  Return
  B54:  End

#new:Script $Script_HandleEvent_8021C574
    0:  UseArray $End[0] 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     GetEventType 	( .Actor:Self *Var[0] )
   34:  Switch  *Var[0] 
   40:  	CaseOR  ==  .Event:HitCombo
   4C:  	CaseOR  ==  .Event:Hit
   58:  	CaseOR  ==  .Event:BurnHit
   64:  	CaseOR  ==  .Event:ShockHit
   70:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   88:  		Switch  *Var[0] 
   94:  			Case  ==  00000000 
   A0:  				Call     TranslateModel ( 0000001C 00000000 FFFFFFFE 00000000 )
   BC:  				Wait     00000001 
   C8:  				Call     TranslateModel ( 0000001C 00000000 FFFFFFFA 00000000 )
   E4:  				Wait     00000001 
   F0:  				Call     TranslateModel ( 0000001C 00000000 FFFFFFF9 00000000 )
  10C:  				Wait     00000004 
  118:  				Call     TranslateModel ( 0000001C 00000000 FFFFFFFC 00000000 )
  134:  				Wait     00000001 
  140:  				Call     TranslateModel ( 0000001C 00000000 FFFFFFFE 00000000 )
  15C:  				Wait     00000001 
  168:  				Call     TranslateModel ( 0000001C 00000000 FFFFFFFF 00000000 )
  184:  				Wait     00000001 
  190:  				Call     TranslateModel ( 0000001C 00000000 00000000 00000000 )
  1AC:  				Set  *Array[1]  00000001 
  1BC:  				Set  *Array[2]  00000001 
  1CC:  				Set  *Array[3]  00000001 
  1DC:  				Set  *Array[4]  00000001 
  1EC:  			Case  ==  00000001 
  1F8:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
  214:  				Wait     00000001 
  220:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFA 00000000 )
  23C:  				Wait     00000001 
  248:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFF9 00000000 )
  264:  				Wait     00000004 
  270:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFC 00000000 )
  28C:  				Wait     00000001 
  298:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
  2B4:  				Wait     00000001 
  2C0:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFF 00000000 )
  2DC:  				Wait     00000001 
  2E8:  				Call     TranslateModel ( 0000001D 00000000 00000000 00000000 )
  304:  				If  *Array[2]  ==  00000001 
  314:  					Set  *Array[8]  00000064 
  324:  					Set  *Array[9]  00000096 
  334:  					Set  *Array[A]  000000C8 
  344:  					Set  *Array[2]  00000002 
  354:  					Set  *Array[3]  00000002 
  364:  					Set  *Array[4]  00000002 
  374:  				EndIf
  37C:  			Case  ==  00000002 
  388:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
  3A4:  				Wait     00000001 
  3B0:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFA 00000000 )
  3CC:  				Wait     00000001 
  3D8:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFF9 00000000 )
  3F4:  				Wait     00000004 
  400:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFC 00000000 )
  41C:  				Wait     00000001 
  428:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
  444:  				Wait     00000001 
  450:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFF 00000000 )
  46C:  				Wait     00000001 
  478:  				Call     TranslateModel ( 0000001D 00000000 00000000 00000000 )
  494:  				If  *Array[3]  ==  00000001 
  4A4:  					Set  *Array[8]  00000096 
  4B4:  					Set  *Array[9]  00000064 
  4C4:  					Set  *Array[A]  000000C8 
  4D4:  					Set  *Array[2]  00000002 
  4E4:  					Set  *Array[3]  00000002 
  4F4:  					Set  *Array[4]  00000002 
  504:  				EndIf
  50C:  			Case  ==  00000003 
  518:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
  534:  				Wait     00000001 
  540:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFA 00000000 )
  55C:  				Wait     00000001 
  568:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFF9 00000000 )
  584:  				Wait     00000004 
  590:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFC 00000000 )
  5AC:  				Wait     00000001 
  5B8:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
  5D4:  				Wait     00000001 
  5E0:  				Call     TranslateModel ( 0000001D 00000000 FFFFFFFF 00000000 )
  5FC:  				Wait     00000001 
  608:  				Call     TranslateModel ( 0000001D 00000000 00000000 00000000 )
  624:  				If  *Array[4]  ==  00000001 
  634:  					Set  *Array[8]  000000C8 
  644:  					Set  *Array[9]  00000096 
  654:  					Set  *Array[A]  00000064 
  664:  					Set  *Array[2]  00000002 
  674:  					Set  *Array[3]  00000002 
  684:  					Set  *Array[4]  00000002 
  694:  				EndIf
  69C:  		EndSwitch
  6A4:  	EndCaseGroup
  6AC:  	CaseOR  ==  .Event:BurnDeath
  6B8:  	CaseOR  ==  .Event:MultibounceHit
  6C4:  	CaseOR  ==  .Event:ShockDeath
  6D0:  	CaseOR  ==  .Event:Death
  6DC:  	CaseOR  ==  .Event:MultibounceDeath
  6E8:  	CaseOR  ==  .Event:SpikeContact
  6F4:  	CaseOR  ==  .Event:BurnContact
  700:  	EndCaseGroup
  708:  	CaseOR  ==  00000017
  714:  	CaseOR  ==  .Event:Immune
  720:  	EndCaseGroup
  728:  EndSwitch
  730:  Call     UseIdleAnimation 	( .Actor:Self .True )
  744:  Return
  74C:  End

#new:Script $Script_TakeTurn_8021CCC8
    0:  UseArray $End[0] 
    C:  Return
   14:  End

PADDING: 8021CCE4 to 8021CCF0 (0055C0C4 to 0055C0D0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021CCF0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000018 00000000 )
   40:  Call     802C9308 ( 0000001C 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_AfterBattle_8021CD54
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021CD64
00000027 00000026 00000000 

#new:Stage $Stage_8021CD70
$ASCII_8022ECC8  % omo_tex
$ASCII_8022ECB8  % omo_bt05_shape
$ASCII_8022ECA8  % omo_bt05_hit
$Script_BeforeBattle_8021CCF0 
$Script_AfterBattle_8021CD54 
$ASCII_8022ECA0  % omo_bg
$ForegroundModelList_8021CD64 
00000000 
00000000 
00000000 

PADDING: 8021CD98 to 8021CDA0 (0055C178 to 0055C180)
00000000 00000000 

#new:Script $Script_BeforeBattle_8021CDA0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000023 00000000 )
   40:  Call     802C9308 ( 0000002D 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_AfterBattle_8021CE04
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021CE14
0000001B 00000000 

#new:Stage $Stage_8021CE1C
$ASCII_8022ECF8  % omo_tex
$ASCII_8022ECE8  % omo_bt05_shape
$ASCII_8022ECD8  % omo_bt05_hit
$Script_BeforeBattle_8021CDA0 
$Script_AfterBattle_8021CE04 
$ASCII_8022ECD0  % omo_bg
$ForegroundModelList_8021CE14 
00000000 
00000000 
00000000 

PADDING: 8021CE44 to 8021CE50 (0055C224 to 0055C230)
00000000 00000000 00000000 

#new:Script $Script_8021CE50
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[9]  *Var[1] 
   20:  Set  *Var[8]  *Var[2] 
   30:  Label    00000000 
   3C:  Call     MakeLerp    	( 00000000 *Var[9] *Var[8] 0000000A )
   58:  Loop     
   64:  	Call     UpdateLerp  	( )
   70:  	Call     TranslateGroup ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Wait     00000001 
   98:  	If  *Var[1]  ==  00000000 
   A8:  		BreakLoop
   B0:  	EndIf
   B8:  EndLoop
   C0:  Call     MakeLerp    	( *Var[9] 00000000 *Var[8] 0000000A )
   DC:  Loop     
   E8:  	Call     UpdateLerp  	( )
   F4:  	Call     TranslateGroup ( *Var[A] 00000000 *Var[0] 00000000 )
  110:  	Wait     00000001 
  11C:  	If  *Var[1]  ==  00000000 
  12C:  		BreakLoop
  134:  	EndIf
  13C:  EndLoop
  144:  Goto     00000000 
  150:  Return
  158:  End

#new:Script $Script_BeforeBattle_8021CFB0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Thread
   34:  	Set  *Var[0]  0000001A 
   44:  	Set  *Var[1]  FFFFFFCE 
   54:  	Set  *Var[2]  00000078 
   64:  	Exec     $Script_8021CE50 
   70:  	Wait     0000000A 
   7C:  	Set  *Var[0]  0000001E 
   8C:  	Set  *Var[1]  FFFFFFB0 
   9C:  	Set  *Var[2]  00000096 
   AC:  	Exec     $Script_8021CE50 
   B8:  EndThread
   C0:  Return
   C8:  End

#new:Script $Script_AfterBattle_8021D080
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021D090
00000027 00000026 00000000 

#new:Stage $Stage_8021D09C
$ASCII_8022ED28  % omo_tex
$ASCII_8022ED18  % omo_bt06_shape
$ASCII_8022ED08  % omo_bt06_hit
$Script_BeforeBattle_8021CFB0 
$Script_AfterBattle_8021D080 
$ASCII_8022ED00  % omo_bg
$ForegroundModelList_8021D090 
00000000 
00000000 
00000000 

PADDING: 8021D0C4 to 8021D0D0 (0055C4A4 to 0055C4B0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021D0D0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8021D10C
    0:  Return
    8:  End

#new:Stage $Stage_8021D11C
$ASCII_8022ED50  % omo_tex
$ASCII_8022ED40  % omo_bt07_shape
$ASCII_8022ED30  % omo_bt07_hit
$Script_BeforeBattle_8021D0D0 
$Script_AfterBattle_8021D10C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8021D144 to 8021D150 (0055C524 to 0055C530)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_8021D150
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021D15C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021D208
00800000 01000000 001400FF $IdleAnimations_8021D254 $DefenseTable_8021D150 00000000 00000000 00F60000 00000000 

#new:Actor $Goomba
% stats
[Index]         7b 
[Level]         5`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D15C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021D208 
[Script]      $Script_Init_8021D2EC 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021D254
.Status:Normal    00260001
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260001
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:IdleAnimations $IdleAnimations_8021D2A0
.Status:Normal    00260003
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260003
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:Script $Script_Init_8021D2EC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021DE40 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021D338 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D614 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021D338
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D2A0 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027A264 ( FFFFFF81 00000000 )
  128:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D254 )
  140:  Loop     00000014 
  14C:  	Label    00000001 
  158:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  16C:  	If  *Var[1]  &  0035D000 
  17C:  		Wait     00000001 
  188:  		Goto     00000001 
  194:  	EndIf
  19C:  	Wait     00000001 
  1A8:  EndLoop
  1B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Sub  *Var[0]  00000005 
  1DC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D2A0 )
  208:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  224:  Call     8027A264 ( FFFFFF81 00000000 )
  238:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D254 )
  250:  Loop     00000050 
  25C:  	Label    00000002 
  268:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  27C:  	If  *Var[1]  &  0035D000 
  28C:  		Wait     00000001 
  298:  		Goto     00000002 
  2A4:  	EndIf
  2AC:  	Wait     00000001 
  2B8:  EndLoop
  2C0:  Goto     0000000A 
  2CC:  Return
  2D4:  End

#new:Script $Script_HandleEvent_8021D614
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  00260005 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  00260009 
   DC:  		SetConst  *Var[2]  0026000A 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  00260009 
  124:  		SetConst  *Var[2]  0026000A 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  0026000A 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  00260005 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00260005 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00260006 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0026000E 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  00260005 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  344:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  0026000E 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00260006 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00260001 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  00260005 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00260006 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  00260001 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  00260003 
  5C4:  		SetConst  *Var[2]  00260005 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  00260003 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  00260005 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End

#new:FloatTable $FloatTable_8021DCD4
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021DE40
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
   FC:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  118:  Wait     00000001 
  124:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  140:  Wait     00000005 
  14C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  168:  Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[0] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:  				Call     $Function_8021887C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  2E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260008 )
  3B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  3D0:  		Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  3F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  43C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  5B4:  			Loop     00000004 
  5C0:  				Sub  *Var[0]  0000002D 
  5D0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  5EC:  				Wait     00000001 
  5F8:  			EndLoop
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  658:  		Wait     00000005 
  664:  		Call     UseCamPreset 	( 00000002 )
  674:  		Call     8027D7F0 ( )
  680:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  754:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  838:  			Loop     00000010 
  844:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  860:  				Call     $Function_8021887C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  880:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  89C:  				Set  *Var[1]  *Var[4] 
  8AC:  				Set  *Var[2]  *Var[5] 
  8BC:  				Set  *Var[3]  *Var[6] 
  8CC:  				Wait     00000001 
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 0026000B )
  954:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  970:  		Wait     00000001 
  97C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseCamPreset 	( 00000002 )
  A08:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  A24:  		Wait     00000001 
  A30:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait     00000001 
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  BE4:  		Wait     00000003 
  BF0:  		Call     8027D7F0 ( )
  BFC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  C2C:  		Call     SetGoalToHome 	( .Actor:Self )
  C3C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  C50:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  C68:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CA4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CB8:  Return
  CC0:  End

PADDING: 8021EB08 to 8021EB10 (0055DEE8 to 0055DEF0)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021EB10
.Status:Normal    003A0001
.Status:Stone     003A0000
.Status:Sleep     003A0003
.Status:Poison    003A0001
.Status:Stop      003A0000
.Status:Static    003A0001
.Status:Paralyze  003A0000
.Status:Dizzy     003A0005
.Status:Fear      003A0005
.Status:End

#new:DefenseTable $DefenseTable_8021EB5C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021EB68
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021EC14
00800000 01000000 F42000FF $IdleAnimations_8021EB10 $DefenseTable_8021EB5C 00000000 00000000 08FD0000 00000000 

#new:Actor $Clubba
% stats
[Index]        1Eb 
[Level]        13`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021EB68 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021EC14 
[Script]      $Script_Init_8021EC60 
% move effectiveness
[Escape]       60`b 
[Item]         70`b 
[AirLift]      60`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         42`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:Script $Script_Init_8021EC60
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021F1CC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021ECAC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021ECBC )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021ECAC
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021ECBC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  003A0004 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  003A0006 
   C0:  		SetConst  *Var[2]  003A0007 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  003A0006 
  108:  		SetConst  *Var[2]  003A0007 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  003A0007 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  003A0004 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  003A0004 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  003A0004 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  003A0004 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  003A0004 
  254:  		ExecWait 8029BD70 
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  003A0002 
  280:  		ExecWait DoReturnHome 
  28C:  	Case  ==  .Event:ShockDeath
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  003A0004 
  2B8:  		ExecWait DoShockHit 
  2C4:  		SetConst  *Var[0]  00000001 
  2D4:  		SetConst  *Var[1]  003A0004 
  2E4:  		ExecWait DoDeath 
  2F0:  		Return
  2F8:  	CaseOR  ==  00000017
  304:  	CaseOR  ==  .Event:Immune
  310:  	CaseOR  ==  .Event:AirLiftFailed
  31C:  		SetConst  *Var[0]  00000001 
  32C:  		SetConst  *Var[1]  003A0001 
  33C:  		ExecWait DoImmune 
  348:  	EndCaseGroup
  350:  	Case  ==  .Event:Death
  35C:  		SetConst  *Var[0]  00000001 
  36C:  		SetConst  *Var[1]  003A0004 
  37C:  		ExecWait DoNormalHit 
  388:  		Wait     0000000A 
  394:  		SetConst  *Var[0]  00000001 
  3A4:  		SetConst  *Var[1]  003A0004 
  3B4:  		ExecWait DoDeath 
  3C0:  		Return
  3C8:  	Case  ==  .Event:RecoverStatus
  3D4:  		SetConst  *Var[0]  00000001 
  3E4:  		SetConst  *Var[1]  003A0001 
  3F4:  		ExecWait DoRecover 
  400:  	Case  ==  .Event:ScareAway
  40C:  		SetConst  *Var[0]  00000001 
  41C:  		SetConst  *Var[1]  003A0002 
  42C:  		SetConst  *Var[2]  003A0004 
  43C:  		ExecWait DoScareAway 
  448:  		Return
  450:  	Case  ==  .Event:BeginAirLift
  45C:  		SetConst  *Var[0]  00000001 
  46C:  		SetConst  *Var[1]  003A0004 
  47C:  		ExecWait DoAirLift 
  488:  	Case  ==  .Event:BlowAway
  494:  		SetConst  *Var[0]  00000001 
  4A4:  		SetConst  *Var[1]  003A0004 
  4B4:  		ExecWait DoBlowAway 
  4C0:  		Return
  4C8:  	Default
  4D0:  EndSwitch
  4D8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4EC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  500:  Return
  508:  End

#new:Script $Script_TakeTurn_8021F1CC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetBattlePhase ( *Var[0] )
   84:  If  *Var[0]  ==  .Phase:FirstStrike
   94:  	Call     SetGoalToTarget 	( .Actor:Self )
   A4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C0:  	Add  *Var[0]  0000001B 
   D0:  	Set  *Var[1]  00000000 
   E0:  	Sub  *Var[2]  00000006 
   F0:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  	Wait     0000000F 
  118:  Else
  120:  	Call     SetAnimation 	( .Actor:Self 00000001 003A0002 )
  138:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  14C:  	Call     SetGoalToTarget 	( .Actor:Self )
  15C:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
  170:  	If  *Var[0]  !&  00080000 
  180:  		Call     AddToGoalPos 	( .Actor:Self 0000001B 00000000 FFFFFFFA )
  19C:  	Else
  1A4:  		Call     AddToGoalPos 	( .Actor:Self 0000000A 00000000 FFFFFFFA )
  1C0:  	EndIf
  1C8:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1E0:  	Call     SetAnimation 	( .Actor:Self 00000001 003A0001 )
  1F8:  	Wait     0000000A 
  204:  EndIf
  20C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  230:  Switch  *Var[0] 
  23C:  	CaseOR  ==  00000006 
  248:  	CaseOR  ==  00000005 
  254:  		Set  *Var[A]  *Var[0] 
  264:  		Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
  278:  		Call     SetAnimation 	( .Actor:Self 00000001 003A0008 )
  290:  		Wait     0000000A 
  29C:  		If  *Var[A]  ==  00000005 
  2AC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2D0:  			Wait     00000014 
  2DC:  		EndIf
  2E4:  		Call     8027D7F0 ( )
  2F0:  		Call     UseCamPreset 	( 00000002 )
  300:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  314:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  330:  		SetConst  *Var[0]  00000001 
  340:  		SetConst  *Var[1]  003A0002 
  350:  		ExecWait DoReturnHome 
  35C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  374:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  388:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  39C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3B0:  		Return
  3B8:  	EndCaseGroup
  3C0:  EndSwitch
  3C8:  Call     SetAnimation 	( .Actor:Self 00000001 003A0009 )
  3E0:  Wait     0000000F 
  3EC:  Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
  400:  Call     SetAnimation 	( .Actor:Self 00000001 003A000A )
  418:  Wait     00000002 
  424:  Wait     00000002 
  430:  Call     SetGoalToTarget 	( .Actor:Self )
  440:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  468:  Switch  *Var[0] 
  474:  	CaseOR  ==  00000000 
  480:  	CaseOR  ==  00000002 
  48C:  		Thread
  494:  			Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.5] )
  4B0:  		EndThread
  4B8:  		Call     UseCamPreset 	( 00000002 )
  4C8:  		Wait     00000013 
  4D4:  		Call     8027D7F0 ( )
  4E0:  		SetConst  *Var[0]  00000001 
  4F0:  		SetConst  *Var[1]  003A0002 
  500:  		ExecWait DoReturnHome 
  50C:  	EndCaseGroup
  514:  EndSwitch
  51C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  530:  Call     UseIdleAnimation 	( .Actor:Self .True )
  544:  Return
  54C:  End

#new:DefenseTable $DefenseTable_8021F720
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021F72C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021F7D8
00800000 01000000 001400FF $IdleAnimations_8021F824 $DefenseTable_8021F720 00000000 00000000 00F60000 00000000 

#new:Actor $Fuzzy
% stats
[Index]         Ab 
[Level]         6`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021F72C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021F7D8 
[Script]      $Script_Init_8021F870 
% move effectiveness
[Escape]       50`b 
[Item]         95`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021F824
.Status:Normal    002B0001
.Status:Stone     002B0000
.Status:Sleep     002B000E
.Status:Poison    002B0001
.Status:Stop      002B0000
.Status:Static    002B0001
.Status:Paralyze  002B0000
.Status:Dizzy     002B000F
.Status:Fear      002B000F
.Status:End

#new:Script $Script_Init_8021F870
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021FF30 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021F8BC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021F8CC )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021F8BC
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021F8CC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		Call     GetLastElement ( *Var[0] )
   8C:  		If  *Var[0]  &  00000020 
   9C:  			SetConst  *Var[0]  00000001 
   AC:  			SetConst  *Var[1]  002B0013 
   BC:  		Else
   C4:  			SetConst  *Var[0]  00000001 
   D4:  			SetConst  *Var[1]  002B0008 
   E4:  		EndIf
   EC:  		ExecWait DoNormalHit 
   F8:  	EndCaseGroup
  100:  	Case  ==  .Event:BurnHit
  10C:  		SetConst  *Var[0]  00000001 
  11C:  		SetConst  *Var[1]  002B0010 
  12C:  		SetConst  *Var[2]  002B0012 
  13C:  		ExecWait DoBurnHit 
  148:  	Case  ==  .Event:BurnDeath
  154:  		SetConst  *Var[0]  00000001 
  164:  		SetConst  *Var[1]  002B0010 
  174:  		SetConst  *Var[2]  002B0012 
  184:  		ExecWait DoBurnHit 
  190:  		SetConst  *Var[0]  00000001 
  1A0:  		SetConst  *Var[1]  002B0012 
  1B0:  		ExecWait DoDeath 
  1BC:  		Return
  1C4:  	Case  ==  .Event:MultibounceHit
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  002B0008 
  1F0:  		ExecWait 8029B998 
  1FC:  	Case  ==  .Event:MultibounceDeath
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  002B0008 
  228:  		ExecWait 8029B998 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  002B0008 
  254:  		ExecWait DoDeath 
  260:  		Return
  268:  	Case  ==  .Event:ShockHit
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  002B0013 
  294:  		ExecWait DoShockHit 
  2A0:  		SetConst  *Var[0]  00000001 
  2B0:  		SetConst  *Var[1]  002B0013 
  2C0:  		ExecWait 8029BD70 
  2CC:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  2EC:  		SetConst  *Var[0]  00000001 
  2FC:  		SetConst  *Var[1]  002B0003 
  30C:  		ExecWait 8029C0A4 
  318:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  32C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  34C:  	Case  ==  .Event:ShockDeath
  358:  		SetConst  *Var[0]  00000001 
  368:  		SetConst  *Var[1]  002B0013 
  378:  		ExecWait DoShockHit 
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  002B0008 
  3A4:  		ExecWait DoDeath 
  3B0:  		Return
  3B8:  	CaseOR  ==  00000017
  3C4:  	CaseOR  ==  .Event:Immune
  3D0:  	CaseOR  ==  .Event:AirLiftFailed
  3DC:  		SetConst  *Var[0]  00000001 
  3EC:  		SetConst  *Var[1]  002B0001 
  3FC:  		ExecWait DoImmune 
  408:  	EndCaseGroup
  410:  	Case  ==  .Event:Death
  41C:  		Call     GetLastElement ( *Var[0] )
  42C:  		If  *Var[0]  &  00000020 
  43C:  			SetConst  *Var[0]  00000001 
  44C:  			SetConst  *Var[1]  002B0013 
  45C:  			ExecWait DoNormalHit 
  468:  			Wait     0000000A 
  474:  			SetConst  *Var[0]  00000001 
  484:  			SetConst  *Var[1]  002B0013 
  494:  			ExecWait DoDeath 
  4A0:  		Else
  4A8:  			SetConst  *Var[0]  00000001 
  4B8:  			SetConst  *Var[1]  002B0008 
  4C8:  			ExecWait DoNormalHit 
  4D4:  			Wait     0000000A 
  4E0:  			SetConst  *Var[0]  00000001 
  4F0:  			SetConst  *Var[1]  002B0008 
  500:  			ExecWait DoDeath 
  50C:  		EndIf
  514:  		Return
  51C:  	Case  ==  .Event:RecoverStatus
  528:  		SetConst  *Var[0]  00000001 
  538:  		SetConst  *Var[1]  002B0001 
  548:  		ExecWait DoRecover 
  554:  	Case  ==  .Event:ScareAway
  560:  		SetConst  *Var[0]  00000001 
  570:  		SetConst  *Var[1]  002B0003 
  580:  		SetConst  *Var[2]  002B0009 
  590:  		ExecWait DoScareAway 
  59C:  		Return
  5A4:  	Case  ==  .Event:BeginAirLift
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  002B0003 
  5D0:  		ExecWait DoAirLift 
  5DC:  	Case  ==  .Event:BlowAway
  5E8:  		SetConst  *Var[0]  00000001 
  5F8:  		SetConst  *Var[1]  002B0003 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_TakeTurn_8021FF30
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetBattlePhase ( *Var[0] )
   84:  If  *Var[0]  ==  .Phase:FirstStrike
   94:  	Call     SetGoalToTarget 	( .Actor:Self )
   A4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C0:  	Add  *Var[0]  00000032 
   D0:  	Set  *Var[1]  00000000 
   E0:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   FC:  	Goto     00000064 
  108:  EndIf
  110:  Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
  128:  Call     SetGoalToTarget 	( .Actor:Self )
  138:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  154:  Add  *Var[0]  00000032 
  164:  Set  *Var[1]  00000000 
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  188:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  19C:  ExecWait 8029C12C 
  1A8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
  1C0:  Label    00000064 
  1CC:  Call     8026BA04 ( FFFFFF81 00000000 0000000A 00000000 )
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0004 )
  200:  Call     8026BA04 ( FFFFFF81 00000000 00000009 00000000 )
  21C:  Wait     00000001 
  228:  Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
  244:  Wait     00000005 
  250:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000001 00000010 )
  274:  Switch  *Var[0] 
  280:  	CaseOR  ==  00000006 
  28C:  	CaseOR  ==  00000005 
  298:  		Set  *Var[A]  *Var[0] 
  2A8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2B8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D4:  		Sub  *Var[0]  00000005 
  2E4:  		Set  *Var[1]  00000000 
  2F4:  		Sub  *Var[2]  00000005 
  304:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  318:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0005 )
  330:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  34C:  		Call     JumpToGoal  	( .Actor:Self 0000000B 00000000 00000001 00000000 )
  36C:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  388:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0009 )
  3A0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3BC:  		Sub  *Var[0]  00000014 
  3CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  3E0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3FC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  41C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  438:  		Sub  *Var[0]  0000000F 
  448:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  45C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  478:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  498:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B4:  		Wait     00000004 
  4C0:  		Wait     00000005 
  4CC:  		If  *Var[A]  ==  00000005 
  4DC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait     00000005 
  514:  		Call     UseCamPreset 	( 00000002 )
  524:  		Call     8027D7F0 ( )
  530:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  544:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
  578:  		Call     SetGoalToHome 	( .Actor:Self )
  588:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5B8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  5CC:  		ExecWait 8029C12C 
  5D8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5F0:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  604:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  618:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  00000007 
  648:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  65C:  		If  *Var[0]  &  00002000 
  66C:  			Set  *Flag[00]  00000000 
  67C:  		Else
  684:  			Set  *Flag[00]  00000001 
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call     SetGoalToTarget 	( .Actor:Self )
  6B4:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
  6D0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  6E4:  Call     SetAnimation 	( .Actor:Self 00000001 002B0005 )
  6FC:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  71C:  If  *Flag[00]  ==  00000001 
  72C:  	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Wait     0000000A 
  770:  Call     UseIdleAnimation 	( .Actor:Player .False )
  784:  Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  79C:  Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  7B0:  Call     SetAnimation 	( .Actor:Self 00000001 002B0007 )
  7C8:  Wait     00000015 
  7D4:  Call     SetAnimation 	( .Actor:Self 00000001 002B0000 )
  7EC:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  808:  Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  81C:  Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFE 00000000 )
  838:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait     00000001 
  860:  Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  87C:  Wait     00000001 
  888:  Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  8A4:  Wait     00000001 
  8B0:  Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  8CC:  Wait     00000001 
  8D8:  Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait     00000002 
  900:  Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  91C:  Wait     0000000A 
  928:  Wait     00000002 
  934:  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000001 00000020 )
  95C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  978:  Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
  990:  Switch  *Var[0] 
  99C:  	CaseOR  ==  00000000 
  9A8:  	CaseOR  ==  00000002 
  9B4:  		Call     UseCamPreset 	( 00000002 )
  9C4:  		Call     GetLastDamage 	( .Actor:Player *Var[3] )
  9D8:  		If  *Var[3]  !=  00000000 
  9E8:  			Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  9FC:  			Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  A10:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A2C:  			Add  *Var[1]  0000000A 
  A3C:  			Call     $Function_80218970 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A58:  			Thread
  A60:  				Wait     0000000F 
  A6C:  				Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
  A80:  				Call     $Function_80218A24 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A9C:  			EndThread
  AA4:  			Add  *Var[0]  00000014 
  AB4:  			Add  *Var[1]  00000014 
  AC4:  			Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B08:  			Call     GetActorHP  	( .Actor:Self *Var[0] )
  B1C:  			Add  *Var[0]  *Var[3] 
  B2C:  			Call     SetEnemyHP  	( .Actor:Self *Var[0] )
  B40:  		EndIf
  B48:  		Thread
  B50:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.6005859] *Fixed[0.60058594] *Fixed[1.0] )
  B6C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  B88:  			Wait     00000001 
  B94:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  BB0:  			Wait     00000001 
  BBC:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  BD8:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000012C )
  BF4:  			Wait     00000001 
  C00:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000010E )
  C1C:  			Wait     00000001 
  C28:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
  C44:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000F0 )
  C60:  			Wait     00000001 
  C6C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000D2 )
  C88:  			Wait     00000001 
  C94:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  CB0:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
  CCC:  			Wait     00000002 
  CD8:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
  CF4:  			Wait     00000002 
  D00:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
  D1C:  		EndThread
  D24:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D40:  		Add  *Var[0]  00000028 
  D50:  		Set  *Var[1]  00000000 
  D60:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  D74:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D90:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  DB0:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.4003906] *Fixed[0.20019531] *Fixed[1.0] )
  DCC:  		Wait     00000001 
  DD8:  		Thread
  DE0:  			Wait     00000001 
  DEC:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
  E08:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000096 )
  E24:  			Wait     00000001 
  E30:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E4C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000078 )
  E68:  			Wait     00000001 
  E74:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000005A )
  E90:  			Wait     00000001 
  E9C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000003C )
  EB8:  			Wait     00000001 
  EC4:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  EE0:  			Wait     00000001 
  EEC:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  F08:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  F24:  		EndThread
  F2C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  F48:  		Add  *Var[0]  0000001E 
  F58:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  F74:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  F94:  		Wait     00000005 
  FA0:  		Call     8027D7F0 ( )
  FAC:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  FC8:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
  FE0:  		Call     SetGoalToHome 	( .Actor:Self )
  FF0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 100C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 1020:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
 1034:  		ExecWait 8029C12C 
 1040:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
 1058:  	EndCaseGroup
 1060:  EndSwitch
 1068:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 107C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1090:  Return
 1098:  End

#new:IdleAnimations $IdleAnimations_80220FD0
.Status:Normal    005A0002
.Status:Stone     005A0000
.Status:Sleep     005A0011
.Status:Poison    005A0002
.Status:Stop      005A0000
.Status:Static    005A0002
.Status:Paralyze  005A0000
.Status:Dizzy     005A0012
.Status:Fear      005A0012
.Status:End

#new:IdleAnimations $IdleAnimations_8022101C
.Status:Normal    005A000D
.Status:End

#new:DefenseTable $DefenseTable_80221028
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_80221034
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_802210E0
00800000 01000000 FD2300FF $IdleAnimations_80220FD0 $DefenseTable_80221028 00000000 00000000 FDF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 06000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 

#new:Actor $HammerBros
% stats
[Index]        4Bb 
[Level]        27`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80221034 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_802210E0 
[Script]      $Script_Init_802211E0 
% move effectiveness
[Escape]       30`b 
[Item]         40`b 
[AirLift]      75`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:Script $Script_Init_802211E0
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222DCC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80221244 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802213A0 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_80221244
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  Switch  *Var[0] 
   2C:  	Case  &  00001000 
   38:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   54:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   70:  	Default
   78:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   90:  		Switch  *Var[0] 
   9C:  			Case  ==  00000000 
   A8:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000023 )
   C4:  				Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
   E0:  			Case  ==  00000001 
   EC:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  				Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		EndSwitch
  12C:  EndSwitch
  134:  Wait     00000001 
  140:  Goto     00000000 
  14C:  Return
  154:  End

#new:Script $Script_HandleEvent_802213A0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  005A000E 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  005A000F 
   C0:  		SetConst  *Var[2]  005A0010 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  005A000F 
  108:  		SetConst  *Var[2]  005A0010 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  005A0010 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  005A000E 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  005A000E 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  005A000E 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  		SetConst  *Var[0]  00000001 
  224:  		SetConst  *Var[1]  005A0015 
  234:  		ExecWait DoImmune 
  240:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  254:  		If  *Var[0]  !&  0035D000 
  264:  			Call     SetAnimation 	( .Actor:Self 00000001 005A0017 )
  27C:  			Wait     0000000A 
  288:  		EndIf
  290:  	EndCaseGroup
  298:  	Case  ==  .Event:Death
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  005A000E 
  2C4:  		ExecWait DoNormalHit 
  2D0:  		Wait     0000000A 
  2DC:  		SetConst  *Var[0]  00000001 
  2EC:  		SetConst  *Var[1]  005A000E 
  2FC:  		ExecWait DoDeath 
  308:  		Return
  310:  	Case  ==  .Event:RecoverStatus
  31C:  		SetConst  *Var[0]  00000001 
  32C:  		SetConst  *Var[1]  005A0002 
  33C:  		ExecWait DoRecover 
  348:  	Case  ==  .Event:ScareAway
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  005A0007 
  374:  		SetConst  *Var[2]  005A000E 
  384:  		ExecWait DoScareAway 
  390:  		Return
  398:  	Case  ==  .Event:BeginAirLift
  3A4:  		SetConst  *Var[0]  00000001 
  3B4:  		SetConst  *Var[1]  005A0007 
  3C4:  		ExecWait DoAirLift 
  3D0:  	Case  ==  .Event:BlowAway
  3DC:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  3F0:  		If  *Var[0]  !&  0035D000 
  400:  			If  *Var[0]  &  00080000 
  410:  				Call     8026BA04 ( FFFFFF81 FFFFFFFE 00000001 00000000 )
  42C:  			Else
  434:  				Call     8026BA04 ( FFFFFF81 FFFFFFFB 00000003 00000000 )
  450:  			EndIf
  458:  		EndIf
  460:  		SetConst  *Var[0]  00000001 
  470:  		SetConst  *Var[1]  005A000E 
  480:  		ExecWait DoBlowAway 
  48C:  		Return
  494:  	Case  ==  .Event:AirLiftFailed
  4A0:  		SetConst  *Var[0]  00000001 
  4B0:  		SetConst  *Var[1]  005A0002 
  4C0:  		ExecWait DoImmune 
  4CC:  	Default
  4D4:  EndSwitch
  4DC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  504:  Return
  50C:  End

#new:Script $Script_802218B4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  EndIf
   84:  Call     GetBattlePhase ( *Var[0] )
   94:  If  *Var[0]  ==  .Phase:FirstStrike
   A4:  	ChildThread
   AC:  		Set  *Var[0]  00000000 
   BC:  		Label    00000000 
   C8:  		Add  *Var[0]  00000014 
   D8:  		Mod  *Var[0]  00000168 
   E8:  		Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
  108:  		Wait     00000001 
  114:  		Goto     00000000 
  120:  	EndChildThread
  128:  	Call     SetSpritePos 	( .Actor:Self 00000002 00000000 00000032 00000000 )
  148:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  164:  	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
  17C:  	Goto     00000064 
  188:  EndIf
  190:  ChildThread
  198:  	Set  *Var[0]  00000000 
  1A8:  	Label    00000000 
  1B4:  	Add  *Var[0]  00000014 
  1C4:  	Mod  *Var[0]  00000168 
  1D4:  	Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
  1F4:  	Wait     00000001 
  200:  	Goto     00000000 
  20C:  EndChildThread
  214:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  230:  Sub  *Var[0]  00000017 
  240:  Add  *Var[1]  00000017 
  250:  Sub  *Var[2]  00000002 
  260:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  280:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
  298:  Wait     00000008 
  2A4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  2C0:  Label    00000064 
  2CC:  Thread
  2D4:  	Wait     0000000F 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  2F8:  EndThread
  300:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  314:  If  *Var[0]  &  00080000 
  324:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  344:  Else
  34C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  36C:  EndIf
  374:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  398:  Switch  *Var[0] 
  3A4:  	CaseOR  ==  00000006 
  3B0:  	CaseOR  ==  00000005 
  3BC:  		Set  *Var[A]  *Var[0] 
  3CC:  		Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  3EC:  		Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
  404:  		Call     SetGoalToTarget 	( .Actor:Self )
  414:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  430:  		Sub  *Var[0]  00000014 
  440:  		Set  *Var[1]  0000000A 
  450:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
  468:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  490:  		If  *Var[A]  ==  00000005 
  4A0:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  4C4:  		EndIf
  4CC:  		Sub  *Var[0]  00000028 
  4DC:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  504:  		Sub  *Var[0]  0000001E 
  514:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
  53C:  		Sub  *Var[0]  00000014 
  54C:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
  574:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  590:  		Wait     0000000F 
  59C:  		Call     8027D7F0 ( )
  5A8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5C4:  		Wait     00000014 
  5D0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5E8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  648:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
  660:  Call     SetGoalToTarget 	( .Actor:Self )
  670:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  68C:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
  6A4:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000005 00000020 )
  700:  Switch  *Var[0] 
  70C:  	CaseOR  ==  00000000 
  718:  	CaseOR  ==  00000002 
  724:  		Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  744:  		Sub  *Var[0]  00000032 
  754:  		Set  *Var[1]  0000000A 
  764:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  78C:  		Sub  *Var[0]  0000001E 
  79C:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
  7C4:  		Sub  *Var[0]  00000014 
  7D4:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
  7FC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  818:  		Wait     00000014 
  824:  		Call     8027D7F0 ( )
  830:  	EndCaseGroup
  838:  EndSwitch
  840:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  854:  Call     UseIdleAnimation 	( .Actor:Self .True )
  868:  Return
  870:  End

#new:Script $Script_8022212C
    0:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
   48:  Wait     00000004 
   54:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
   70:  Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
   90:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   D4:  Set  *Var[2]  0000000A 
   E4:  Call     RandInt     	( 0000003C *Var[4] )
   F8:  Set  *Var[5]  0000001E 
  108:  Sub  *Var[5]  *Var[4] 
  118:  Add  *Var[1]  *Var[5] 
  128:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
  140:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
  168:  Sub  *Var[1]  00000032 
  178:  Set  *Var[2]  0000000A 
  188:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
  1B0:  Sub  *Var[1]  0000001E 
  1C0:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
  1E8:  Sub  *Var[1]  00000014 
  1F8:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
  220:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
  23C:  Return
  244:  End

#new:Script $Script_80222378
    0:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
   48:  Wait     00000004 
   54:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
   70:  Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
   90:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   D4:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
   EC:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
  114:  Sub  *Var[1]  00000032 
  124:  Set  *Var[2]  0000000A 
  134:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
  15C:  Sub  *Var[1]  0000001E 
  16C:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
  194:  Sub  *Var[1]  00000014 
  1A4:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
  1CC:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
  1E8:  Return
  1F0:  End

#new:Script $Script_80222570
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Thread
   44:  	Set  *Var[0]  00000000 
   54:  	Loop     00000064 
   60:  		Add  *Var[0]  00000014 
   70:  		Mod  *Var[0]  00000168 
   80:  		Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
   A0:  		Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
   C0:  		Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 *Var[0] )
   E0:  		Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 *Var[0] )
  100:  		Call     SetSpriteRotation 	( .Actor:Self 00000006 00000000 00000000 *Var[0] )
  120:  		Wait     00000001 
  12C:  	EndLoop
  134:  EndThread
  13C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  158:  Sub  *Var[0]  00000017 
  168:  Add  *Var[1]  00000017 
  178:  Sub  *Var[2]  00000002 
  188:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  1A8:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  1C8:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  1E8:  Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  208:  Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  228:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  23C:  If  *Var[0]  &  00080000 
  24C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  26C:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  28C:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2AC:  	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2CC:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2EC:  Else
  2F4:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  314:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  334:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  374:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  394:  EndIf
  39C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  3C0:  Switch  *Var[0] 
  3CC:  	CaseOR  ==  00000006 
  3D8:  	CaseOR  ==  00000005 
  3E4:  		Set  *Var[A]  *Var[0] 
  3F4:  		Set  *Var[0]  00000002 
  404:  		Exec     $Script_8022212C 
  410:  		Wait     00000005 
  41C:  		Set  *Var[0]  00000003 
  42C:  		Exec     $Script_8022212C 
  438:  		Wait     00000005 
  444:  		Set  *Var[0]  00000004 
  454:  		Exec     $Script_8022212C 
  460:  		Wait     00000005 
  46C:  		Set  *Var[0]  00000005 
  47C:  		Exec     $Script_8022212C 
  488:  		Wait     00000005 
  494:  		Set  *Var[0]  00000006 
  4A4:  		Exec     $Script_8022212C 
  4B0:  		Wait     00000005 
  4BC:  		Wait     00000014 
  4C8:  		Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  4E0:  		If  *Var[A]  ==  00000005 
  4F0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  514:  		EndIf
  51C:  		Wait     0000000F 
  528:  		Call     8027D7F0 ( )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Wait     00000014 
  55C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  574:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Thread
  5BC:  	Set  *Var[0]  00000002 
  5CC:  	Exec     $Script_80222378 
  5D8:  	Wait     00000005 
  5E4:  	Set  *Var[0]  00000003 
  5F4:  	Exec     $Script_80222378 
  600:  	Wait     00000005 
  60C:  	Set  *Var[0]  00000004 
  61C:  	Exec     $Script_80222378 
  628:  	Wait     00000005 
  634:  	Set  *Var[0]  00000005 
  644:  	Exec     $Script_80222378 
  650:  	Wait     00000005 
  65C:  	Set  *Var[0]  00000006 
  66C:  	Exec     $Script_80222378 
  678:  EndThread
  680:  Wait     00000015 
  68C:  Wait     00000002 
  698:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000010 )
  6C0:  Wait     00000005 
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  700:  Wait     00000005 
  70C:  Wait     00000002 
  718:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  740:  Wait     00000005 
  74C:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  764:  Wait     00000002 
  770:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  798:  Wait     00000005 
  7A4:  Wait     00000002 
  7B0:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000002 00000020 )
  7D8:  Switch  *Var[0] 
  7E4:  	CaseOR  ==  00000000 
  7F0:  	CaseOR  ==  00000002 
  7FC:  		Wait     00000014 
  808:  		Call     8027D7F0 ( )
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  838:  Call     UseIdleAnimation 	( .Actor:Self .True )
  84C:  Return
  854:  End

#new:Script $Script_TakeTurn_80222DCC
    0:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   14:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
   28:  MulF  *Var[0]  *Fixed[100.0] 
   38:  DivF  *Var[0]  *Var[1] 
   48:  If  *Var[0]  >  00000022 
   58:  	ExecWait $Script_802218B4 
   64:  Else
   6C:  	ExecWait $Script_80222570 
   78:  EndIf
   80:  Return
   88:  End

PADDING: 80222E5C to 80222E60 (0056223C to 00562240)
00000000 

#new:DefenseTable $DefenseTable_80222E60
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80222E6C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80222F18
00020000 01000000 001400FF $IdleAnimations_80223018 $DefenseTable_80222E60 00200010 00000000 00000000 00000000 
00800001 02000000 004800FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00020001 03000000 003600FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00020001 04000000 002400FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00020001 05000000 001000FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00120001 06000000 000000FF $IdleAnimations_80223108 $DefenseTable_80222E60 00200010 00000000 00000000 00000000 

#new:Actor $Pokey
% stats
[Index]        14b 
[Level]         9`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80222E6C 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_80222F18 
[Script]      $Script_Init_80223114 
% move effectiveness
[Escape]       70`b 
[Item]         70`b 
[AirLift]      90`b 
[Hurricane]    85`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  80`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  75`b % dx dy
[StatusIcon]   10`b  65`b % dx dy

#new:IdleAnimations $IdleAnimations_80223018
.Status:Normal    00310004
.Status:Stone     00310000
.Status:Sleep     00310025
.Status:Stop      00310000
.Status:Paralyze  00310000
.Status:Dizzy     00310021
.Status:Fear      00310021
.Status:End

#new:IdleAnimations $IdleAnimations_80223054
.Status:Normal    00310005
.Status:Stone     00310001
.Status:Sleep     00310026
.Status:Stop      00310001
.Status:Paralyze  00310001
.Status:Dizzy     00310022
.Status:Fear      00310022
.Status:End

#new:IdleAnimations $IdleAnimations_80223090
.Status:Normal    00310006
.Status:Stone     00310002
.Status:Sleep     00310027
.Status:Stop      00310002
.Status:Paralyze  00310002
.Status:Dizzy     00310023
.Status:Fear      00310023
.Status:End

#new:IdleAnimations $IdleAnimations_802230CC
.Status:Normal    00310007
.Status:Stone     00310003
.Status:Sleep     00310028
.Status:Stop      00310003
.Status:Paralyze  00310003
.Status:Dizzy     00310024
.Status:Fear      00310024
.Status:End

#new:IdleAnimations $IdleAnimations_80223108
.Status:Normal    00310016
.Status:End

#new:Script $Script_Init_80223114
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224BF8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80223290 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802232A0 )
   3C:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   54:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   6C:  Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   84:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   9C:  Call     SetActorVar 	( .Actor:Self 00000001 00310004 )
   B4:  Call     SetActorVar 	( .Actor:Self 00000002 00310008 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000003 0031000C )
   E4:  Call     SetActorVar 	( .Actor:Self 00000004 00310010 )
   FC:  Call     SetActorVar 	( .Actor:Self 00000005 00310011 )
  114:  Call     SetActorVar 	( .Actor:Self 00000006 00310018 )
  12C:  Call     SetActorVar 	( .Actor:Self 00000007 00310019 )
  144:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  158:  Call     UseIdleAnimation 	( .Actor:Self .True )
  16C:  Return
  174:  End

#new:Script $Script_Idle_80223290
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_802232A0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		SetConst  *Var[0]  00000001 
   64:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   7C:  		ExecWait DoNormalHit 
   88:  	Case  ==  .Event:Hit
   94:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
   A8:  		If  *Var[0]  &  00080000 
   B8:  			SetConst  *Var[0]  00000001 
   C8:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   E0:  			ExecWait DoNormalHit 
   EC:  		Else
   F4:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  10C:  			If  *Var[A]  ==  00000003 
  11C:  				SetConst  *Var[0]  00000001 
  12C:  				Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  144:  				ExecWait DoNormalHit 
  150:  			Else
  158:  				Call     80269E80 ( *Var[0] )
  168:  				Switch  *Var[0] 
  174:  					CaseOR  ==  00000006 
  180:  					CaseOR  ==  00000007 
  18C:  					CaseOR  ==  00000009 
  198:  						ExecWait $Script_8022788C 
  1A4:  					EndCaseGroup
  1AC:  					Default
  1B4:  						SetConst  *Var[0]  00000001 
  1C4:  						Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  1DC:  						ExecWait DoNormalHit 
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  	Case  ==  .Event:Death
  20C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  220:  		If  *Var[0]  &  00080000 
  230:  			SetConst  *Var[0]  00000001 
  240:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  258:  			ExecWait DoNormalHit 
  264:  			Wait     0000000A 
  270:  		Else
  278:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  290:  			If  *Var[A]  ==  00000003 
  2A0:  				SetConst  *Var[0]  00000001 
  2B0:  				Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  2C8:  				ExecWait DoNormalHit 
  2D4:  				Wait     0000000A 
  2E0:  			Else
  2E8:  				Call     80269E80 ( *Var[0] )
  2F8:  				Switch  *Var[0] 
  304:  					CaseOR  ==  00000006 
  310:  					CaseOR  ==  00000007 
  31C:  					CaseOR  ==  00000009 
  328:  						ExecWait $Script_8022788C 
  334:  					EndCaseGroup
  33C:  					Default
  344:  						SetConst  *Var[0]  00000001 
  354:  						Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  36C:  						ExecWait DoNormalHit 
  378:  						Wait     0000000A 
  384:  				EndSwitch
  38C:  			EndIf
  394:  		EndIf
  39C:  		SetConst  *Var[0]  00000001 
  3AC:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  3C4:  		ExecWait DoDeath 
  3D0:  		Return
  3D8:  	Case  ==  .Event:BurnHit
  3E4:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  3FC:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  414:  		SetConst  *Var[0]  00000001 
  424:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  438:  		If  *Var[3]  &  00080000 
  448:  			ExecWait DoBurnHit 
  454:  		Else
  45C:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  474:  			If  *Var[A]  ==  00000003 
  484:  				ExecWait DoBurnHit 
  490:  			Else
  498:  				Call     80269E80 ( *Var[A] )
  4A8:  				Switch  *Var[A] 
  4B4:  					CaseOR  ==  00000006 
  4C0:  					CaseOR  ==  00000007 
  4CC:  					CaseOR  ==  00000009 
  4D8:  						ExecWait $Script_8022788C 
  4E4:  					EndCaseGroup
  4EC:  					Default
  4F4:  						ExecWait DoBurnHit 
  500:  				EndSwitch
  508:  			EndIf
  510:  		EndIf
  518:  	CaseOR  ==  .Event:BurnDeath
  524:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  53C:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  554:  		SetConst  *Var[0]  00000001 
  564:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  578:  		If  *Var[3]  &  00080000 
  588:  			ExecWait DoBurnHit 
  594:  		Else
  59C:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  5B4:  			If  *Var[A]  ==  00000003 
  5C4:  				ExecWait DoBurnHit 
  5D0:  			Else
  5D8:  				Call     80269E80 ( *Var[A] )
  5E8:  				Switch  *Var[A] 
  5F4:  					CaseOR  ==  00000006 
  600:  					CaseOR  ==  00000007 
  60C:  					CaseOR  ==  00000009 
  618:  						ExecWait $Script_8022788C 
  624:  					EndCaseGroup
  62C:  					Default
  634:  						ExecWait DoBurnHit 
  640:  				EndSwitch
  648:  			EndIf
  650:  		EndIf
  658:  		SetConst  *Var[0]  00000001 
  668:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
  680:  		ExecWait DoDeath 
  68C:  		Return
  694:  	Case  ==  .Event:MultibounceHit
  6A0:  		ExecWait $Script_80226B30 
  6AC:  	Case  ==  .Event:MultibounceDeath
  6B8:  		ExecWait $Script_80226B30 
  6C4:  		SetConst  *Var[0]  00000001 
  6D4:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  6EC:  		ExecWait DoDeath 
  6F8:  		Return
  700:  	Case  ==  00000011
  70C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  720:  		If  *Var[3]  &  00080000 
  730:  			SetConst  *Var[0]  00000001 
  740:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  758:  			ExecWait DoNormalHit 
  764:  		Else
  76C:  			ExecWait $Script_8022788C 
  778:  		EndIf
  780:  	Case  ==  00000025
  78C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  7A0:  		If  *Var[3]  &  00080000 
  7B0:  			SetConst  *Var[0]  00000001 
  7C0:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  7D8:  			ExecWait DoNormalHit 
  7E4:  		Else
  7EC:  			ExecWait $Script_8022788C 
  7F8:  		EndIf
  800:  		SetConst  *Var[0]  00000001 
  810:  		SetConst  *Var[1]  FFFFFFFF 
  820:  		ExecWait DoDeath 
  82C:  		Return
  834:  	Case  ==  .Event:ShockHit
  840:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  85C:  		SetConst  *Var[0]  00000001 
  86C:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  884:  		ExecWait DoShockHit 
  890:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  8A8:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  8C0:  		Call     SetGoalToHome 	( .Actor:Self )
  8D0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8EC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  900:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  914:  		ExecWait 8029C12C 
  920:  	Case  ==  .Event:ShockDeath
  92C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  948:  		SetConst  *Var[0]  00000001 
  958:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  970:  		ExecWait DoShockHit 
  97C:  		SetConst  *Var[0]  00000001 
  98C:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  9A4:  		ExecWait DoDeath 
  9B0:  		Return
  9B8:  	CaseOR  ==  00000017
  9C4:  	CaseOR  ==  .Event:Immune
  9D0:  		SetConst  *Var[0]  00000001 
  9E0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  9F8:  		ExecWait DoImmune 
  A04:  	EndCaseGroup
  A0C:  	Case  ==  .Event:SpikeTaunt
  A18:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  A30:  		Switch  *Var[0] 
  A3C:  			Case  ==  00000000 
  A48:  				Set  *Var[0]  00000000 
  A58:  				Set  *Var[1]  0000004D 
  A68:  				SetConst  *Var[2]  00310021 
  A78:  			Case  ==  00000001 
  A84:  				Set  *Var[0]  00000000 
  A94:  				Set  *Var[1]  0000003B 
  AA4:  				SetConst  *Var[2]  00310022 
  AB4:  			Case  ==  00000002 
  AC0:  				Set  *Var[0]  00000000 
  AD0:  				Set  *Var[1]  00000029 
  AE0:  				SetConst  *Var[2]  00310023 
  AF0:  			Case  ==  00000003 
  AFC:  				Set  *Var[0]  00000000 
  B0C:  				Set  *Var[1]  00000017 
  B1C:  				SetConst  *Var[2]  00310024 
  B2C:  		EndSwitch
  B34:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  B48:  		If  *Var[3]  !&  00001000 
  B58:  			Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
  B70:  		EndIf
  B78:  		Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  B94:  		Call     GetStatusFlags ( .Actor:Self *Var[6] )
  BA8:  		If  *Var[6]  &  00080000 
  BB8:  			MulF  *Var[0]  *Fixed[0.40039062] 
  BC8:  			MulF  *Var[1]  *Fixed[0.40039062] 
  BD8:  		EndIf
  BE0:  		AddF  *Var[3]  *Var[0] 
  BF0:  		AddF  *Var[4]  *Var[1] 
  C00:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[3] *Var[4] *Var[5] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C44:  		Wait     0000001E 
  C50:  	Case  ==  .Event:RecoverStatus
  C5C:  		SetConst  *Var[0]  00000001 
  C6C:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  C84:  		ExecWait DoRecover 
  C90:  	Case  ==  .Event:ScareAway
  C9C:  		ExecWait $Script_80227D64 
  CA8:  		Return
  CB0:  	Default
  CB8:  EndSwitch
  CC0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CD4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CE8:  Return
  CF0:  End

#new:Script $Script_80223F98
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetGoalToTarget 	( .Actor:Self )
   84:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   9C:  Switch  *Var[0] 
   A8:  	Case  ==  00000000 
   B4:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
   C8:  		If  *Var[0]  !&  00080000 
   D8:  			Call     AddToGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
   F4:  		Else
   FC:  			Call     AddToGoalPos 	( .Actor:Self 00000018 00000000 00000000 )
  118:  		EndIf
  120:  		Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
  138:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  14C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  164:  		Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  17C:  	Case  ==  00000001 
  188:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  19C:  		If  *Var[0]  !&  00080000 
  1AC:  			Call     AddToGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
  1C8:  		Else
  1D0:  			Call     AddToGoalPos 	( .Actor:Self 00000010 00000000 00000000 )
  1EC:  		EndIf
  1F4:  		Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
  20C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  220:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  238:  		Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
  250:  	Case  ==  00000002 
  25C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  270:  		If  *Var[0]  !&  00080000 
  280:  			Call     AddToGoalPos 	( .Actor:Self 00000014 00000000 00000000 )
  29C:  		Else
  2A4:  			Call     AddToGoalPos 	( .Actor:Self 00000008 00000000 00000000 )
  2C0:  		EndIf
  2C8:  		Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
  2E0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  2F4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  30C:  		Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
  324:  EndSwitch
  32C:  Call     PlaySoundAtActor 	( .Actor:Self 00000342 )
  340:  Call     MakeLerp    	( 00000000 FFFFFFD8 00000014 0000000A )
  35C:  Label    00000000 
  368:  Call     UpdateLerp  	( )
  374:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  390:  Wait     00000001 
  39C:  If  *Var[1]  ==  00000001 
  3AC:  	Goto     00000000 
  3B8:  EndIf
  3C0:  ChildThread
  3C8:  	Wait     00000003 
  3D4:  	Call     PlaySoundAtActor 	( .Actor:Self 000002ED )
  3E8:  EndChildThread
  3F0:  Call     MakeLerp    	( FFFFFFD8 0000005A 00000005 00000001 )
  40C:  Label    00000003 
  418:  Call     UpdateLerp  	( )
  424:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  440:  Wait     00000001 
  44C:  If  *Var[1]  ==  00000001 
  45C:  	Goto     00000003 
  468:  EndIf
  470:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000000 00000020 )
  494:  Switch  *Var[0] 
  4A0:  	CaseOR  ==  00000006 
  4AC:  	CaseOR  ==  00000005 
  4B8:  		Set  *Var[A]  *Var[0] 
  4C8:  		Call     MakeLerp    	( 0000005A 00000000 00000005 00000000 )
  4E4:  		Label    00000004 
  4F0:  		Call     UpdateLerp  	( )
  4FC:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  518:  		Wait     00000001 
  524:  		If  *Var[1]  ==  00000001 
  534:  			Goto     00000004 
  540:  		EndIf
  548:  		If  *Var[A]  ==  00000005 
  558:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call     8027D7F0 ( )
  590:  		Call     UseCamPreset 	( 00000002 )
  5A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5BC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  5D4:  		Switch  *Var[0] 
  5E0:  			Case  ==  00000000 
  5EC:  				Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
  604:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  618:  				Call     SetGoalToHome 	( .Actor:Self )
  628:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  640:  				Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  658:  			Case  ==  00000001 
  664:  				Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
  67C:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  690:  				Call     SetGoalToHome 	( .Actor:Self )
  6A0:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  6B8:  				Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
  6D0:  			Case  ==  00000002 
  6DC:  				Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
  6F4:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  708:  				Call     SetGoalToHome 	( .Actor:Self )
  718:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  730:  				Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
  748:  		EndSwitch
  750:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  768:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  77C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  790:  		Return
  798:  EndSwitch
  7A0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  7B8:  Switch  *Var[0] 
  7C4:  	Case  ==  00000000 
  7D0:  		Set  *Var[1]  00000002 
  7E0:  	Case  ==  00000001 
  7EC:  		Set  *Var[1]  00000002 
  7FC:  	Default
  804:  		Set  *Var[1]  00000002 
  814:  EndSwitch
  81C:  Call     SetGoalToTarget 	( .Actor:Self )
  82C:  Wait     00000002 
  838:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 *Var[1] 00000020 )
  860:  Switch  *Var[0] 
  86C:  	CaseOR  ==  00000000 
  878:  	CaseOR  ==  00000002 
  884:  		Call     UseCamPreset 	( 00000002 )
  894:  		Call     MakeLerp    	( 0000005A 00000000 0000000A 00000000 )
  8B0:  		Label    00000005 
  8BC:  		Call     UpdateLerp  	( )
  8C8:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  8E4:  		Wait     00000001 
  8F0:  		If  *Var[1]  ==  00000001 
  900:  			Goto     00000005 
  90C:  		EndIf
  914:  		Call     8027D7F0 ( )
  920:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  938:  		Switch  *Var[0] 
  944:  			Case  ==  00000000 
  950:  				Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
  968:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  97C:  				Call     SetGoalToHome 	( .Actor:Self )
  98C:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  9A4:  				Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  9BC:  			Case  ==  00000001 
  9C8:  				Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
  9E0:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  9F4:  				Call     SetGoalToHome 	( .Actor:Self )
  A04:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A1C:  				Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
  A34:  			Case  ==  00000002 
  A40:  				Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
  A58:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  A6C:  				Call     SetGoalToHome 	( .Actor:Self )
  A7C:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A94:  				Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
  AAC:  		EndSwitch
  AB4:  	EndCaseGroup
  ABC:  EndSwitch
  AC4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  AD8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AEC:  Return
  AF4:  End

#new:Script $Script_80224A94
    0:  Set  *Var[9]  00000000 
   10:  Call     CreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	Case  ==  00000014 
   78:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   8C:  		If  *Var[3]  !&  003DD000 
   9C:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[3] )
   B4:  			If  *Var[3]  ==  00000000 
   C4:  				Call     GetActorVar 	( *Var[0] 0000000A *Var[3] )
   DC:  				If  *Var[3]  !=  00000002 
   EC:  					Add  *Var[9]  00000001 
   FC:  				EndIf
  104:  			EndIf
  10C:  		EndIf
  114:  EndSwitch
  11C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  130:  If  *Var[0]  !=  FFFFFFFF 
  140:  	Goto     00000000 
  14C:  EndIf
  154:  Return
  15C:  End

#new:Script $Script_TakeTurn_80224BF8
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   18:  If  *Var[A]  ==  00000003 
   28:  	ExecWait $Script_80226170 
   34:  	Return
   3C:  EndIf
   44:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   5C:  If  *Var[0]  ==  00000000 
   6C:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
   84:  	If  *Var[0]  ==  00000002 
   94:  		Goto     0000007B 
   A0:  	EndIf
   A8:  	ExecWait $Script_80225724 
   B4:  	If  *Var[E]  ==  FFFFFFFF 
   C4:  		Goto     0000007B 
   D0:  	EndIf
   D8:  	ExecWait $Script_80224A94 
   E4:  	Switch  *Var[9] 
   F0:  		Case  ==  00000001 
   FC:  			Call     RandInt     	( 000003E8 *Var[0] )
  110:  			If  *Var[0]  <  00000190 
  120:  				ExecWait $Script_80225A0C 
  12C:  				Return
  134:  			EndIf
  13C:  		Case  ==  00000002 
  148:  			Call     RandInt     	( 000003E8 *Var[0] )
  15C:  			If  *Var[0]  <  000000C8 
  16C:  				ExecWait $Script_80225A0C 
  178:  				Return
  180:  			EndIf
  188:  		Case  ==  00000003 
  194:  			Call     RandInt     	( 000003E8 *Var[0] )
  1A8:  			If  *Var[0]  <  00000064 
  1B8:  				ExecWait $Script_80225A0C 
  1C4:  				Return
  1CC:  			EndIf
  1D4:  	EndSwitch
  1DC:  EndIf
  1E4:  Label    0000007B 
  1F0:  Call     RandInt     	( 000003E8 *Var[0] )
  204:  If  *Var[0]  <  000001F4 
  214:  	ExecWait $Script_80223F98 
  220:  	Return
  228:  EndIf
  230:  Call     UseIdleAnimation 	( .Actor:Self .False )
  244:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  258:  Call     GetBattlePhase ( *Var[0] )
  268:  If  *Var[0]  ==  .Phase:FirstStrike
  278:  	Call     UseCamPreset 	( 00000002 )
  288:  	Call     MoveCamOver 	( 00000001 )
  298:  EndIf
  2A0:  Call     8026FA00 ( FFFFFF81 00000006 00000002 00000000 00000000 )
  2C0:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  2D4:  If  *Var[0]  !&  00080000 
  2E4:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  304:  Else
  30C:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
  32C:  EndIf
  334:  ChildThread
  33C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
  358:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  394:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[2.2001953] )
  3AC:  	Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
  3C4:  	Call     GetStatusFlags ( .Actor:Self *Var[5] )
  3D8:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  3F0:  	Switch  *Var[A] 
  3FC:  		Case  ==  00000000 
  408:  			If  *Var[5]  !&  00080000 
  418:  				Add  *Var[1]  00000026 
  428:  			Else
  430:  				Add  *Var[1]  0000000F 
  440:  				Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
  458:  			EndIf
  460:  			Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
  488:  		Case  ==  00000001 
  494:  			If  *Var[5]  !&  00080000 
  4A4:  				Add  *Var[1]  00000014 
  4B4:  			Else
  4BC:  				Add  *Var[1]  00000008 
  4CC:  				Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
  4E4:  			EndIf
  4EC:  			Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
  514:  		Case  ==  00000002 
  520:  			If  *Var[5]  !&  00080000 
  530:  				Add  *Var[1]  00000008 
  540:  			Else
  548:  				Add  *Var[1]  00000003 
  558:  				Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
  570:  			EndIf
  578:  			Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
  5A0:  		Case  ==  00000003 
  5AC:  	EndSwitch
  5B4:  EndChildThread
  5BC:  Call     PlaySoundAtActor 	( .Actor:Self 00000342 )
  5D0:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  5E8:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  600:  Wait     0000000C 
  60C:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
  624:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  63C:  Wait     00000001 
  648:  Call     PlaySoundAtActor 	( .Actor:Self 000002CE )
  65C:  Wait     00000003 
  668:  ExecWait $Script_80226C5C 
  674:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  688:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000020 )
  6AC:  Switch  *Var[0] 
  6B8:  	CaseOR  ==  00000006 
  6C4:  	CaseOR  ==  00000005 
  6D0:  		If  *Var[0]  ==  00000005 
  6E0:  			ChildThread
  6E8:  				Wait     00000005 
  6F4:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  718:  			EndChildThread
  720:  		EndIf
  728:  		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  73C:  		Call     SetGoalToTarget 	( .Actor:Self )
  74C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  768:  		Sub  *Var[0]  00000050 
  778:  		Sub  *Var[1]  00000005 
  788:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
  7A0:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  7B8:  		Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
  7D0:  		Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
  7F8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  814:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  82C:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  844:  		Return
  84C:  	EndCaseGroup
  854:  EndSwitch
  85C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  870:  Call     SetGoalToTarget 	( .Actor:Self )
  880:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  89C:  Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
  8B4:  Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  8CC:  Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
  8E4:  Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
  90C:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80020300 00000002 00000020 )
  934:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  94C:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  964:  Switch  *Var[0] 
  970:  	CaseOR  ==  00000000 
  97C:  	CaseOR  ==  00000002 
  988:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  9A4:  		Sub  *Var[0]  00000037 
  9B4:  		Set  *Var[1]  00000000 
  9C4:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
  9DC:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  9F4:  		Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
  A20:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[4.0] )
  A38:  		Sub  *Var[0]  00000018 
  A48:  		Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
  A74:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
  A8C:  		Sub  *Var[0]  00000014 
  A9C:  		Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
  AC8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  AE4:  	EndCaseGroup
  AEC:  EndSwitch
  AF4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B08:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B1C:  Return
  B24:  End

#new:Script $Script_80225724
    0:  Set  *Var[E]  FFFFFFFF 
   10:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   24:  If  *Var[0]  &  00080000 
   34:  	Return
   3C:  EndIf
   44:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   5C:  If  *Var[0]  !=  00000000 
   6C:  	Return
   74:  EndIf
   7C:  Set  *Flag[01]  00000000 
   8C:  Set  *Flag[02]  00000000 
   9C:  Set  *Flag[03]  00000000 
   AC:  Set  *Flag[04]  00000000 
   BC:  Call     CreateTargetList 	( 00008002 )
   CC:  Call     InitTargetIterator 	( )
   D8:  Label    00000000 
   E4:  Call     GetOwnerTarget ( *Var[0] *Var[5] )
   F8:  Call     GetIndexFromHome 	( *Var[0] *Var[5] )
  10C:  Mod  *Var[5]  00000004 
  11C:  Switch  *Var[5] 
  128:  	Case  ==  00000000 
  134:  		Set  *Flag[01]  00000001 
  144:  	Case  ==  00000001 
  150:  		Set  *Flag[02]  00000001 
  160:  	Case  ==  00000002 
  16C:  		Set  *Flag[03]  00000001 
  17C:  	Case  ==  00000003 
  188:  		Set  *Flag[04]  00000001 
  198:  EndSwitch
  1A0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1B4:  If  *Var[0]  !=  FFFFFFFF 
  1C4:  	Goto     00000000 
  1D0:  EndIf
  1D8:  Call     GetIndexFromHome 	( .Actor:Self *Var[1] )
  1EC:  Switch  *Var[1] 
  1F8:  	Case  ==  00000000 
  204:  		Return
  20C:  	Case  ==  00000001 
  218:  		If  *Flag[01]  ==  00000000 
  228:  			Set  *Var[E]  00000000 
  238:  		EndIf
  240:  	Case  ==  00000002 
  24C:  		If  *Flag[02]  ==  00000000 
  25C:  			Set  *Var[E]  00000001 
  26C:  		EndIf
  274:  	Case  ==  00000003 
  280:  		If  *Flag[03]  ==  00000000 
  290:  			Set  *Var[E]  00000002 
  2A0:  		EndIf
  2A8:  EndSwitch
  2B0:  Return
  2B8:  End

#new:Vector3D $Vector3D_802259E4
400` -100` 0`

#new:SpecialFormation $SpecialFormation_802259F0
$Pokey $Vector3D_802259E4 00000064 00000000 00000000 00000000 00000000 

#new:Script $Script_80225A0C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000000E )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 0000001E )
   6C:  Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
   84:  Call     MakeLerp    	( 00000000 FFFFFFEC 00000014 0000000A )
   A0:  Label    00000000 
   AC:  Call     UpdateLerp  	( )
   B8:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   D4:  Wait     00000001 
   E0:  If  *Var[1]  ==  00000001 
   F0:  	Goto     00000000 
   FC:  EndIf
  104:  ChildThread
  10C:  	Wait     00000008 
  118:  	Call     PlaySoundAtActor 	( .Actor:Self 00000344 )
  12C:  EndChildThread
  134:  Call     MakeLerp    	( FFFFFFEC 0000001E 00000014 0000000A )
  150:  Label    00000001 
  15C:  Call     UpdateLerp  	( )
  168:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  184:  Wait     00000001 
  190:  If  *Var[1]  ==  00000001 
  1A0:  	Goto     00000001 
  1AC:  EndIf
  1B4:  ChildThread
  1BC:  	Wait     00000006 
  1C8:  	Call     PlaySoundAtActor 	( .Actor:Self 00000345 )
  1DC:  EndChildThread
  1E4:  Call     MakeLerp    	( 0000001E FFFFFFD8 00000014 0000000A )
  200:  Label    00000002 
  20C:  Call     UpdateLerp  	( )
  218:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  234:  Wait     00000001 
  240:  If  *Var[1]  ==  00000001 
  250:  	Goto     00000002 
  25C:  EndIf
  264:  ChildThread
  26C:  	Wait     00000004 
  278:  	Call     PlaySoundAtActor 	( .Actor:Self 000002EE )
  28C:  EndChildThread
  294:  Call     MakeLerp    	( FFFFFFD8 0000005A 0000000A 0000000A )
  2B0:  Label    00000003 
  2BC:  Call     UpdateLerp  	( )
  2C8:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2E4:  Wait     00000001 
  2F0:  If  *Var[1]  ==  00000001 
  300:  	Goto     00000003 
  30C:  EndIf
  314:  Wait     00000014 
  320:  Call     PlaySoundAtActor 	( .Actor:Self 00000346 )
  334:  Call     80254218 ( 00000009 )
  344:  Thread
  34C:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.0] )
  368:  EndThread
  370:  Call     SummonEnemy 	( $SpecialFormation_802259F0 00000000 )
  384:  Set  *Var[B]  *Var[0] 
  394:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B0:  Sub  *Var[0]  00000028 
  3C0:  Sub  *Var[1]  00000050 
  3D0:  Call     SetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  3EC:  ChildThread
  3F4:  	Call     PlayEffect  	( {FX:ShockWave:Sand} *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  438:  	Call     UseIdleAnimation 	( *Var[B] .False )
  44C:  	Call     SetAnimation 	( *Var[B] 00000001 0031000C )
  464:  	Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  480:  	Call     SetActorJumpscale 	( *Var[B] *Fixed[1.2001953] )
  494:  	Call     SetGoalToPos 	( *Var[B] *Var[0] 00000000 *Var[2] )
  4B0:  	Call     JumpToGoal  	( *Var[B] 00000014 00000000 00000001 00000000 )
  4D0:  	Wait     00000014 
  4DC:  	Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  4F8:  	Call     SetAnimation 	( *Var[B] 00000001 00310004 )
  510:  	Call     SetHomePos  	( *Var[B] *Var[0] *Var[1] *Var[2] )
  52C:  	Call     HPBarToHome 	( *Var[B] )
  53C:  	Call     UseIdleAnimation 	( *Var[B] .True )
  550:  EndChildThread
  558:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[1] )
  570:  Switch  *Var[1] 
  57C:  	Case  ==  00000000 
  588:  		Call     SetActorVar 	( *Var[B] 0000000A 00000001 )
  5A0:  	Case  ==  00000001 
  5AC:  		Call     SetActorVar 	( *Var[B] 0000000A 00000002 )
  5C4:  EndSwitch
  5CC:  Call     UseCamPreset 	( 00000002 )
  5DC:  Call     MoveCamOver 	( 00000014 )
  5EC:  Set  *Var[A]  *Var[0] 
  5FC:  Call     MakeLerp    	( 0000005A FFFFFFE2 00000007 00000004 )
  618:  Label    00000004 
  624:  Call     UpdateLerp  	( )
  630:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  64C:  Wait     00000001 
  658:  If  *Var[1]  ==  00000001 
  668:  	Goto     00000004 
  674:  EndIf
  67C:  Wait     00000014 
  688:  Call     MakeLerp    	( FFFFFFE2 00000000 0000000A 0000000A )
  6A4:  Label    00000005 
  6B0:  Call     UpdateLerp  	( )
  6BC:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  6D8:  Wait     00000001 
  6E4:  If  *Var[1]  ==  00000001 
  6F4:  	Goto     00000005 
  700:  EndIf
  708:  Wait     00000014 
  714:  Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  72C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  740:  Call     UseIdleAnimation 	( .Actor:Self .True )
  754:  Return
  75C:  End

#new:Script $Script_80226170
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8026F740 ( FFFFFF81 00000000 000002EC 000002EC )
   44:  Call     8026F740 ( FFFFFF81 00000002 000002EC 00000000 )
   60:  Call     UseCamPreset 	( 0000003F )
   70:  Call     CamTargetActor ( .Actor:Self )
   80:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   98:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   AC:  Call     SetGoalToTarget 	( .Actor:Self )
   BC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D8:  Add  *Var[0]  00000032 
   E8:  Set  *Var[1]  00000000 
   F8:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  10C:  Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  124:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  138:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  14C:  ExecWait 8029C12C 
  158:  Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  170:  Wait     00000004 
  17C:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  198:  Wait     00000001 
  1A4:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  1C0:  Wait     00000004 
  1CC:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  200:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
  224:  Switch  *Var[0] 
  230:  	CaseOR  ==  00000006 
  23C:  	CaseOR  ==  00000005 
  248:  		Set  *Var[A]  *Var[0] 
  258:  		Call     SetGoalToTarget 	( .Actor:Self )
  268:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  284:  		Sub  *Var[0]  00000005 
  294:  		Set  *Var[1]  0000000A 
  2A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
  2D4:  		ChildThread
  2DC:  			Wait     00000002 
  2E8:  			Set  *Var[0]  00000000 
  2F8:  			Loop     00000005 
  304:  				Add  *Var[0]  0000001E 
  314:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  330:  				Wait     00000001 
  33C:  			EndLoop
  344:  		EndChildThread
  34C:  		Call     JumpToGoal  	( .Actor:Self 00000016 00000000 00000001 00000000 )
  36C:  		If  *Var[A]  ==  00000005 
  37C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3A0:  		EndIf
  3A8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  3C4:  		ChildThread
  3CC:  			Wait     00000002 
  3D8:  			Set  *Var[0]  000000B4 
  3E8:  			Loop     00000006 
  3F4:  				Add  *Var[0]  0000001E 
  404:  				If  *Var[0]  ==  00000168 
  414:  					Set  *Var[0]  00000000 
  424:  				EndIf
  42C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  448:  				Wait     00000001 
  454:  			EndLoop
  45C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  478:  		EndChildThread
  480:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  494:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B0:  		Sub  *Var[0]  0000001E 
  4C0:  		Set  *Var[1]  00000000 
  4D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4EC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  50C:  		Wait     0000000F 
  518:  		Call     UseCamPreset 	( 00000002 )
  528:  		Call     8027D7F0 ( )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Call     SetGoalToHome 	( .Actor:Self )
  560:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  590:  		Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  5A8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  5BC:  		ExecWait 8029C12C 
  5C8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5E0:  		Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  5F8:  		Return
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call     SetGoalToTarget 	( .Actor:Self )
  620:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
  634:  ChildThread
  63C:  	Wait     00000002 
  648:  	Set  *Var[0]  00000000 
  658:  	Loop     00000005 
  664:  		Add  *Var[0]  0000001E 
  674:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  690:  		Wait     00000001 
  69C:  	EndLoop
  6A4:  EndChildThread
  6AC:  Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 00000002 00000020 )
  700:  Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  718:  Switch  *Var[0] 
  724:  	CaseOR  ==  00000000 
  730:  	CaseOR  ==  00000002 
  73C:  		Call     UseCamPreset 	( 00000002 )
  74C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  768:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  784:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7A0:  		Add  *Var[0]  00000028 
  7B0:  		Set  *Var[1]  00000000 
  7C0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  7D4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  810:  		Add  *Var[0]  0000001E 
  820:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  83C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  85C:  		Add  *Var[0]  00000014 
  86C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  888:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  8A8:  		Sub  *Var[0]  0000000A 
  8B8:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  8D8:  		Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  8F0:  		Call     SetGoalToHome 	( .Actor:Self )
  900:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  91C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  930:  		Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  948:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  95C:  		ExecWait 8029C12C 
  968:  		Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  980:  EndSwitch
  988:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  99C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  9B0:  Return
  9B8:  End

#new:Script $Script_80226B30
    0:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   14:  If  *Var[A]  &  00080000 
   24:  	SetConst  *Var[0]  00000001 
   34:  	Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   4C:  	ExecWait 8029B998 
   58:  	Return
   60:  EndIf
   68:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   80:  Switch  *Var[A] 
   8C:  	Case  ==  00000000 
   98:  		ExecWait $Script_80227440 
   A4:  	Case  ==  00000001 
   B0:  		ExecWait $Script_80227440 
   BC:  	Case  ==  00000002 
   C8:  		ExecWait $Script_80227440 
   D4:  	Case  ==  00000003 
   E0:  		SetConst  *Var[0]  00000001 
   F0:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  108:  		ExecWait 8029B998 
  114:  EndSwitch
  11C:  Return
  124:  End

#new:Script $Script_80226C5C
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   18:  Switch  *Var[A] 
   24:  	Case  ==  00000000 
   30:  		Call     SetActorVar 	( .Actor:Self 00000001 00310005 )
   48:  		Call     SetActorVar 	( .Actor:Self 00000002 00310009 )
   60:  		Call     SetActorVar 	( .Actor:Self 00000003 0031000D )
   78:  		Call     SetActorVar 	( .Actor:Self 00000004 00310012 )
   90:  		Call     SetActorVar 	( .Actor:Self 00000005 00310013 )
   A8:  		Call     SetActorVar 	( .Actor:Self 00000006 0031001A )
   C0:  		Call     SetActorVar 	( .Actor:Self 00000007 0031001B )
   D8:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223054 )
   F0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  10C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
  128:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .False )
  144:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .True )
  160:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  178:  		Call     8027D810 ( FFFFFF81 0000003E *Unknown[0] )
  190:  		Call     8027D970 ( FFFFFF81 00000001 0000003E *Unknown[0] )
  1AC:  		Call     $Function_80218AE0 ( FFFFFFF1 00000037 0000000A 0000002D )
  1C8:  	Case  ==  00000001 
  1D4:  		Call     SetActorVar 	( .Actor:Self 00000001 00310006 )
  1EC:  		Call     SetActorVar 	( .Actor:Self 00000002 0031000A )
  204:  		Call     SetActorVar 	( .Actor:Self 00000003 0031000E )
  21C:  		Call     SetActorVar 	( .Actor:Self 00000004 00310014 )
  234:  		Call     SetActorVar 	( .Actor:Self 00000005 00310015 )
  24C:  		Call     SetActorVar 	( .Actor:Self 00000006 0031001C )
  264:  		Call     SetActorVar 	( .Actor:Self 00000007 0031001D )
  27C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223090 )
  294:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .False )
  2B0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .True )
  2CC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .False )
  2E8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .True )
  304:  		Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
  31C:  		Call     8027D810 ( FFFFFF81 0000002C *Unknown[0] )
  334:  		Call     8027D970 ( FFFFFF81 00000001 0000002C *Unknown[0] )
  350:  		Call     $Function_80218AE0 ( FFFFFFF1 00000023 0000000A 00000019 )
  36C:  	Case  ==  00000002 
  378:  		Call     SetActorVar 	( .Actor:Self 00000001 00310007 )
  390:  		Call     SetActorVar 	( .Actor:Self 00000002 0031000B )
  3A8:  		Call     SetActorVar 	( .Actor:Self 00000003 0031000F )
  3C0:  		Call     SetActorVar 	( .Actor:Self 00000006 0031001E )
  3D8:  		Call     SetActorVar 	( .Actor:Self 00000007 0031001F )
  3F0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802230CC )
  408:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .False )
  424:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .True )
  440:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00020000 .False )
  45C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00800000 .True )
  478:  		Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
  490:  		Call     8027D810 ( FFFFFF81 0000001A *Unknown[0] )
  4A8:  		Call     8027D970 ( FFFFFF81 00000001 0000001A *Unknown[0] )
  4C4:  		Call     $Function_80218AE0 ( FFFFFFF1 0000000F 0000000A 00000005 )
  4E0:  EndSwitch
  4E8:  Return
  4F0:  End

#new:Script $Script_80227154
    0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   1C:  Add  *Var[1]  00000012 
   2C:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   48:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   64:  Set  *Var[3]  *Var[1] 
   74:  Wait     00000002 
   80:  Sub  *Var[3]  00000001 
   90:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
   AC:  Wait     00000003 
   B8:  Sub  *Var[3]  00000002 
   C8:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
   E4:  Wait     00000002 
   F0:  Sub  *Var[3]  00000003 
  100:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  11C:  Wait     00000001 
  128:  Sub  *Var[3]  00000005 
  138:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  154:  Wait     00000001 
  160:  Sub  *Var[3]  00000007 
  170:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  18C:  Wait     00000001 
  198:  Add  *Var[3]  00000002 
  1A8:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  1C4:  Wait     00000001 
  1D0:  Add  *Var[3]  00000003 
  1E0:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  1FC:  Wait     00000001 
  208:  Add  *Var[3]  00000003 
  218:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  234:  Wait     00000001 
  240:  Sub  *Var[3]  00000003 
  250:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  26C:  Wait     00000001 
  278:  Sub  *Var[3]  00000003 
  288:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  2A4:  Wait     00000001 
  2B0:  Sub  *Var[3]  00000002 
  2C0:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  2DC:  Return
  2E4:  End

#new:Script $Script_80227440
    0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   1C:  Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
   3C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
   58:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   6C:  If  *Var[0]  !&  00080000 
   7C:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   9C:  Else
   A4:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
   C4:  EndIf
   CC:  ExecWait $Script_80226C5C 
   D8:  SetConst  *Var[0]  00000001 
   E8:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  100:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
  118:  ChildThread
  120:  	Wait     00000004 
  12C:  	ExecWait $Script_80227154 
  138:  EndChildThread
  140:  Call     CreateTargetList 	( 00018004 )
  150:  Call     InitTargetIterator 	( )
  15C:  Label    00000000 
  168:  Call     GetOwnerID  	( *Var[1] )
  178:  Call     GetOwnerTarget ( *Var[0] *Var[9] )
  18C:  If  *Var[1]  !=  *Var[0] 
  19C:  	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1B0:  	Goto     00000000 
  1BC:  EndIf
  1C4:  Label    00000001 
  1D0:  Add  *Var[F]  00000001 
  1E0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1F4:  If  *Var[0]  ==  FFFFFFFF 
  204:  	Goto     0000000A 
  210:  EndIf
  218:  Call     GetOwnerTarget ( *Var[0] *Var[9] )
  22C:  Call     GetActorFlags 	( *Var[0] *Var[1] )
  240:  If  *Var[1]  &  00004000 
  250:  	Goto     00000001 
  25C:  EndIf
  264:  Call     GetOwnerID  	( *Var[0] )
  274:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  288:  Call     SetGoalToTarget 	( .Actor:Self )
  298:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B4:  Set  *Var[1]  00000000 
  2C4:  Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  2DC:  Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[7.0] )
  2F4:  Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
  31C:  ChildThread
  324:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  340:  EndChildThread
  348:  Call     SetGoalToTarget 	( .Actor:Self )
  358:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  36C:  Call     8027D1BC ( *Var[0] 00000001 00000011 )
  384:  Goto     00000001 
  390:  Label    0000000A 
  39C:  Call     UseCamPreset 	( 00000003 )
  3AC:  Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  3C4:  Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
  3DC:  Call     JumpSpriteA 	( .Actor:Self 00000006 00000128 00000000 00000000 00000000 .True )
  404:  Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
  420:  Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  43C:  Return
  444:  End

#new:Script $Script_8022788C
    0:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   14:  If  *Var[0]  !&  00080000 
   24:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Else
   4C:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
   6C:  EndIf
   74:  ExecWait $Script_80226C5C 
   80:  SetConst  *Var[0]  00000001 
   90:  Call     GetEventType 	( .Actor:Self *Var[1] )
   A4:  Switch  *Var[1] 
   B0:  	CaseOR  ==  .Event:BurnHit
   BC:  	CaseOR  ==  .Event:BurnDeath
   C8:  		Call     SetAnimation 	( .Actor:Self 00000006 00310020 )
   E0:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
   F8:  	EndCaseGroup
  100:  	Default
  108:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  120:  EndSwitch
  128:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
  140:  ChildThread
  148:  	Wait     00000004 
  154:  	ExecWait $Script_80227154 
  160:  EndChildThread
  168:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  180:  If  *Var[A]  !=  00000003 
  190:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1AC:  	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  1CC:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
  1E8:  	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
  200:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  21C:  	Add  *Var[0]  0000001E 
  22C:  	Set  *Var[1]  00000000 
  23C:  	Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000A 00000012 .Easing:Linear )
  268:  	Add  *Var[0]  00000014 
  278:  	Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000008 0000000A .Easing:Linear )
  2A4:  	Loop     00000014 
  2B0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  2CC:  		Wait     00000001 
  2D8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
  2F4:  		Wait     00000001 
  300:  	EndLoop
  308:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
  324:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  340:  Else
  348:  	Wait     0000001E 
  354:  EndIf
  35C:  Call     GetEventType 	( .Actor:Self *Var[0] )
  370:  Switch  *Var[0] 
  37C:  	Case  ==  .Event:BurnHit
  388:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  3B8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3D4:  		Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  3EC:  		Div  *Var[3]  00000002 
  3FC:  		Add  *Var[1]  *Var[3] 
  40C:  		Add  *Var[2]  00000005 
  41C:  		DivF  *Var[3]  *Fixed[10.0] 
  42C:  		Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  470:  	Case  ==  .Event:BurnDeath
  47C:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
  494:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  4AC:  		Wait     0000000A 
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Return
  4D0:  End

#new:Script $Script_80227D64
    0:  SetConst  *Var[0]  00000001 
   10:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   28:  Call     UseCamPreset 	( 00000002 )
   38:  Call     GetActorFlags 	( .Actor:Self *Var[9] )
   4C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.05078125] )
   60:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   7C:  Set  *Var[D]  *Var[B] 
   8C:  Add  *Var[D]  00000028 
   9C:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[D] *Var[C] )
   B8:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
   D8:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   F0:  Wait     00000014 
   FC:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  118:  Call     80279BEC ( FFFFFF81 0000000A )
  12C:  Wait     00000014 
  138:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  14C:  Wait     00000005 
  158:  Call     SetActorVar 	( .Actor:Self 00000000 *Var[2] )
  170:  Switch  *Var[2] 
  17C:  	Case  ==  00000000 
  188:  		Set  *Var[2]  00000060 
  198:  		Set  *Var[6]  00000004 
  1A8:  	Case  ==  00000001 
  1B4:  		Set  *Var[2]  00000048 
  1C4:  		Set  *Var[6]  00000003 
  1D4:  	Case  ==  00000002 
  1E0:  		Set  *Var[2]  00000030 
  1F0:  		Set  *Var[6]  00000002 
  200:  	Default
  208:  		Set  *Var[2]  00000018 
  218:  		Set  *Var[6]  00000001 
  228:  EndSwitch
  230:  ChildThread
  238:  	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  254:  	Loop     *Var[6] 
  260:  		Call     PlayEffect  	( {FX:ShockWave:Sand} *Var[A] 00000000 *Var[C] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2A4:  		Wait     0000000A 
  2B0:  	EndLoop
  2B8:  EndChildThread
  2C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  2D4:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2F0:  Sub  *Var[4]  *Var[2] 
  300:  Call     SetGoalToPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  31C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  338:  Wait     00000008 
  344:  Call     8027D32C ( FFFFFF81 )
  354:  Call     UseIdleAnimation 	( .Actor:Self .False )
  368:  Call     RemoveActor 	( .Actor:Self )
  378:  Return
  380:  End

PADDING: 802280EC to 802280F0 (005674CC to 005674D0)
00000000 

#new:IdleAnimations $IdleAnimations_802280F0
.Status:Normal    00590001
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590001
.Status:Stop      00590000
.Status:Static    00590001
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_8022813C
.Status:Normal    00590003
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590003
.Status:Stop      00590000
.Status:Static    00590003
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_80228188
.Status:Normal    0059000F
.Status:Stone     00590010
.Status:Sleep     00590012
.Status:Poison    0059000F
.Status:Stop      00590010
.Status:Static    0059000F
.Status:Paralyze  00590010
.Status:Dizzy     00590014
.Status:Fear      00590014
.Status:End

#new:IdleAnimations $IdleAnimations_802281D4
.Status:Normal    00590006
.Status:Stone     00590006
.Status:Sleep     00590006
.Status:Poison    00590006
.Status:Stop      00590006
.Status:Static    00590006
.Status:Paralyze  00590006
.Status:Dizzy     00590006
.Status:Fear      00590006
.Status:End

#new:DefenseTable $DefenseTable_80228220
.Element:Normal 00000003
.Element:Shock  00000003
.Element:End

#new:DefenseTable $DefenseTable_80228234
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80228240
.Element:Normal 00000003
.Element:Fire   00000003
.Element:End

#new:StatusTable $StatusTable_80228254
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   75`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80228300
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022839C
00800000 01000000 002000FF $IdleAnimations_802280F0 $DefenseTable_80228220 00001010 00000000 00F40000 00000000 

#new:Actor $Koopatrol
% stats
[Index]        4Cb 
[Level]        25`b 
[MaxHP]         8`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80228254 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022839C 
[Script]      $Script_Init_802283E8 
% move effectiveness
[Escape]       50`b 
[Item]         60`b 
[AirLift]      75`b 
[Hurricane]    65`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  32`b % dx dy
[StatusIcon]    5`b  32`b % dx dy

#new:Script $Script_Init_802283E8
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022C454 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022875C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80228C44 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80228538 )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
   94:  Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
   AC:  Switch  *Var[0] 
   B8:  	Case  ==  00000000 
   C4:  		Call     SetBattleVar 	( 00000004 00000000 )
   D8:  	Case  ==  00000001 
   E4:  		Call     SetBattleVar 	( 00000005 00000000 )
   F8:  	Case  ==  00000002 
  104:  		Call     SetBattleVar 	( 00000006 00000000 )
  118:  	Case  ==  00000003 
  124:  		Call     SetBattleVar 	( 00000007 00000000 )
  138:  EndSwitch
  140:  Return
  148:  End

#new:Script $Script_NextTurn_80228538
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:PlayerBegin
   28:  	Case  ==  .Phase:EnemyBegin
   34:  	Case  ==  .Phase:EnemyEnd
   40:  		Call     SetBattleVar 	( 00000001 00000000 )
   54:  EndSwitch
   5C:  Return
   64:  End

#new:Script $Script_802285A4
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000000 
   18:  		If  *Var[1]  &  00041000 
   28:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   44:  			Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call     $Function_80218BB0 ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
   A0:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call     $Function_80218BB0 ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001 
   EC:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call     $Function_80218BB0 ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  	Case  ==  00000002 
  14C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000014 )
  168:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFFA )
  184:  		Call     $Function_80218BB0 ( FFFFFFF1 00000016 00000005 00000016 )
  1A0:  EndSwitch
  1A8:  Return
  1B0:  End

#new:Script $Script_Idle_8022875C
    0:  Label    00000000 
    C:  Call     RandInt     	( 00000050 *Var[A] )
   20:  Add  *Var[A]  00000050 
   30:  Loop     *Var[A] 
   3C:  	Label    00000001 
   48:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   60:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   74:  	ExecWait $Script_802285A4 
   80:  	If  *Var[0]  ==  00000001 
   90:  		Wait     00000001 
   9C:  		Goto     00000001 
   A8:  	EndIf
   B0:  	If  *Var[1]  &  0235D000 
   C0:  		Wait     00000001 
   CC:  		Goto     00000001 
   D8:  	EndIf
   E0:  	Wait     00000001 
   EC:  EndLoop
   F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  110:  Add  *Var[0]  00000005 
  120:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  134:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022813C )
  14C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  168:  Call     8027A264 ( FFFFFF81 00000000 )
  17C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  194:  Switch  *Var[0] 
  1A0:  	Case  ==  00000000 
  1AC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  1C4:  	Case  ==  00000001 
  1D0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228188 )
  1E8:  EndSwitch
  1F0:  Loop     00000014 
  1FC:  	Label    00000002 
  208:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  220:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  234:  	ExecWait $Script_802285A4 
  240:  	If  *Var[0]  ==  00000001 
  250:  		Wait     00000001 
  25C:  		Goto     00000002 
  268:  	EndIf
  270:  	If  *Var[1]  &  0235D000 
  280:  		Wait     00000001 
  28C:  		Goto     00000002 
  298:  	EndIf
  2A0:  	Wait     00000001 
  2AC:  EndLoop
  2B4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  Sub  *Var[0]  00000005 
  2E0:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  2F4:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022813C )
  30C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  328:  Call     8027A264 ( FFFFFF81 00000000 )
  33C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  354:  Switch  *Var[0] 
  360:  	Case  ==  00000000 
  36C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  384:  	Case  ==  00000001 
  390:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228188 )
  3A8:  EndSwitch
  3B0:  Loop     00000050 
  3BC:  	Label    00000003 
  3C8:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  3E0:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  3F4:  	ExecWait $Script_802285A4 
  400:  	If  *Var[0]  ==  00000001 
  410:  		Wait     00000001 
  41C:  		Goto     00000003 
  428:  	EndIf
  430:  	If  *Var[1]  &  0235D000 
  440:  		Wait     00000001 
  44C:  		Goto     00000003 
  458:  	EndIf
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Goto     00000000 
  480:  Return
  488:  End

#new:IntTable $IntTable_80228BEC
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80228C44
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   3C:  Call     GetEventType 	( .Actor:Self *Var[0] )
   50:  Switch  *Var[0] 
   5C:  	CaseOR  ==  .Event:HitCombo
   68:  	CaseOR  ==  .Event:Hit
   74:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   8C:  		Switch  *Var[0] 
   98:  			CaseOR  ==  00000000 
   A4:  			CaseOR  ==  00000001 
   B0:  				SetConst  *Var[0]  00000001 
   C0:  				SetConst  *Var[1]  0059000B 
   D0:  				ExecWait DoNormalHit 
   DC:  			EndCaseGroup
   E4:  			Case  ==  00000002 
   F0:  				SetConst  *Var[0]  00000001 
  100:  				SetConst  *Var[1]  00590006 
  110:  				ExecWait DoNormalHit 
  11C:  		EndSwitch
  124:  	EndCaseGroup
  12C:  	Case  ==  .Event:BurnHit
  138:  		SetConst  *Var[0]  00000001 
  148:  		SetConst  *Var[1]  0059000C 
  158:  		SetConst  *Var[2]  0059000D 
  168:  		ExecWait DoBurnHit 
  174:  	Case  ==  .Event:BurnDeath
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  0059000C 
  1A0:  		SetConst  *Var[2]  0059000D 
  1B0:  		ExecWait DoBurnHit 
  1BC:  		SetConst  *Var[0]  00000001 
  1CC:  		SetConst  *Var[1]  0059000D 
  1DC:  		ExecWait DoDeath 
  1E8:  		Return
  1F0:  	Case  ==  .Event:MultibounceHit
  1FC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  214:  		Switch  *Var[0] 
  220:  			CaseOR  ==  00000000 
  22C:  			CaseOR  ==  00000001 
  238:  				SetConst  *Var[0]  00000001 
  248:  				SetConst  *Var[1]  0059000B 
  258:  				ExecWait 8029B998 
  264:  			EndCaseGroup
  26C:  			Case  ==  00000002 
  278:  				SetConst  *Var[0]  00000001 
  288:  				SetConst  *Var[1]  00590006 
  298:  				ExecWait 8029B998 
  2A4:  		EndSwitch
  2AC:  	Case  ==  .Event:MultibounceDeath
  2B8:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  2D0:  		Switch  *Var[0] 
  2DC:  			CaseOR  ==  00000000 
  2E8:  			CaseOR  ==  00000001 
  2F4:  				SetConst  *Var[0]  00000001 
  304:  				SetConst  *Var[1]  0059000B 
  314:  				ExecWait 8029B998 
  320:  				SetConst  *Var[0]  00000001 
  330:  				SetConst  *Var[1]  0059000B 
  340:  				ExecWait DoDeath 
  34C:  			EndCaseGroup
  354:  			Case  ==  00000002 
  360:  				SetConst  *Var[0]  00000001 
  370:  				SetConst  *Var[1]  00590006 
  380:  				ExecWait 8029B998 
  38C:  				Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  3A4:  				Wait     00000005 
  3B0:  				SetConst  *Var[0]  00000001 
  3C0:  				SetConst  *Var[1]  0059000B 
  3D0:  				ExecWait DoDeath 
  3DC:  		EndSwitch
  3E4:  	Case  ==  .Event:FlipTrigger
  3F0:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  408:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  420:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228234 )
  438:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228188 )
  450:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  46C:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  488:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  4A4:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  4BC:  		Call     SetAnimation 	( .Actor:Self 00000001 0059000B )
  4D4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  4F0:  		Thread
  4F8:  			Wait     00000004 
  504:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  520:  			Wait     00000001 
  52C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  548:  			Wait     00000001 
  554:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  570:  			Wait     00000001 
  57C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  598:  			Wait     00000001 
  5A4:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  5C0:  			Wait     00000001 
  5CC:  		EndThread
  5D4:  		UseIntBuffer $IntTable_80228BEC 
  5E0:  		Loop     00000016 
  5EC:  			Get1Int  *Var[0] 
  5F8:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  614:  			Wait     00000001 
  620:  		EndLoop
  628:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  644:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  660:  		Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
  678:  	Case  ==  .Event:ShockHit
  684:  		SetConst  *Var[0]  00000001 
  694:  		SetConst  *Var[1]  0059000B 
  6A4:  		ExecWait DoShockHit 
  6B0:  		SetConst  *Var[0]  00000001 
  6C0:  		SetConst  *Var[1]  0059000B 
  6D0:  		ExecWait 8029BD70 
  6DC:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  6FC:  		SetConst  *Var[0]  00000001 
  70C:  		SetConst  *Var[1]  00590004 
  71C:  		ExecWait DoReturnHome 
  728:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  73C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  75C:  	Case  ==  .Event:ShockDeath
  768:  		SetConst  *Var[0]  00000001 
  778:  		SetConst  *Var[1]  0059000B 
  788:  		ExecWait DoShockHit 
  794:  		SetConst  *Var[0]  00000001 
  7A4:  		SetConst  *Var[1]  0059000B 
  7B4:  		ExecWait DoDeath 
  7C0:  		Return
  7C8:  	Case  ==  .Event:StarBeam
  7D4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  7EC:  		If  *Var[0]  ==  00000002 
  7FC:  			Call     SetStatusTable ( .Actor:Self $StatusTable_80228254 )
  810:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
  828:  			Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  844:  			Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  85C:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  874:  			Call     GetStatusFlags ( .Actor:Self *Var[A] )
  888:  			If  *Var[A]  !&  18000000 
  898:  				Call     EnableActorGlow 	( .Actor:Self .False )
  8AC:  			EndIf
  8B4:  			Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  8D0:  			SetConst  *Var[0]  00000001 
  8E0:  			SetConst  *Var[1]  00590008 
  8F0:  			ExecWait DoImmune 
  8FC:  		EndIf
  904:  	CaseOR  ==  00000017
  910:  	CaseOR  ==  .Event:Immune
  91C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  934:  		Switch  *Var[0] 
  940:  			Case  ==  00000000 
  94C:  				SetConst  *Var[0]  00000001 
  95C:  				SetConst  *Var[1]  00590007 
  96C:  				ExecWait DoImmune 
  978:  				Call     GetStatusFlags ( .Actor:Self *Var[0] )
  98C:  				If  *Var[0]  !&  0035D000 
  99C:  					Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  9B4:  					Wait     0000000A 
  9C0:  				EndIf
  9C8:  			Case  ==  00000001 
  9D4:  				SetConst  *Var[0]  00000001 
  9E4:  				SetConst  *Var[1]  0059000F 
  9F4:  				ExecWait DoImmune 
  A00:  			Case  ==  00000002 
  A0C:  				SetConst  *Var[0]  00000001 
  A1C:  				SetConst  *Var[1]  00590006 
  A2C:  				ExecWait DoImmune 
  A38:  		EndSwitch
  A40:  	EndCaseGroup
  A48:  	Case  ==  .Event:SpikeTaunt
  A54:  		Wait     0000000A 
  A60:  		Set  *Flag[00]  00000000 
  A70:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A8C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  AA0:  		If  *Var[3]  &  00080000 
  AB0:  			Add  *Var[1]  00000010 
  AC0:  			Set  *Flag[00]  00000001 
  AD0:  		EndIf
  AD8:  		If  *Var[3]  &  00040000 
  AE8:  			Add  *Var[0]  FFFFFFF2 
  AF8:  			Add  *Var[1]  00000014 
  B08:  			Set  *Flag[00]  00000001 
  B18:  		EndIf
  B20:  		If  *Var[3]  &  00001000 
  B30:  			Add  *Var[0]  FFFFFFF2 
  B40:  			Add  *Var[1]  00000014 
  B50:  			Set  *Flag[00]  00000001 
  B60:  		EndIf
  B68:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  B80:  		If  *Var[A]  ==  00000002 
  B90:  			Add  *Var[1]  00000017 
  BA0:  			Set  *Flag[00]  00000001 
  BB0:  		EndIf
  BB8:  		If  *Flag[00]  ==  00000000 
  BC8:  			Add  *Var[1]  0000002A 
  BD8:  		EndIf
  BE0:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C24:  		Wait     00000014 
  C30:  	Case  ==  .Event:Death
  C3C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  C54:  		Switch  *Var[0] 
  C60:  			CaseOR  ==  00000000 
  C6C:  			CaseOR  ==  00000001 
  C78:  				SetConst  *Var[0]  00000001 
  C88:  				SetConst  *Var[1]  0059000B 
  C98:  				ExecWait DoNormalHit 
  CA4:  				Wait     0000000A 
  CB0:  				SetConst  *Var[0]  00000001 
  CC0:  				SetConst  *Var[1]  0059000B 
  CD0:  				ExecWait DoDeath 
  CDC:  				Return
  CE4:  			EndCaseGroup
  CEC:  			Case  ==  00000002 
  CF8:  				SetConst  *Var[0]  00000001 
  D08:  				SetConst  *Var[1]  00590006 
  D18:  				ExecWait DoNormalHit 
  D24:  				Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  D3C:  				Wait     00000005 
  D48:  				SetConst  *Var[0]  00000001 
  D58:  				SetConst  *Var[1]  0059000B 
  D68:  				ExecWait DoDeath 
  D74:  				Return
  D7C:  		EndSwitch
  D84:  	Case  ==  .Event:RecoverStatus
  D90:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  DA8:  		Switch  *Var[0] 
  DB4:  			Case  ==  00000000 
  DC0:  				SetConst  *Var[0]  00000001 
  DD0:  				SetConst  *Var[1]  00590001 
  DE0:  				ExecWait DoRecover 
  DEC:  			Case  ==  00000001 
  DF8:  				SetConst  *Var[0]  00000001 
  E08:  				SetConst  *Var[1]  0059000F 
  E18:  				ExecWait DoImmune 
  E24:  			Case  ==  00000002 
  E30:  				SetConst  *Var[0]  00000001 
  E40:  				SetConst  *Var[1]  00590006 
  E50:  				ExecWait DoRecover 
  E5C:  		EndSwitch
  E64:  	Case  ==  .Event:ScareAway
  E70:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  E88:  		Switch  *Var[0] 
  E94:  			CaseOR  ==  00000000 
  EA0:  			CaseOR  ==  00000002 
  EAC:  				SetConst  *Var[0]  00000001 
  EBC:  				SetConst  *Var[1]  00590004 
  ECC:  				SetConst  *Var[2]  0059000B 
  EDC:  				ExecWait DoScareAway 
  EE8:  				Return
  EF0:  			EndCaseGroup
  EF8:  			Case  ==  00000001 
  F04:  				SetConst  *Var[0]  00000001 
  F14:  				SetConst  *Var[1]  0059000F 
  F24:  				ExecWait DoImmune 
  F30:  		EndSwitch
  F38:  	Case  ==  .Event:BeginAirLift
  F44:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  F5C:  		Switch  *Var[0] 
  F68:  			Case  ==  00000000 
  F74:  				SetConst  *Var[0]  00000001 
  F84:  				SetConst  *Var[1]  00590016 
  F94:  				ExecWait DoAirLift 
  FA0:  			Case  ==  00000001 
  FAC:  				SetConst  *Var[0]  00000001 
  FBC:  				SetConst  *Var[1]  0059000F 
  FCC:  				ExecWait DoAirLift 
  FD8:  			Case  ==  00000002 
  FE4:  				SetConst  *Var[0]  00000001 
  FF4:  				SetConst  *Var[1]  0059000F 
 1004:  				ExecWait DoAirLift 
 1010:  		EndSwitch
 1018:  	Case  ==  .Event:BlowAway
 1024:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
 103C:  		Switch  *Var[0] 
 1048:  			Case  ==  00000000 
 1054:  				SetConst  *Var[0]  00000001 
 1064:  				SetConst  *Var[1]  00590016 
 1074:  			Case  ==  00000001 
 1080:  				SetConst  *Var[0]  00000001 
 1090:  				SetConst  *Var[1]  0059000F 
 10A0:  			Case  ==  00000002 
 10AC:  				SetConst  *Var[0]  00000001 
 10BC:  				SetConst  *Var[1]  0059000F 
 10CC:  		EndSwitch
 10D4:  		ExecWait DoBlowAway 
 10E0:  		Return
 10E8:  	Case  ==  .Event:AirLiftFailed
 10F4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
 110C:  		Switch  *Var[0] 
 1118:  			Case  ==  00000000 
 1124:  				SetConst  *Var[0]  00000001 
 1134:  				SetConst  *Var[1]  00590001 
 1144:  			Case  ==  00000001 
 1150:  				SetConst  *Var[0]  00000001 
 1160:  				SetConst  *Var[1]  0059000F 
 1170:  			Case  ==  00000002 
 117C:  				SetConst  *Var[0]  00000001 
 118C:  				SetConst  *Var[1]  0059000F 
 119C:  		EndSwitch
 11A4:  		ExecWait DoImmune 
 11B0:  EndSwitch
 11B8:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
 11CC:  Call     UseIdleAnimation 	( .Actor:Self .True )
 11E0:  Return
 11E8:  End

#new:Script $Script_80229E34
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
   74:  Else
   7C:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   94:  	If  *Var[0]  ==  00000001 
   A4:  		Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   BC:  		Sub  *Var[0]  00000001 
   CC:  		If  *Var[0]  >  00000000 
   DC:  			Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   F4:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait     0000000F 
  134:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait     0000000A 
  1AC:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  1DC:  			Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1F8:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  20C:  			Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
  224:  			Set  *Var[0]  00000000 
  234:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  250:  			Thread
  258:  				Loop     00000005 
  264:  					Add  *Var[0]  0000000F 
  274:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  290:  					Wait     00000001 
  29C:  				EndLoop
  2A4:  			EndThread
  2AC:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E4:  			Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  2F8:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  318:  			Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  32C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  380:  			Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  398:  			Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  3B0:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  3C8:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
  3E0:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
  3FC:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  434:  			Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  44C:  		EndIf
  454:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  468:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  47C:  		Return
  484:  	EndIf
  48C:  	Call     UseCamPreset 	( 0000003F )
  49C:  	Call     CamTargetActor ( .Actor:Self )
  4AC:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  4C4:  	Wait     0000000A 
  4D0:  	Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  4E8:  	Wait     0000000A 
  4F4:  	Thread
  4FC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:  		Add  *Var[1]  00000004 
  528:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  56C:  		Wait     00000003 
  578:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5BC:  		Wait     00000002 
  5C8:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  60C:  	EndThread
  614:  	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  628:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  640:  	Wait     0000000A 
  64C:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  664:  EndIf
  66C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  680:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  69C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  6C0:  Switch  *Var[0] 
  6CC:  	CaseOR  ==  00000006 
  6D8:  	CaseOR  ==  00000005 
  6E4:  		Set  *Var[A]  *Var[0] 
  6F4:  		Call     SetGoalToTarget 	( .Actor:Self )
  704:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
  720:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  734:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  74C:  		Call     GetBattlePhase ( *Var[0] )
  75C:  		If  *Var[0]  ==  .Phase:FirstStrike
  76C:  			Call     UseCamPreset 	( 00000005 )
  77C:  			Call     SetCamZoom  	( 0000012C )
  78C:  			Call     SetCamOffsetZ 	( 00000014 )
  79C:  			Call     MoveCamOver 	( 0000000A )
  7AC:  			Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  7C4:  		EndIf
  7CC:  		If  *Var[A]  ==  00000005 
  7DC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  800:  		EndIf
  808:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  820:  		Wait     00000008 
  82C:  		Call     8026F6EC ( FFFFFF81 )
  83C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  850:  		Wait     00000004 
  85C:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  874:  		Wait     00000001 
  880:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  898:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8B4:  		Add  *Var[1]  00000014 
  8C4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  8F4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  914:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  92C:  		Wait     00000006 
  938:  		Sub  *Var[1]  00000014 
  948:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  964:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  984:  		Call     UseCamPreset 	( 00000002 )
  994:  		Call     8027D7F0 ( )
  9A0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  9B4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9D0:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  9E8:  		Call     SetGoalToHome 	( .Actor:Self )
  9F8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  A0C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A24:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  A3C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  A54:  		Call     8026B438 ( FFFFFF81 00000001 00000000 )
  A6C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  A80:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A94:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:  		Return
  AB0:  	EndCaseGroup
  AB8:  EndSwitch
  AC0:  Call     SetGoalToTarget 	( .Actor:Self )
  AD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  AE4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  AFC:  Call     8026F6EC ( FFFFFF81 )
  B0C:  Wait     00000002 
  B18:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
  B40:  Switch  *Var[0] 
  B4C:  	CaseOR  ==  00000000 
  B58:  	CaseOR  ==  00000002 
  B64:  		Call     UseCamPreset 	( 00000002 )
  B74:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B90:  		Add  *Var[0]  00000028 
  BA0:  		Set  *Var[1]  00000000 
  BB0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  BC4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BE0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  C00:  		Add  *Var[0]  0000001E 
  C10:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C2C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C4C:  		Add  *Var[0]  00000014 
  C5C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  C98:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  CB0:  		Wait     00000008 
  CBC:  		Call     8027D7F0 ( )
  CC8:  		SetConst  *Var[0]  00000001 
  CD8:  		SetConst  *Var[1]  00590004 
  CE8:  		ExecWait DoReturnHome 
  CF4:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  D0C:  	EndCaseGroup
  D14:  EndSwitch
  D1C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D30:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D44:  Return
  D4C:  End

#new:Script $Script_8022AB88
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   64:  If  *Var[0]  ==  00000000 
   74:  	Call     UseCamPreset 	( 0000000E )
   84:  	Call     CamTargetActor ( .Actor:Self )
   94:  	Call     MoveCamOver 	( 00000014 )
   A4:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:PowerUp )
   B8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D4:  	Add  *Var[1]  0000000A 
   E4:  	Call     PlayEffect  	( {FX:EnergyIn:LongStreaks1} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  128:  	Call     SetAnimation 	( .Actor:Self 00000001 00590015 )
  140:  	Wait     0000001E 
  14C:  	Call     UseCamPreset 	( 00000002 )
  15C:  	Call     MoveCamOver 	( 00000014 )
  16C:  	Thread
  174:  		Wait     00000008 
  180:  		Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  198:  	EndThread
  1A0:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  1B4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D0:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  20C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  220:  	Call     $Function_80218C7C ( 00000080 0000000A )
  234:  	Thread
  23C:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.5] )
  258:  	EndThread
  260:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  278:  	Call     SetStatusTable ( .Actor:Self $StatusTable_80228300 )
  28C:  	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228240 )
  2A4:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .False )
  2C0:  	Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
  2D8:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802281D4 )
  2F0:  	Call     EnableActorGlow 	( .Actor:Self .True )
  304:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .True )
  320:  	Wait     0000000A 
  32C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  340:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  354:  	Return
  35C:  EndIf
  364:  Call     UseCamPreset 	( 0000003F )
  374:  Call     CamTargetActor ( .Actor:Self )
  384:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  39C:  Loop     00000014 
  3A8:  	Call     8026BA04 ( FFFFFF81 00000001 00000000 00000000 )
  3C4:  	Wait     00000001 
  3D0:  	Call     8026BA04 ( FFFFFF81 FFFFFFFF 00000000 00000000 )
  3EC:  	Wait     00000001 
  3F8:  EndLoop
  400:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  41C:  Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
  430:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  44C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  470:  Switch  *Var[0] 
  47C:  	CaseOR  ==  00000006 
  488:  	CaseOR  ==  00000005 
  494:  		Set  *Var[A]  *Var[0] 
  4A4:  		Thread
  4AC:  			Loop     
  4B8:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4D4:  				Add  *Var[0]  0000001E 
  4E4:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  500:  				If  *Var[0]  >  *Var[3] 
  510:  					BreakLoop
  518:  				EndIf
  520:  				Wait     00000001 
  52C:  			EndLoop
  534:  			Call     UseCamPreset 	( 00000001 )
  544:  			If  *Var[A]  ==  00000005 
  554:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  578:  			EndIf
  580:  			Wait     0000000F 
  58C:  			Call     UseCamPreset 	( 00000002 )
  59C:  		EndThread
  5A4:  		Thread
  5AC:  			Loop     0000001E 
  5B8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5D4:  				Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  618:  				Wait     00000001 
  624:  			EndLoop
  62C:  		EndThread
  634:  		Call     SetGoalToTarget 	( .Actor:Self )
  644:  		Call     AddToGoalPos 	( .Actor:Self FFFFFF38 00000000 00000000 )
  660:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  674:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  68C:  		Wait     0000000F 
  698:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  6AC:  		If  *Var[A]  !&  18000000 
  6BC:  			Call     EnableActorGlow 	( .Actor:Self .False )
  6D0:  		EndIf
  6D8:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  6F4:  		Call     8027D7F0 ( )
  700:  		Call     8026F6EC ( FFFFFF81 )
  710:  		Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
  72C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  748:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  75C:  		Call     SetGoalToHome 	( .Actor:Self )
  76C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  784:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  79C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7B4:  		Call     SetStatusTable ( .Actor:Self $StatusTable_80228254 )
  7C8:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
  7E0:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  7FC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  814:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  82C:  		Wait     0000000A 
  838:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  84C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  860:  		Return
  868:  	EndCaseGroup
  870:  EndSwitch
  878:  Thread
  880:  	Loop     0000001E 
  88C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8A8:  		Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8EC:  		Wait     00000001 
  8F8:  	EndLoop
  900:  EndThread
  908:  Call     SetGoalToTarget 	( .Actor:Self )
  918:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  92C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  944:  Wait     00000002 
  950:  Call     DamageTarget 	( .Actor:Self *Var[A] 00000000 0000FFFF 00000000 0000000A 00000020 )
  978:  Switch  *Var[A] 
  984:  	CaseOR  ==  00000000 
  990:  	CaseOR  ==  00000002 
  99C:  		Call     UseCamPreset 	( 00000002 )
  9AC:  		Thread
  9B4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  9D0:  			Set  *Var[0]  00000000 
  9E0:  			Loop     0000003C 
  9EC:  				Add  *Var[0]  00000012 
  9FC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A18:  				Wait     00000001 
  A24:  			EndLoop
  A2C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  A48:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A64:  		EndThread
  A6C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  A80:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A9C:  		Sub  *Var[0]  00000032 
  AAC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC8:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  AE8:  		Sub  *Var[0]  00000028 
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  B34:  		Sub  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B80:  		Wait     00000014 
  B8C:  		Call     8027D7F0 ( )
  B98:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  BAC:  		If  *Var[A]  !&  18000000 
  BBC:  			Call     EnableActorGlow 	( .Actor:Self .False )
  BD0:  		EndIf
  BD8:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  BF4:  		Call     8026F6EC ( FFFFFF81 )
  C04:  		Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
  C20:  		SetConst  *Var[0]  00000001 
  C30:  		SetConst  *Var[1]  00590004 
  C40:  		ExecWait DoReturnHome 
  C4C:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  C64:  		Call     SetStatusTable ( .Actor:Self $StatusTable_80228254 )
  C78:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
  C90:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  CAC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  CC4:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
  CDC:  	EndCaseGroup
  CE4:  EndSwitch
  CEC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D00:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D14:  Return
  D1C:  End

#new:Script $Script_8022B8AC
    0:  Call     CreateTargetList 	( 00008002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000001 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   3C:  Call     GetActorType 	( *Var[0] *Var[2] )
   50:  Switch  *Var[2] 
   5C:  	CaseOR  ==  00000010 
   68:  	CaseOR  ==  00000049 
   74:  		Set  *Var[A]  FFFFFFFF 
   84:  		Return
   8C:  	EndCaseGroup
   94:  EndSwitch
   9C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   B0:  If  *Var[0]  !=  FFFFFFFF 
   C0:  	Goto     00000001 
   CC:  EndIf
   D4:  Set  *Flag[01]  00000000 
   E4:  Set  *Flag[02]  00000000 
   F4:  Set  *Flag[03]  00000000 
  104:  Set  *Flag[04]  00000000 
  114:  Call     CreateTargetList 	( 00008002 )
  124:  Call     InitTargetIterator 	( )
  130:  Label    00000000 
  13C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  150:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
  164:  Mod  *Var[1]  00000004 
  174:  Switch  *Var[1] 
  180:  	Case  ==  00000000 
  18C:  		Set  *Flag[01]  00000001 
  19C:  	Case  ==  00000001 
  1A8:  		Set  *Flag[02]  00000001 
  1B8:  	Case  ==  00000002 
  1C4:  		Set  *Flag[03]  00000001 
  1D4:  	Case  ==  00000003 
  1E0:  		Set  *Flag[04]  00000001 
  1F0:  EndSwitch
  1F8:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  20C:  If  *Var[0]  !=  FFFFFFFF 
  21C:  	Goto     00000000 
  228:  EndIf
  230:  If  *Flag[01]  ==  00000000 
  240:  	Set  *Var[A]  00000000 
  250:  	Return
  258:  EndIf
  260:  If  *Flag[02]  ==  00000000 
  270:  	Set  *Var[A]  00000001 
  280:  	Return
  288:  EndIf
  290:  If  *Flag[03]  ==  00000000 
  2A0:  	Set  *Var[A]  00000002 
  2B0:  	Return
  2B8:  EndIf
  2C0:  If  *Flag[04]  ==  00000000 
  2D0:  	Set  *Var[A]  00000003 
  2E0:  	Return
  2E8:  EndIf
  2F0:  Set  *Var[A]  FFFFFFFF 
  300:  Return
  308:  End

#new:Vector3D $Vector3D_8022BBBC
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8022BBC8
$Koopatrol $Vector3D_8022BBBC 00000064 00000000 00000000 00000000 00000000 

#new:Script $Script_8022BBE4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseCamPreset 	( 0000000E )
   38:  Call     CamTargetActor ( .Actor:Self )
   48:  Call     MoveCamOver 	( 00000014 )
   58:  Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
   6C:  Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
   84:  Wait     00000014 
   90:  Loop     00000002 
   9C:  	Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
   B4:  	Wait     00000008 
   C0:  	Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
   D4:  	Call     SetActorAngle 	( .Actor:Self 000000B4 )
   E8:  	Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
  100:  	Wait     00000008 
  10C:  	Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
  124:  	Wait     00000008 
  130:  	Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
  144:  	Call     SetActorAngle 	( .Actor:Self 00000000 )
  158:  	Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
  170:  	Wait     00000008 
  17C:  EndLoop
  184:  Call     UseCamPreset 	( 00000002 )
  194:  Call     MoveCamOver 	( 0000000F )
  1A4:  Thread
  1AC:  	Wait     00000008 
  1B8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  	Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  218:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  22C:  EndThread
  234:  Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  24C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  260:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  27C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  298:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  2B8:  Call     SummonEnemy 	( $SpecialFormation_8022BBC8 00000000 )
  2CC:  Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  2E8:  Add  *Var[1]  000000C8 
  2F8:  Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  314:  Call     SetGoalToIndex ( *Var[0] *Var[A] )
  328:  Call     PlaySoundAtActor 	( *Var[0] 000020D3 )
  33C:  Call     8026F740 ( *Var[0] 00000000 00000000 00000000 )
  358:  Call     SetAnimation 	( *Var[0] 00000001 00590006 )
  370:  Call     SetActorSpeed 	( *Var[0] *Fixed[6.0] )
  384:  Call     RunToGoal   	( *Var[0] 00000000 .False )
  39C:  Call     SetAnimation 	( *Var[0] 00000001 00590008 )
  3B4:  Wait     0000000A 
  3C0:  Call     SetAnimation 	( *Var[0] 00000001 00590001 )
  3D8:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  3F4:  Call     ForceHomePos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  410:  Call     HPBarToHome 	( *Var[0] )
  420:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  438:  Switch  *Var[1] 
  444:  	Case  ==  00000000 
  450:  		Call     SetActorVar 	( *Var[0] 00000001 00000001 )
  468:  	Case  ==  00000001 
  474:  		Call     SetActorVar 	( *Var[0] 00000001 00000002 )
  48C:  EndSwitch
  494:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  4AC:  Call     SetActorVar 	( *Var[0] 00000002 *Var[1] )
  4C4:  Switch  *Var[1] 
  4D0:  	Case  ==  00000000 
  4DC:  		Call     GetBattleVar 	( 00000004 *Var[0] )
  4F0:  		Add  *Var[0]  00000001 
  500:  		Call     SetBattleVar 	( 00000004 *Var[0] )
  514:  	Case  ==  00000001 
  520:  		Call     GetBattleVar 	( 00000005 *Var[0] )
  534:  		Add  *Var[0]  00000001 
  544:  		Call     SetBattleVar 	( 00000005 *Var[0] )
  558:  	Case  ==  00000002 
  564:  		Call     GetBattleVar 	( 00000006 *Var[0] )
  578:  		Add  *Var[0]  00000001 
  588:  		Call     SetBattleVar 	( 00000006 *Var[0] )
  59C:  	Case  ==  00000003 
  5A8:  		Call     GetBattleVar 	( 00000007 *Var[0] )
  5BC:  		Add  *Var[0]  00000001 
  5CC:  		Call     SetBattleVar 	( 00000007 *Var[0] )
  5E0:  EndSwitch
  5E8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  610:  Return
  618:  End

#new:Script $Script_8022C204
    0:  Set  *Var[9]  00000000 
   10:  Call     CreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	Case  ==  0000004C 
   78:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   8C:  		If  *Var[3]  !&  0035D000 
   9C:  			Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
   B4:  			If  *Var[3]  ==  00000000 
   C4:  				Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
   DC:  				Switch  *Var[3] 
   E8:  					CaseOR  ==  00000000 
   F4:  					CaseOR  ==  00000001 
  100:  						Call     GetActorVar 	( .Actor:Self 00000002 *Var[3] )
  118:  						Switch  *Var[3] 
  124:  							Case  ==  00000000 
  130:  								Call     GetBattleVar 	( 00000004 *Var[4] )
  144:  							Case  ==  00000001 
  150:  								Call     GetBattleVar 	( 00000005 *Var[4] )
  164:  							Case  ==  00000002 
  170:  								Call     GetBattleVar 	( 00000006 *Var[4] )
  184:  							Case  ==  00000003 
  190:  								Call     GetBattleVar 	( 00000007 *Var[4] )
  1A4:  						EndSwitch
  1AC:  						If  *Var[4]  <  00000002 
  1BC:  							Add  *Var[9]  00000001 
  1CC:  						EndIf
  1D4:  					EndCaseGroup
  1DC:  					Case  ==  00000002 
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  EndSwitch
  208:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  21C:  If  *Var[0]  !=  FFFFFFFF 
  22C:  	Goto     00000000 
  238:  EndIf
  240:  Return
  248:  End

#new:Script $Script_TakeTurn_8022C454
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	Call     SetBattleVar 	( 00000001 00000001 )
   34:  	ExecWait $Script_80229E34 
   40:  	Return
   48:  EndIf
   50:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   68:  Switch  *Var[0] 
   74:  	Case  ==  00000000 
   80:  		Call     GetBattleVar 	( 00000001 *Var[0] )
   94:  		Switch  *Var[0] 
   A0:  			Case  ==  00000000 
   AC:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   C4:  				Switch  *Var[0] 
   D0:  					CaseOR  ==  00000000 
   DC:  					CaseOR  ==  00000001 
   E8:  						Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  100:  						Switch  *Var[0] 
  10C:  							Case  ==  00000000 
  118:  								Call     GetBattleVar 	( 00000004 *Var[1] )
  12C:  							Case  ==  00000001 
  138:  								Call     GetBattleVar 	( 00000005 *Var[1] )
  14C:  							Case  ==  00000002 
  158:  								Call     GetBattleVar 	( 00000006 *Var[1] )
  16C:  							Case  ==  00000003 
  178:  								Call     GetBattleVar 	( 00000007 *Var[1] )
  18C:  						EndSwitch
  194:  						If  *Var[1]  >=  00000002 
  1A4:  							Call     RandInt     	( 000003E8 *Var[0] )
  1B8:  							If  *Var[0]  <  0000012C 
  1C8:  								Call     SetBattleVar 	( 00000001 00000002 )
  1DC:  								ExecWait $Script_8022AB88 
  1E8:  							Else
  1F0:  								Call     SetBattleVar 	( 00000001 00000001 )
  204:  								ExecWait $Script_80229E34 
  210:  							EndIf
  218:  							Return
  220:  						EndIf
  228:  					EndCaseGroup
  230:  					Case  ==  00000002 
  23C:  						Call     RandInt     	( 000003E8 *Var[0] )
  250:  						If  *Var[0]  <  0000012C 
  260:  							Call     SetBattleVar 	( 00000001 00000002 )
  274:  							ExecWait $Script_8022AB88 
  280:  						Else
  288:  							Call     SetBattleVar 	( 00000001 00000001 )
  29C:  							ExecWait $Script_80229E34 
  2A8:  						EndIf
  2B0:  						Return
  2B8:  				EndSwitch
  2C0:  				ExecWait $Script_8022B8AC 
  2CC:  				If  *Var[A]  ==  FFFFFFFF 
  2DC:  					Call     RandInt     	( 000003E8 *Var[0] )
  2F0:  					If  *Var[0]  <  0000012C 
  300:  						Call     SetBattleVar 	( 00000001 00000002 )
  314:  						ExecWait $Script_8022AB88 
  320:  					Else
  328:  						Call     SetBattleVar 	( 00000001 00000001 )
  33C:  						ExecWait $Script_80229E34 
  348:  					EndIf
  350:  					Return
  358:  				EndIf
  360:  				ExecWait $Script_8022C204 
  36C:  				Switch  *Var[9] 
  378:  					Case  ==  00000001 
  384:  						Call     RandInt     	( 000003E8 *Var[0] )
  398:  						If  *Var[0]  <  00000190 
  3A8:  							Call     SetBattleVar 	( 00000001 00000001 )
  3BC:  							ExecWait $Script_8022BBE4 
  3C8:  							Return
  3D0:  						EndIf
  3D8:  					Case  ==  00000002 
  3E4:  						Call     RandInt     	( 000003E8 *Var[0] )
  3F8:  						If  *Var[0]  <  000000C8 
  408:  							Call     SetBattleVar 	( 00000001 00000001 )
  41C:  							ExecWait $Script_8022BBE4 
  428:  							Return
  430:  						EndIf
  438:  					Case  ==  00000003 
  444:  						Call     RandInt     	( 000003E8 *Var[0] )
  458:  						If  *Var[0]  <  00000064 
  468:  							Call     SetBattleVar 	( 00000001 00000001 )
  47C:  							ExecWait $Script_8022BBE4 
  488:  							Return
  490:  						EndIf
  498:  				EndSwitch
  4A0:  				Call     RandInt     	( 000003E8 *Var[0] )
  4B4:  				If  *Var[0]  <  0000012C 
  4C4:  					Call     SetBattleVar 	( 00000001 00000002 )
  4D8:  					ExecWait $Script_8022AB88 
  4E4:  				Else
  4EC:  					Call     SetBattleVar 	( 00000001 00000001 )
  500:  					ExecWait $Script_80229E34 
  50C:  				EndIf
  514:  			Case  ==  00000001 
  520:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  538:  				Switch  *Var[0] 
  544:  					CaseOR  ==  00000000 
  550:  					CaseOR  ==  00000001 
  55C:  						Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  574:  						Switch  *Var[0] 
  580:  							Case  ==  00000000 
  58C:  								Call     GetBattleVar 	( 00000004 *Var[1] )
  5A0:  							Case  ==  00000001 
  5AC:  								Call     GetBattleVar 	( 00000005 *Var[1] )
  5C0:  							Case  ==  00000002 
  5CC:  								Call     GetBattleVar 	( 00000006 *Var[1] )
  5E0:  							Case  ==  00000003 
  5EC:  								Call     GetBattleVar 	( 00000007 *Var[1] )
  600:  						EndSwitch
  608:  						If  *Var[1]  >=  00000002 
  618:  							Call     RandInt     	( 000003E8 *Var[0] )
  62C:  							If  *Var[0]  <  0000012C 
  63C:  								Call     SetBattleVar 	( 00000001 00000002 )
  650:  								ExecWait $Script_8022AB88 
  65C:  							Else
  664:  								Call     SetBattleVar 	( 00000001 00000001 )
  678:  								ExecWait $Script_80229E34 
  684:  							EndIf
  68C:  							Return
  694:  						EndIf
  69C:  					EndCaseGroup
  6A4:  					Case  ==  00000002 
  6B0:  						ExecWait $Script_80229E34 
  6BC:  						Return
  6C4:  				EndSwitch
  6CC:  				ExecWait $Script_8022B8AC 
  6D8:  				If  *Var[A]  ==  FFFFFFFF 
  6E8:  					ExecWait $Script_80229E34 
  6F4:  					Return
  6FC:  				EndIf
  704:  				ExecWait $Script_8022C204 
  710:  				Switch  *Var[9] 
  71C:  					Case  ==  00000001 
  728:  						Call     RandInt     	( 000003E8 *Var[0] )
  73C:  						If  *Var[0]  <  00000190 
  74C:  							ExecWait $Script_8022BBE4 
  758:  							Return
  760:  						EndIf
  768:  					Case  ==  00000002 
  774:  						Call     RandInt     	( 000003E8 *Var[0] )
  788:  						If  *Var[0]  <  000000C8 
  798:  							ExecWait $Script_8022BBE4 
  7A4:  							Return
  7AC:  						EndIf
  7B4:  					Case  ==  00000003 
  7C0:  						Call     RandInt     	( 000003E8 *Var[0] )
  7D4:  						If  *Var[0]  <  00000064 
  7E4:  							ExecWait $Script_8022BBE4 
  7F0:  							Return
  7F8:  						EndIf
  800:  				EndSwitch
  808:  				ExecWait $Script_80229E34 
  814:  			Case  ==  00000002 
  820:  				ExecWait $Script_8022AB88 
  82C:  		EndSwitch
  834:  	Case  ==  00000001 
  840:  		Call     SetBattleVar 	( 00000001 00000001 )
  854:  		ExecWait $Script_80229E34 
  860:  	Case  ==  00000002 
  86C:  		ExecWait $Script_8022AB88 
  878:  EndSwitch
  880:  Return
  888:  End

PADDING: 8022CCE4 to 8022CCF0 (0056C0C4 to 0056C0D0)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_8022CCF0
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End

#new:StatusTable $StatusTable_8022CD04
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022CDB0
00800000 01000000 001800FF $IdleAnimations_8022CDFC $DefenseTable_8022CCF0 00000000 00000000 FFF60000 00000000 

#new:Actor $ShyGuy
% stats
[Index]        1Fb 
[Level]        14`b 
[MaxHP]         7`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022CD04 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022CDB0 
[Script]      $Script_Init_8022CE48 
% move effectiveness
[Escape]       60`b 
[Item]         80`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8022CDFC
.Status:Normal    003B0001
.Status:Stone     003B0000
.Status:Sleep     003B0012
.Status:Poison    003B0001
.Status:Stop      003B0000
.Status:Static    003B0001
.Status:Paralyze  003B0000
.Status:Dizzy     003B0013
.Status:Fear      003B0013
.Status:End

#new:Script $Script_Init_8022CE48
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022E794 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022CE94 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022D008 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8022CE94
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 0000000E )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call     $Function_80218CE0 ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call     $Function_80218CE0 ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_8022CFA4
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  SetConst  *Var[0]  00000001 
   20:  SetConst  *Var[1]  003B0003 
   30:  ExecWait DoReturnHome 
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
   54:  Return
   5C:  End

#new:Script $Script_HandleEvent_8022D008
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  003B000C 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  003B000D 
   AC:  		SetConst  *Var[2]  003B000E 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  003B000D 
   F4:  		SetConst  *Var[2]  003B000E 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  003B000E 
  130:  		ExecWait DoDeath 
  13C:  		Return
  144:  	Case  ==  .Event:MultibounceHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  003B000C 
  170:  		ExecWait 8029B998 
  17C:  	Case  ==  .Event:MultibounceDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  003B000C 
  1A8:  		ExecWait 8029B998 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  003B000C 
  1D4:  		ExecWait DoDeath 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  003B000C 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  003B000C 
  240:  		ExecWait 8029BD70 
  24C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait $Script_8022CFA4 
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  003B000C 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  003B000C 
  2C4:  		ExecWait DoDeath 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  003B0001 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  003B000C 
  35C:  		ExecWait DoNormalHit 
  368:  		Wait     0000000A 
  374:  		SetConst  *Var[0]  00000001 
  384:  		SetConst  *Var[1]  003B000C 
  394:  		ExecWait DoDeath 
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus
  3B4:  		SetConst  *Var[0]  00000001 
  3C4:  		SetConst  *Var[1]  003B0001 
  3D4:  		ExecWait DoRecover 
  3E0:  	Case  ==  .Event:ScareAway
  3EC:  		SetConst  *Var[0]  00000001 
  3FC:  		SetConst  *Var[1]  003B0003 
  40C:  		SetConst  *Var[2]  003B0014 
  41C:  		ExecWait DoScareAway 
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift
  43C:  		SetConst  *Var[0]  00000001 
  44C:  		SetConst  *Var[1]  003B000C 
  45C:  		ExecWait DoAirLift 
  468:  	Case  ==  .Event:BlowAway
  474:  		SetConst  *Var[0]  00000001 
  484:  		SetConst  *Var[1]  003B000C 
  494:  		ExecWait DoBlowAway 
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4CC:  Return
  4D4:  End

#new:Script $Script_8022D4E4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 00000014 )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
   9C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   B0:  Call     SetGoalToTarget 	( .Actor:Self )
   C0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Add  *Var[0]  00000032 
   EC:  Set  *Var[1]  00000000 
   FC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  118:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  130:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  154:  Switch  *Var[0] 
  160:  	CaseOR  ==  00000006 
  16C:  	CaseOR  ==  00000005 
  178:  		Set  *Var[A]  *Var[0] 
  188:  		Call     8026F740 ( FFFFFF81 00000002 000002EF 00000000 )
  1A4:  		Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  1C0:  		Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  1DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  1F0:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  208:  		Call     SetGoalToTarget 	( .Actor:Self )
  218:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  230:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  248:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  25C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  270:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  28C:  		Sub  *Var[0]  0000001E 
  29C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2D8:  		If  *Var[A]  ==  00000005 
  2E8:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call     8026F6EC ( FFFFFF81 )
  324:  		Sub  *Var[0]  00000014 
  334:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  350:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  370:  		Wait     0000000F 
  37C:  		Call     UseCamPreset 	( 00000002 )
  38C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var[0]  00000001 
  3E0:  		SetConst  *Var[1]  003B0004 
  3F0:  		ExecWait DoReturnHome 
  3FC:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  414:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  428:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  440:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  454:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait     00000003 
  494:  	Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  4CC:  Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  4E8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  4FC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  514:  Call     SetGoalToTarget 	( .Actor:Self )
  524:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  Add  *Var[0]  0000000A 
  550:  Set  *Var[1]  00000000 
  560:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  594:  Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  5AC:  Wait     00000002 
  5B8:  Call     SetGoalToTarget 	( .Actor:Self )
  5C8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  5F0:  Call     8026F6EC ( FFFFFF81 )
  600:  Call     UseCamPreset 	( 00000002 )
  610:  Call     MoveCamOver 	( 0000000F )
  620:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  Add  *Var[0]  0000001E 
  64C:  Set  *Var[1]  00000000 
  65C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  670:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  68C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  6AC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  6C4:  Wait     00000008 
  6D0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait $Script_8022CFA4 
  6F0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  704:  Call     UseIdleAnimation 	( .Actor:Self .True )
  718:  Return
  720:  End

#new:Script $Script_8022DC0C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 00000014 )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     PlaySoundAtActor 	( .Actor:Self 00000234 )
   98:  Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
   B0:  Wait     00000014 
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
   D4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
   E8:  Call     SetGoalToTarget 	( .Actor:Self )
   F8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  114:  Add  *Var[0]  00000050 
  124:  Set  *Var[1]  00000000 
  134:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  150:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  168:  Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  184:  Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  1B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1CC:  Sub  *Var[0]  00000028 
  1DC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  210:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  234:  Switch  *Var[0] 
  240:  	CaseOR  ==  00000006 
  24C:  	CaseOR  ==  00000005 
  258:  		Set  *Var[A]  *Var[0] 
  268:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  27C:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  294:  		Thread
  29C:  			Wait     0000000C 
  2A8:  			Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
  2C0:  		EndThread
  2C8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  2DC:  		Call     SetGoalToTarget 	( .Actor:Self )
  2EC:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  308:  		Sub  *Var[0]  0000000A 
  318:  		Set  *Var[1]  00000000 
  328:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  344:  		Call     JumpToGoal  	( .Actor:Self 00000018 00000000 00000001 00000000 )
  364:  		If  *Var[A]  ==  00000005 
  374:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  3B8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  3CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  3E0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3FC:  		Sub  *Var[0]  0000001E 
  40C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  428:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  448:  		Sub  *Var[0]  00000014 
  458:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  474:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  494:  		Wait     0000000F 
  4A0:  		Call     UseCamPreset 	( 00000002 )
  4B0:  		Call     MoveCamOver 	( 0000000F )
  4C0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  4D4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var[0]  00000001 
  514:  		SetConst  *Var[1]  003B0004 
  524:  		ExecWait DoReturnHome 
  530:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  548:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  55C:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  574:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  5C8:  Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  5E0:  Thread
  5E8:  	Wait     00000009 
  5F4:  	Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
  60C:  EndThread
  614:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  628:  Call     SetGoalToTarget 	( .Actor:Self )
  638:  Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  658:  Wait     00000002 
  664:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var[0] 
  698:  	CaseOR  ==  00000000 
  6A4:  	CaseOR  ==  00000002 
  6B0:  		Call     UseCamPreset 	( 00000002 )
  6C0:  		Call     MoveCamOver 	( 0000000F )
  6D0:  		Thread
  6D8:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set  *Var[3]  00000000 
  704:  			Loop     00000014 
  710:  				Sub  *Var[3]  0000001E 
  720:  				If  *Var[3]  <  00000000 
  730:  					Add  *Var[3]  00000168 
  740:  				EndIf
  748:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[3] )
  764:  				Wait     00000001 
  770:  			EndLoop
  778:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call     GetBattleFlags ( *Var[0] )
  7C8:  		If  *Var[0]  &  80000000 
  7D8:  			Goto     00000001 
  7E4:  		EndIf
  7EC:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  800:  		If  *Var[0]  ==  00000000 
  810:  			Goto     00000001 
  81C:  		EndIf
  824:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  840:  		Add  *Var[0]  00000028 
  850:  		Set  *Var[1]  00000000 
  860:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  874:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  890:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  8B0:  		Call     PlaySoundAtActor 	( .Actor:Self 00000349 )
  8C4:  		Call     PlaySoundAtActor 	( .Actor:Self 00000749 )
  8D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  8F0:  		Wait     0000000A 
  8FC:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0007 )
  914:  		Wait     0000000F 
  920:  		Goto     00000002 
  92C:  		Label    00000001 
  938:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  954:  		Add  *Var[0]  00000028 
  964:  		Set  *Var[1]  00000000 
  974:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  988:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9A4:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  9C4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E4 )
  9D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0010 )
  9F0:  		Wait     0000000A 
  9FC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020C3 )
  A10:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call     RandInt     	( 00000064 *Var[0] )
  A40:  		If  *Var[0]  <  00000032 
  A50:  			Call     SetAnimation 	( .Actor:Self 00000001 003B0011 )
  A68:  		Else
  A70:  			Call     SetAnimation 	( .Actor:Self 00000001 003B0013 )
  A88:  		EndIf
  A90:  		Wait     00000019 
  A9C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  AB4:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  AC8:  		Label    00000002 
  AD4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var[0]  00000001 
  AF8:  		SetConst  *Var[1]  003B0004 
  B08:  		ExecWait DoReturnHome 
  B14:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  B28:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B64:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B78:  Return
  B80:  End

#new:Script $Script_TakeTurn_8022E794
    0:  Call     RandInt     	( 00000001 *Var[0] )
   14:  If  *Var[0]  ==  00000000 
   24:  	ExecWait $Script_8022D4E4 
   30:  Else
   38:  	ExecWait $Script_8022DC0C 
   44:  EndIf
   4C:  Return
   54:  End

#new:Vector3D $Vector3D_8022E7F0
30` 0` 10`

#new:Formation $Formation_00
$BigLanternGhost $Vector3D_8022E7F0 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Clubba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Clubba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 
$Fuzzy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$Fuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$Fuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$Fuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$Fuzzy 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$Pokey 00000001 0000000A 00000000 00000001 00000000 00000000 
$Pokey 00000002 00000009 00000000 00000001 00000000 00000000 

#new:Formation $Formation_09
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$ShyGuy 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8022EE60 00000001 $Formation_00 $Stage_8021B4A0 00000000 
$SJIS_8022EE48 00000001 $Formation_01 $Stage_8021B62C 00000000 
$SJIS_8022EE2C 00000002 $Formation_02 $Stage_8021B62C 00000000 % unused
$SJIS_8022EE10 00000002 $Formation_03 $Stage_8021B62C 00000000 
$SJIS_8022EDF4 00000002 $Formation_04 $Stage_8021B62C 00000000 % unused
$SJIS_8022EDD8 00000004 $Formation_05 $Stage_8021B62C 00000000 
$SJIS_8022EDB8 00000002 $Formation_06 $Stage_8021B62C 00000000 % unused
$SJIS_8022ED98 00000001 $Formation_07 $Stage_8021B62C 00000000 
$SJIS_8022ED80 00000002 $Formation_08 $Stage_8021B62C 00000000 
$SJIS_8022ED64 00000002 $Formation_09 $Stage_8021B62C 00000000 
$SJIS_8022ED58 00000001 $Formation_0A $Stage_8021B398 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8022EEB4 $Stage_8021B398 
$ASCII_8022EEAC $Stage_8021B40C 
$ASCII_8022EEA4 $Stage_8021B4A0 
$ASCII_8022EE9C $Stage_8021B51C 
$ASCII_8022EE94 $Stage_8021B62C 
$ASCII_8022EE8C $Stage_8021CD70 
$ASCII_8022EE84 $Stage_8021CE1C 
$ASCII_8022EE7C $Stage_8021D09C 
$ASCII_8022EE74 $Stage_8021D11C 
00000000 00000000 

PADDING: 8022EB6C to 8022EB70 (0056DF4C to 0056DF50)
00000000 

#new:ConstDouble $ConstDouble_8022EB70
0.714286d

#new:ConstDouble $ConstDouble_8022EB78
90.000000d

#new:JumpTable $JumpTable_8022EB80
$Function_80218070[1E0] $Function_80218070[1F4] $Function_80218070[200] $Function_80218070[20C] 
$Function_80218070[218] $Function_80218070[224] $Function_80218070[230] $Function_80218070[23C] 
$Function_80218070[248] $Function_80218070[254] $Function_80218070[260] $Function_80218070[2AC] 

#new:ASCII $ASCII_8022EBB0
omo_bg

#new:ASCII $ASCII_8022EBB8
omo_bt01_hit

#new:ASCII $ASCII_8022EBC8
omo_bt01_shape

#new:ASCII $ASCII_8022EBD8
omo_tex

#new:ASCII $ASCII_8022EBE0
omo_bg

#new:ASCII $ASCII_8022EBE8
omo_bt02_hit

#new:ASCII $ASCII_8022EBF8
omo_bt02_shape

#new:ASCII $ASCII_8022EC08
omo_tex

#new:ASCII $ASCII_8022EC10
omo_bg

#new:ASCII $ASCII_8022EC18
omo_bt03_hit

#new:ASCII $ASCII_8022EC28
omo_bt03_shape

#new:ASCII $ASCII_8022EC38
omo_tex

#new:ASCII $ASCII_8022EC40
omo_bg

#new:ASCII $ASCII_8022EC48
omo_bt03_hit

#new:ASCII $ASCII_8022EC58
omo_bt03_shape

#new:ASCII $ASCII_8022EC68
omo_tex

#new:ASCII $ASCII_8022EC70
omo_bg

#new:ASCII $ASCII_8022EC78
omo_bt04_hit

#new:ASCII $ASCII_8022EC88
omo_bt04_shape

#new:ASCII $ASCII_8022EC98
omo_tex

#new:ASCII $ASCII_8022ECA0
omo_bg

#new:ASCII $ASCII_8022ECA8
omo_bt05_hit

#new:ASCII $ASCII_8022ECB8
omo_bt05_shape

#new:ASCII $ASCII_8022ECC8
omo_tex

#new:ASCII $ASCII_8022ECD0
omo_bg

#new:ASCII $ASCII_8022ECD8
omo_bt05_hit

#new:ASCII $ASCII_8022ECE8
omo_bt05_shape

#new:ASCII $ASCII_8022ECF8
omo_tex

#new:ASCII $ASCII_8022ED00
omo_bg

#new:ASCII $ASCII_8022ED08
omo_bt06_hit

#new:ASCII $ASCII_8022ED18
omo_bt06_shape

#new:ASCII $ASCII_8022ED28
omo_tex

#new:ASCII $ASCII_8022ED30
omo_bt07_hit

#new:ASCII $ASCII_8022ED40
omo_bt07_shape

#new:ASCII $ASCII_8022ED50
omo_tex

#new:SJIS $SJIS_8022ED58
% heiho-
83778343 837A815B 00000000 

#new:SJIS $SJIS_8022ED64
% togenokox2?pi-chihen?
83678351 836D8352 78825181 69837381 5B836082 D682F181 6A000000 

#new:SJIS $SJIS_8022ED80
% sanbox2?pi-chihen?
83548393 837B7882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022ED98
% hanma-burosu?pi-chihen?
836E8393 837D815B 8375838D 83588169 8373815B 836082D6 82F1816A 00000000 

#new:SJIS $SJIS_8022EDB8
% hanma-burosux2?pi-chihen?
836E8393 837D815B 8375838D 83587882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EDD8
% chorobonx4?pi-chihen?
83608387 838D837B 83937882 53816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EDF4
% chorobonx2?pi-chihen?
83608387 838D837B 83937882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EE10
% gabonheix2?pi-chihen?
834B837B 839382D6 82A27882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EE2C
% kuribo-x2?pi-chihen?
834E838A 837B815B 78825181 69837381 5B836082 D682F181 6A000000 

#new:SJIS $SJIS_8022EE48
% kuribo-?pi-chihen?
834E838A 837B815B 81698373 815B8360 82D682F1 816A0000 

#new:SJIS $SJIS_8022EE60
% bigukanterakun
83728362 834F834A 83938365 838982AD 82F10000 

#new:ASCII $ASCII_8022EE74
omo_07

#new:ASCII $ASCII_8022EE7C
omo_06

#new:ASCII $ASCII_8022EE84
omo_05b

#new:ASCII $ASCII_8022EE8C
omo_05

#new:ASCII $ASCII_8022EE94
omo_04

#new:ASCII $ASCII_8022EE9C
omo_03b

#new:ASCII $ASCII_8022EEA4
omo_03

#new:ASCII $ASCII_8022EEAC
omo_02

#new:ASCII $ASCII_8022EEB4
omo_01

PADDING: 8022EEBC to 8022EEC0 (0056E29C to 0056E2A0)
00000000 

