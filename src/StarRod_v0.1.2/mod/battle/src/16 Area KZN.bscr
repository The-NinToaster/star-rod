% Script File: 16 Area KZN.bscr
% Decoded from: 58C2F0 to 59E6E0 (16 Area KZN)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S1, 1C (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        A0, 148 (S2)
   1C:  JAL       {Func:GetActor}
   20:  DADDU     S0, A1, R0
   24:  BEQ       S0, R0, .oDC
   28:  DADDU     S1, V0, R0
   2C:  LWC1      F2, 18 (S1)
   30:  LWC1      F0, 144 (S1)
   34:  SUB.S     F2, F2, F0
   38:  MUL.S     F2, F2, F2
   3C:  NOP
   40:  LWC1      F6, 1C (S1)
   44:  LWC1      F0, 148 (S1)
   48:  SUB.S     F6, F6, F0
   4C:  MUL.S     F6, F6, F6
   50:  NOP
   54:  LWC1      F4, 14C (S1)
   58:  LWC1      F0, 20 (S1)
   5C:  SUB.S     F0, F0, F4
   60:  MUL.S     F0, F0, F0
   64:  NOP
   68:  ADD.S     F2, F2, F6
   6C:  ADD.S     F12, F2, F0
   70:  SQRT.S    F4, F12
   74:  C.EQ.S    F4, F4
   78:  NOP
   7C:  BC1T      .o90
   80:  NOP
   84:  JAL       80061EF0
   88:  NOP
   8C:  MOV.S     F4, F0
        .o90
   90:  LWC1      F0, 4C (S1)
   94:  LIF       F2, 0.5
   9C:  DIV.S     F0, F4, F0
   A0:  MUL.S     F0, F0, F2
   A4:  NOP
   A8:  LIF       F2, 1.0
   B0:  NOP
   B4:  ADD.S     F0, F0, F2
   B8:  TRUNC.W.S F8, F0
   BC:  SWC1      F8, 70 (S2)
   C0:  LWC1      F0, 14C (S1)
   C4:  ADDIU     A0, R0, 359
   C8:  SWC1      F0, 10 (SP)
   CC:  LW        A2, 144 (S1)
   D0:  LW        A3, 148 (S1)
   D4:  JAL       80149D5C
   D8:  DADDU     A1, R0, R0
        .oDC
   DC:  LW        V0, 70 (S2)
   E0:  DADDU     V1, V0, R0
   E4:  ADDIU     V0, V0, FFFF
   E8:  BGTZ      V1, .o114
   EC:  SW        V0, 70 (S2)
   F0:  LWC1      F0, 14C (S1)
   F4:  ADDIU     A0, R0, 759
   F8:  SWC1      F0, 10 (SP)
   FC:  LW        A2, 144 (S1)
  100:  LW        A3, 148 (S1)
  104:  JAL       80149D5C
  108:  DADDU     A1, R0, R0
  10C:  BEQ       R0, R0, .o118
  110:  ADDIU     V0, R0, 2
        .o114
  114:  DADDU     V0, R0, R0
        .o118
  118:  LW        RA, 24 (SP)
  11C:  LW        S2, 20 (SP)
  120:  LW        S1, 1C (SP)
  124:  LW        S0, 18 (SP)
  128:  JR        RA
  12C:  ADDIU     SP, SP, 28

#new:Function $Function_80218130
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_802181FC
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 34 (SP)
   10:  SW        S6, 30 (SP)
   14:  SW        S5, 2C (SP)
   18:  SW        S4, 28 (SP)
   1C:  SW        S3, 24 (SP)
   20:  SW        S2, 20 (SP)
   24:  SW        S0, 18 (SP)
   28:  SDC1      F20, 38 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  JAL       {Func:GetVariable}
   48:  DADDU     A0, S1, R0
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  DADDU     A0, S1, R0
   58:  JAL       {Func:GetVariable}
   5C:  DADDU     S6, V0, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S1, R0
   6C:  JAL       {Func:GetVariable}
   70:  DADDU     S5, V0, R0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S1, R0
   80:  JAL       {Func:GetFloatVariable}
   84:  DADDU     S4, V0, R0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S1, R0
   94:  JAL       {Func:GetVariable}
   98:  MOV.S     F20, F0
   9C:  LW        A1, 0 (S0)
   A0:  ADDIU     S0, S0, 4
   A4:  DADDU     A0, S1, R0
   A8:  JAL       {Func:GetVariable}
   AC:  DADDU     S2, V0, R0
   B0:  LW        A1, 0 (S0)
   B4:  ADDIU     S0, S0, 4
   B8:  DADDU     A0, S1, R0
   BC:  JAL       {Func:GetVariable}
   C0:  DADDU     S3, V0, R0
   C4:  DADDU     A0, S1, R0
   C8:  LW        A1, 0 (S0)
   CC:  JAL       {Func:GetVariable}
   D0:  DADDU     S1, V0, R0
   D4:  ADDIU     A0, R0, 1
   D8:  MTC1      S6, F2
   DC:  NOP
   E0:  CVT.S.W   F2, F2
   E4:  MFC1      A1, F2
   E8:  MTC1      S5, F2
   EC:  NOP
   F0:  CVT.S.W   F2, F2
   F4:  MFC1      A2, F2
   F8:  MTC1      S4, F2
   FC:  NOP
  100:  CVT.S.W   F2, F2
  104:  MFC1      A3, F2
  108:  DADDU     S0, V0, R0
  10C:  SWC1      F20, 10 (SP)
  110:  JAL       80072230
  114:  SW        S2, 14 (SP)
  118:  LW        V1, C (V0)
  11C:  SW        S3, 18 (V1)
  120:  LW        V1, C (V0)
  124:  SW        S1, 1C (V1)
  128:  LW        V1, C (V0)
  12C:  SW        S0, 20 (V1)
  130:  LW        V1, C (V0)
  134:  ADDIU     A0, R0, FF
  138:  SW        A0, 28 (V1)
  13C:  LW        V1, C (V0)
  140:  SW        A0, 2C (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 30 (V1)
  14C:  LW        RA, 34 (SP)
  150:  LW        S6, 30 (SP)
  154:  LW        S5, 2C (SP)
  158:  LW        S4, 28 (SP)
  15C:  LW        S3, 24 (SP)
  160:  LW        S2, 20 (SP)
  164:  LW        S1, 1C (SP)
  168:  LW        S0, 18 (SP)
  16C:  LDC1      F20, 38 (SP)
  170:  ADDIU     V0, R0, 2
  174:  JR        RA
  178:  ADDIU     SP, SP, 40

PADDING: 80218378 to 80218380 (0058C668 to 0058C670)
00000000 00000000 

#new:Function $Function_80218380
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 8021844C to 80218450 (0058C73C to 0058C740)
00000000 

#new:Function $Function_80218450
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_8021851C
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetVariable}
   4C:  DADDU     S2, V0, R0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S3, V0, R0
   64:  DADDU     A0, S1, R0
   68:  LW        A1, 0 (S0)
   6C:  JAL       {Func:GetFloatVariable}
   70:  DADDU     S0, V0, R0
   74:  LIO       AT, 40C90FD8
   7C:  MTC1      AT, F8
   80:  MTC1      S2, F4
   84:  NOP
   88:  CVT.S.W   F4, F4
   8C:  MUL.S     F8, F4, F8
   90:  NOP
   94:  MTC1      S0, F6
   98:  NOP
   9C:  CVT.S.W   F6, F6
   A0:  LIF       F2, 1.0
   A8:  DIV.S     F4, F4, F6
   AC:  SUB.S     F2, F2, F4
   B0:  MUL.S     F20, F0, F2
   B4:  NOP
   B8:  MTC1      S3, F12
   BC:  NOP
   C0:  CVT.S.W   F12, F12
   C4:  JAL       {Func:CosRad}
   C8:  DIV.S     F12, F8, F12
   CC:  MUL.S     F20, F20, F0
   D0:  NOP
   D4:  DADDU     A0, S1, R0
   D8:  TRUNC.W.S F10, F20
   DC:  MFC1      A2, F10
   E0:  JAL       {Func:SetVariable}
   E4:  DADDU     A1, S4, R0
   E8:  LW        RA, 24 (SP)
   EC:  LW        S4, 20 (SP)
   F0:  LW        S3, 1C (SP)
   F4:  LW        S2, 18 (SP)
   F8:  LW        S1, 14 (SP)
   FC:  LW        S0, 10 (SP)
  100:  LDC1      F20, 28 (SP)
  104:  ADDIU     V0, R0, 2
  108:  JR        RA
  10C:  ADDIU     SP, SP, 30

PADDING: 8021862C to 80218630 (0058C91C to 0058C920)
00000000 

#new:Function $Function_80218630
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

#new:Function $Function_80218788
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_802187B4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218880
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_802188D8
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 8021899C to 802189A0 (0058CC8C to 0058CC90)
00000000 

#new:Function $Function_802189A0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

#new:Function $Function_80218AF8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_80218B24
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218BF0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218C48
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

#new:Function $Function_80218D0C
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S2, 18 (SP)
   10:  LIA       S2, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 0 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:SetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 1 (S2)
   3C:  JAL       {Func:SetVariable}
   40:  DADDU     A0, S1, R0
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  ADDIU     V0, R0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20

#new:Function $Function_80218D6C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S3, 1C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S1, 14 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S3)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  DADDU     S1, V0, R0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     A0, S3, R0
   40:  DADDU     S2, V0, R0
   44:  ADDIU     V0, R0, FF81
   48:  BNE       S1, V0, .o54
   4C:  NOP
   50:  LW        S1, 148 (S3)
        .o54
   54:  JAL       {Func:GetActor}
   58:  DADDU     A0, S1, R0
   5C:  DADDU     A0, V0, R0
   60:  JAL       {Func:GetSprite}
   64:  DADDU     A1, S2, R0
   68:  LW        A0, 78 (V0)
   6C:  JAL       80265E44
   70:  ADDIU     A1, R0, 1
   74:  DADDU     A0, S3, R0
   78:  LW        A1, 0 (S0)
   7C:  JAL       {Func:SetVariable}
   80:  DADDU     A2, V0, R0
   84:  LW        RA, 20 (SP)
   88:  LW        S3, 1C (SP)
   8C:  LW        S2, 18 (SP)
   90:  LW        S1, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  ADDIU     V0, R0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28

#new:DefenseTable $DefenseTable_80218E10
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:Blast  FFFFFFFF
.Element:End

#new:StatusTable $StatusTable_80218E3C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80218EE8
00800000 01000000 FE1900FF $IdleAnimations_80218FC4 $DefenseTable_80218E10 00000002 00000002 FDF60000 00000000 
00120001 02000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000 
00120001 03000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000 
00120001 04000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000 
00120001 05000000 001800FF $IdleAnimations_80219010 $DefenseTable_80218E10 00000000 00000000 FFF60000 00000000 

#new:Actor $LavaBubble
% stats
[Index]        2Bb 
[Level]        17`b 
[MaxHP]         9`b 
[Coins]         1`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80218E3C 
% ai
[SpriteCount]   5`s 
[SpriteTable] $SpriteTable_80218EE8 
[Script]      $Script_Init_8021901C 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      90`b 
[Hurricane]    85`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80218FC4
.Status:Normal    00460001
.Status:Stone     00460000
.Status:Sleep     00460001
.Status:Poison    00460001
.Status:Stop      00460000
.Status:Static    00460001
.Status:Paralyze  00460000
.Status:Dizzy     0046000A
.Status:Fear      0046000A
.Status:End

#new:IdleAnimations $IdleAnimations_80219010
.Status:Normal    00460001
.Status:End

#new:Script $Script_Init_8021901C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021AEA4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802191E4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219500 )
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  Switch  *Var[0] 
   60:  	Case  ==  00000000 
   6C:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   84:  	Case  ==  00000001 
   90:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   A8:  EndSwitch
   B0:  Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
   D0:  Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
   F0:  Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  110:  Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  130:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  148:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  160:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  Add  *Var[1]  00000005 
  18C:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1A8:  Call     HPBarToHome 	( .Actor:Self )
  1B8:  Return
  1C0:  End

#new:Script $Script_Idle_802191E4
    0:  Label    00000000 
    C:  Call     MakeLerp    	( 00000000 0000000A 00000019 0000000A )
   28:  Label    00000001 
   34:  Call     UpdateLerp  	( )
   40:  Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
   5C:  Add  *Var[0]  *Var[3] 
   6C:  Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
   88:  If  *Var[1]  ==  00000001 
   98:  	Label    0000000B 
   A4:  	Wait     00000001 
   B0:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
   C4:  	If  *Var[0]  &  0035D000 
   D4:  		Goto     0000000B 
   E0:  	EndIf
   E8:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  100:  	If  *Var[0]  ==  00000001 
  110:  		Goto     0000000B 
  11C:  	EndIf
  124:  	Goto     00000001 
  130:  EndIf
  138:  Call     MakeLerp    	( 0000000A 00000000 00000019 0000000A )
  154:  Label    00000002 
  160:  Call     UpdateLerp  	( )
  16C:  Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
  188:  Add  *Var[0]  *Var[3] 
  198:  Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
  1B4:  If  *Var[1]  ==  00000001 
  1C4:  	Label    00000016 
  1D0:  	Wait     00000001 
  1DC:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
  1F0:  	If  *Var[0]  &  0035D000 
  200:  		Goto     00000016 
  20C:  	EndIf
  214:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  22C:  	If  *Var[0]  ==  00000001 
  23C:  		Goto     00000016 
  248:  	EndIf
  250:  	Goto     00000002 
  25C:  EndIf
  264:  Goto     00000000 
  270:  Return
  278:  End

#new:Script $Script_80219464
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00460003 )
   18:  Call     SetGoalToHome 	( .Actor:Self )
   28:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   3C:  Thread
   44:  	Call     $Function_80218000 ( )
   50:  EndThread
   58:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00460001 )
   8C:  Return
   94:  End

#new:Script $Script_HandleEvent_80219500
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00460007 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00460008 
   C0:  		SetConst  *Var[2]  00460009 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00460008 
  108:  		SetConst  *Var[2]  00460009 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00460009 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00460007 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00460007 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00460007 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
  21C:  		SetConst  *Var[0]  00000001 
  22C:  		SetConst  *Var[1]  00460007 
  23C:  		ExecWait DoShockHit 
  248:  		SetConst  *Var[0]  00000001 
  258:  		SetConst  *Var[1]  00460007 
  268:  		ExecWait 8029BD70 
  274:  		ExecWait $Script_80219464 
  280:  	Case  ==  .Event:ShockDeath
  28C:  		Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
  2A0:  		SetConst  *Var[0]  00000001 
  2B0:  		SetConst  *Var[1]  00460007 
  2C0:  		ExecWait DoShockHit 
  2CC:  		SetConst  *Var[0]  00000001 
  2DC:  		SetConst  *Var[1]  00460007 
  2EC:  		ExecWait DoDeath 
  2F8:  		Return
  300:  	CaseOR  ==  00000017
  30C:  	CaseOR  ==  .Event:Immune
  318:  	CaseOR  ==  .Event:AirLiftFailed
  324:  	CaseOR  ==  .Event:BurnTaunt
  330:  		SetConst  *Var[0]  00000001 
  340:  		SetConst  *Var[1]  00460001 
  350:  		ExecWait DoImmune 
  35C:  	EndCaseGroup
  364:  	Case  ==  .Event:Death
  370:  		SetConst  *Var[0]  00000001 
  380:  		SetConst  *Var[1]  00460007 
  390:  		ExecWait DoNormalHit 
  39C:  		SetConst  *Var[0]  00000001 
  3AC:  		SetConst  *Var[1]  00460007 
  3BC:  		ExecWait DoDeath 
  3C8:  		Return
  3D0:  	Case  ==  .Event:BeginFirstStrike
  3DC:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  3F8:  		Call     HPBarToCurrent ( .Actor:Self )
  408:  	Case  ==  .Event:EndFirstStrike
  414:  		ExecWait $Script_80219464 
  420:  		Call     HPBarToHome 	( .Actor:Self )
  430:  	Case  ==  .Event:RecoverStatus
  43C:  		SetConst  *Var[0]  00000001 
  44C:  		SetConst  *Var[1]  00460001 
  45C:  		ExecWait DoRecover 
  468:  	Case  ==  .Event:ScareAway
  474:  		SetConst  *Var[0]  00000001 
  484:  		SetConst  *Var[1]  00460003 
  494:  		SetConst  *Var[2]  00460007 
  4A4:  		ExecWait DoScareAway 
  4B0:  		Return
  4B8:  	Case  ==  .Event:BeginAirLift
  4C4:  		SetConst  *Var[0]  00000001 
  4D4:  		SetConst  *Var[1]  00460003 
  4E4:  		ExecWait DoAirLift 
  4F0:  	Case  ==  .Event:BlowAway
  4FC:  		SetConst  *Var[0]  00000001 
  50C:  		SetConst  *Var[1]  00460003 
  51C:  		ExecWait DoBlowAway 
  528:  		Return
  530:  	Case  ==  .Event:UpAndAway
  53C:  	Default
  544:  EndSwitch
  54C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  560:  Call     UseIdleAnimation 	( .Actor:Self .True )
  574:  Return
  57C:  End

#new:Script $Script_FireTackle
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00460003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B8:  Add  *Var[0]  0000001E 
   C8:  Set  *Var[1]  00000005 
   D8:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   F4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  108:  Thread
  110:  	Call     $Function_80218000 ( )
  11C:  EndThread
  124:  Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:SinOut )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 00460001 )
  158:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  17C:  Switch  *Var[0] 
  188:  	CaseOR  ==  00000006 
  194:  	CaseOR  ==  00000005 
  1A0:  		Set  *Var[A]  *Var[0] 
  1B0:  		Call     SetAnimation 	( .Actor:Self 00000001 00460004 )
  1C8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1D8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F4:  		Sub  *Var[0]  00000014 
  204:  		Set  *Var[1]  00000000 
  214:  		Add  *Var[2]  00000001 
  224:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  238:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  254:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  274:  		If  *Var[A]  ==  00000005 
  284:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  2A8:  		EndIf
  2B0:  		Sub  *Var[0]  0000001E 
  2C0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2DC:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  2FC:  		Sub  *Var[0]  00000014 
  30C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  328:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  348:  		Sub  *Var[0]  0000000A 
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 00000003 00000000 00000001 00000000 )
  394:  		Wait     0000000E 
  3A0:  		Call     UseCamPreset 	( 00000002 )
  3B0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3CC:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3E0:  		ExecWait $Script_80219464 
  3EC:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  400:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  418:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  42C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  440:  		Return
  448:  	EndCaseGroup
  450:  EndSwitch
  458:  Call     SetAnimation 	( .Actor:Self 00000001 00460004 )
  470:  Call     SetGoalToTarget 	( .Actor:Self )
  480:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  49C:  Add  *Var[2]  00000001 
  4AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  4C0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4DC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  4FC:  Wait     00000002 
  508:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
  530:  Switch  *Var[0] 
  53C:  	CaseOR  ==  00000000 
  548:  	CaseOR  ==  00000002 
  554:  		Call     UseCamPreset 	( 00000002 )
  564:  		Set  *Var[0]  00000001 
  574:  		Set  *Var[1]  00460004 
  584:  		ExecWait 8029BD70 
  590:  		Wait     00000005 
  59C:  		ExecWait $Script_80219464 
  5A8:  	EndCaseGroup
  5B0:  EndSwitch
  5B8:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  5CC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5E0:  Return
  5E8:  End

#new:Script $Script_8021A074
    0:  Set  *Var[6]  00000002 
   10:  Loop     00000004 
   1C:  	Thread
   24:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
   38:  		If  *Var[A]  &  00080000 
   48:  			Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.20019531] *Fixed[0.20019531] *Fixed[0.20019531] )
   68:  		Else
   70:  			Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
   90:  		EndIf
   98:  		Call     SetSpritePos 	( .Actor:Self *Var[6] *Var[0] *Var[1] *Var[2] )
   B8:  		Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .False )
   D4:  		Call     SetSpriteSpeed ( .Actor:Self *Var[6] *Fixed[8.0] )
   EC:  		Call     SetSpriteJumpscale 	( .Actor:Self *Var[6] *Fixed[0.0107421875] )
  104:  		Call     8026FA00 ( FFFFFF81 *Var[6] 00000002 000002D0 00000000 )
  124:  		Call     JumpSpriteA 	( .Actor:Self *Var[6] *Var[3] *Var[4] *Var[5] 00000000 .False )
  14C:  		Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .True )
  168:  	EndThread
  170:  	Wait     00000003 
  17C:  	Add  *Var[6]  00000001 
  18C:  EndLoop
  194:  Return
  19C:  End

#new:Script $Script_8021A218
    0:  Exec     $Script_8021A074 
    C:  Call     GetDistanceToTarget 	( .Actor:Self *Var[0] )
   20:  DivF  *Var[0]  *Fixed[8.0] 
   30:  Add  *Var[0]  00000001 
   40:  Wait     *Var[0] 
   4C:  Return
   54:  End

#new:Script $Script_Fireballs_Partner
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   90:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   A8:  If  *Var[A]  ==  00000001 
   B8:  	Add  *Var[0]  00000064 
   C8:  	Set  *Var[1]  00000005 
   D8:  Else
   E0:  	Add  *Var[0]  0000001E 
   F0:  	Set  *Var[1]  00000032 
  100:  EndIf
  108:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00460003 )
  13C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  150:  Thread
  158:  	Call     $Function_80218000 ( )
  164:  EndThread
  16C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  188:  Call     SetAnimation 	( .Actor:Self 00000001 00460001 )
  1A0:  Wait     0000000A 
  1AC:  Call     SetAnimation 	( .Actor:Self 00000001 00460005 )
  1C4:  Wait     0000001E 
  1D0:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  00000006 
  20C:  	CaseOR  ==  00000005 
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 00460006 )
  240:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Sub  *Var[0]  00000005 
  26C:  		Add  *Var[1]  00000004 
  27C:  		Add  *Var[2]  00000002 
  28C:  		Call     SetGoalToTarget 	( .Actor:Self )
  29C:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B8:  		Sub  *Var[3]  00000064 
  2C8:  		Add  *Var[5]  00000002 
  2D8:  		ExecWait $Script_8021A218 
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  36C:  		ExecWait $Script_80219464 
  378:  		Wait     00000014 
  384:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 00460006 )
  408:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:  Sub  *Var[0]  00000005 
  434:  Add  *Var[1]  00000004 
  444:  Add  *Var[2]  00000002 
  454:  Call     SetGoalToTarget 	( .Actor:Self )
  464:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  480:  Sub  *Var[4]  00000006 
  490:  Add  *Var[5]  00000002 
  4A0:  ExecWait $Script_8021A218 
  4AC:  Wait     00000002 
  4B8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000002 00000020 )
  4E0:  Wait     00000014 
  4EC:  Switch  *Var[0] 
  4F8:  	CaseOR  ==  00000000 
  504:  	CaseOR  ==  00000002 
  510:  		Call     UseCamPreset 	( 00000002 )
  520:  		ExecWait $Script_80219464 
  52C:  	EndCaseGroup
  534:  EndSwitch
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
  564:  Return
  56C:  End

#new:Script $Script_Fireballs_Player
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00460003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
   CC:  Thread
   D4:  	Call     $Function_80218000 ( )
   E0:  EndThread
   E8:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  104:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  128:  Switch  *Var[0] 
  134:  	CaseOR  ==  00000006 
  140:  	CaseOR  ==  00000005 
  14C:  		Set  *Var[A]  *Var[0] 
  15C:  		Wait     0000000A 
  168:  		Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  184:  		Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
  198:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1AC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1C0:  		Call     SetAnimation 	( .Actor:Self 00000001 00460004 )
  1D8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  210:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  230:  		Call     8026F838 ( FFFFFF81 00000002 )
  244:  		Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  258:  		Call     SetGoalToTarget 	( .Actor:Self )
  268:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  284:  		Sub  *Var[0]  0000001E 
  294:  		Add  *Var[2]  00000002 
  2A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2D4:  		Call     SetAnimation 	( .Actor:Self 00000001 00460004 )
  2EC:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  308:  		If  *Var[A]  ==  00000005 
  318:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  33C:  		EndIf
  344:  		Wait     0000001E 
  350:  		Call     UseCamPreset 	( 00000002 )
  360:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  37C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  390:  		ExecWait $Script_80219464 
  39C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  3B0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3C8:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  3DC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3F0:  		Return
  3F8:  	EndCaseGroup
  400:  EndSwitch
  408:  Wait     00000005 
  414:  Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  430:  Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
  444:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  458:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  46C:  Call     SetAnimation 	( .Actor:Self 00000001 00460004 )
  484:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4BC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  4DC:  Call     8026F838 ( FFFFFF81 00000002 )
  4F0:  Set  *Var[A]  *Var[0] 
  500:  Set  *Var[B]  *Var[1] 
  510:  Set  *Var[C]  *Var[2] 
  520:  Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  534:  Call     SetGoalToTarget 	( .Actor:Self )
  544:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  560:  Add  *Var[2]  00000002 
  570:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  58C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5A0:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  5BC:  Wait     00000002 
  5C8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
  5F0:  Switch  *Var[0] 
  5FC:  	CaseOR  ==  00000000 
  608:  	CaseOR  ==  00000002 
  614:  		Call     UseCamPreset 	( 00000002 )
  624:  		Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  640:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  65C:  		Wait     00000014 
  668:  		ExecWait $Script_80219464 
  674:  	EndCaseGroup
  67C:  EndSwitch
  684:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  698:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6AC:  Return
  6B4:  End

#new:Script $Script_TakeTurn_8021AEA4
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   38:  	Switch  *Var[0] 
   44:  		Case  ==  00000001 
   50:  			ExecWait $Script_FireTackle 
   5C:  		Case  ==  00000000 
   68:  			ExecWait $Script_Fireballs_Player 
   74:  	EndSwitch
   7C:  	Return
   84:  EndIf
   8C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   A4:  Switch  *Var[0] 
   B0:  	Case  ==  00000001 
   BC:  		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
   D0:  		If  *Var[0]  &  01000000 
   E0:  			ExecWait $Script_FireTackle 
   EC:  		Else
   F4:  			Call     RandInt     	( 000003E8 *Var[0] )
  108:  			If  *Var[0]  <=  0000012C 
  118:  				ExecWait $Script_Fireballs_Partner 
  124:  			Else
  12C:  				ExecWait $Script_FireTackle 
  138:  			EndIf
  140:  		EndIf
  148:  	Case  ==  00000000 
  154:  		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
  168:  		If  *Var[0]  &  01000000 
  178:  			ExecWait $Script_Fireballs_Player 
  184:  		Else
  18C:  			Call     RandInt     	( 000003E8 *Var[0] )
  1A0:  			If  *Var[0]  <=  0000012C 
  1B0:  				ExecWait $Script_Fireballs_Partner 
  1BC:  			Else
  1C4:  				ExecWait $Script_Fireballs_Player 
  1D0:  			EndIf
  1D8:  		EndIf
  1E0:  EndSwitch
  1E8:  Return
  1F0:  End

PADDING: 8021B09C to 8021B0A0 (0058F38C to 0058F390)
00000000 

#new:IdleAnimations $IdleAnimations_8021B0A0
.Status:Normal    00360001
.Status:Stone     00360000
.Status:Sleep     00360000
.Status:Poison    00360001
.Status:Stop      00360000
.Status:Static    00360000
.Status:Paralyze  00360000
.Status:Paralyze  00360000
.Status:Dizzy     0036000F
.Status:End

#new:DefenseTable $DefenseTable_8021B0EC
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End

#new:StatusTable $StatusTable_8021B100
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021B1AC
00800000 01000000 F13200FF $IdleAnimations_8021B0A0 $DefenseTable_8021B0EC 00000000 00000000 03F20000 00000000 

#new:Actor $PutridPiranha
% stats
[Index]        2Db 
[Level]        17`b 
[MaxHP]        12`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021B100 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021B1AC 
[Script]      $Script_Init_8021B1F8 
% move effectiveness
[Escape]       60`b 
[Item]         30`b 
[AirLift]      20`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         60`b  52`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -22`b  32`b % dx dy
[StatusIcon]    1`b  44`b % dx dy

#new:Script $Script_Init_8021B1F8
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021B8A8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021B244 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021B3D0 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021B244
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   20:  If  *Var[A]  &  00040000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFE5 00000021 )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000005 FFFFFFF5 )
   68:  	Call     $Function_80218130 ( FFFFFFDB 00000009 FFFFFFF9 0000001F )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF1 00000032 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 00000003 FFFFFFF2 )
   C4:  	Call     $Function_80218130 ( FFFFFFEA 00000020 00000001 0000002C )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_8021B354
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
   18:  Call     SetGoalToHome 	( .Actor:Self )
   28:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   40:  Call     SetAnimation 	( .Actor:Self 00000001 00360001 )
   58:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   6C:  Return
   74:  End

#new:Script $Script_HandleEvent_8021B3D0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  0036000E 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00360010 
   C0:  		SetConst  *Var[2]  00360011 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00360010 
  108:  		SetConst  *Var[2]  00360011 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00360011 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  0036000E 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  0036000E 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  0036000E 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  0036000E 
  228:  		ExecWait DoShockHit 
  234:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  248:  		ExecWait $Script_8021B354 
  254:  	Case  ==  .Event:ShockDeath
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  0036000E 
  280:  		ExecWait DoShockHit 
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  0036000E 
  2AC:  		ExecWait DoDeath 
  2B8:  		Return
  2C0:  	CaseOR  ==  00000017
  2CC:  	CaseOR  ==  .Event:Immune
  2D8:  	CaseOR  ==  .Event:AirLiftFailed
  2E4:  		SetConst  *Var[0]  00000001 
  2F4:  		SetConst  *Var[1]  00360001 
  304:  		ExecWait DoImmune 
  310:  	EndCaseGroup
  318:  	Case  ==  .Event:Death
  324:  		SetConst  *Var[0]  00000001 
  334:  		SetConst  *Var[1]  0036000E 
  344:  		ExecWait DoNormalHit 
  350:  		Wait     0000000A 
  35C:  		SetConst  *Var[0]  00000001 
  36C:  		SetConst  *Var[1]  0036000E 
  37C:  		ExecWait DoDeath 
  388:  		Return
  390:  	Case  ==  .Event:RecoverStatus
  39C:  		SetConst  *Var[0]  00000001 
  3AC:  		SetConst  *Var[1]  00360001 
  3BC:  		ExecWait DoRecover 
  3C8:  	Case  ==  .Event:ScareAway
  3D4:  		SetConst  *Var[0]  00000001 
  3E4:  		SetConst  *Var[1]  00360003 
  3F4:  		SetConst  *Var[2]  0036000E 
  404:  		ExecWait DoScareAway 
  410:  		Return
  418:  	Case  ==  .Event:BeginAirLift
  424:  		SetConst  *Var[0]  00000001 
  434:  		SetConst  *Var[1]  00360003 
  444:  		ExecWait DoAirLift 
  450:  	Case  ==  .Event:BlowAway
  45C:  		SetConst  *Var[0]  00000001 
  46C:  		SetConst  *Var[1]  00360003 
  47C:  		ExecWait DoBlowAway 
  488:  		Return
  490:  	Default
  498:  EndSwitch
  4A0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4B4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4C8:  Return
  4D0:  End

#new:Script $Script_TakeTurn_8021B8A8
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_Bite 
   2C:  	Return
   34:  EndIf
   3C:  Call     RandInt     	( 00000064 *Var[0] )
   50:  If  *Var[0]  <  00000046 
   60:  	ExecWait $Script_Breath 
   6C:  Else
   74:  	ExecWait $Script_Bite 
   80:  EndIf
   88:  Return
   90:  End

#new:Script $Script_Bite
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00360018 )
   74:  	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
   8C:  	Wait     00000008 
   98:  	Call     SetGoalToTarget 	( .Actor:Self )
   A8:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C4:  	Add  *Var[0]  0000001B 
   D4:  	Set  *Var[1]  00000000 
   E4:  	Set  *Var[3]  *Var[0] 
   F4:  	Set  *Var[4]  *Var[1] 
  104:  	Set  *Var[5]  *Var[2] 
  114:  	Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
  130:  	Add  *Var[3]  *Var[6] 
  140:  	Add  *Var[4]  *Var[7] 
  150:  	Add  *Var[5]  *Var[8] 
  160:  	Div  *Var[3]  00000002 
  170:  	Div  *Var[4]  00000002 
  180:  	Div  *Var[5]  00000002 
  190:  	Call     UseCamPreset 	( 00000013 )
  1A0:  	Call     SetCamTarget 	( *Var[3] *Var[4] *Var[5] )
  1B8:  	Call     SetCamZoom  	( 0000012C )
  1C8:  	Call     SetCamOffsetZ 	( 00000028 )
  1D8:  	Wait     00000014 
  1E4:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  1F8:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  214:  	Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
  22C:  	Call     SetAnimation 	( .Actor:Self 00000001 00360017 )
  244:  	Wait     00000008 
  250:  Else
  258:  	Call     UseCamPreset 	( 0000003F )
  268:  	Call     CamTargetActor ( .Actor:Self )
  278:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  290:  	Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
  2A8:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  2BC:  	Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
  2D4:  	Call     SetGoalToTarget 	( .Actor:Self )
  2E4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  300:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  314:  	If  *Var[A]  &  00080000 
  324:  		Add  *Var[0]  0000000A 
  334:  	Else
  33C:  		Add  *Var[0]  0000001B 
  34C:  	EndIf
  354:  	Set  *Var[1]  00000000 
  364:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  398:  	Call     SetAnimation 	( .Actor:Self 00000001 00360001 )
  3B0:  EndIf
  3B8:  Thread
  3C0:  	Wait     00000008 
  3CC:  	Call     PlaySoundAtActor 	( .Actor:Self 000020DE )
  3E0:  EndThread
  3E8:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  40C:  Switch  *Var[A] 
  418:  	CaseOR  ==  00000006 
  424:  	CaseOR  ==  00000005 
  430:  		Call     SetAnimation 	( .Actor:Self 00000001 00360005 )
  448:  		Wait     0000000A 
  454:  		Call     SetAnimation 	( .Actor:Self 00000001 00360006 )
  46C:  		Wait     00000006 
  478:  		Call     SetAnimation 	( .Actor:Self 00000001 00360007 )
  490:  		If  *Var[A]  ==  00000005 
  4A0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4C4:  		EndIf
  4CC:  		Wait     0000000E 
  4D8:  		Call     UseCamPreset 	( 00000002 )
  4E8:  		Call     MoveCamOver 	( 00000014 )
  4F8:  		Call     8027D7F0 ( )
  504:  		Call     GetBattlePhase ( *Var[0] )
  514:  		If  *Var[0]  ==  .Phase:FirstStrike
  524:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  538:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  550:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  564:  			Call     SetAnimation 	( .Actor:Self 00000001 00360018 )
  57C:  			Wait     0000000A 
  588:  			Call     SetGoalToHome 	( .Actor:Self )
  598:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5B4:  			Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5D0:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  5E4:  			Call     SetAnimation 	( .Actor:Self 00000001 00360017 )
  5FC:  			Wait     0000000A 
  608:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
  620:  		Else
  628:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  640:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  654:  			Call     SetActorAngle 	( .Actor:Self 000000B4 )
  668:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  684:  			ExecWait $Script_8021B354 
  690:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  6A8:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  6C0:  		EndIf
  6C8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6DC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  6F0:  		Return
  6F8:  	EndCaseGroup
  700:  EndSwitch
  708:  Call     SetAnimation 	( .Actor:Self 00000001 00360005 )
  720:  Wait     0000000A 
  72C:  Call     SetAnimation 	( .Actor:Self 00000001 00360006 )
  744:  Wait     00000001 
  750:  Wait     00000002 
  75C:  Call     SetGoalToTarget 	( .Actor:Self )
  76C:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  794:  Set  *Var[F]  *Var[0] 
  7A4:  Switch  *Var[F] 
  7B0:  	CaseOR  ==  00000000 
  7BC:  	CaseOR  ==  00000002 
  7C8:  		Call     UseCamPreset 	( 00000002 )
  7D8:  		Wait     0000000A 
  7E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00360007 )
  7FC:  		Wait     00000014 
  808:  		Call     8027D7F0 ( )
  814:  		Call     GetBattlePhase ( *Var[0] )
  824:  		If  *Var[0]  ==  .Phase:FirstStrike
  834:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  848:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  860:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  874:  			Call     SetAnimation 	( .Actor:Self 00000001 00360018 )
  88C:  			Wait     0000000A 
  898:  			Call     SetGoalToHome 	( .Actor:Self )
  8A8:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8C4:  			Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E0:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  8F4:  			Call     SetAnimation 	( .Actor:Self 00000001 00360017 )
  90C:  			Wait     0000000A 
  918:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
  930:  		Else
  938:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  94C:  			ExecWait $Script_8021B354 
  958:  		EndIf
  960:  	EndCaseGroup
  968:  EndSwitch
  970:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  984:  Call     UseIdleAnimation 	( .Actor:Self .True )
  998:  Return
  9A0:  End

#new:Script $Script_Breath
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
   8C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   A0:  Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
   B8:  Call     SetGoalToTarget 	( .Actor:Self )
   C8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E4:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F8:  If  *Var[A]  &  00080000 
  108:  	Add  *Var[0]  00000010 
  118:  Else
  120:  	Add  *Var[0]  00000028 
  130:  EndIf
  138:  Set  *Var[1]  00000000 
  148:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  164:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 00360001 )
  194:  Call     SetAnimation 	( .Actor:Self 00000001 00360008 )
  1AC:  Wait     0000000B 
  1B8:  Call     PlaySoundAtActor 	( .Actor:Self 000003AB )
  1CC:  Call     SetGoalToTarget 	( .Actor:Self )
  1DC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  20C:  If  *Var[A]  &  00080000 
  21C:  	Add  *Var[0]  0000000C 
  22C:  	Set  *Var[1]  00000005 
  23C:  	SetF  *Var[3]  *Fixed[0.40039062] 
  24C:  Else
  254:  	Add  *Var[0]  00000020 
  264:  	Set  *Var[1]  0000000D 
  274:  	SetF  *Var[3]  *Fixed[1.0] 
  284:  EndIf
  28C:  Call     $Function_802181FC ( *Var[2] *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000078 00000000 00000078 )
  2BC:  Wait     00000001 
  2C8:  Call     SetAnimation 	( .Actor:Self 00000001 00360009 )
  2E0:  Wait     00000005 
  2EC:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  310:  Switch  *Var[A] 
  31C:  	CaseOR  ==  00000006 
  328:  	CaseOR  ==  00000005 
  334:  		Wait     0000000A 
  340:  		Call     SetAnimation 	( .Actor:Self 00000001 0036000A )
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     UseCamPreset 	( 00000002 )
  3B0:  		Call     8027D7F0 ( )
  3BC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  3D4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  3E8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3FC:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  418:  		ExecWait $Script_8021B354 
  424:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  43C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  454:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  468:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  47C:  		Return
  484:  	EndCaseGroup
  48C:  EndSwitch
  494:  Wait     00000002 
  4A0:  Call     SetGoalToTarget 	( .Actor:Self )
  4B0:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 80020364 00000002 00000020 )
  4D8:  Set  *Var[F]  *Var[0] 
  4E8:  Switch  *Var[F] 
  4F4:  	CaseOR  ==  00000000 
  500:  	CaseOR  ==  00000002 
  50C:  		Call     UseCamPreset 	( 00000002 )
  51C:  		Wait     0000000A 
  528:  		Call     SetAnimation 	( .Actor:Self 00000001 0036000A )
  540:  		Wait     00000014 
  54C:  		Call     8027D7F0 ( )
  558:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  56C:  		ExecWait $Script_8021B354 
  578:  	EndCaseGroup
  580:  EndSwitch
  588:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  59C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5B0:  Return
  5B8:  End

PADDING: 8021C8A8 to 8021C8B0 (00590B98 to 00590BA0)
00000000 00000000 

#new:DefenseTable $DefenseTable_8021C8B0
.Element:Normal 00000004
.Element:Fire   00000063
.Element:Blast  00000063
.Element:End

#new:DefenseTable $DefenseTable_8021C8CC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021C8D8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021C984
00800000 01000000 001800FF $IdleAnimations_8021CA1C $DefenseTable_8021C8B0 00001010 00000000 000E0000 00000000 

#new:Actor $SpikeTop
% stats
[Index]        2Cb 
[Level]        17`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_8021C8D8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021C984 
[Script]      $Script_Init_8021CAAC 
% move effectiveness
[Escape]       60`b 
[Item]         60`b 
[AirLift]      70`b 
[Hurricane]    65`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]   -8`b  16`b % dx dy
[StatusIcon]    8`b  13`b % dx dy

#new:IdleAnimations $IdleAnimations_8021C9D0
.Status:Normal    004D0003
.Status:Stone     004D0000
.Status:Sleep     004D001B
.Status:Poison    004D0003
.Status:Stop      004D0000
.Status:Static    004D0003
.Status:Paralyze  004D0000
.Status:Dizzy     004D001E
.Status:Fear      004D001E
.Status:End

#new:IdleAnimations $IdleAnimations_8021CA1C
.Status:Normal    004D0004
.Status:Stone     004D0001
.Status:Sleep     004D001C
.Status:Poison    004D0004
.Status:Stop      004D0001
.Status:Static    004D0004
.Status:Paralyze  004D0001
.Status:Dizzy     004D001F
.Status:Fear      004D001F
.Status:End

#new:IdleAnimations $IdleAnimations_8021CA68
.Status:Normal    004D0005
.Status:Stone     004D0002
.Status:Sleep     004D001D
.Status:Poison    004D0005
.Status:Stop      004D0002
.Status:Static    004D0005
.Status:Dizzy     004D0020
.Status:Fear      004D0020
.Status:End

#new:Script $Script_Init_8021CAAC
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021CC7C )
   14:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   2C:  If  *Var[0]  ==  00000001 
   3C:  	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  	Call     $Function_80218380 ( FFFFFFF6 00000000 0000000A 00000000 )
   70:  	Call     BindTakeTurn 	( .Actor:Self $Script_SpikeTop_TakeTurn_Ceiling )
   84:  	Call     BindHandleEvent 	( .Actor:Self $Script_SpikeTop_HandleEvent_Ceiling )
   98:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .False )
   B4:  Else
   BC:  	Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
   D4:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   F0:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  10C:  	Call     BindTakeTurn 	( .Actor:Self $Script_SpikeTop_TakeTurn_Floor )
  120:  	Call     BindHandleEvent 	( .Actor:Self $Script_SpikeTop_HandleEvent_Floor )
  134:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C9D0 )
  14C:  	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  164:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  180:  EndIf
  188:  Call     HPBarToHome 	( .Actor:Self )
  198:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  1AC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  1C0:  Return
  1C8:  End

#new:Script $Script_Idle_8021CC7C
    0:  Return
    8:  End

#new:Script $Script_SpikeTop_FallDown
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
   28:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000001 00000014 )
   44:  Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
   60:  Call     $Function_80218380 ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  Call     BindTakeTurn 	( .Actor:Self $Script_SpikeTop_TakeTurn_Floor )
   90:  Call     BindHandleEvent 	( .Actor:Self $Script_SpikeTop_HandleEvent_Floor )
   A4:  Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
   BC:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021C8CC )
   D4:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CA68 )
   EC:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  104:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  120:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  13C:  Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  154:  Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  16C:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  180:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  19C:  Sub  *Var[1]  00000018 
  1AC:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C8:  Set  *Var[1]  00000000 
  1D8:  Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
  1F4:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  208:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  224:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  244:  Call     GetIndexFromPos 	( .Actor:Self *Var[A] )
  258:  Mod  *Var[A]  00000004 
  268:  Call     SetGoalToIndex ( .Actor:Self *Var[A] )
  27C:  Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  298:  Call     SetHomePos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  2B4:  Set  *Var[D]  *Var[A] 
  2C4:  Set  *Var[E]  *Var[B] 
  2D4:  Set  *Var[F]  *Var[C] 
  2E4:  Sub  *Var[D]  *Var[0] 
  2F4:  Sub  *Var[E]  *Var[1] 
  304:  Sub  *Var[F]  *Var[2] 
  314:  Div  *Var[D]  00000002 
  324:  Div  *Var[E]  00000002 
  334:  Div  *Var[F]  00000002 
  344:  Add  *Var[0]  *Var[D] 
  354:  Add  *Var[1]  *Var[E] 
  364:  Add  *Var[2]  *Var[F] 
  374:  Call     8026F6EC ( FFFFFF81 )
  384:  Call     SetAnimation 	( .Actor:Self 00000001 004D0005 )
  39C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B8:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D8:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  3F4:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  414:  Call     HPBarToHome 	( .Actor:Self )
  424:  Return
  42C:  End

#new:Script $Script_SpikeTop_HandleEvent_Ceiling
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		SetConst  *Var[0]  00000001 
   64:  		SetConst  *Var[1]  004D0014 
   74:  		ExecWait DoNormalHit 
   80:  	Case  ==  .Event:Hit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  004D0014 
   AC:  		ExecWait DoNormalHit 
   B8:  		ExecWait $Script_SpikeTop_FallDown 
   C4:  	Case  ==  .Event:FlipTrigger
   D0:  		SetConst  *Var[0]  00000001 
   E0:  		SetConst  *Var[1]  004D0014 
   F0:  		ExecWait DoNormalHit 
   FC:  		ExecWait $Script_SpikeTop_FallDown 
  108:  	Case  ==  .Event:BurnHit
  114:  		SetConst  *Var[0]  00000001 
  124:  		SetConst  *Var[1]  004D0019 
  134:  		SetConst  *Var[2]  004D001A 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_SpikeTop_FallDown 
  15C:  	Case  ==  .Event:BurnDeath
  168:  		SetConst  *Var[0]  00000001 
  178:  		SetConst  *Var[1]  004D0019 
  188:  		SetConst  *Var[2]  004D001A 
  198:  		ExecWait DoBurnHit 
  1A4:  		SetConst  *Var[0]  00000001 
  1B4:  		SetConst  *Var[1]  004D001A 
  1C4:  		ExecWait DoDeath 
  1D0:  		Return
  1D8:  	Case  ==  .Event:ShockHit
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  004D0014 
  204:  		ExecWait DoShockHit 
  210:  		SetConst  *Var[0]  00000001 
  220:  		SetConst  *Var[1]  004D0013 
  230:  		ExecWait 8029BD70 
  23C:  		SetConst  *Var[0]  00000001 
  24C:  		SetConst  *Var[1]  004D0008 
  25C:  		ExecWait DoReturnHome 
  268:  	Case  ==  .Event:ShockDeath
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  004D0014 
  294:  		ExecWait DoShockHit 
  2A0:  		SetConst  *Var[0]  00000001 
  2B0:  		SetConst  *Var[1]  004D0013 
  2C0:  		ExecWait DoDeath 
  2CC:  		Return
  2D4:  	Case  ==  00000017
  2E0:  		SetConst  *Var[0]  00000001 
  2F0:  		SetConst  *Var[1]  004D000D 
  300:  		ExecWait DoImmune 
  30C:  	Case  ==  .Event:Immune
  318:  		SetConst  *Var[0]  00000001 
  328:  		SetConst  *Var[1]  004D000D 
  338:  		ExecWait DoImmune 
  344:  		Wait     00000002 
  350:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  364:  		If  *Var[0]  !&  00200000 
  374:  			ExecWait $Script_SpikeTop_FallDown 
  380:  		EndIf
  388:  	Case  ==  .Event:Death
  394:  		SetConst  *Var[0]  00000001 
  3A4:  		SetConst  *Var[1]  004D0014 
  3B4:  		ExecWait DoNormalHit 
  3C0:  		Wait     0000000A 
  3CC:  		SetConst  *Var[0]  00000001 
  3DC:  		SetConst  *Var[1]  004D0014 
  3EC:  		ExecWait DoDeath 
  3F8:  		Return
  400:  	Case  ==  .Event:RecoverStatus
  40C:  	Case  ==  .Event:ScareAway
  418:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  430:  		SetConst  *Var[0]  00000001 
  440:  		SetConst  *Var[1]  004D0009 
  450:  		SetConst  *Var[2]  004D0014 
  460:  		ExecWait DoScareAway 
  46C:  		Return
  474:  	Default
  47C:  EndSwitch
  484:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  498:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4AC:  Return
  4B4:  End

#new:Script $Script_8021D57C
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[3] )
   18:  If  *Var[3]  ==  00000002 
   28:  	Set  *Var[1]  *Var[2] 
   38:  EndIf
   40:  Return
   48:  End

#new:IntTable $IntTable_8021D5CC
00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015 
00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004 
00000000 00000002 00000000 

#new:Script $Script_SpikeTop_HandleEvent_Floor
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  004D0013 
   80:  		SetConst  *Var[2]  004D0015 
   90:  		ExecWait $Script_8021D57C 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   D4:  		If  *Var[0]  !=  00000002 
   E4:  			SetConst  *Var[0]  00000001 
   F4:  			SetConst  *Var[1]  004D0016 
  104:  			SetConst  *Var[2]  004D0017 
  114:  			ExecWait DoBurnHit 
  120:  		Else
  128:  			SetConst  *Var[0]  00000001 
  138:  			SetConst  *Var[1]  004D0018 
  148:  			SetConst  *Var[2]  004D0018 
  158:  			ExecWait DoBurnHit 
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath
  178:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  190:  		If  *Var[0]  !=  00000002 
  1A0:  			SetConst  *Var[0]  00000001 
  1B0:  			SetConst  *Var[1]  004D0016 
  1C0:  			SetConst  *Var[2]  004D0017 
  1D0:  			ExecWait DoBurnHit 
  1DC:  			SetConst  *Var[0]  00000001 
  1EC:  			SetConst  *Var[1]  004D0017 
  1FC:  			ExecWait DoDeath 
  208:  		Else
  210:  			SetConst  *Var[0]  00000001 
  220:  			SetConst  *Var[1]  004D0018 
  230:  			SetConst  *Var[2]  004D0018 
  240:  			ExecWait DoBurnHit 
  24C:  			SetConst  *Var[0]  00000001 
  25C:  			SetConst  *Var[1]  004D0018 
  26C:  			ExecWait DoDeath 
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:MultibounceHit
  294:  		SetConst  *Var[0]  00000001 
  2A4:  		SetConst  *Var[1]  004D0013 
  2B4:  		SetConst  *Var[2]  004D0015 
  2C4:  		ExecWait $Script_8021D57C 
  2D0:  		ExecWait 8029B998 
  2DC:  	Case  ==  .Event:FlipTrigger
  2E8:  		Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
  300:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000001 00000014 )
  31C:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
  338:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  350:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021C8CC )
  368:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CA68 )
  380:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  39C:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  3B4:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0013 )
  3CC:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  3E8:  		Thread
  3F0:  			Wait     00000001 
  3FC:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  418:  			Wait     00000001 
  424:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD3 )
  440:  			Wait     00000001 
  44C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFA6 )
  468:  			Wait     00000001 
  474:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF79 )
  490:  			Wait     00000001 
  49C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF4C )
  4B8:  			Wait     00000001 
  4C4:  		EndThread
  4CC:  		UseIntBuffer $IntTable_8021D5CC 
  4D8:  		Loop     00000013 
  4E4:  			Get1Int  *Var[0] 
  4F0:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  50C:  			Wait     00000001 
  518:  		EndLoop
  520:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  53C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  574:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  58C:  	Case  ==  .Event:ShockHit
  598:  		SetConst  *Var[0]  00000001 
  5A8:  		SetConst  *Var[1]  004D0013 
  5B8:  		ExecWait DoShockHit 
  5C4:  		SetConst  *Var[0]  00000001 
  5D4:  		SetConst  *Var[1]  004D0013 
  5E4:  		ExecWait 8029BD70 
  5F0:  		SetConst  *Var[0]  00000001 
  600:  		SetConst  *Var[1]  004D0008 
  610:  		ExecWait DoReturnHome 
  61C:  	Case  ==  .Event:ShockDeath
  628:  		SetConst  *Var[0]  00000001 
  638:  		SetConst  *Var[1]  004D0013 
  648:  		ExecWait DoShockHit 
  654:  		SetConst  *Var[0]  00000001 
  664:  		SetConst  *Var[1]  004D0013 
  674:  		ExecWait DoDeath 
  680:  		Return
  688:  	Case  ==  00000017
  694:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  6AC:  		If  *Var[0]  ==  00000001 
  6BC:  			SetConst  *Var[0]  00000001 
  6CC:  			SetConst  *Var[1]  004D000B 
  6DC:  			ExecWait DoImmune 
  6E8:  			Call     SetAnimation 	( .Actor:Self 00000001 004D000E )
  700:  			Wait     00000008 
  70C:  		Else
  714:  			SetConst  *Var[0]  00000001 
  724:  			SetConst  *Var[1]  004D0005 
  734:  			ExecWait DoImmune 
  740:  		EndIf
  748:  	Case  ==  .Event:Immune
  754:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  76C:  		If  *Var[0]  ==  00000001 
  77C:  			SetConst  *Var[0]  00000001 
  78C:  			SetConst  *Var[1]  004D000B 
  79C:  			ExecWait DoImmune 
  7A8:  			Call     SetAnimation 	( .Actor:Self 00000001 004D000C )
  7C0:  			Wait     00000008 
  7CC:  		Else
  7D4:  			SetConst  *Var[0]  00000001 
  7E4:  			SetConst  *Var[1]  004D0005 
  7F4:  			ExecWait DoImmune 
  800:  		EndIf
  808:  	Case  ==  .Event:SpikeTaunt
  814:  		Wait     0000000A 
  820:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  83C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  850:  		If  *Var[3]  &  00080000 
  860:  			Add  *Var[1]  00000009 
  870:  		Else
  878:  			Add  *Var[1]  00000018 
  888:  		EndIf
  890:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8D4:  		Wait     00000014 
  8E0:  	Case  ==  .Event:Death
  8EC:  		SetConst  *Var[0]  00000001 
  8FC:  		SetConst  *Var[1]  004D0013 
  90C:  		SetConst  *Var[2]  004D0015 
  91C:  		ExecWait $Script_8021D57C 
  928:  		ExecWait DoNormalHit 
  934:  		Wait     0000000A 
  940:  		SetConst  *Var[0]  00000001 
  950:  		SetConst  *Var[1]  004D0013 
  960:  		SetConst  *Var[2]  004D0015 
  970:  		ExecWait $Script_8021D57C 
  97C:  		ExecWait DoDeath 
  988:  		Return
  990:  	Case  ==  .Event:MultibounceDeath
  99C:  		SetConst  *Var[0]  00000001 
  9AC:  		SetConst  *Var[1]  004D0013 
  9BC:  		SetConst  *Var[2]  004D0015 
  9CC:  		ExecWait $Script_8021D57C 
  9D8:  		ExecWait 8029B998 
  9E4:  		SetConst  *Var[0]  00000001 
  9F4:  		SetConst  *Var[1]  004D0013 
  A04:  		SetConst  *Var[2]  004D0015 
  A14:  		ExecWait $Script_8021D57C 
  A20:  		ExecWait DoDeath 
  A2C:  		Return
  A34:  	Case  ==  .Event:RecoverStatus
  A40:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  A58:  		If  *Var[0]  ==  00000001 
  A68:  			SetConst  *Var[0]  00000001 
  A78:  			SetConst  *Var[1]  004D0003 
  A88:  			ExecWait DoRecover 
  A94:  		EndIf
  A9C:  	Case  ==  .Event:ScareAway
  AA8:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  AC0:  		If  *Var[0]  ==  00000001 
  AD0:  			SetConst  *Var[0]  00000001 
  AE0:  			SetConst  *Var[1]  004D0008 
  AF0:  			SetConst  *Var[2]  004D0013 
  B00:  			ExecWait DoScareAway 
  B0C:  			Return
  B14:  		Else
  B1C:  			SetConst  *Var[0]  00000001 
  B2C:  			SetConst  *Var[1]  004D0005 
  B3C:  			ExecWait DoImmune 
  B48:  		EndIf
  B50:  	Case  ==  .Event:BeginAirLift
  B5C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  B74:  		If  *Var[0]  ==  00000001 
  B84:  			SetConst  *Var[0]  00000001 
  B94:  			SetConst  *Var[1]  004D0008 
  BA4:  		Else
  BAC:  			SetConst  *Var[0]  00000001 
  BBC:  			SetConst  *Var[1]  004D0005 
  BCC:  		EndIf
  BD4:  		ExecWait DoAirLift 
  BE0:  	Case  ==  .Event:BlowAway
  BEC:  		Call     8026BA04 ( FFFFFF81 00000007 00000000 00000000 )
  C08:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  C20:  		If  *Var[0]  ==  00000001 
  C30:  			SetConst  *Var[0]  00000001 
  C40:  			SetConst  *Var[1]  004D0013 
  C50:  		Else
  C58:  			SetConst  *Var[0]  00000001 
  C68:  			SetConst  *Var[1]  004D0015 
  C78:  		EndIf
  C80:  		ExecWait DoBlowAway 
  C8C:  		Return
  C94:  	Case  ==  .Event:AirLiftFailed
  CA0:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  CB8:  		If  *Var[0]  ==  00000001 
  CC8:  			SetConst  *Var[0]  00000001 
  CD8:  			SetConst  *Var[1]  004D000B 
  CE8:  			ExecWait DoImmune 
  CF4:  			Call     SetAnimation 	( .Actor:Self 00000001 004D000C )
  D0C:  			Wait     00000008 
  D18:  		Else
  D20:  			SetConst  *Var[0]  00000001 
  D30:  			SetConst  *Var[1]  004D0005 
  D40:  			ExecWait DoImmune 
  D4C:  		EndIf
  D54:  	Default
  D5C:  EndSwitch
  D64:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D78:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D8C:  Return
  D94:  End

#new:Script $Script_SpikeTop_TakeTurn_Ceiling
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
   54:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   70:  Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   8C:  Call     $Function_80218380 ( FFFFFFF6 00000014 0000000A 00000014 )
   A8:  Call     BindTakeTurn 	( .Actor:Self $Script_SpikeTop_TakeTurn_Floor )
   BC:  Call     BindHandleEvent 	( .Actor:Self $Script_SpikeTop_HandleEvent_Floor )
   D0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C9D0 )
   E8:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  100:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  11C:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  130:  Mod  *Var[0]  00000004 
  140:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  154:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  170:  Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  18C:  Call     HPBarToHome 	( .Actor:Self )
  19C:  Call     UseCamPreset 	( 0000003F )
  1AC:  Call     CamTargetActor ( .Actor:Self )
  1BC:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  1D4:  Call     GetBattlePhase ( *Var[0] )
  1E4:  If  *Var[0]  ==  .Phase:FirstStrike
  1F4:  	Call     SetGoalToTarget 	( .Actor:Self )
  204:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  220:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  23C:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[4] *Var[2] )
  258:  	Call     SetAnimation 	( .Actor:Self 00000001 004D0001 )
  270:  Else
  278:  	Call     SetAnimation 	( .Actor:Self 00000001 004D0009 )
  290:  	Call     SetGoalToTarget 	( .Actor:Self )
  2A0:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2BC:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D8:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[4] *Var[2] )
  2F4:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  308:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  320:  	Call     SetAnimation 	( .Actor:Self 00000001 004D0001 )
  338:  	Wait     00000008 
  344:  EndIf
  34C:  Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
  368:  Call     GetBattlePhase ( *Var[0] )
  378:  If  *Var[0]  ==  .Phase:FirstStrike
  388:  	Call     UseCamPreset 	( 00000005 )
  398:  	Call     SetCamZoom  	( 000001AE )
  3A8:  	Call     SetCamOffsetZ 	( 00000014 )
  3B8:  	Call     MoveCamOver 	( 0000000A )
  3C8:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  3E0:  EndIf
  3E8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  40C:  Switch  *Var[0] 
  418:  	CaseOR  ==  00000006 
  424:  	CaseOR  ==  00000005 
  430:  		Set  *Var[A]  *Var[0] 
  440:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  454:  		Call     8026B438 ( FFFFFF81 00000001 000000B4 )
  46C:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  484:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A0:  		Sub  *Var[1]  00000018 
  4B0:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  4E0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4FC:  		Set  *Var[1]  00000000 
  50C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  528:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  548:  		If  *Var[A]  ==  00000005 
  558:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call     8026F6EC ( FFFFFF81 )
  594:  		Add  *Var[0]  0000001E 
  5A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  5E0:  		Thread
  5E8:  			Wait     00000005 
  5F4:  			Call     SetAnimation 	( .Actor:Self 00000001 004D0000 )
  60C:  		EndThread
  614:  		Add  *Var[0]  00000014 
  624:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  640:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  660:  		Wait     00000008 
  66C:  		Call     UseCamPreset 	( 00000002 )
  67C:  		Call     8027D7F0 ( )
  688:  		Call     SetGoalToHome 	( .Actor:Self )
  698:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  6AC:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0008 )
  6C4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6E0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  6F8:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  710:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  728:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  73C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  750:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  764:  		Return
  76C:  	EndCaseGroup
  774:  EndSwitch
  77C:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  790:  Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  7A8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C4:  Sub  *Var[1]  00000018 
  7D4:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  804:  Call     SetGoalToTarget 	( .Actor:Self )
  814:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  830:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  84C:  Set  *Var[1]  *Var[4] 
  85C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  878:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  898:  Call     8026F6EC ( FFFFFF81 )
  8A8:  Wait     00000002 
  8B4:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
  8DC:  Switch  *Var[0] 
  8E8:  	CaseOR  ==  00000000 
  8F4:  	CaseOR  ==  00000002 
  900:  		Call     UseCamPreset 	( 00000002 )
  910:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  92C:  		Add  *Var[0]  0000001E 
  93C:  		Set  *Var[1]  00000000 
  94C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  968:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  988:  		Thread
  990:  			Wait     00000005 
  99C:  			Call     SetAnimation 	( .Actor:Self 00000001 004D0000 )
  9B4:  		EndThread
  9BC:  		Add  *Var[0]  00000014 
  9CC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9E8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  A08:  		Wait     00000008 
  A14:  		Call     8027D7F0 ( )
  A20:  		SetConst  *Var[0]  00000001 
  A30:  		SetConst  *Var[1]  004D0008 
  A40:  		ExecWait DoReturnHome 
  A4C:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  A64:  	EndCaseGroup
  A6C:  EndSwitch
  A74:  Label    0000000A 
  A80:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A94:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:  Return
  AB0:  End

#new:Script $Script_SpikeTop_TakeTurn_Floor
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   40:  If  *Var[0]  ==  00000002 
   50:  	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   68:  	Sub  *Var[0]  00000001 
   78:  	If  *Var[0]  >  00000000 
   88:  		Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait     0000001E 
   C8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   E0:  		Call     UseCamPreset 	( 00000002 )
   F0:  	Else
   F8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait     00000014 
  120:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var[0]  00000001 
  148:  		SetConst  *Var[1]  004D0005 
  158:  		SetConst  *Var[2]  004D0003 
  168:  		ExecWait 8029BBB4 
  174:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  188:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  1A0:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
  1BC:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021C8B0 )
  1F0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C9D0 )
  208:  		Call     BindIdle    	( .Actor:Self $Script_Idle_8021CC7C )
  21C:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  234:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  250:  	EndIf
  258:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  26C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  280:  	Return
  288:  EndIf
  290:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  2A4:  Call     UseCamPreset 	( 0000003F )
  2B4:  Call     CamTargetActor ( .Actor:Self )
  2C4:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  2DC:  Call     SetAnimation 	( .Actor:Self 00000001 004D000B )
  2F4:  Wait     0000000A 
  300:  Call     SetAnimation 	( .Actor:Self 00000001 004D000F )
  318:  Thread
  320:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  33C:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  380:  	Wait     0000000A 
  38C:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3D0:  	Wait     00000005 
  3DC:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  420:  EndThread
  428:  Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  43C:  Call     SetAnimation 	( .Actor:Self 00000001 004D000A )
  454:  Wait     00000014 
  460:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  47C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  490:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
  4B4:  Switch  *Var[0] 
  4C0:  	CaseOR  ==  00000006 
  4CC:  	CaseOR  ==  00000005 
  4D8:  		Set  *Var[A]  *Var[0] 
  4E8:  		Thread
  4F0:  			Loop     
  4FC:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  518:  				Add  *Var[0]  0000001E 
  528:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  544:  				If  *Var[0]  >  *Var[3] 
  554:  					BreakLoop
  55C:  				EndIf
  564:  				Wait     00000001 
  570:  			EndLoop
  578:  			Call     UseCamPreset 	( 00000001 )
  588:  			If  *Var[A]  ==  00000005 
  598:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5BC:  			EndIf
  5C4:  			Wait     0000000F 
  5D0:  			Call     UseCamPreset 	( 00000002 )
  5E0:  		EndThread
  5E8:  		Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  		Call     AddToGoalPos 	( .Actor:Self FFFFFF6A 00000000 00000000 )
  614:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  628:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  640:  		Wait     0000000F 
  64C:  		Call     8027D7F0 ( )
  658:  		Call     8026F6EC ( FFFFFF81 )
  668:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  684:  		Call     SetGoalToHome 	( .Actor:Self )
  694:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B0:  		Add  *Var[0]  000000C8 
  6C0:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  6F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  708:  		Wait     0000000A 
  714:  		Call     SetAnimation 	( .Actor:Self 00000001 004D000C )
  72C:  		Wait     0000000A 
  738:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  750:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  764:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  778:  		Return
  780:  	EndCaseGroup
  788:  EndSwitch
  790:  Call     SetGoalToTarget 	( .Actor:Self )
  7A0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  7B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  7CC:  Wait     00000002 
  7D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
  800:  Switch  *Var[0] 
  80C:  	CaseOR  ==  00000000 
  818:  	CaseOR  ==  00000002 
  824:  		Call     UseCamPreset 	( 00000002 )
  834:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  850:  		Add  *Var[0]  00000028 
  860:  		Set  *Var[1]  00000000 
  870:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  884:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8A0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8C0:  		Add  *Var[0]  0000001E 
  8D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8EC:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  90C:  		Add  *Var[0]  00000014 
  91C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  938:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  958:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  970:  		Wait     00000008 
  97C:  		Call     8027D7F0 ( )
  988:  		Call     8026F6EC ( FFFFFF81 )
  998:  		SetConst  *Var[0]  00000001 
  9A8:  		SetConst  *Var[1]  004D0008 
  9B8:  		ExecWait DoReturnHome 
  9C4:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  9DC:  	EndCaseGroup
  9E4:  EndSwitch
  9EC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A00:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A14:  Return
  A1C:  End

#new:IdleAnimations $IdleAnimations_8021F890
.Status:Normal    00400001
.Status:Stone     00400000
.Status:Sleep     00400004
.Status:Poison    00400001
.Status:Stop      00400000
.Status:Static    00400001
.Status:Paralyze  00400000
.Status:Dizzy     0040000A
.Status:Fear      0040000A
.Status:End

#new:DefenseTable $DefenseTable_8021F8DC
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End

#new:StatusTable $StatusTable_8021F8F0
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021F99C
00800000 01000000 FE2600FF $IdleAnimations_8021F890 $DefenseTable_8021F8DC 00000000 00000000 FFFB0000 00000000 

#new:Actor $MediGuy
% stats
[Index]        22b 
[Level]        14`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021F8F0 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021F99C 
[Script]      $Script_Init_8021F9E8 
% move effectiveness
[Escape]       60`b 
[Item]         70`b 
[AirLift]      90`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   12`b  31`b % dx dy

#new:Script $Script_Init_8021F9E8
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80220DCC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021FA8C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021FC60 )
   3C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   58:  Sub  *Var[1]  00000005 
   68:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   84:  Call     HPBarToHome 	( .Actor:Self )
   94:  Return
   9C:  End

#new:Script $Script_Idle_8021FA8C
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000018 )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   68:  	Call     $Function_80218450 ( FFFFFFF6 00000014 0000000A 00000014 )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000026 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   C4:  	Call     $Function_80218450 ( FFFFFFF6 00000014 0000000C 0000001F )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_8021FB9C
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
   30:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   44:  Call     SetAnimation 	( .Actor:Self 00000001 00400003 )
   5C:  Call     SetGoalToHome 	( .Actor:Self )
   6C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
   88:  Call     SetAnimation 	( .Actor:Self 00000001 00400001 )
   A0:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   B4:  Return
   BC:  End

#new:Script $Script_HandleEvent_8021FC60
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00400006 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00400008 
   C0:  		SetConst  *Var[2]  00400009 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00400008 
  108:  		SetConst  *Var[2]  00400009 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00400009 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00400006 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00400006 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00400007 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  00400006 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  00400006 
  254:  		ExecWait 8029BD70 
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait $Script_8021FB9C 
  280:  	Case  ==  .Event:ShockDeath
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  00400006 
  2AC:  		ExecWait DoShockHit 
  2B8:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00400007 
  2F8:  		ExecWait DoDeath 
  304:  		Return
  30C:  	CaseOR  ==  00000017
  318:  	CaseOR  ==  .Event:Immune
  324:  	CaseOR  ==  .Event:AirLiftFailed
  330:  		SetConst  *Var[0]  00000001 
  340:  		SetConst  *Var[1]  00400001 
  350:  		ExecWait DoImmune 
  35C:  	EndCaseGroup
  364:  	Case  ==  .Event:Death
  370:  		SetConst  *Var[0]  00000001 
  380:  		SetConst  *Var[1]  00400006 
  390:  		ExecWait DoNormalHit 
  39C:  		Wait     0000000A 
  3A8:  		SetConst  *Var[0]  00000001 
  3B8:  		SetConst  *Var[1]  00400007 
  3C8:  		ExecWait DoDeath 
  3D4:  		Return
  3DC:  	Case  ==  .Event:BeginFirstStrike
  3E8:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  404:  		Call     HPBarToCurrent ( .Actor:Self )
  414:  	Case  ==  .Event:EndFirstStrike
  420:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  434:  		ExecWait $Script_8021FB9C 
  440:  		Call     HPBarToHome 	( .Actor:Self )
  450:  	Case  ==  .Event:RecoverStatus
  45C:  		SetConst  *Var[0]  00000001 
  46C:  		SetConst  *Var[1]  00400001 
  47C:  		ExecWait DoRecover 
  488:  	Case  ==  .Event:ScareAway
  494:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4AC:  		SetConst  *Var[0]  00000001 
  4BC:  		SetConst  *Var[1]  00400003 
  4CC:  		SetConst  *Var[2]  0040000B 
  4DC:  		ExecWait DoScareAway 
  4E8:  		Return
  4F0:  	Case  ==  .Event:BeginAirLift
  4FC:  		SetConst  *Var[0]  00000001 
  50C:  		SetConst  *Var[1]  00400006 
  51C:  		ExecWait DoAirLift 
  528:  	Case  ==  .Event:BlowAway
  534:  		SetConst  *Var[0]  00000001 
  544:  		SetConst  *Var[1]  00400006 
  554:  		ExecWait DoBlowAway 
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  58C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5A0:  Return
  5A8:  End

#new:Script $Script_FlyingAttack
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Thread
   7C:  	SetF  *Var[0]  *Fixed[0.0] 
   8C:  	Loop     0000000F 
   98:  		AddF  *Var[0]  *Fixed[2.0] 
   A8:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
   C8:  		Wait     00000001 
   D4:  	EndLoop
   DC:  EndThread
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00400003 )
   FC:  Call     SetGoalToTarget 	( .Actor:Self )
  10C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  128:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  13C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
  158:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  17C:  Switch  *Var[A] 
  188:  	CaseOR  ==  00000006 
  194:  	CaseOR  ==  00000005 
  1A0:  		Wait     0000000A 
  1AC:  		Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
  1C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1D4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1E8:  		Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  200:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  21C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  238:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  258:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  274:  		Call     PlaySoundAtActor 	( .Actor:Self 000002F9 )
  288:  		Thread
  290:  			Wait     00000005 
  29C:  			Set  *Var[0]  00000000 
  2AC:  			Loop     0000003C 
  2B8:  				Call     $Function_8021851C ( *Var[0] *Var[1] 0000000F 0000003C *Fixed[30.0] )
  2D8:  				Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[1] )
  2F8:  				Add  *Var[0]  00000001 
  308:  				Wait     00000001 
  314:  			EndLoop
  31C:  		EndThread
  324:  		Call     SetGoalToTarget 	( .Actor:Self )
  334:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  350:  		Sub  *Var[0]  00000032 
  360:  		Add  *Var[2]  00000001 
  370:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  38C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  3B8:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  3D4:  		If  *Var[A]  ==  00000005 
  3E4:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  408:  		EndIf
  410:  		Wait     0000001E 
  41C:  		Call     8026F6EC ( FFFFFF81 )
  42C:  		Call     UseCamPreset 	( 00000002 )
  43C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  458:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  46C:  		ExecWait $Script_8021FB9C 
  478:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  490:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4A4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  4B8:  		Return
  4C0:  	EndCaseGroup
  4C8:  EndSwitch
  4D0:  Wait     0000000A 
  4DC:  Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
  4F0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  504:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  518:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  530:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  54C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  568:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  588:  Set  *Var[A]  *Var[0] 
  598:  Set  *Var[B]  *Var[1] 
  5A8:  Set  *Var[C]  *Var[2] 
  5B8:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  5D4:  Call     PlaySoundAtActor 	( .Actor:Self 000002F9 )
  5E8:  Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  614:  Add  *Var[2]  00000001 
  624:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  640:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  654:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  66C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  688:  Wait     00000002 
  694:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  6BC:  Switch  *Var[0] 
  6C8:  	CaseOR  ==  00000000 
  6D4:  	CaseOR  ==  00000002 
  6E0:  		Call     8026F6EC ( FFFFFF81 )
  6F0:  		Call     UseCamPreset 	( 00000002 )
  700:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  71C:  		Add  *Var[0]  0000001E 
  72C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  740:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  75C:  		Call     80279728 ( FFFFFF81 0000000A *Fixed[2.0] )
  774:  		Wait     00000014 
  780:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  794:  		ExecWait $Script_8021FB9C 
  7A0:  	EndCaseGroup
  7A8:  EndSwitch
  7B0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7C4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7D8:  Return
  7E0:  End

#new:Script $Script_HealOneAlly
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     UseIdleAnimation 	( .Actor:Self .False )
   24:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   38:  Call     UseCamPreset 	( 0000003F )
   48:  Call     CamTargetActor ( .Actor:Self )
   58:  Call     GetOwnerID  	( *Var[0] )
   68:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
   98:  Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
   AC:  Call     PlaySoundAtActor 	( .Actor:Self 00000000 )
   C0:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
   D8:  Add  *Var[2]  00000032 
   E8:  Call     PlayEffect  	( {FX:Sparkles:Random} *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  Call     PlayEffect  	( {FX:Recover:LittleHeart} *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  Wait     0000001E 
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 00400001 )
  194:  Wait     0000000A 
  1A0:  Call     UseCamPreset 	( 0000003F )
  1B0:  Call     CamTargetActor ( *Var[A] )
  1C0:  Call     GetEnemyMaxHP 	( *Var[A] *Var[4] )
  1D4:  Mul  *Var[4]  0000003C 
  1E4:  Div  *Var[4]  00000064 
  1F4:  Thread
  1FC:  	Wait     00000005 
  208:  	Call     PlaySoundAtActor 	( *Var[A] 0000206D )
  21C:  	Call     PlaySoundAtActor 	( *Var[A] 00000214 )
  230:  	Wait     0000001E 
  23C:  	Call     PlaySoundAtActor 	( *Var[A] 0000025C )
  250:  EndThread
  258:  Thread
  260:  	Call     8026BF48 ( 00000001 )
  270:  	Call     HealActor   	( *Var[A] *Var[4] 00000000 )
  288:  	Call     8026BF48 ( 00000000 )
  298:  EndThread
  2A0:  Call     8027114C ( )
  2AC:  Call     UseCamPreset 	( 00000002 )
  2BC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  2E4:  Return
  2EC:  End

#new:Script $Script_80220CEC
    0:  Call     CreateTargetList 	( 00000002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000000 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   3C:  Call     GetActorHP  	( *Var[0] *Var[2] )
   50:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
   64:  If  *Var[2]  !=  *Var[3] 
   74:  	Call     GetOwnerTarget ( *Var[0] *Var[1] )
   88:  	Return
   90:  EndIf
   98:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   AC:  If  *Var[0]  !=  FFFFFFFF 
   BC:  	Goto     00000000 
   C8:  EndIf
   D0:  Return
   D8:  End

#new:Script $Script_TakeTurn_80220DCC
    0:  ExecWait $Script_80220CEC 
    C:  If  *Var[0]  ==  FFFFFFFF 
   1C:  	ExecWait $Script_FlyingAttack 
   28:  Else
   30:  	Call     RandInt     	( 000003E8 *Var[A] )
   44:  	If  *Var[A]  <  00000258 
   54:  		ExecWait $Script_HealOneAlly 
   60:  	Else
   68:  		ExecWait $Script_FlyingAttack 
   74:  	EndIf
   7C:  EndIf
   84:  Return
   8C:  End

% Origin: HINT
#new:DefenseTable $DefenseTable_80220E60
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80220E6C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80220E78
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80220F24
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:SpriteTable $SpriteTable_80220FD0
00800000 01000000 022300FF $IdleAnimations_802210B0 $DefenseTable_80220E60 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_80220FF4
00020001 01000000 022300FF $IdleAnimations_802210B0 $DefenseTable_80220E6C 00800000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_802210FC $DefenseTable_80220E6C 00000000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80221148 $DefenseTable_80220E6C 00000000 00000000 00000000 00000000 

% Origin: HINT
#new:Actor $RMagikoopa
% stats
[Index]        51b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80220E78 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80220FD0 
[Script]      $Script_Init_80223298 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingRMagikoopa
% stats
[Index]        52b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80220F24 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80220FF4 
[Script]      $Script_Init_8022333C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_802210B0
.Status:Normal    00560101
.Status:Stone     00560100
.Status:Sleep     00560108
.Status:Poison    00560101
.Status:Stop      00560100
.Status:Static    00560101
.Status:Paralyze  00560100
.Status:Dizzy     00560107
.Status:Fear      00560107
.Status:End

#new:IdleAnimations $IdleAnimations_802210FC
.Status:Normal    00570101
.Status:Stone     00570100
.Status:Sleep     00570108
.Status:Poison    00570101
.Status:Stop      00570100
.Status:Static    00570101
.Status:Paralyze  00570100
.Status:Dizzy     00570107
.Status:Fear      00570107
.Status:End

#new:IdleAnimations $IdleAnimations_80221148
.Status:Normal    0057010A
.Status:End

#new:Script $Script_Idle_80221154
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80221164
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560104 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560105 
   C0:  		SetConst  *Var[2]  00560106 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560105 
  108:  		SetConst  *Var[2]  00560106 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560106 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560104 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560104 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560104 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560101 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560104 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560104 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560101 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
  3B8:  		ExecWait $Script_RMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560102 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560104 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

#new:Script $Script_8022167C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218788 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_80221788
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218880 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80221164 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000051 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80220E78 )
  4FC:  Call     $Function_802187B4 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_HandleEvent_80221D84
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022167C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570104 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022167C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570104 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_80221788 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022167C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570105 
  134:  		SetConst  *Var[2]  00570106 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_80221788 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570105 
  190:  		SetConst  *Var[2]  00570106 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570106 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570104 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570104 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570104 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570101 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570104 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570104 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570101 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570104 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  504:  		ExecWait $Script_RMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570102 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570104 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_RMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570103 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_80218630 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570103 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_80218630 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_RMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560103 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_RMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

% Origin: HINT
#new:Script $Script_Init_80223298
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80221154 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802233E0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80221164 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_Init_8022333C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80221154 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802233E0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80221D84 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_802233E0
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_802188D8 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetActorAttackBoost 	( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  <  00000003 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_RMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_RMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_RMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Call     PlaySoundAtActor 	( *Var[8] 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call     8026BF48 ( 00000001 )
  6A8:  	Call     BoostAttack 	( *Var[8] 00000001 )
  6BC:  	Call     8026BF48 ( 00000000 )
  6CC:  EndThread
  6D4:  Call     8027114C ( )
  6E0:  Call     UseCamPreset 	( 00000002 )
  6F0:  Wait     0000000A 
  6FC:  Call     8027D7F0 ( )
  708:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  71C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  730:  Return
  738:  End

% Origin: HINT
#new:DefenseTable $DefenseTable_80223B20
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80223B2C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80223B38
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80223BE4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:SpriteTable $SpriteTable_80223C90
00800000 01000000 022300FF $IdleAnimations_80223D70 $DefenseTable_80223B20 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_80223CB4
00020001 01000000 022300FF $IdleAnimations_80223D70 $DefenseTable_80223B2C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_80223DBC $DefenseTable_80223B2C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80223E08 $DefenseTable_80223B2C 00000000 00000000 00000000 00000000 

% Origin: HINT
#new:Actor $WMagikoopa
% stats
[Index]        59b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80223B38 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80223C90 
[Script]      $Script_Init_80225F58 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingWMagikoopa
% stats
[Index]        5Ab 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223BE4 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80223CB4 
[Script]      $Script_Init_80225FBC 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_80223D70
.Status:Normal    00560301
.Status:Stone     00560300
.Status:Sleep     00560308
.Status:Poison    00560301
.Status:Stop      00560300
.Status:Static    00560301
.Status:Paralyze  00560300
.Status:Dizzy     00560307
.Status:Fear      00560307
.Status:End

#new:IdleAnimations $IdleAnimations_80223DBC
.Status:Normal    00570301
.Status:Stone     00570300
.Status:Sleep     00570308
.Status:Poison    00570301
.Status:Stop      00570300
.Status:Static    00570301
.Status:Paralyze  00570300
.Status:Dizzy     00570307
.Status:Fear      00570307
.Status:End

#new:IdleAnimations $IdleAnimations_80223E08
.Status:Normal    0057030A
.Status:End

#new:Script $Script_Idle_80223E14
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80223E24
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560304 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560305 
   C0:  		SetConst  *Var[2]  00560306 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560305 
  108:  		SetConst  *Var[2]  00560306 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560306 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560304 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560304 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560304 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560301 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560304 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560304 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560301 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  3B8:  		ExecWait $Script_WMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560302 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560304 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

#new:Script $Script_8022433C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218AF8 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_80224448
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218BF0 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80223E24 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000059 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80223B38 )
  4FC:  Call     $Function_80218B24 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_HandleEvent_80224A44
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022433C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570304 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022433C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570304 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_80224448 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022433C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570305 
  134:  		SetConst  *Var[2]  00570306 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_80224448 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570305 
  190:  		SetConst  *Var[2]  00570306 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570306 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570304 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570304 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570304 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570301 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570304 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570304 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570301 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570304 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  504:  		ExecWait $Script_WMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570302 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570304 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_WMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_802189A0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_802189A0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_WMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560303 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_WMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

% Origin: HINT
#new:Script $Script_Init_80225F58
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80223E14 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802274E4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80223E24 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Init_80225FBC
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80223E14 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802274E4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224A44 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_HealOne
    0:  Set  *Var[8]  00000000 
   10:  Set  *Var[9]  0000270F 
   20:  Call     CreateTargetList 	( 00008002 )
   30:  Call     InitTargetIterator 	( )
   3C:  Label    00000000 
   48:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   5C:  Call     GetActorHP  	( *Var[0] *Var[2] )
   70:  Call     $Function_80218D0C ( *Var[3] *Var[4] )
   84:  If  *Var[3]  >  *Var[4] 
   94:  	Set  *Var[3]  *Var[4] 
   A4:  EndIf
   AC:  Call     $Function_80218D6C ( *Var[0] *Var[1] *Var[5] )
   C4:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
   D8:  Add  *Var[5]  *Var[6] 
   E8:  Sub  *Var[3]  *Var[5] 
   F8:  Sub  *Var[2]  *Var[3] 
  108:  Call     $Function_80218C48 ( *Var[0] *Var[A] )
  11C:  If  *Var[A]  ==  00000000 
  12C:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  140:  	Call     GetActorHP  	( *Var[0] *Var[B] )
  154:  	If  *Var[A]  !=  *Var[B] 
  164:  		If  *Var[2]  <  *Var[9] 
  174:  			Set  *Var[8]  *Var[0] 
  184:  			Set  *Var[9]  *Var[2] 
  194:  		Else
  19C:  			If  *Var[2]  ==  *Var[9] 
  1AC:  				If  *Var[0]  <  *Var[8] 
  1BC:  					Set  *Var[8]  *Var[0] 
  1CC:  					Set  *Var[9]  *Var[2] 
  1DC:  				EndIf
  1E4:  			EndIf
  1EC:  		EndIf
  1F4:  	EndIf
  1FC:  EndIf
  204:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  218:  If  *Var[0]  !=  FFFFFFFF 
  228:  	Goto     00000000 
  234:  EndIf
  23C:  If  *Var[8]  !=  00000000 
  24C:  	Goto     00000064 
  258:  EndIf
  260:  Set  *Var[8]  00000000 
  270:  Set  *Var[9]  0000270F 
  280:  Call     CreateTargetList 	( 00008002 )
  290:  Call     InitTargetIterator 	( )
  29C:  Label    00000001 
  2A8:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2BC:  Call     GetActorHP  	( *Var[0] *Var[2] )
  2D0:  Call     $Function_80218D0C ( *Var[3] *Var[4] )
  2E4:  If  *Var[3]  >  *Var[4] 
  2F4:  	Set  *Var[3]  *Var[4] 
  304:  EndIf
  30C:  Call     $Function_80218D6C ( *Var[0] *Var[1] *Var[5] )
  324:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
  338:  Add  *Var[5]  *Var[6] 
  348:  Sub  *Var[3]  *Var[5] 
  358:  Sub  *Var[2]  *Var[4] 
  368:  Set  *Flag[00]  00000000 
  378:  Call     GetActorType 	( *Var[0] *Var[A] )
  38C:  If  *Var[A]  ==  00000047 
  39C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  3B4:  	If  *Var[A]  ==  00000001 
  3C4:  		Set  *Flag[00]  00000001 
  3D4:  	EndIf
  3DC:  EndIf
  3E4:  Call     GetOwnerID  	( *Var[A] )
  3F4:  If  *Var[A]  !=  *Var[0] 
  404:  	If  *Flag[00]  ==  00000000 
  414:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  428:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  43C:  		If  *Var[A]  !=  *Var[B] 
  44C:  			If  *Var[2]  <  *Var[9] 
  45C:  				Set  *Var[8]  *Var[0] 
  46C:  				Set  *Var[9]  *Var[2] 
  47C:  			Else
  484:  				If  *Var[2]  ==  *Var[9] 
  494:  					If  *Var[0]  <  *Var[8] 
  4A4:  						Set  *Var[8]  *Var[0] 
  4B4:  						Set  *Var[9]  *Var[2] 
  4C4:  					EndIf
  4CC:  				EndIf
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  	EndIf
  4EC:  EndIf
  4F4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  508:  If  *Var[0]  !=  FFFFFFFF 
  518:  	Goto     00000001 
  524:  EndIf
  52C:  If  *Var[8]  !=  00000000 
  53C:  	Goto     00000064 
  548:  EndIf
  550:  Call     CreateTargetList 	( 00008002 )
  560:  Call     InitTargetIterator 	( )
  56C:  Label    00000002 
  578:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  58C:  Set  *Flag[00]  00000000 
  59C:  Call     GetActorType 	( *Var[0] *Var[A] )
  5B0:  If  *Var[A]  ==  00000047 
  5C0:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  5D8:  	If  *Var[A]  ==  00000001 
  5E8:  		Set  *Flag[00]  00000001 
  5F8:  	EndIf
  600:  EndIf
  608:  Call     GetOwnerID  	( *Var[A] )
  618:  If  *Var[A]  !=  *Var[0] 
  628:  	If  *Flag[00]  ==  00000000 
  638:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  64C:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  660:  		If  *Var[A]  !=  *Var[B] 
  670:  			Set  *Var[8]  *Var[0] 
  680:  			Goto     00000064 
  68C:  		EndIf
  694:  	EndIf
  69C:  EndIf
  6A4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  6B8:  If  *Var[0]  !=  FFFFFFFF 
  6C8:  	Goto     00000002 
  6D4:  EndIf
  6DC:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[A] )
  6F0:  Call     GetActorHP  	( .Actor:Self *Var[B] )
  704:  If  *Var[A]  !=  *Var[B] 
  714:  	Set  *Var[8]  FFFFFF81 
  724:  	Goto     00000064 
  730:  EndIf
  738:  Call     CreateTargetList 	( 00008002 )
  748:  Call     InitTargetIterator 	( )
  754:  Label    00000003 
  760:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  774:  Call     GetOwnerID  	( *Var[A] )
  784:  If  *Var[A]  !=  *Var[0] 
  794:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  7A8:  	If  *Var[0]  &  00000200 
  7B8:  		ExecWait $Script_WMagikoopa_ShapeSpell 
  7C4:  	Else
  7CC:  		ExecWait $Script_WMagikoopa_WandStrike 
  7D8:  	EndIf
  7E0:  	Return
  7E8:  EndIf
  7F0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  804:  If  *Var[0]  !=  FFFFFFFF 
  814:  	Goto     00000003 
  820:  EndIf
  828:  ExecWait $Script_WMagikoopa_RunAway 
  834:  Return
  83C:  Label    00000064 
  848:  Call     RandInt     	( 000003E8 *Var[0] )
  85C:  If  *Var[0]  >  000002EE 
  86C:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  880:  	If  *Var[0]  &  00000200 
  890:  		ExecWait $Script_WMagikoopa_ShapeSpell 
  89C:  	Else
  8A4:  		ExecWait $Script_WMagikoopa_WandStrike 
  8B0:  	EndIf
  8B8:  	Return
  8C0:  EndIf
  8C8:  Call     UseIdleAnimation 	( .Actor:Self .False )
  8DC:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  8F0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  904:  Call     UseCamPreset 	( 0000000E )
  914:  Call     CamTargetActor ( .Actor:Self )
  924:  Call     MoveCamOver 	( 0000000F )
  934:  Wait     0000000F 
  940:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  954:  If  *Var[0]  !&  00000200 
  964:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  97C:  Else
  984:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  99C:  EndIf
  9A4:  Wait     00000005 
  9B0:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  9C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  9D8:  If  *Var[0]  !&  00000200 
  9E8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A04:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  A18:  	If  *Var[A]  &  00080000 
  A28:  		Sub  *Var[0]  00000006 
  A38:  		Add  *Var[1]  0000000C 
  A48:  		Sub  *Var[2]  00000002 
  A58:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  	Else
  AA4:  		Sub  *Var[0]  00000010 
  AB4:  		Add  *Var[1]  0000001F 
  AC4:  		Sub  *Var[2]  00000002 
  AD4:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B18:  	EndIf
  B20:  Else
  B28:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B44:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  B58:  	If  *Var[A]  &  00080000 
  B68:  		Sub  *Var[0]  0000000C 
  B78:  		Add  *Var[1]  0000000E 
  B88:  		Sub  *Var[2]  00000002 
  B98:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BDC:  	Else
  BE4:  		Sub  *Var[0]  0000001E 
  BF4:  		Add  *Var[1]  00000024 
  C04:  		Sub  *Var[2]  00000002 
  C14:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C58:  	EndIf
  C60:  EndIf
  C68:  Wait     0000001E 
  C74:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  C88:  If  *Var[0]  !&  00000200 
  C98:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  CB0:  Else
  CB8:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  CD0:  EndIf
  CD8:  Wait     00000005 
  CE4:  Thread
  CEC:  	Wait     00000005 
  CF8:  	Call     PlaySoundAtActor 	( *Var[8] 0000206D )
  D0C:  	Call     PlaySoundAtActor 	( *Var[8] 00000214 )
  D20:  	Wait     0000001E 
  D2C:  	Call     PlaySoundAtActor 	( *Var[8] 0000025C )
  D40:  EndThread
  D48:  Thread
  D50:  	Call     8026BF48 ( 00000001 )
  D60:  	Call     HealActor   	( *Var[8] 00000005 00000000 )
  D78:  	Call     8026BF48 ( 00000000 )
  D88:  EndThread
  D90:  Call     8027114C ( )
  D9C:  Call     UseCamPreset 	( 00000002 )
  DAC:  Wait     0000000A 
  DB8:  Call     8027D7F0 ( )
  DC4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DD8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  DEC:  Return
  DF4:  End

#new:Script $Script_HealAll
    0:  Call     RandInt     	( 000003E8 *Var[0] )
   14:  If  *Var[0]  >  000002EE 
   24:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
   38:  	If  *Var[0]  &  00000200 
   48:  		ExecWait $Script_WMagikoopa_ShapeSpell 
   54:  	Else
   5C:  		ExecWait $Script_WMagikoopa_WandStrike 
   68:  	EndIf
   70:  	Return
   78:  EndIf
   80:  Call     UseIdleAnimation 	( .Actor:Self .False )
   94:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   A8:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   BC:  Call     UseCamPreset 	( 0000000E )
   CC:  Call     CamTargetActor ( .Actor:Self )
   DC:  Call     MoveCamOver 	( 0000000F )
   EC:  Wait     0000000F 
   F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  10C:  If  *Var[0]  !&  00000200 
  11C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  134:  Else
  13C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  154:  EndIf
  15C:  Wait     00000005 
  168:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  17C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  190:  If  *Var[0]  !&  00000200 
  1A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1D0:  	If  *Var[A]  &  00080000 
  1E0:  		Sub  *Var[0]  00000006 
  1F0:  		Add  *Var[1]  0000000C 
  200:  		Sub  *Var[2]  00000002 
  210:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  254:  	Else
  25C:  		Sub  *Var[0]  00000010 
  26C:  		Add  *Var[1]  0000001F 
  27C:  		Sub  *Var[2]  00000002 
  28C:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	EndIf
  2D8:  Else
  2E0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  310:  	If  *Var[A]  &  00080000 
  320:  		Sub  *Var[0]  0000000C 
  330:  		Add  *Var[1]  0000000E 
  340:  		Sub  *Var[2]  00000002 
  350:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  394:  	Else
  39C:  		Sub  *Var[0]  0000001E 
  3AC:  		Add  *Var[1]  00000024 
  3BC:  		Sub  *Var[2]  00000002 
  3CC:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  410:  	EndIf
  418:  EndIf
  420:  Wait     0000001E 
  42C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  440:  If  *Var[0]  !&  00000200 
  450:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  468:  Else
  470:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  488:  EndIf
  490:  Wait     00000005 
  49C:  Call     CreateTargetList 	( 00008002 )
  4AC:  Call     InitTargetIterator 	( )
  4B8:  Label    00000000 
  4C4:  Set  *Flag[00]  00000000 
  4D4:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  4E8:  Call     GetActorType 	( *Var[0] *Var[1] )
  4FC:  If  *Var[1]  ==  00000047 
  50C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  524:  	If  *Var[1]  ==  00000001 
  534:  		Set  *Flag[00]  00000001 
  544:  	EndIf
  54C:  EndIf
  554:  If  *Flag[00]  ==  00000000 
  564:  	Thread
  56C:  		Wait     00000005 
  578:  		Call     PlaySoundAtActor 	( *Var[0] 0000206D )
  58C:  		Call     PlaySoundAtActor 	( *Var[0] 00000214 )
  5A0:  		Wait     0000001E 
  5AC:  		Call     PlaySoundAtActor 	( *Var[0] 0000025C )
  5C0:  	EndThread
  5C8:  	Thread
  5D0:  		Call     8026BF48 ( 00000001 )
  5E0:  		Call     HealActor   	( *Var[0] 00000003 00000001 )
  5F8:  		Call     8026BF48 ( 00000000 )
  608:  	EndThread
  610:  EndIf
  618:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  62C:  If  *Var[0]  !=  FFFFFFFF 
  63C:  	Goto     00000000 
  648:  EndIf
  650:  Call     8027114C ( )
  65C:  Wait     00000001 
  668:  Call     UseCamPreset 	( 00000002 )
  678:  Wait     0000000A 
  684:  Call     8027D7F0 ( )
  690:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B8:  Return
  6C0:  End

#new:Script $Script_TakeTurn_802274E4
    0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_WMagikoopa_RunAway 
   34:  	Return
   3C:  EndIf
   44:  Set  *Var[A]  00000000 
   54:  Set  *Var[B]  00000000 
   64:  Call     CreateTargetList 	( 00008002 )
   74:  Call     InitTargetIterator 	( )
   80:  Label    00000000 
   8C:  Set  *Flag[00]  00000000 
   9C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   B0:  Call     GetActorType 	( *Var[0] *Var[1] )
   C4:  If  *Var[1]  ==  00000047 
   D4:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
   EC:  	If  *Var[1]  ==  00000001 
   FC:  		Set  *Flag[00]  00000001 
  10C:  	EndIf
  114:  EndIf
  11C:  If  *Flag[00]  ==  00000000 
  12C:  	Call     GetActorHP  	( *Var[0] *Var[2] )
  140:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  154:  	If  *Var[2]  !=  *Var[3] 
  164:  		Add  *Var[A]  00000001 
  174:  	EndIf
  17C:  	Add  *Var[B]  00000001 
  18C:  EndIf
  194:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1A8:  If  *Var[0]  !=  FFFFFFFF 
  1B8:  	Goto     00000000 
  1C4:  EndIf
  1CC:  Mul  *Var[A]  00000064 
  1DC:  Div  *Var[A]  *Var[B] 
  1EC:  Switch  *Var[A] 
  1F8:  	Case  >=  0000003C 
  204:  		ExecWait $Script_HealAll 
  210:  	Case  ==  00000000 
  21C:  		Call     GetActorFlags 	( .Actor:Self *Var[0] )
  230:  		If  *Var[0]  &  00000200 
  240:  			ExecWait $Script_WMagikoopa_ShapeSpell 
  24C:  		Else
  254:  			ExecWait $Script_WMagikoopa_WandStrike 
  260:  		EndIf
  268:  	Default
  270:  		ExecWait $Script_HealOne 
  27C:  EndSwitch
  284:  Return
  28C:  End

PADDING: 80227778 to 80227780 (0059BA68 to 0059BA70)
00000000 00000000 

#new:Script $Script_BeforeBattle_80227780
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000011 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_802277D0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802277E0
0000000E 0000000F 00000018 00000019 0000001A 00000000 

#new:Stage $Stage_802277F8
$ASCII_8022A090  % kzn_tex
$ASCII_8022A080  % kzn_bt01_shape
$ASCII_8022A070  % kzn_bt01_hit
$Script_BeforeBattle_80227780 
$Script_AfterBattle_802277D0 
00000000 
$ForegroundModelList_802277E0 
00000000 
00000000 
00000000 

#new:Script $Script_BeforeBattle_80227820
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8022785C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022786C
0000000E 0000000F 00000018 00000019 0000001A 00000000 

#new:Stage $Stage_80227884
$ASCII_8022A0B8  % kzn_tex
$ASCII_8022A0A8  % kzn_bt01_shape
$ASCII_8022A098  % kzn_bt01_hit
$Script_BeforeBattle_80227820 
$Script_AfterBattle_8022785C 
00000000 
$ForegroundModelList_8022786C 
00000000 
00000000 
00000000 

PADDING: 802278AC to 802278B0 (0059BB9C to 0059BBA0)
00000000 

#new:Script $Script_802278B0
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   6C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   88:  	Sub  *Var[0]  FFFFFED4 
   98:  	Sub  *Var[1]  FFFFFE0C 
   A8:  	Wait     00000001 
   B4:  EndLoop
   BC:  Return
   C4:  End

% Origin: HEURISTIC
#new:Script $Script_8022797C
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00004000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_80227A2C
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[9]  *Var[1] 
   20:  Set  *Var[8]  *Var[2] 
   30:  Set  *Var[7]  *Var[3] 
   40:  Label    00000000 
   4C:  Set  *Var[2]  *Var[8] 
   5C:  Add  *Var[2]  *Var[9] 
   6C:  Call     MakeLerp    	( *Var[8] *Var[2] *Var[7] 00000000 )
   88:  Loop     
   94:  	Call     UpdateLerp  	( )
   A0:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
   BC:  	Wait     00000001 
   C8:  	If  *Var[1]  ==  00000000 
   D8:  		BreakLoop
   E0:  	EndIf
   E8:  EndLoop
   F0:  Set  *Var[2]  *Var[8] 
  100:  Add  *Var[2]  *Var[9] 
  110:  Call     MakeLerp    	( *Var[2] *Var[8] *Var[7] 00000000 )
  12C:  Loop     
  138:  	Call     UpdateLerp  	( )
  144:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
  160:  	Wait     00000001 
  16C:  	If  *Var[1]  ==  00000000 
  17C:  		BreakLoop
  184:  	EndIf
  18C:  EndLoop
  194:  Goto     00000000 
  1A0:  Return
  1A8:  End

#new:Script $Script_BeforeBattle_80227BDC
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000019 
   3C:  Set  *Var[1]  00000000 
   4C:  Exec     $Script_802278B0 
   58:  Set  *Var[0]  00000006 
   68:  Set  *Var[1]  00000001 
   78:  Exec     $Script_802278B0 
   84:  Set  *Var[0]  00000007 
   94:  Set  *Var[1]  00000002 
   A4:  Exec     $Script_802278B0 
   B0:  Set  *Var[0]  00000009 
   C0:  Set  *Var[1]  00000003 
   D0:  Exec     $Script_802278B0 
   DC:  Set  *Var[0]  0000000A 
   EC:  Set  *Var[1]  00000004 
   FC:  Exec     $Script_802278B0 
  108:  Set  *Var[0]  0000000C 
  118:  Set  *Var[1]  00000005 
  128:  Exec     $Script_802278B0 
  134:  Set  *Var[0]  0000000D 
  144:  Set  *Var[1]  00000006 
  154:  Exec     $Script_802278B0 
  160:  Set  *Var[0]  00000018 
  170:  Set  *Var[1]  000000B4 
  180:  Set  *Var[2]  00000000 
  190:  Set  *Var[3]  000000C8 
  1A0:  Exec     $Script_80227A2C 
  1AC:  Return
  1B4:  End

#new:Script $Script_AfterBattle_80227D98
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80227DA8
0000001E 0000001F 00000020 00000000 

#new:Stage $Stage_80227DB8
$ASCII_8022A0E0  % kzn_tex
$ASCII_8022A0D0  % kzn_bt02_shape
$ASCII_8022A0C0  % kzn_bt02_hit
$Script_BeforeBattle_80227BDC 
$Script_AfterBattle_80227D98 
00000000 
$ForegroundModelList_80227DA8 
00000000 
00000000 
00000000 

#new:Script $Script_80227DE0
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   6C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   88:  	Sub  *Var[0]  FFFFFED4 
   98:  	Sub  *Var[1]  FFFFFE0C 
   A8:  	Wait     00000001 
   B4:  EndLoop
   BC:  Return
   C4:  End

#new:Script $Script_80227EAC
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00004000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

% Origin: HEURISTIC
#new:Script $Script_80227F5C
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[9]  *Var[1] 
   20:  Set  *Var[8]  *Var[2] 
   30:  Set  *Var[7]  *Var[3] 
   40:  Label    00000000 
   4C:  Set  *Var[2]  *Var[8] 
   5C:  Add  *Var[2]  *Var[9] 
   6C:  Call     MakeLerp    	( *Var[8] *Var[2] *Var[7] 00000000 )
   88:  Loop     
   94:  	Call     UpdateLerp  	( )
   A0:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
   BC:  	Wait     00000001 
   C8:  	If  *Var[1]  ==  00000000 
   D8:  		BreakLoop
   E0:  	EndIf
   E8:  EndLoop
   F0:  Set  *Var[2]  *Var[8] 
  100:  Add  *Var[2]  *Var[9] 
  110:  Call     MakeLerp    	( *Var[2] *Var[8] *Var[7] 00000000 )
  12C:  Loop     
  138:  	Call     UpdateLerp  	( )
  144:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
  160:  	Wait     00000001 
  16C:  	If  *Var[1]  ==  00000000 
  17C:  		BreakLoop
  184:  	EndIf
  18C:  EndLoop
  194:  Goto     00000000 
  1A0:  Return
  1A8:  End

#new:Script $Script_BeforeBattle_8022810C
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 0000001E 00000000 )
   40:  Call     802C9308 ( 0000002C 00000000 )
   54:  Set  *Var[0]  00000004 
   64:  Set  *Var[1]  00000000 
   74:  Exec     $Script_80227DE0 
   80:  Set  *Var[0]  00000005 
   90:  Set  *Var[1]  00000001 
   A0:  Exec     $Script_80227DE0 
   AC:  Set  *Var[0]  00000006 
   BC:  Set  *Var[1]  00000002 
   CC:  Exec     $Script_80227DE0 
   D8:  Set  *Var[0]  00000007 
   E8:  Set  *Var[1]  00000003 
   F8:  Exec     $Script_80227DE0 
  104:  Set  *Var[0]  0000000F 
  114:  Set  *Var[1]  00000004 
  124:  Exec     $Script_80227DE0 
  130:  Set  *Var[0]  00000020 
  140:  Set  *Var[1]  00000005 
  150:  Exec     $Script_80227DE0 
  15C:  Set  *Var[0]  00000021 
  16C:  Set  *Var[1]  00000006 
  17C:  Exec     $Script_80227DE0 
  188:  Set  *Var[0]  0000002B 
  198:  Set  *Var[1]  00000007 
  1A8:  Exec     $Script_80227DE0 
  1B4:  Set  *Var[0]  0000000D 
  1C4:  Set  *Var[1]  00000008 
  1D4:  Exec     $Script_80227EAC 
  1E0:  Set  *Var[0]  0000000E 
  1F0:  Set  *Var[1]  00000009 
  200:  Exec     $Script_80227EAC 
  20C:  Return
  214:  End

#new:Script $Script_AfterBattle_80228328
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80228338
00000014 00000015 00000016 00000000 

#new:Stage $Stage_80228348
$ASCII_8022A108  % kzn_tex
$ASCII_8022A0F8  % kzn_bt04_shape
$ASCII_8022A0E8  % kzn_bt04_hit
$Script_BeforeBattle_8022810C 
$Script_AfterBattle_80228328 
00000000 
$ForegroundModelList_80228338 
00000000 
00000000 
00000000 

#new:Script $Script_80228370
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   6C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   88:  	Sub  *Var[0]  FFFFFED4 
   98:  	Sub  *Var[1]  FFFFFE0C 
   A8:  	Wait     00000001 
   B4:  EndLoop
   BC:  Return
   C4:  End

#new:Script $Script_8022843C
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00004000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

% Origin: HEURISTIC
#new:Script $Script_802284EC
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[9]  *Var[1] 
   20:  Set  *Var[8]  *Var[2] 
   30:  Set  *Var[7]  *Var[3] 
   40:  Label    00000000 
   4C:  Set  *Var[2]  *Var[8] 
   5C:  Add  *Var[2]  *Var[9] 
   6C:  Call     MakeLerp    	( *Var[8] *Var[2] *Var[7] 00000000 )
   88:  Loop     
   94:  	Call     UpdateLerp  	( )
   A0:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
   BC:  	Wait     00000001 
   C8:  	If  *Var[1]  ==  00000000 
   D8:  		BreakLoop
   E0:  	EndIf
   E8:  EndLoop
   F0:  Set  *Var[2]  *Var[8] 
  100:  Add  *Var[2]  *Var[9] 
  110:  Call     MakeLerp    	( *Var[2] *Var[8] *Var[7] 00000000 )
  12C:  Loop     
  138:  	Call     UpdateLerp  	( )
  144:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
  160:  	Wait     00000001 
  16C:  	If  *Var[1]  ==  00000000 
  17C:  		BreakLoop
  184:  	EndIf
  18C:  EndLoop
  194:  Goto     00000000 
  1A0:  Return
  1A8:  End

#new:Script $Script_BeforeBattle_8022869C
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000027 00000000 )
   40:  Call     802C9308 ( 0000002C 00000000 )
   54:  Set  *Var[0]  00000004 
   64:  Set  *Var[1]  00000000 
   74:  Exec     $Script_80228370 
   80:  Set  *Var[0]  00000005 
   90:  Set  *Var[1]  00000001 
   A0:  Exec     $Script_80228370 
   AC:  Set  *Var[0]  00000006 
   BC:  Set  *Var[1]  00000002 
   CC:  Exec     $Script_80228370 
   D8:  Set  *Var[0]  00000007 
   E8:  Set  *Var[1]  00000003 
   F8:  Exec     $Script_80228370 
  104:  Set  *Var[0]  0000000F 
  114:  Set  *Var[1]  00000004 
  124:  Exec     $Script_80228370 
  130:  Set  *Var[0]  00000018 
  140:  Set  *Var[1]  00000005 
  150:  Exec     $Script_80228370 
  15C:  Set  *Var[0]  00000019 
  16C:  Set  *Var[1]  00000006 
  17C:  Exec     $Script_80228370 
  188:  Set  *Var[0]  0000002B 
  198:  Set  *Var[1]  00000007 
  1A8:  Exec     $Script_80228370 
  1B4:  Set  *Var[0]  0000000D 
  1C4:  Set  *Var[1]  00000008 
  1D4:  Exec     $Script_8022843C 
  1E0:  Set  *Var[0]  0000000E 
  1F0:  Set  *Var[1]  00000009 
  200:  Exec     $Script_8022843C 
  20C:  Return
  214:  End

#new:Script $Script_AfterBattle_802288B8
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802288C8
00000014 00000015 00000016 00000000 

#new:Stage $Stage_802288D8
$ASCII_8022A130  % kzn_tex
$ASCII_8022A120  % kzn_bt04_shape
$ASCII_8022A110  % kzn_bt04_hit
$Script_BeforeBattle_8022869C 
$Script_AfterBattle_802288B8 
00000000 
$ForegroundModelList_802288C8 
00000000 
00000000 
00000000 

#new:Script $Script_80228900
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   6C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   88:  	Sub  *Var[0]  FFFFFED4 
   98:  	Sub  *Var[1]  FFFFFE0C 
   A8:  	Wait     00000001 
   B4:  EndLoop
   BC:  Return
   C4:  End

#new:Script $Script_802289CC
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00004000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

% Origin: HEURISTIC
#new:Script $Script_80228A7C
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[9]  *Var[1] 
   20:  Set  *Var[8]  *Var[2] 
   30:  Set  *Var[7]  *Var[3] 
   40:  Label    00000000 
   4C:  Set  *Var[2]  *Var[8] 
   5C:  Add  *Var[2]  *Var[9] 
   6C:  Call     MakeLerp    	( *Var[8] *Var[2] *Var[7] 00000000 )
   88:  Loop     
   94:  	Call     UpdateLerp  	( )
   A0:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
   BC:  	Wait     00000001 
   C8:  	If  *Var[1]  ==  00000000 
   D8:  		BreakLoop
   E0:  	EndIf
   E8:  EndLoop
   F0:  Set  *Var[2]  *Var[8] 
  100:  Add  *Var[2]  *Var[9] 
  110:  Call     MakeLerp    	( *Var[2] *Var[8] *Var[7] 00000000 )
  12C:  Loop     
  138:  	Call     UpdateLerp  	( )
  144:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
  160:  	Wait     00000001 
  16C:  	If  *Var[1]  ==  00000000 
  17C:  		BreakLoop
  184:  	EndIf
  18C:  EndLoop
  194:  Goto     00000000 
  1A0:  Return
  1A8:  End

#new:Script $Script_BeforeBattle_80228C2C
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000027 00000000 )
   40:  Call     802C9308 ( 0000001E 00000000 )
   54:  Set  *Var[0]  00000004 
   64:  Set  *Var[1]  00000000 
   74:  Exec     $Script_80228900 
   80:  Set  *Var[0]  00000005 
   90:  Set  *Var[1]  00000001 
   A0:  Exec     $Script_80228900 
   AC:  Set  *Var[0]  00000006 
   BC:  Set  *Var[1]  00000002 
   CC:  Exec     $Script_80228900 
   D8:  Set  *Var[0]  00000007 
   E8:  Set  *Var[1]  00000003 
   F8:  Exec     $Script_80228900 
  104:  Set  *Var[0]  0000000F 
  114:  Set  *Var[1]  00000004 
  124:  Exec     $Script_80228900 
  130:  Set  *Var[0]  0000002B 
  140:  Set  *Var[1]  00000007 
  150:  Exec     $Script_80228900 
  15C:  Set  *Var[0]  0000000D 
  16C:  Set  *Var[1]  00000008 
  17C:  Exec     $Script_802289CC 
  188:  Set  *Var[0]  0000000E 
  198:  Set  *Var[1]  00000009 
  1A8:  Exec     $Script_802289CC 
  1B4:  Return
  1BC:  End

#new:Script $Script_AfterBattle_80228DF0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80228E00
00000014 00000015 00000016 00000000 

#new:Stage $Stage_80228E10
$ASCII_8022A158  % kzn_tex
$ASCII_8022A148  % kzn_bt04_shape
$ASCII_8022A138  % kzn_bt04_hit
$Script_BeforeBattle_80228C2C 
$Script_AfterBattle_80228DF0 
00000000 
$ForegroundModelList_80228E00 
00000000 
00000000 
00000000 

PADDING: 80228E38 to 80228E40 (0059D128 to 0059D130)
00000000 00000000 

#new:Script $Script_80228E40
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   6C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   88:  	Sub  *Var[0]  FFFFFED4 
   98:  	Sub  *Var[1]  FFFFFE0C 
   A8:  	Wait     00000001 
   B4:  EndLoop
   BC:  Return
   C4:  End

#new:Script $Script_80228F0C
    0:  Set  *Var[A]  *Var[1] 
   10:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00004000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

% Origin: HEURISTIC
#new:Script $Script_80228FBC
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[9]  *Var[1] 
   20:  Set  *Var[8]  *Var[2] 
   30:  Set  *Var[7]  *Var[3] 
   40:  Label    00000000 
   4C:  Set  *Var[2]  *Var[8] 
   5C:  Add  *Var[2]  *Var[9] 
   6C:  Call     MakeLerp    	( *Var[8] *Var[2] *Var[7] 00000000 )
   88:  Loop     
   94:  	Call     UpdateLerp  	( )
   A0:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
   BC:  	Wait     00000001 
   C8:  	If  *Var[1]  ==  00000000 
   D8:  		BreakLoop
   E0:  	EndIf
   E8:  EndLoop
   F0:  Set  *Var[2]  *Var[8] 
  100:  Add  *Var[2]  *Var[9] 
  110:  Call     MakeLerp    	( *Var[2] *Var[8] *Var[7] 00000000 )
  12C:  Loop     
  138:  	Call     UpdateLerp  	( )
  144:  	Call     TranslateGroup ( *Var[A] *Var[0] 00000000 00000000 )
  160:  	Wait     00000001 
  16C:  	If  *Var[1]  ==  00000000 
  17C:  		BreakLoop
  184:  	EndIf
  18C:  EndLoop
  194:  Goto     00000000 
  1A0:  Return
  1A8:  End

#new:Script $Script_BeforeBattle_8022916C
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000011 
   3C:  Set  *Var[1]  00000000 
   4C:  Exec     $Script_80228E40 
   58:  Set  *Var[0]  0000000F 
   68:  Set  *Var[1]  00000001 
   78:  Exec     $Script_80228E40 
   84:  Set  *Var[0]  0000000A 
   94:  Set  *Var[1]  00000002 
   A4:  Exec     $Script_80228F0C 
   B0:  Set  *Var[0]  0000000B 
   C0:  Set  *Var[1]  00000003 
   D0:  Exec     $Script_80228F0C 
   DC:  Set  *Var[0]  0000001A 
   EC:  Set  *Var[1]  00000004 
   FC:  Exec     $Script_80228F0C 
  108:  Set  *Var[0]  0000001B 
  118:  Set  *Var[1]  00000005 
  128:  Exec     $Script_80228F0C 
  134:  Call     EnableModel 	( 0000001D .False )
  148:  Call     EnableModel 	( 0000001E .False )
  15C:  Call     EnableModel 	( 0000001F .False )
  170:  Call     EnableModel 	( 00000020 .False )
  184:  Call     EnableModel 	( 00000021 .False )
  198:  Call     EnableModel 	( 00000022 .False )
  1AC:  Call     EnableModel 	( 00000023 .False )
  1C0:  Call     EnableModel 	( 00000024 .False )
  1D4:  Call     EnableModel 	( 00000025 .False )
  1E8:  Call     EnableModel 	( 00000026 .False )
  1FC:  Call     EnableModel 	( 00000027 .False )
  210:  Call     EnableModel 	( 00000028 .False )
  224:  Call     EnableModel 	( 00000029 .False )
  238:  Call     EnableModel 	( 0000002A .False )
  24C:  Call     EnableModel 	( 0000002B .False )
  260:  Call     EnableModel 	( 0000002C .False )
  274:  Call     EnableModel 	( 0000002D .False )
  288:  Call     EnableModel 	( 0000002E .False )
  29C:  Call     EnableModel 	( 0000002F .False )
  2B0:  Call     EnableModel 	( 00000030 .False )
  2C4:  Call     EnableModel 	( 00000031 .False )
  2D8:  Call     EnableModel 	( 00000032 .False )
  2EC:  Call     EnableModel 	( 00000033 .False )
  300:  Call     EnableModel 	( 00000034 .False )
  314:  Call     EnableModel 	( 00000035 .False )
  328:  Call     EnableModel 	( 00000036 .False )
  33C:  Call     EnableModel 	( 00000037 .False )
  350:  Call     EnableModel 	( 00000038 .False )
  364:  Call     EnableModel 	( 00000039 .False )
  378:  Call     EnableModel 	( 0000003A .False )
  38C:  Call     EnableModel 	( 0000003B .False )
  3A0:  Call     EnableModel 	( 0000003C .False )
  3B4:  Call     EnableModel 	( 0000003D .False )
  3C8:  Call     EnableModel 	( 0000003E .False )
  3DC:  Call     EnableModel 	( 0000003F .False )
  3F0:  Call     EnableModel 	( 00000040 .False )
  404:  Call     EnableModel 	( 00000041 .False )
  418:  Call     EnableModel 	( 00000042 .False )
  42C:  Call     EnableModel 	( 00000043 .False )
  440:  Call     EnableModel 	( 00000044 .False )
  454:  Call     EnableModel 	( 00000045 .False )
  468:  Call     EnableModel 	( 00000046 .False )
  47C:  Call     EnableModel 	( 00000047 .False )
  490:  Call     EnableModel 	( 00000048 .False )
  4A4:  Call     EnableModel 	( 00000049 .False )
  4B8:  Call     EnableModel 	( 0000004A .False )
  4CC:  Call     EnableModel 	( 0000004B .False )
  4E0:  Call     EnableModel 	( 0000004C .False )
  4F4:  Call     EnableModel 	( 0000004E .False )
  508:  Call     EnableModel 	( 0000004F .False )
  51C:  Call     EnableModel 	( 00000050 .False )
  530:  Call     EnableModel 	( 00000051 .False )
  544:  Call     EnableModel 	( 00000052 .False )
  558:  Call     EnableModel 	( 00000053 .False )
  56C:  Call     EnableModel 	( 00000054 .False )
  580:  Call     EnableModel 	( 00000055 .False )
  594:  Call     EnableModel 	( 00000056 .False )
  5A8:  Call     EnableModel 	( 00000057 .False )
  5BC:  Call     EnableModel 	( 00000058 .False )
  5D0:  Return
  5D8:  End

#new:Script $Script_AfterBattle_8022974C
    0:  Return
    8:  End

#new:Stage $Stage_8022975C
$ASCII_8022A180  % kzn_tex
$ASCII_8022A170  % kzn_bt05_shape
$ASCII_8022A160  % kzn_bt05_hit
$Script_BeforeBattle_8022916C 
$Script_AfterBattle_8022974C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80229784 to 80229790 (0059DA74 to 0059DA80)
00000000 00000000 00000000 

#new:Formation $Formation_00
$LavaBubble 00000001 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000 
$LavaBubble 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000 
$SpikeTop 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingRMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingWMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$LavaBubble 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$SpikeTop 00000001 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$SpikeTop 00000001 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000 
$LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$SpikeTop 00000001 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 
$PutridPiranha 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$SpikeTop 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$LavaBubble 00000002 00000008 00000000 00000000 00000000 00000000 
$LavaBubble 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_11
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$LavaBubble 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_12
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_13
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_14
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikeTop 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 
$SpikeTop 00000003 00000007 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8022A3AC 00000002 $Formation_00 $Stage_802277F8 00000000 
$SJIS_8022A3A0 00000003 $Formation_01 $Stage_802277F8 00000000 % unused
$SJIS_8022A394 00000004 $Formation_02 $Stage_802277F8 00000000 % unused
$SJIS_8022A37C 00000004 $Formation_03 $Stage_802277F8 00000000 % unused
$SJIS_8022A360 00000003 $Formation_04 $Stage_802277F8 00000000 % unused
$SJIS_8022A348 00000003 $Formation_05 $Stage_802277F8 00000000 
$SJIS_8022A32C 00000003 $Formation_06 $Stage_802277F8 00000000 
$SJIS_8022A318 00000003 $Formation_07 $Stage_802277F8 00000000 
$SJIS_8022A308 00000002 $Formation_08 $Stage_802277F8 00000000 
$SJIS_8022A2F4 00000002 $Formation_09 $Stage_802277F8 00000000 
$SJIS_8022A2DC 00000003 $Formation_0A $Stage_802277F8 00000000 
$SJIS_8022A2C0 00000002 $Formation_0B $Stage_802277F8 00000000 
$SJIS_8022A2A0 00000003 $Formation_0C $Stage_802277F8 00000000 % unused
$SJIS_8022A27C 00000004 $Formation_0D $Stage_802277F8 00000000 
$SJIS_8022A264 00000004 $Formation_0E $Stage_802277F8 00000000 % unused
$SJIS_8022A250 00000002 $Formation_0F $Stage_802277F8 00000000 
$SJIS_8022A23C 00000003 $Formation_10 $Stage_802277F8 00000000 % unused
$SJIS_8022A210 00000003 $Formation_11 $Stage_802277F8 00000000 
$SJIS_8022A1F0 00000003 $Formation_12 $Stage_802277F8 00000000 % unused
$SJIS_8022A1C0 00000003 $Formation_13 $Stage_802277F8 00000000 
$SJIS_8022A188 00000004 $Formation_14 $Stage_802277F8 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8022A3E8 $Stage_802277F8 
$ASCII_8022A3E0 $Stage_80227884 
$ASCII_8022A3D8 $Stage_80227DB8 
$ASCII_8022A3D0 $Stage_80228348 
$ASCII_8022A3C8 $Stage_802288D8 
$ASCII_8022A3C0 $Stage_80228E10 
$ASCII_8022A3B8 $Stage_8022975C 
00000000 00000000 

PADDING: 8022A06C to 8022A070 (0059E35C to 0059E360)
00000000 

#new:ASCII $ASCII_8022A070
kzn_bt01_hit

#new:ASCII $ASCII_8022A080
kzn_bt01_shape

#new:ASCII $ASCII_8022A090
kzn_tex

#new:ASCII $ASCII_8022A098
kzn_bt01_hit

#new:ASCII $ASCII_8022A0A8
kzn_bt01_shape

#new:ASCII $ASCII_8022A0B8
kzn_tex

#new:ASCII $ASCII_8022A0C0
kzn_bt02_hit

#new:ASCII $ASCII_8022A0D0
kzn_bt02_shape

#new:ASCII $ASCII_8022A0E0
kzn_tex

#new:ASCII $ASCII_8022A0E8
kzn_bt04_hit

#new:ASCII $ASCII_8022A0F8
kzn_bt04_shape

#new:ASCII $ASCII_8022A108
kzn_tex

#new:ASCII $ASCII_8022A110
kzn_bt04_hit

#new:ASCII $ASCII_8022A120
kzn_bt04_shape

#new:ASCII $ASCII_8022A130
kzn_tex

#new:ASCII $ASCII_8022A138
kzn_bt04_hit

#new:ASCII $ASCII_8022A148
kzn_bt04_shape

#new:ASCII $ASCII_8022A158
kzn_tex

#new:ASCII $ASCII_8022A160
kzn_bt05_hit

#new:ASCII $ASCII_8022A170
kzn_bt05_shape

#new:ASCII $ASCII_8022A180
kzn_tex

#new:SJIS $SJIS_8022A188
% poizunpakun,togemeto,poizunpakun,togemeto
837C8343 83598393 83708362 834E8393 2C836783 51838183 6283672C 837C8343 
83598393 83708362 834E8393 2C836783 51838183 62836700 

#new:SJIS $SJIS_8022A1C0
% poizunpakun,togemeto,poizunpakun
837C8343 83598393 83708362 834E8393 2C836783 51838183 6283672C 837C8343 
83598393 83708362 834E8393 00000000 

#new:SJIS $SJIS_8022A1F0
% poizunpakunx2,togemeto
837C8343 83598393 83708362 834E8393 7882512C 83678351 83818362 83670000 

#new:SJIS $SJIS_8022A210
% poizunpakun,baburu,poizunpakun
837C8343 83598393 83708362 834E8393 2C836F83 75838B2C 837C8343 83598393 
83708362 834E8393 00000000 

#new:SJIS $SJIS_8022A23C
% poizunpakunx3
837C8343 83598393 83708362 834E8393 78825200 

#new:SJIS $SJIS_8022A250
% poizunpakunx2
837C8343 83598393 83708362 834E8393 78825100 

#new:SJIS $SJIS_8022A264
% togemeto,baburux3
83678351 83818362 83672C83 6F837583 8B788252 00000000 

#new:SJIS $SJIS_8022A27C
% togemetox2,poizunpakunx2
83678351 83818362 83677882 512C837C 83438359 83938370 8362834E 83937882 
51000000 

#new:SJIS $SJIS_8022A2A0
% togemetox2,poizunpakun
83678351 83818362 83677882 512C837C 83438359 83938370 8362834E 83930000 

#new:SJIS $SJIS_8022A2C0
% togemeto,poizunpakun
83678351 83818362 83672C83 7C834383 59839383 70836283 4E839300 

#new:SJIS $SJIS_8022A2DC
% togemetox2,baburu
83678351 83818362 83677882 512C836F 8375838B 00000000 

#new:SJIS $SJIS_8022A2F4
% togemeto,baburu
83678351 83818362 83672C83 6F837583 8B000000 

#new:SJIS $SJIS_8022A308
% togemetox2
83678351 83818362 83677882 51000000 

#new:SJIS $SJIS_8022A318
% baburux2,togemeto
836F8375 838B7832 2C836783 51838183 62836700 

#new:SJIS $SJIS_8022A32C
% baburux2,howaitokameku
836F8375 838B7832 2C837A83 8F834383 67834A83 81836283 4E000000 

#new:SJIS $SJIS_8022A348
% baburux2,redokameku
836F8375 838B7832 2C838C83 62836883 4A838183 62834E00 

#new:SJIS $SJIS_8022A360
% baburux2,kaifukuheiho-
836F8375 838B7832 2C82A982 A282D382 AD837783 43837A81 5B000000 

#new:SJIS $SJIS_8022A37C
% baburu,togemetox3
836F8375 838B2C83 67835183 81836283 67788252 00000000 

#new:SJIS $SJIS_8022A394
% baburux4
836F8375 838B7834 00000000 

#new:SJIS $SJIS_8022A3A0
% baburux3
836F8375 838B7833 00000000 

#new:SJIS $SJIS_8022A3AC
% baburux2
836F8375 838B7832 00000000 

#new:ASCII $ASCII_8022A3B8
kzn_05

#new:ASCII $ASCII_8022A3C0
kzn_04c

#new:ASCII $ASCII_8022A3C8
kzn_04b

#new:ASCII $ASCII_8022A3D0
kzn_04

#new:ASCII $ASCII_8022A3D8
kzn_02

#new:ASCII $ASCII_8022A3E0
kzn_01b

#new:ASCII $ASCII_8022A3E8
kzn_01

