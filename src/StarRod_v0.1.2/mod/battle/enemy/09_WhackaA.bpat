% Automatically dumped from section 09

#new:Actor $09_WhackaA
% stats
[Index]        D0b 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040004 
[StatusTable] $StatusTable_8021FCA8_09 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021FD54_09 
[Script]      $Script_Init_8021FDA0_09 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         47`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  40`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

#new:Function $Function_80218120_09
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  LIO       A1, *WhackaHitCount
   14:  DADDU     A0, R0, R0
   18:  SW        RA, 14 (SP)
   1C:  JAL       {Func:GetVariable}
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  ADDIU     V0, R0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  ADDIU     V0, R0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18

#new:IdleAnimations $IdleAnimations_8021FC50_09
.Status:Normal    00920001
.Status:Stone     00920000
.Status:Sleep     00920001
.Status:Poison    00920001
.Status:Stop      00920000
.Status:Static    00920001
.Status:Paralyze  00920000
.Status:Dizzy     00920001
.Status:Fear      00920001
.Status:End

#new:DefenseTable $DefenseTable_8021FC9C_09
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021FCA8_09
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021FD54_09
00800000 01000000 001E00FF $IdleAnimations_8021FC50_09 $DefenseTable_8021FC9C_09 00000000 00000000 00FB0000 00000000 

#new:Script $Script_Init_8021FDA0_09
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80220634_09 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021FE5C_09 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021FE90_09 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Call     $Function_80218120_09 ( )
   60:  If  *Var[0]  ==  00000000 
   70:  	Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   88:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End

#new:Script $Script_Idle_8021FE5C_09
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Goto     00000000 
   24:  Return
   2C:  End

#new:Script $Script_HandleEvent_8021FE90_09
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   68:  		SetConst  *Var[0]  00000001 
   78:  		SetConst  *Var[1]  00920001 
   88:  		ExecWait DoNormalHit 
   94:  	Case  ==  .Event:Hit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00920004 
   C0:  		ExecWait $Script_80220684_09 
   CC:  		ExecWait DoNormalHit 
   D8:  		Call     RandInt     	( 00000064 *Var[0] )
   EC:  		If  *Var[0]  <=  00000064 
   FC:  			ExecWait $Script_80220764_09 
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00920001 
  144:  		SetConst  *Var[2]  00920001 
  154:  		ExecWait $Script_80220684_09 
  160:  		ExecWait DoNormalHit 
  16C:  		Call     RandInt     	( 00000064 *Var[0] )
  180:  		If  *Var[0]  <=  00000064 
  190:  			ExecWait $Script_80220764_09 
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00920001 
  1D8:  		SetConst  *Var[2]  00920001 
  1E8:  		ExecWait $Script_80220684_09 
  1F4:  		ExecWait DoNormalHit 
  200:  		If  00000064  >=  00000064 
  210:  			ExecWait $Script_80220764_09 
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var[0]  00000001 
  23C:  			SetConst  *Var[1]  00920001 
  24C:  			ExecWait DoDeath 
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:MultibounceHit
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  00920001 
  294:  		ExecWait 8029B998 
  2A0:  		Call     RandInt     	( 00000064 *Var[0] )
  2B4:  		If  *Var[0]  <=  00000064 
  2C4:  			ExecWait $Script_80220764_09 
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:MultibounceDeath
  2EC:  		SetConst  *Var[0]  00000001 
  2FC:  		SetConst  *Var[1]  00920001 
  30C:  		ExecWait 8029B998 
  318:  		If  00000064  >=  00000064 
  328:  			ExecWait $Script_80220764_09 
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var[0]  00000001 
  354:  			SetConst  *Var[1]  00920001 
  364:  			ExecWait DoDeath 
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit
  38C:  		SetConst  *Var[0]  00000001 
  39C:  		SetConst  *Var[1]  00920001 
  3AC:  		ExecWait DoShockHit 
  3B8:  		SetConst  *Var[0]  00000001 
  3C8:  		SetConst  *Var[1]  00920001 
  3D8:  		ExecWait 8029BD70 
  3E4:  		SetConst  *Var[0]  00000001 
  3F4:  		SetConst  *Var[1]  00920001 
  404:  		ExecWait DoReturnHome 
  410:  	Case  ==  .Event:ShockDeath
  41C:  		SetConst  *Var[0]  00000001 
  42C:  		SetConst  *Var[1]  00920001 
  43C:  		ExecWait DoShockHit 
  448:  		SetConst  *Var[0]  00000001 
  458:  		SetConst  *Var[1]  00920001 
  468:  		ExecWait DoDeath 
  474:  		Return
  47C:  	Case  ==  00000017
  488:  		SetConst  *Var[0]  00000001 
  498:  		SetConst  *Var[1]  00920001 
  4A8:  		ExecWait DoImmune 
  4B4:  	Case  ==  .Event:Immune
  4C0:  		SetConst  *Var[0]  00000001 
  4D0:  		SetConst  *Var[1]  00920001 
  4E0:  		ExecWait DoImmune 
  4EC:  		Call     RandInt     	( 00000064 *Var[0] )
  500:  		If  *Var[0]  <=  00000064 
  510:  			ExecWait $Script_80220764_09 
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed
  538:  		SetConst  *Var[0]  00000001 
  548:  		SetConst  *Var[1]  00920001 
  558:  		ExecWait DoImmune 
  564:  		Call     RandInt     	( 00000064 *Var[0] )
  578:  		If  *Var[0]  <=  00000064 
  588:  			ExecWait $Script_80220764_09 
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  00920004 
  5D0:  		ExecWait $Script_80220684_09 
  5DC:  		ExecWait DoNormalHit 
  5E8:  		Wait     0000000A 
  5F4:  		If  00000064  >=  00000064 
  604:  			ExecWait $Script_80220764_09 
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var[0]  00000001 
  630:  			SetConst  *Var[1]  00920001 
  640:  			ExecWait DoDeath 
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus
  668:  		SetConst  *Var[0]  00000001 
  678:  		SetConst  *Var[1]  00920001 
  688:  		ExecWait DoRecover 
  694:  	Case  ==  .Event:ScareAway
  6A0:  		SetConst  *Var[0]  00000001 
  6B0:  		SetConst  *Var[1]  00920001 
  6C0:  		SetConst  *Var[2]  00920001 
  6D0:  		ExecWait DoScareAway 
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift
  6F0:  		SetConst  *Var[0]  00000001 
  700:  		SetConst  *Var[1]  00920001 
  710:  		ExecWait DoAirLift 
  71C:  	Case  ==  .Event:BlowAway
  728:  		SetConst  *Var[0]  00000001 
  738:  		SetConst  *Var[1]  00920001 
  748:  		ExecWait DoBlowAway 
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  780:  Call     UseIdleAnimation 	( .Actor:Self .True )
  794:  Return
  79C:  End

#new:Script $Script_TakeTurn_80220634_09
    0:  Call     RandInt     	( 00000064 *Var[0] )
   14:  If  *Var[0]  <=  00000064 
   24:  	ExecWait $Script_80220764_09 
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End

#new:Script $Script_80220684_09
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   18:  Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait     0000000F 
   40:  	Call     SetAnimation 	( .Actor:Self 00000001 00920001 )
   58:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   74:  	Add  *Var[0]  00000005 
   84:  	Add  *Var[1]  00000014 
   94:  	Add  *Var[2]  0000000A 
   A4:  	Call     MakeItemEntity ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] 0000000C 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End

#new:Script $Script_80220764_09
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 00920003 )
   54:  Wait     00000028 
   60:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   78:  If  *Var[0]  !=  00000000 
   88:  	Call     SetBattleFlagBits2 	( 10000000 .True )
   9C:  EndIf
   A4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   C0:  Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   D8:  Call     RemoveActor 	( .Actor:Self )
   E8:  Return
   F0:  End

