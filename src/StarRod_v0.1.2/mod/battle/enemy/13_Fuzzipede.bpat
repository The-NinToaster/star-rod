% Automatically dumped from section 13

#new:Actor $13_Fuzzipede
% stats
[Index]        25b 
[Level]        43`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218A54_13 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_80218B00_13 
[Script]      $Script_Init_80218B70_13 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Function $Function_80218000_13
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_802180CC_13
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F20, 20 (SP)
   1C:  BEQ       A1, R0, .o130
   20:  LW        S0, C (S2)
   24:  JAL       8002ACE4
   28:  ADDIU     A0, R0, 24
   2C:  DADDU     S1, V0, R0
   30:  SW        S1, 70 (S2)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A0, S2, R0
   44:  SW        V0, 20 (S1)
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  JAL       {Func:GetFloatVariable}
   54:  DADDU     A0, S2, R0
   58:  SWC1      F0, 0 (S1)
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  JAL       {Func:GetFloatVariable}
   68:  DADDU     A0, S2, R0
   6C:  SWC1      F0, 4 (S1)
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       {Func:GetFloatVariable}
   7C:  DADDU     A0, S2, R0
   80:  SWC1      F0, 8 (S1)
   84:  LW        A1, 0 (S0)
   88:  ADDIU     S0, S0, 4
   8C:  JAL       {Func:GetVariable}
   90:  DADDU     A0, S2, R0
   94:  SW        V0, 1C (S1)
   98:  LW        A1, 0 (S0)
   9C:  JAL       {Func:GetFloatVariable}
   A0:  DADDU     A0, S2, R0
   A4:  LW        A0, 20 (S1)
   A8:  JAL       80130F58
   AC:  SWC1      F0, 10 (S1)
   B0:  DADDU     S0, V0, R0
   B4:  LWC1      F12, 8 (S0)
   B8:  LWC1      F14, 10 (S0)
   BC:  LW        A2, 0 (S1)
   C0:  JAL       {Func:Dist2D}
   C4:  LW        A3, 8 (S1)
   C8:  LWC1      F12, 8 (S0)
   CC:  LWC1      F14, 10 (S0)
   D0:  LW        A2, 0 (S1)
   D4:  LW        A3, 8 (S1)
   D8:  JAL       80029C80
   DC:  MOV.S     F20, F0
   E0:  LWC1      F4, 10 (S1)
   E4:  LWC1      F6, 1C (S1)
   E8:  CVT.S.W   F6, F6
   EC:  MUL.S     F4, F4, F6
   F0:  NOP
   F4:  LIF       F2, 0.5
   FC:  NOP
  100:  MUL.S     F4, F4, F2
  104:  NOP
  108:  SWC1      F0, C (S1)
  10C:  LWC1      F0, 4 (S1)
  110:  LWC1      F2, C (S0)
  114:  SUB.S     F0, F0, F2
  118:  MOV.S     F2, F6
  11C:  DIV.S     F0, F0, F6
  120:  ADD.S     F4, F4, F0
  124:  DIV.S     F20, F20, F2
  128:  SWC1      F20, 14 (S1)
  12C:  SWC1      F4, 18 (S1)
        .o130
  130:  LW        S1, 70 (S2)
  134:  JAL       80130F58
  138:  LW        A0, 20 (S1)
  13C:  DADDU     S0, V0, R0
  140:  BNE       S0, R0, .o158
  144:  NOP
  148:  JAL       8002AD2C
  14C:  LW        A0, 70 (S2)
  150:  BEQ       R0, R0, .o1FC
  154:  ADDIU     V0, R0, 2
        .o158
  158:  LWC1      F12, C (S1)
  15C:  JAL       {Func:SinDeg}
  160:  NOP
  164:  LWC1      F2, 14 (S1)
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 8 (S0)
  174:  ADD.S     F0, F0, F2
  178:  SWC1      F0, 8 (S0)
  17C:  JAL       {Func:CosDeg}
  180:  LWC1      F12, C (S1)
  184:  LWC1      F2, 14 (S1)
  188:  MUL.S     F2, F2, F0
  18C:  NOP
  190:  LWC1      F0, 10 (S0)
  194:  SUB.S     F0, F0, F2
  198:  SWC1      F0, 10 (S0)
  19C:  LWC1      F0, C (S0)
  1A0:  LWC1      F2, 18 (S1)
  1A4:  ADD.S     F0, F0, F2
  1A8:  SWC1      F0, C (S0)
  1AC:  LWC1      F0, 18 (S1)
  1B0:  LWC1      F2, 10 (S1)
  1B4:  LW        V0, 1C (S1)
  1B8:  SUB.S     F0, F0, F2
  1BC:  ADDIU     V0, V0, FFFF
  1C0:  SW        V0, 1C (S1)
  1C4:  BLTZ      V0, .o1D4
  1C8:  SWC1      F0, 18 (S1)
  1CC:  BEQ       R0, R0, .o1FC
  1D0:  DADDU     V0, R0, R0
        .o1D4
  1D4:  LWC1      F0, 0 (S1)
  1D8:  SWC1      F0, 8 (S0)
  1DC:  LWC1      F0, 4 (S1)
  1E0:  SWC1      F0, C (S0)
  1E4:  LWC1      F0, 8 (S1)
  1E8:  SWC1      F0, 10 (S0)
  1EC:  SW        R0, 18 (S1)
  1F0:  JAL       8002AD2C
  1F4:  LW        A0, 70 (S2)
  1F8:  ADDIU     V0, R0, 1
        .o1FC
  1FC:  LW        RA, 1C (SP)
  200:  LW        S2, 18 (SP)
  204:  LW        S1, 14 (SP)
  208:  LW        S0, 10 (SP)
  20C:  LDC1      F20, 20 (SP)
  210:  JR        RA
  214:  ADDIU     SP, SP, 28

#new:Function $Function_802182E4_13
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S3, 2C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        S0, 20 (SP)
   10:  DADDU     S0, R0, R0
   14:  SW        S2, 28 (SP)
   18:  LIA       S2, 800DC070
   20:  SW        S4, 30 (SP)
   24:  LIA       S4, 8010F290
   2C:  SW        S5, 34 (SP)
   30:  ADDIU     A0, R0, FFFF
   34:  SW        RA, 38 (SP)
   38:  SW        S1, 24 (SP)
   3C:  LB        V0, AE (S2)
   40:  LW        S1, C (S3)
   44:  BNE       V0, A0, .o54
   48:  DADDU     S5, S4, R0
   4C:  SW        R0, 10 (SP)
   50:  ADDIU     S0, R0, 1
        .o54
   54:  LB        V0, AF (S2)
   58:  BNE       V0, A0, .o70
   5C:  SLL       V0, S0, 2
   60:  ADDU      V1, SP, V0
   64:  ADDIU     V0, R0, 1
   68:  SW        V0, 10 (V1)
   6C:  ADDU      S0, S0, V0
        .o70
   70:  LB        V0, B0 (S2)
   74:  BNE       V0, A0, .o8C
   78:  SLL       V0, S0, 2
   7C:  ADDU      V1, SP, V0
   80:  ADDIU     V0, R0, 2
   84:  SW        V0, 10 (V1)
   88:  ADDIU     S0, S0, 1
        .o8C
   8C:  JAL       {Func:GetRandom}
   90:  ADDIU     A0, R0, 2
   94:  ADDIU     A0, S0, FFFF
   98:  JAL       {Func:GetRandom}
   9C:  ADDIU     S0, V0, 2
   A0:  SLL       V0, V0, 2
   A4:  ADDU      V0, SP, V0
   A8:  LW        V1, 10 (V0)
   AC:  ADDIU     V0, R0, 1
   B0:  BEQ       V1, V0, .o124
   B4:  SLTI      V0, V1, 2
   B8:  BEQ       V0, R0, .oD0
   BC:  ADDIU     V0, R0, 2
   C0:  BEQL      V1, R0, .oE0
   C4:  SB        S0, AE (S2)
   C8:  BEQ       R0, R0, .o194
   CC:  NOP
        .oD0
   D0:  BEQL      V1, V0, .o16C
   D4:  SB        S0, B0 (S2)
   D8:  BEQ       R0, R0, .o194
   DC:  NOP
        .oE0
   E0:  LW        A1, 0 (S1)
   E4:  LB        V0, 1 (S4)
   E8:  ADDIU     S1, S1, 4
   EC:  SLL       V0, V0, 2
   F0:  LTW       A2, V0 ($IntTable_8021AFD8_13)
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A0, S3, R0
  104:  LB        V0, 1 (S4)
  108:  LW        A1, 0 (S1)
  10C:  SLL       V0, V0, 2
  110:  LTW       A2, V0 ($IntTable_8021AFE4_13)
  11C:  BEQ       R0, R0, .o18C
  120:  DADDU     A0, S3, R0
        .o124
  124:  SB        S0, AF (S2)
  128:  LW        A1, 0 (S1)
  12C:  LB        V0, 0 (S5)
  130:  ADDIU     S1, S1, 4
  134:  SLL       V0, V0, 2
  138:  LTW       A2, V0 ($IntTable_8021AFF0_13)
  144:  JAL       {Func:SetVariable}
  148:  DADDU     A0, S3, R0
  14C:  LB        V0, 0 (S5)
  150:  LW        A1, 0 (S1)
  154:  SLL       V0, V0, 2
  158:  LTW       A2, V0 ($IntTable_8021AFFC_13)
  164:  BEQ       R0, R0, .o18C
  168:  DADDU     A0, S3, R0
        .o16C
  16C:  LW        A1, 0 (S1)
  170:  ADDIU     S1, S1, 4
  174:  DADDU     A0, S3, R0
  178:  JAL       {Func:SetVariable}
  17C:  ADDIU     A2, R0, 16C
  180:  DADDU     A0, S3, R0
  184:  LW        A1, 0 (S1)
  188:  ADDIU     A2, R0, 4F
        .o18C
  18C:  JAL       {Func:SetVariable}
  190:  NOP
        .o194
  194:  LW        RA, 38 (SP)
  198:  LW        S5, 34 (SP)
  19C:  LW        S4, 30 (SP)
  1A0:  LW        S3, 2C (SP)
  1A4:  LW        S2, 28 (SP)
  1A8:  LW        S1, 24 (SP)
  1AC:  LW        S0, 20 (SP)
  1B0:  ADDIU     V0, R0, 2
  1B4:  JR        RA
  1B8:  ADDIU     SP, SP, 40

#new:Function $Function_802184A0_13
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_802184F8_13
    0:  ADDIU     SP, SP, FFE8
    4:  LIA       V1, 800DC070
    C:  ADDIU     A2, R0, FFFF
   10:  SW        RA, 10 (SP)
   14:  LB        V0, AE (V1)
   18:  BEQ       V0, A2, .o38
   1C:  LW        A1, C (A0)
   20:  LB        V0, AF (V1)
   24:  BEQ       V0, A2, .o38
   28:  NOP
   2C:  LB        V0, B0 (V1)
   30:  BNE       V0, A2, .o44
   34:  NOP
        .o38
   38:  LW        A1, 0 (A1)
   3C:  BEQ       R0, R0, .o48
   40:  DADDU     A2, R0, R0
        .o44
   44:  LW        A1, 0 (A1)
        .o48
   48:  JAL       {Func:SetVariable}
   4C:  NOP
   50:  LW        RA, 10 (SP)
   54:  ADDIU     V0, R0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 18

#new:IdleAnimations $IdleAnimations_802189B0_13
.Status:Normal    00410004
.Status:Stone     00410000
.Status:Sleep     00410029
.Status:Poison    00410004
.Status:Stop      00410000
.Status:Static    00410004
.Status:Paralyze  00410000
.Status:Dizzy     00410026
.Status:Fear      00410026
.Status:End

#new:IdleAnimations $IdleAnimations_802189FC_13
.Status:Normal    00410006
.Status:Stone     00410002
.Status:Sleep     0041002A
.Status:Poison    00410006
.Status:Stop      00410002
.Status:Static    00410006
.Status:Paralyze  00410002
.Status:Dizzy     00410027
.Status:Fear      00410027
.Status:End

#new:DefenseTable $DefenseTable_80218A48_13
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80218A54_13
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     50`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80218B00_13
00020000 01000000 021800FF $IdleAnimations_802189B0_13 $DefenseTable_80218A48_13 00000000 00000000 FEF60000 00000000 
80800001 02002800 02F000FF 00000000 $DefenseTable_80218A48_13 00000000 00000000 FEF60000 00000000 

#new:Script $Script_Init_80218B70_13
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021C1A4_13 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80218D58_13 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC_13 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80218C58_13 )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   80:  Call     SetActorPos 	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
   9C:  Call     SetHomePos  	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
   B8:  Call     HPBarToHome 	( .Actor:Self )
   C8:  Call     80253734 ( 00000001 )
   D8:  Return
   E0:  End

#new:Script $Script_NextTurn_80218C58_13
    0:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   18:  If  *Var[0]  ==  00000000 
   28:  	Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   40:  	Call     UseCamPreset 	( 00000008 )
   50:  	Call     CamTargetActor ( .Actor:Self )
   60:  	Call     SetCamZoom  	( 000000C8 )
   70:  	Call     SetCamOffsetZ 	( 0000000A )
   80:  	Call     MoveCamOver 	( 0000001E )
   90:  	Wait     0000001E 
   9C:  	Call     SayMessage  	( 0007009C .Actor:Self 00000001 00410024 00410004 ) % Hey, fella! You wanna piece o' this? You got it! I ...
   BC:  	Call     UseCamPreset 	( 00000002 )
   CC:  	Call     MoveCamOver 	( 0000001E )
   DC:  	Wait     0000001E 
   E8:  EndIf
   F0:  Return
   F8:  End

#new:Script $Script_Idle_80218D58_13
    0:  Return
    8:  End

#new:Script $Script_80218D68_13
    0:  Call     SetHomePos  	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
   1C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
   30:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
   44:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   58:  Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
   70:  Call     SetGoalToHome 	( .Actor:Self )
   80:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   9C:  Sub  *Var[0]  0000003C 
   AC:  Set  *Var[1]  00000000 
   BC:  ExecWait 8029C12C 
   C8:  Call     SetGoalToHome 	( .Actor:Self )
   D8:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
   EC:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  10C:  Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  124:  Call     SetActorAngle 	( .Actor:Self 00000000 )
  138:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189B0_13 )
  150:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC_13 )
  164:  Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
  17C:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
  198:  Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
  1B4:  Call     $Function_80218000_13 ( FFFFFFF6 00000014 0000000A 00000014 )
  1D0:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .False )
  1EC:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
  208:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .True )
  224:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .False )
  240:  Call     HPBarToHome 	( .Actor:Self )
  250:  Return
  258:  End

#new:Script $Script_80218FC8_13
    0:  Call     SetHomePos  	( .Actor:Self 0000003C 00000000 0000000F )
   1C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
   30:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
   44:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   58:  Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
   70:  Call     SetGoalToHome 	( .Actor:Self )
   80:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   9C:  ExecWait 8029C12C 
   A8:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   BC:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189B0_13 )
   D4:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC_13 )
   E8:  Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
  100:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
  11C:  Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
  138:  Call     $Function_80218000_13 ( FFFFFFF6 00000014 0000000A 00000014 )
  154:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  170:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  18C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  1A8:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
  1C4:  Call     HPBarToHome 	( .Actor:Self )
  1D4:  Return
  1DC:  End

#new:Script $Script_802191AC_13
    0:  Call     SetHomePos  	( .Actor:Self 0000001E 00000073 FFFFFFE4 )
   1C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
   30:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
   44:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   58:  Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
   70:  Set  *Var[0]  00000041 
   80:  Set  *Var[1]  00000000 
   90:  Set  *Var[2]  FFFFFFF1 
   A0:  ExecWait 8029C12C 
   AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
   C0:  Call     SetGoalToPos 	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
   DC:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
   FC:  Call     SetActorAngle 	( .Actor:Self 00000000 )
  110:  Call     SetGoalToPos 	( .Actor:Self 00000082 00000064 FFFFFFE4 )
  12C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  14C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  160:  Call     SetGoalToPos 	( .Actor:Self 0000006E 0000006D FFFFFFE4 )
  17C:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  19C:  Call     SetGoalToPos 	( .Actor:Self 0000005A 00000075 FFFFFFE4 )
  1B8:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  1D8:  Call     SetGoalToPos 	( .Actor:Self 00000046 00000078 FFFFFFE4 )
  1F4:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  214:  Call     SetGoalToPos 	( .Actor:Self 00000032 0000007D FFFFFFE4 )
  230:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  250:  Call     SetGoalToPos 	( .Actor:Self 0000001E 00000082 FFFFFFE4 )
  26C:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  28C:  Thread
  294:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B0:  	Loop     0000000A 
  2BC:  		AddF  *Var[1]  *Fixed[-1.5] 
  2CC:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E8:  		Wait     00000001 
  2F4:  	EndLoop
  2FC:  EndThread
  304:  Set  *Var[0]  00000000 
  314:  Loop     0000000A 
  320:  	Add  *Var[0]  00000012 
  330:  	Call     SetActorRotation 	( .Actor:Self *Var[0] 00000000 00000000 )
  34C:  	Wait     00000001 
  358:  EndLoop
  360:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  37C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189FC_13 )
  394:  Call     SetAnimation 	( .Actor:Self 00000001 00410006 )
  3AC:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219ED4_13 )
  3C0:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .True )
  3D8:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
  3F4:  Call     8027D4C8 ( FFFFFF81 00000001 00000002 00000008 )
  410:  Call     $Function_80218000_13 ( FFFFFFF6 FFFFFFE7 0000000A FFFFFFE2 )
  42C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  448:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  464:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  480:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
  49C:  Call     HPBarToHome 	( .Actor:Self )
  4AC:  Return
  4B4:  End

#new:Script $Script_80219668_13
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   28:  Switch  *Var[0] 
   34:  	Case  ==  00000000 
   40:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   58:  	Case  ==  00000001 
   64:  		Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
   7C:  	Case  ==  00000002 
   88:  		Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
   A0:  	Case  ==  00000003 
   AC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000004 )
   C4:  	Case  ==  00000004 
   D0:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   E8:  EndSwitch
   F0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  108:  Switch  *Var[0] 
  114:  	Case  ==  00000000 
  120:  		ExecWait $Script_80218D68_13 
  12C:  	CaseOR  ==  00000001 
  138:  	CaseOR  ==  00000002 
  144:  	CaseOR  ==  00000004 
  150:  		ExecWait $Script_802191AC_13 
  15C:  	EndCaseGroup
  164:  	Case  ==  00000003 
  170:  		ExecWait $Script_80218FC8_13 
  17C:  EndSwitch
  184:  Return
  18C:  End

#new:Script $Script_HandleEvent_802197FC_13
    0:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   1C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   30:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  0041001B 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  0041001E 
   DC:  		SetConst  *Var[2]  0041001F 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  0041001E 
  124:  		SetConst  *Var[2]  0041001F 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  0041001F 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  0041001B 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  0041001B 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  0041001B 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  240:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  25C:  		SetConst  *Var[0]  00000001 
  26C:  		SetConst  *Var[1]  0041001B 
  27C:  		ExecWait DoShockHit 
  288:  		SetConst  *Var[0]  00000001 
  298:  		SetConst  *Var[1]  00410008 
  2A8:  		ExecWait 8029BD70 
  2B4:  		ExecWait $Script_80219668_13 
  2C0:  	Case  ==  .Event:ShockDeath
  2CC:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  2E8:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  304:  		SetConst  *Var[0]  00000001 
  314:  		SetConst  *Var[1]  0041001B 
  324:  		ExecWait DoShockHit 
  330:  		SetConst  *Var[0]  00000001 
  340:  		SetConst  *Var[1]  0041001B 
  350:  		ExecWait DoDeath 
  35C:  		Return
  364:  	CaseOR  ==  00000017
  370:  	CaseOR  ==  .Event:Immune
  37C:  		SetConst  *Var[0]  00000001 
  38C:  		SetConst  *Var[1]  00410004 
  39C:  		ExecWait DoImmune 
  3A8:  	EndCaseGroup
  3B0:  	Case  ==  .Event:Death
  3BC:  		SetConst  *Var[0]  00000001 
  3CC:  		SetConst  *Var[1]  0041001B 
  3DC:  		ExecWait DoNormalHit 
  3E8:  		Wait     0000000A 
  3F4:  		SetConst  *Var[0]  00000001 
  404:  		SetConst  *Var[1]  0041001B 
  414:  		ExecWait DoDeath 
  420:  		Return
  428:  	Case  ==  .Event:RecoverStatus
  434:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  448:  		SetConst  *Var[0]  00000001 
  458:  		SetConst  *Var[1]  00410004 
  468:  		ExecWait DoRecover 
  474:  	Case  ==  .Event:SwapPartner
  480:  		Call     SetAnimation 	( .Actor:Self 00000001 00410019 )
  498:  		Call     UseCamPreset 	( 00000001 )
  4A8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  4BC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4D8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4F4:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  514:  		Call     UseCamPreset 	( 00000002 )
  524:  	Default
  52C:  EndSwitch
  534:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  548:  Call     UseIdleAnimation 	( .Actor:Self .True )
  55C:  Return
  564:  End

#new:Script $Script_80219D68_13
    0:  Call     GetLastDamage 	( .Actor:Self *Var[0] )
   14:  If  *Var[0]  <=  00000000 
   24:  	Return
   2C:  EndIf
   34:  Call     8027D32C ( FFFFFF81 )
   44:  ExecWait $Script_8021A2E8_13 
   50:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189B0_13 )
   68:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC_13 )
   7C:  Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
   94:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
   B0:  Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
   CC:  Call     $Function_80218000_13 ( FFFFFFF6 00000014 0000000A 00000014 )
   E8:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   FC:  If  *Var[A]  &  0035D000 
  10C:  	Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
  124:  	Call     HPBarToCurrent ( .Actor:Self )
  134:  Else
  13C:  	ExecWait $Script_802191AC_13 
  148:  	Wait     00000014 
  154:  EndIf
  15C:  Return
  164:  End

#new:Script $Script_HandleEvent_80219ED4_13
    0:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   1C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   30:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	Case  ==  .Event:HitCombo
   70:  		SetConst  *Var[0]  00000001 
   80:  		SetConst  *Var[1]  0041001C 
   90:  		ExecWait DoNormalHit 
   9C:  	Case  ==  .Event:Hit
   A8:  		SetConst  *Var[0]  00000001 
   B8:  		SetConst  *Var[1]  0041001C 
   C8:  		ExecWait DoNormalHit 
   D4:  		ExecWait $Script_80219D68_13 
   E0:  	Case  ==  .Event:BurnHit
   EC:  		SetConst  *Var[0]  00000001 
   FC:  		SetConst  *Var[1]  00410020 
  10C:  		SetConst  *Var[2]  00410021 
  11C:  		ExecWait DoBurnHit 
  128:  		ExecWait $Script_80219D68_13 
  134:  	Case  ==  .Event:BurnDeath
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  00410020 
  160:  		SetConst  *Var[2]  00410021 
  170:  		ExecWait DoBurnHit 
  17C:  		SetConst  *Var[0]  00000001 
  18C:  		SetConst  *Var[1]  00410021 
  19C:  		ExecWait DoDeath 
  1A8:  		Return
  1B0:  	Case  ==  .Event:ShockHit
  1BC:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  1D8:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  0041001B 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00410008 
  240:  		ExecWait 8029BD70 
  24C:  		ExecWait $Script_80219668_13 
  258:  	Case  ==  .Event:ShockDeath
  264:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  280:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  29C:  		SetConst  *Var[0]  00000001 
  2AC:  		SetConst  *Var[1]  0041001B 
  2BC:  		ExecWait DoShockHit 
  2C8:  		SetConst  *Var[0]  00000001 
  2D8:  		SetConst  *Var[1]  0041001B 
  2E8:  		ExecWait DoDeath 
  2F4:  		Return
  2FC:  	CaseOR  ==  00000017
  308:  	CaseOR  ==  .Event:Immune
  314:  	CaseOR  ==  .Event:RecoverStatus
  320:  		SetConst  *Var[0]  00000001 
  330:  		SetConst  *Var[1]  00410006 
  340:  		ExecWait DoImmune 
  34C:  	EndCaseGroup
  354:  	Case  ==  .Event:Death
  360:  		SetConst  *Var[0]  00000001 
  370:  		SetConst  *Var[1]  0041001C 
  380:  		ExecWait DoNormalHit 
  38C:  		Wait     0000000A 
  398:  		SetConst  *Var[0]  00000001 
  3A8:  		SetConst  *Var[1]  0041001C 
  3B8:  		ExecWait DoDeath 
  3C4:  		Return
  3CC:  	Default
  3D4:  EndSwitch
  3DC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3F0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  404:  Return
  40C:  End

#new:Script $Script_8021A2E8_13
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   4C:  		Sub  *Var[0]  0000003C 
   5C:  		Set  *Var[1]  00000000 
   6C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
   80:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   9C:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
   BC:  	Case  ==  00000003 
   C8:  	CaseOR  ==  00000001 
   D4:  	CaseOR  ==  00000002 
   E0:  	CaseOR  ==  00000004 
   EC:  		Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
  104:  		Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  11C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
  138:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  14C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.001953125] )
  160:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  190:  		If  *Var[A]  &  00080000 
  1A0:  			Set  *Var[1]  0000000B 
  1B0:  		Else
  1B8:  			Set  *Var[1]  0000001C 
  1C8:  		EndIf
  1D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  20C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  228:  		Wait     00000001 
  234:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  250:  		Wait     00000001 
  25C:  		Thread
  264:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  280:  			Wait     00000001 
  28C:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  2A8:  		EndThread
  2B0:  		Thread
  2B8:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  2D4:  			Set  *Var[0]  000000B4 
  2E4:  			Loop     00000008 
  2F0:  				Sub  *Var[0]  00000016 
  300:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  31C:  				Wait     00000001 
  328:  			EndLoop
  330:  		EndThread
  338:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  34C:  		Add  *Var[0]  00000014 
  35C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  378:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  398:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  3B4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  3D0:  	EndCaseGroup
  3D8:  EndSwitch
  3E0:  Return
  3E8:  End

#new:Script $Script_8021A6D8_13
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  ExecWait $Script_8021A2E8_13 
   80:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   94:  Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
   AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
   C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   D4:  Call     SetGoalToTarget 	( .Actor:Self )
   E4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  100:  Add  *Var[0]  00000032 
  110:  Set  *Var[1]  00000000 
  120:  ExecWait 8029C12C 
  12C:  Call     SetAnimation 	( .Actor:Self 00000001 00410012 )
  144:  Wait     0000000A 
  150:  Call     PlaySoundAtActor 	( .Actor:Self 000020DA )
  164:  Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[F] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetAnimation 	( .Actor:Self 00000001 00410005 )
  1F0:  		Thread
  1F8:  			Set  *Var[0]  00000000 
  208:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  224:  			Loop     00000014 
  230:  				Add  *Var[0]  00000009 
  240:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  25C:  				Wait     00000001 
  268:  			EndLoop
  270:  		EndThread
  278:  		Call     SetGoalToTarget 	( .Actor:Self )
  288:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFEC 00000000 00000005 )
  2A4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  2D4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] FFFFFFFB *Var[2] )
  2F0:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  310:  		If  *Var[F]  ==  00000005 
  320:  			Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  344:  		EndIf
  34C:  		Wait     0000001E 
  358:  		Call     8026F6EC ( FFFFFF81 )
  368:  		Thread
  370:  			Wait     00000005 
  37C:  			Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  394:  		EndThread
  39C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  3B8:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  3D4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  3F0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  410:  		Wait     00000014 
  41C:  		Call     UseCamPreset 	( 00000002 )
  42C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  448:  		ExecWait $Script_80219668_13 
  454:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  46C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  480:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  494:  		Return
  49C:  EndSwitch
  4A4:  Call     SetAnimation 	( .Actor:Self 00000001 00410005 )
  4BC:  Thread
  4C4:  	Set  *Var[0]  00000000 
  4D4:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  4F0:  	Loop     00000014 
  4FC:  		Add  *Var[0]  00000009 
  50C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  528:  		Wait     00000001 
  534:  	EndLoop
  53C:  EndThread
  544:  Call     SetGoalToTarget 	( .Actor:Self )
  554:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.4003906] )
  568:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  588:  Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  5A4:  Wait     00000001 
  5B0:  Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  5CC:  Wait     00000001 
  5D8:  Call     8026F6EC ( FFFFFF81 )
  5E8:  Wait     00000002 
  5F4:  Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000003 00000020 )
  61C:  Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  638:  Wait     00000001 
  644:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  660:  Switch  *Var[F] 
  66C:  	CaseOR  ==  00000000 
  678:  	CaseOR  ==  00000002 
  684:  		Call     UseCamPreset 	( 00000002 )
  694:  		Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  6AC:  		Thread
  6B4:  			Set  *Var[0]  000000B4 
  6C4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  6E0:  			Loop     0000000A 
  6EC:  				Sub  *Var[0]  00000012 
  6FC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  718:  				Wait     00000001 
  724:  			EndLoop
  72C:  		EndThread
  734:  		Call     SetGoalToTarget 	( .Actor:Self )
  744:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  760:  		Add  *Var[0]  0000001E 
  770:  		Set  *Var[1]  00000000 
  780:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  794:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7B0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  7D0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7EC:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  808:  		Add  *Var[0]  00000014 
  818:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  834:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  854:  		Add  *Var[0]  0000000A 
  864:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  880:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  8A0:  		Wait     00000008 
  8AC:  		ExecWait $Script_80219668_13 
  8B8:  	EndCaseGroup
  8C0:  EndSwitch
  8C8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  8DC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  8F0:  Return
  8F8:  End

#new:IntTable $IntTable_8021AFD8_13
00000166 00000167 00000168 

#new:IntTable $IntTable_8021AFE4_13
00000049 0000004A 0000004B 

#new:IntTable $IntTable_8021AFF0_13
00000169 0000016A 0000016B 

#new:IntTable $IntTable_8021AFFC_13
0000004C 0000004D 0000004E 

#new:Script $Script_8021B008_13
    0:  Label    00000000 
    C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
   24:  Switch  *Var[A] 
   30:  	Case  ==  00000000 
   3C:  	Case  ==  00000001 
   48:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
   64:  		Set  *Var[2]  00000000 
   74:  		Sub  *Var[3]  00000001 
   84:  		Call     $Function_802182E4_13 ( *Var[4] *Var[5] )
   98:  		Call     MakeItemEntity ( *Var[4] *Var[1] *Var[2] *Var[3] 00000001 00000000 )
   BC:  		Add  *Var[1]  0000001E 
   CC:  		Call     $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000014 *Fixed[1.0] )
   F0:  		Add  *Var[1]  00000014 
  100:  		Call     $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 0000000A *Fixed[1.0] )
  124:  		Add  *Var[1]  0000000A 
  134:  		Call     $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 00000005 *Fixed[1.0] )
  158:  		Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  170:  	Case  ==  00000002 
  17C:  		Call     ShowMessageBox ( *Var[5] 0000003C )
  190:  		Sub  *Var[1]  00000096 
  1A0:  		Call     $Function_802180CC_13 ( *Var[0] *Var[1] *Var[2] *Var[3] 0000001E *Fixed[1.0] )
  1C4:  		Call     RemoveItemEntity 	( *Var[0] )
  1D4:  		Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
  1EC:  		Return
  1F4:  EndSwitch
  1FC:  Wait     00000001 
  208:  Goto     00000000 
  214:  Return
  21C:  End

#new:Script $Script_8021B22C_13
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  ExecWait $Script_8021A2E8_13 
   80:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   94:  Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
   AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
   C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   D4:  Call     SetGoalToTarget 	( .Actor:Self )
   E4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  100:  Add  *Var[0]  00000050 
  110:  Set  *Var[1]  00000000 
  120:  ExecWait 8029C12C 
  12C:  Call     SetAnimation 	( .Actor:Self 00000001 00410012 )
  144:  Wait     0000001E 
  150:  Call     PlaySoundAtActor 	( .Actor:Self 000020DB )
  164:  Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[F] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Call     SetAnimation 	( .Actor:Self 00000001 00410011 )
  1E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  1F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.001953125] )
  204:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  220:  		Sub  *Var[0]  0000001E 
  230:  		Set  *Var[1]  00000000 
  240:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  27C:  		If  *Var[F]  ==  00000005 
  28C:  			Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  2B0:  		EndIf
  2B8:  		Call     8026F6EC ( FFFFFF81 )
  2C8:  		Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  2E0:  		Thread
  2E8:  			Set  *Var[0]  0000005A 
  2F8:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  314:  			Loop     00000006 
  320:  				Add  *Var[0]  0000000F 
  330:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  34C:  				Wait     00000001 
  358:  			EndLoop
  360:  		EndThread
  368:  		Sub  *Var[0]  0000001E 
  378:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
  38C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3A8:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  3C8:  		Thread
  3D0:  			Set  *Var[0]  000000B4 
  3E0:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  3FC:  			Loop     00000007 
  408:  				Add  *Var[0]  00000019 
  418:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  434:  				Wait     00000001 
  440:  			EndLoop
  448:  		EndThread
  450:  		Sub  *Var[0]  00000014 
  460:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  474:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  490:  		Call     JumpToGoal  	( .Actor:Self 00000007 00000000 00000001 00000000 )
  4B0:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  4CC:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  4E8:  		Wait     00000014 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  520:  		ExecWait $Script_80219668_13 
  52C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  544:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  558:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  56C:  		Return
  574:  	EndCaseGroup
  57C:  EndSwitch
  584:  Call     SetAnimation 	( .Actor:Self 00000001 00410011 )
  59C:  Call     SetGoalToTarget 	( .Actor:Self )
  5AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.001953125] )
  5C0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Add  *Var[2]  00000001 
  5EC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  608:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  628:  Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  644:  Wait     00000001 
  650:  Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  66C:  Wait     00000001 
  678:  Call     8026F6EC ( FFFFFF81 )
  688:  Wait     00000002 
  694:  Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000003 00000020 )
  6BC:  Thread
  6C4:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  6E0:  	Wait     00000001 
  6EC:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  708:  EndThread
  710:  Switch  *Var[F] 
  71C:  	CaseOR  ==  00000000 
  728:  	CaseOR  ==  00000002 
  734:  		Set  *Flag[00]  00000000 
  744:  		Call     GetBattleFlags ( *Var[0] )
  754:  		If  *Var[0]  !&  80000000 
  764:  			Set  *Flag[00]  00000001 
  774:  		EndIf
  77C:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  790:  		If  *Var[0]  <=  00000000 
  7A0:  			Set  *Flag[00]  00000000 
  7B0:  		EndIf
  7B8:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  7CC:  		If  *Var[0]  &  00080000 
  7DC:  			Set  *Flag[00]  00000000 
  7EC:  		EndIf
  7F4:  		Call     GetStatusFlags ( .Actor:Player *Var[0] )
  808:  		If  *Var[0]  &  40100000 
  818:  			Set  *Flag[00]  00000000 
  828:  		EndIf
  830:  		If  *Flag[00]  ==  00000001 
  840:  			Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  858:  			Exec     $Script_8021B008_13 
  864:  			Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  87C:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  898:  			Add  *Var[0]  00000028 
  8A8:  			Set  *Var[1]  00000000 
  8B8:  			Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  8CC:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E8:  			Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  908:  			Add  *Var[0]  0000001E 
  918:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  934:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  954:  			Add  *Var[0]  00000014 
  964:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  980:  			Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  9A0:  			Add  *Var[0]  0000000A 
  9B0:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9CC:  			Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  9EC:  			Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  A04:  			Wait     00000008 
  A10:  			Label    00000000 
  A1C:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  A34:  			If  *Var[0]  !=  00000000 
  A44:  				Wait     00000001 
  A50:  				Goto     00000000 
  A5C:  			EndIf
  A64:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A80:  			Loop     00000003 
  A8C:  				Sub  *Var[0]  0000000A 
  A9C:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AB8:  				Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  AD8:  			EndLoop
  AE0:  			Wait     0000000A 
  AEC:  			Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  B04:  			Call     PlayEffect  	( {FX:Firework:White} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B48:  			Call     $Function_802184A0_13 ( 000000C8 0000000A )
  B5C:  			Call     PlaySoundAtActor 	( .Actor:Self 000020DC )
  B70:  			Call     SetAnimation 	( .Actor:Self 00000001 00410013 )
  B88:  			Wait     00000014 
  B94:  			Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  BAC:  		Else
  BB4:  			Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  BCC:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BE8:  			Add  *Var[0]  00000028 
  BF8:  			Set  *Var[1]  00000000 
  C08:  			Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  C1C:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C38:  			Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  C58:  			Add  *Var[0]  0000001E 
  C68:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C84:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  CA4:  			Add  *Var[0]  00000014 
  CB4:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  CD0:  			Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  CF0:  			Add  *Var[0]  0000000A 
  D00:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D1C:  			Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  D3C:  			Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
  D54:  			Wait     00000008 
  D60:  			Wait     0000000A 
  D6C:  		EndIf
  D74:  		Call     UseCamPreset 	( 00000002 )
  D84:  		ExecWait $Script_80219668_13 
  D90:  	EndCaseGroup
  D98:  EndSwitch
  DA0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DB4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  DC8:  Return
  DD0:  End

#new:Script $Script_8021C004_13
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseCamPreset 	( 0000000E )
   38:  Call     CamTargetActor ( .Actor:Self )
   48:  Call     MoveCamOver 	( 00000014 )
   58:  Wait     00000014 
   64:  Call     SetAnimation 	( .Actor:Self 00000001 00410012 )
   7C:  Wait     0000001E 
   88:  Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
   A0:  Thread
   A8:  	Wait     00000005 
   B4:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
   C8:  	Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
   DC:  	Wait     0000001E 
   E8:  	Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
   FC:  EndThread
  104:  Thread
  10C:  	Call     8026BF48 ( 00000001 )
  11C:  	Call     HealActor   	( .Actor:Self 00000004 00000000 )
  134:  	Call     8026BF48 ( 00000000 )
  144:  EndThread
  14C:  Call     8027114C ( )
  158:  Call     UseCamPreset 	( 00000002 )
  168:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  17C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  190:  Return
  198:  End

#new:Script $Script_TakeTurn_8021C1A4_13
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	CaseOR  ==  00000000 
   30:  	CaseOR  ==  00000003 
   3C:  		Call     GetActorHP  	( .Actor:Self *Var[0] )
   50:  		Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
   64:  		Mul  *Var[0]  00000064 
   74:  		Div  *Var[0]  *Var[1] 
   84:  		If  *Var[0]  <=  00000023 
   94:  			Call     RandInt     	( 000003E8 *Var[0] )
   A8:  			If  *Var[0]  <  000001F4 
   B8:  				ExecWait $Script_8021C004_13 
   C4:  				Return
   CC:  			EndIf
   D4:  		EndIf
   DC:  	EndCaseGroup
   E4:  EndSwitch
   EC:  Call     RandInt     	( 000003E8 *Var[0] )
  100:  If  *Var[0]  <  000001F4 
  110:  	ExecWait $Script_8021A6D8_13 
  11C:  Else
  124:  	Call     $Function_802184F8_13 ( *Var[0] )
  134:  	If  *Var[0]  ==  00000000 
  144:  		ExecWait $Script_8021B22C_13 
  150:  	Else
  158:  		ExecWait $Script_8021A6D8_13 
  164:  	EndIf
  16C:  EndIf
  174:  Return
  17C:  End

