% Script File: 00 Goombario.bscr
% Decoded from: 6F10E0 to 6F5E80 (00 Goombario)

#new:Function $Function_80238000
    0:  ADDIU     SP, SP, FFD8
    4:  LIA       V1, 800DC070
    C:  SW        RA, 20 (SP)
   10:  SW        S1, 1C (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        V0, DC (V1)
   1C:  DADDU     S0, A0, R0
   20:  LWC1      F2, 1C (V0)
   24:  LWC1      F12, 144 (V0)
   28:  LWC1      F14, 148 (V0)
   2C:  LWC1      F4, 14C (V0)
   30:  LWC1      F6, 18 (V0)
   34:  LWC1      F0, 20 (V0)
   38:  MFC1      A2, F4
   3C:  MFC1      A3, F6
   40:  DADDU     S1, V1, R0
   44:  SWC1      F2, 10 (SP)
   48:  JAL       {Func:Dist3D}
   4C:  SWC1      F0, 14 (SP)
   50:  LIF       F2, 15.0
   58:  NOP
   5C:  MUL.S     F0, F0, F2
   60:  NOP
   64:  LIF       F2, 100.0
   6C:  NOP
   70:  DIV.S     F0, F0, F2
   74:  TRUNC.W.S F8, F0
   78:  MFC1      V0, F8
   7C:  NOP
   80:  SW        V0, 84 (S0)
   84:  SLTI      V0, V0, 15
   88:  BNE       V0, R0, .o94
   8C:  ADDIU     V0, R0, 14
   90:  SW        V0, 84 (S0)
        .o94
   94:  LB        V0, 83 (S1)
   98:  BEQ       V0, R0, .oB8
   9C:  NOP
   A0:  LW        V0, 84 (S0)
   A4:  SLTI      V0, V0, A
   A8:  BEQ       V0, R0, .oCC
   AC:  ADDIU     V0, R0, A
   B0:  BEQ       R0, R0, .oCC
   B4:  SW        V0, 84 (S0)
        .oB8
   B8:  LW        V0, 84 (S0)
   BC:  SLTI      V0, V0, F
   C0:  BEQ       V0, R0, .oCC
   C4:  ADDIU     V0, R0, F
   C8:  SW        V0, 84 (S0)
        .oCC
   CC:  LW        RA, 20 (SP)
   D0:  LW        S1, 1C (SP)
   D4:  LW        S0, 18 (SP)
   D8:  ADDIU     V0, R0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28

#new:Function $Function_802380E4
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  JAL       {Func:GetActor}
   18:  LW        A0, 148 (S1)
   1C:  JAL       {Func:GetActor}
   20:  LH        A0, 428 (V0)
   24:  ADDIU     V1, R0, 63
   28:  LIA       S0, $???_8023BB98
   30:  SW        V1, 84 (S1)
   34:  LW        V0, 8 (V0)
   38:  LW        V1, 0 (S0)
   3C:  LBU       V0, 1E (V0)
   40:  MULT      V1, V0
   44:  MFLO      V1
   48:  LIO       V0, 51EB851F
   50:  MULT      V1, V0
   54:  ADDIU     A0, R0, 64
   58:  SRA       V1, V1, 1F
   5C:  MFHI      A2
   60:  SRA       V0, A2, 5
   64:  SUBU      V0, V0, V1
   68:  JAL       {Func:GetRandom}
   6C:  SW        V0, 0 (S0)
   70:  LW        V1, 0 (S0)
   74:  SLT       V1, V1, V0
   78:  BNEL      V1, R0, .o80
   7C:  SW        R0, 84 (S1)
        .o80
   80:  LW        RA, 18 (SP)
   84:  LW        S1, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  ADDIU     V0, R0, 2
   90:  JR        RA
   94:  ADDIU     SP, SP, 20

#new:Function $Function_8023817C
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S3, 1C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        S4, 20 (SP)
   10:  LIA       S4, 800DC070
   18:  SW        RA, 24 (SP)
   1C:  SW        S2, 18 (SP)
   20:  SW        S1, 14 (SP)
   24:  SW        S0, 10 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S2, DC (S4)
   3C:  LW        S1, C (S3)
   40:  BEQ       A1, R0, .o84
   44:  ADDIU     S0, S2, C
   48:  LW        A1, 0 (S1)
   4C:  JAL       {Func:GetVariable}
   50:  ADDIU     S1, S1, 4
   54:  SH        V0, 70 (S2)
   58:  LW        A1, 0 (S1)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     A0, S3, R0
   64:  SH        V0, 72 (S2)
   68:  SW        R0, 74 (S3)
   6C:  SW        R0, 70 (S3)
   70:  LH        V1, 72 (S2)
   74:  ADDIU     V0, R0, 1
   78:  BNE       V1, V0, .o84
   7C:  ADDIU     V0, R0, 2
   80:  SW        V0, 70 (S3)
        .o84
   84:  LW        V0, 70 (S3)
   88:  BNE       V0, R0, .o460
   8C:  NOP
   90:  LWC1      F0, 144 (S2)
   94:  LWC1      F24, C (S0)
   98:  LWC1      F26, 14 (S0)
   9C:  SWC1      F0, 0 (S0)
   A0:  LWC1      F0, 148 (S2)
   A4:  MFC1      A2, F24
   A8:  MFC1      A3, F26
   AC:  LWC1      F22, 0 (S0)
   B0:  SWC1      F0, 4 (S0)
   B4:  LWC1      F20, 14C (S2)
   B8:  MOV.S     F12, F22
   BC:  MOV.S     F14, F20
   C0:  JAL       80029C80
   C4:  SWC1      F20, 8 (S0)
   C8:  MOV.S     F12, F22
   CC:  MFC1      A2, F24
   D0:  MFC1      A3, F26
   D4:  MOV.S     F14, F20
   D8:  JAL       {Func:Dist2D}
   DC:  SWC1      F0, 48 (S0)
   E0:  LH        V0, 64 (S0)
   E4:  MOV.S     F4, F0
   E8:  BNE       V0, R0, .o134
   EC:  SWC1      F4, 4C (S0)
   F0:  LWC1      F0, 40 (S0)
   F4:  LWC1      F2, 40 (S0)
   F8:  DIV.S     F0, F4, F0
   FC:  TRUNC.W.S F10, F0
  100:  MFC1      V1, F10
  104:  NOP
  108:  SLL       V0, V1, 10
  10C:  SRA       V0, V0, 10
  110:  MTC1      V0, F0
  114:  NOP
  118:  CVT.S.W   F0, F0
  11C:  MUL.S     F0, F0, F2
  120:  NOP
  124:  MOV.S     F2, F4
  128:  SH        V1, 64 (S0)
  12C:  BEQ       R0, R0, .o168
  130:  SUB.S     F8, F2, F0
        .o134
  134:  MTC1      V0, F2
  138:  NOP
  13C:  CVT.S.W   F2, F2
  140:  LH        V0, 64 (S0)
  144:  DIV.S     F2, F4, F2
  148:  MTC1      V0, F0
  14C:  NOP
  150:  CVT.S.W   F0, F0
  154:  MUL.S     F0, F0, F2
  158:  NOP
  15C:  LWC1      F4, 4C (S0)
  160:  SWC1      F2, 40 (S0)
  164:  SUB.S     F8, F4, F0
        .o168
  168:  LH        V1, 64 (S0)
  16C:  BEQ       V1, R0, .o874
  170:  ADDIU     V0, R0, 2
  174:  LH        V0, 64 (S0)
  178:  LWC1      F2, C (S0)
  17C:  LIO       AT, 40490FD0
  184:  MTC1      AT, F0
  188:  LWC1      F4, 0 (S0)
  18C:  MTC1      V0, F6
  190:  NOP
  194:  CVT.S.W   F6, F6
  198:  DIV.S     F0, F0, F6
  19C:  SUB.S     F2, F2, F4
  1A0:  SWC1      F0, 3C (S0)
  1A4:  MTC1      V1, F0
  1A8:  NOP
  1AC:  CVT.S.W   F0, F0
  1B0:  DIV.S     F2, F2, F0
  1B4:  LWC1      F0, 10 (S0)
  1B8:  SWC1      F2, 30 (S0)
  1BC:  LWC1      F2, 4 (S0)
  1C0:  SW        R0, 44 (S0)
  1C4:  SUB.S     F0, F0, F2
  1C8:  LWC1      F4, 14 (S0)
  1CC:  MOV.S     F2, F6
  1D0:  DIV.S     F0, F0, F2
  1D4:  SWC1      F0, 34 (S0)
  1D8:  MOV.S     F0, F6
  1DC:  DIV.S     F0, F8, F0
  1E0:  LWC1      F2, 8 (S0)
  1E4:  LH        V0, 66 (S0)
  1E8:  SUB.S     F4, F4, F2
  1EC:  LWC1      F2, 40 (S0)
  1F0:  SLTI      V0, V0, 3
  1F4:  ADD.S     F2, F2, F0
  1F8:  DIV.S     F4, F4, F6
  1FC:  SWC1      F4, 38 (S0)
  200:  BEQ       V0, R0, .o318
  204:  SWC1      F2, 40 (S0)
  208:  LH        V0, 64 (S0)
  20C:  ADDIU     V1, R0, 168
  210:  BNE       V0, R0, .o21C
  214:  DIV       V1, V0
  218:  BREAK     1C00
        .o21C
  21C:  ADDIU     AT, R0, FFFF
  220:  BNE       V0, AT, .o234
  224:  LUI       AT, 8000
  228:  BNE       V1, AT, .o234
  22C:  NOP
  230:  BREAK     1800
        .o234
  234:  MFLO      V1
  238:  LWC1      F8, 4C (S0)
  23C:  LIF       F3, 2.8125
  244:  MTC1      R0, F2
  248:  CVT.D.S   F0, F8
  24C:  SUB.D     F0, F0, F2
  250:  LIF       F3, 2.375
  258:  MTC1      R0, F2
  25C:  CVT.S.D   F8, F0
  260:  CVT.D.S   F0, F8
  264:  DIV.D     F0, F0, F2
  268:  CVT.S.D   F8, F0
  26C:  LAD       F2, $ConstDouble_8023CD50
  274:  CVT.D.S   F0, F8
  278:  ADD.D     F0, F0, F2
  27C:  LIF       F2, 90.0
  284:  CVT.S.D   F8, F0
  288:  MTC1      V1, F0
  28C:  NOP
  290:  CVT.S.W   F0, F0
  294:  LH        V1, 66 (S0)
  298:  ADDIU     V0, R0, 2
  29C:  SWC1      F2, 24 (S0)
  2A0:  SWC1      F8, 50 (S0)
  2A4:  BNE       V1, V0, .o2C8
  2A8:  SWC1      F0, 28 (S0)
  2AC:  LAD       F2, $ConstDouble_8023CD58
  2B4:  CVT.D.S   F0, F8
  2B8:  MUL.D     F0, F0, F2
  2BC:  NOP
  2C0:  CVT.S.D   F0, F0
  2C4:  SWC1      F0, 50 (S0)
        .o2C8
  2C8:  LWC1      F12, 24 (S0)
  2CC:  LIO       AT, 40C90FD0
  2D4:  MTC1      AT, F0
  2D8:  LWC1      F20, 44 (S0)
  2DC:  LWC1      F22, 3C (S0)
  2E0:  SW        R0, 18 (S0)
  2E4:  MUL.S     F12, F12, F0
  2E8:  NOP
  2EC:  SW        R0, 1C (S0)
  2F0:  CVT.D.S   F20, F20
  2F4:  LIF       F0, 360.0
  2FC:  CVT.D.S   F22, F22
  300:  JAL       {Func:SinRad}
  304:  DIV.S     F12, F12, F0
  308:  LAD       F2, $ConstDouble_8023CD60
  310:  BEQ       R0, R0, .o428
  314:  CVT.D.S   F0, F0
        .o318
  318:  LH        V0, 64 (S0)
  31C:  ADDIU     V1, R0, 168
  320:  BNE       V0, R0, .o32C
  324:  DIV       V1, V0
  328:  BREAK     1C00
        .o32C
  32C:  ADDIU     AT, R0, FFFF
  330:  BNE       V0, AT, .o344
  334:  LUI       AT, 8000
  338:  BNE       V1, AT, .o344
  33C:  NOP
  340:  BREAK     1800
        .o344
  344:  MFLO      V1
  348:  LWC1      F8, 4C (S0)
  34C:  LIF       F3, 2.8125
  354:  MTC1      R0, F2
  358:  CVT.D.S   F0, F8
  35C:  SUB.D     F0, F0, F2
  360:  LIF       F3, 2.375
  368:  MTC1      R0, F2
  36C:  CVT.S.D   F8, F0
  370:  CVT.D.S   F0, F8
  374:  DIV.D     F0, F0, F2
  378:  CVT.S.D   F8, F0
  37C:  LAD       F2, $ConstDouble_8023CD68
  384:  CVT.D.S   F0, F8
  388:  ADD.D     F0, F0, F2
  38C:  LIF       F2, 90.0
  394:  CVT.S.D   F8, F0
  398:  MTC1      V1, F0
  39C:  NOP
  3A0:  CVT.S.W   F0, F0
  3A4:  LH        V1, 66 (S0)
  3A8:  ADDIU     V0, R0, 4
  3AC:  SWC1      F2, 24 (S0)
  3B0:  SWC1      F8, 50 (S0)
  3B4:  BNE       V1, V0, .o3DC
  3B8:  SWC1      F0, 28 (S0)
  3BC:  LIF       F3, 1.90625
  3C4:  MTC1      R0, F2
  3C8:  CVT.D.S   F0, F8
  3CC:  MUL.D     F0, F0, F2
  3D0:  NOP
  3D4:  CVT.S.D   F0, F0
  3D8:  SWC1      F0, 50 (S0)
        .o3DC
  3DC:  LWC1      F12, 24 (S0)
  3E0:  LIO       AT, 40C90FD0
  3E8:  MTC1      AT, F0
  3EC:  LWC1      F20, 44 (S0)
  3F0:  LWC1      F22, 3C (S0)
  3F4:  SW        R0, 18 (S0)
  3F8:  MUL.S     F12, F12, F0
  3FC:  NOP
  400:  SW        R0, 1C (S0)
  404:  CVT.D.S   F20, F20
  408:  LIF       F0, 360.0
  410:  CVT.D.S   F22, F22
  414:  JAL       {Func:SinRad}
  418:  DIV.S     F12, F12, F0
  41C:  LAD       F2, $ConstDouble_8023CD70
  424:  CVT.D.S   F0, F0
        .o428
  428:  MUL.D     F0, F0, F2
  42C:  NOP
  430:  MUL.D     F0, F0, F22
  434:  NOP
  438:  ADD.D     F0, F0, F22
  43C:  ADD.D     F20, F20, F0
  440:  CVT.S.D   F20, F20
  444:  SWC1      F20, 44 (S0)
  448:  ADDIU     A0, R0, 100
  44C:  LW        A2, 58 (S0)
  450:  JAL       80263CFC
  454:  ADDIU     A1, R0, 1
  458:  ADDIU     V0, R0, 1
  45C:  SW        V0, 70 (S3)
        .o460
  460:  LW        V1, 70 (S3)
  464:  ADDIU     V0, R0, 2
  468:  BEQ       V1, V0, .o6BC
  46C:  SLTI      V0, V1, 3
  470:  BEQ       V0, R0, .o488
  474:  ADDIU     V0, R0, 1
  478:  BEQ       V1, V0, .o49C
  47C:  DADDU     V0, R0, R0
  480:  BEQ       R0, R0, .o874
  484:  NOP
        .o488
  488:  ADDIU     V0, R0, 3
  48C:  BEQ       V1, V0, .o784
  490:  DADDU     V0, R0, R0
  494:  BEQ       R0, R0, .o874
  498:  NOP
        .o49C
  49C:  LWC1      F2, 44 (S0)
  4A0:  LIO       AT, 3FC90FD0
  4A8:  MTC1      AT, F0
  4AC:  NOP
  4B0:  C.LT.S    F0, F2
  4B4:  NOP
  4B8:  BC1F      .o4CC
  4BC:  ADDIU     A0, R0, 100
  4C0:  LW        A2, 5C (S0)
  4C4:  JAL       80263CFC
  4C8:  ADDIU     A1, R0, 1
        .o4CC
  4CC:  LWC1      F6, 0 (S0)
  4D0:  LWC1      F0, 30 (S0)
  4D4:  LWC1      F4, 4 (S0)
  4D8:  LWC1      F22, 144 (S2)
  4DC:  ADD.S     F6, F6, F0
  4E0:  LWC1      F0, 34 (S0)
  4E4:  LWC1      F2, 38 (S0)
  4E8:  ADD.S     F4, F4, F0
  4EC:  LWC1      F0, 8 (S0)
  4F0:  LWC1      F20, 148 (S2)
  4F4:  ADD.S     F0, F0, F2
  4F8:  SWC1      F6, 0 (S0)
  4FC:  SWC1      F4, 4 (S0)
  500:  SWC1      F0, 8 (S0)
  504:  LWC1      F0, 148 (S2)
  508:  MOV.S     F2, F6
  50C:  SWC1      F0, 18 (S0)
  510:  SWC1      F2, 144 (S2)
  514:  JAL       {Func:SinRad}
  518:  LWC1      F12, 44 (S0)
  51C:  LWC1      F2, 50 (S0)
  520:  MUL.S     F2, F2, F0
  524:  NOP
  528:  LWC1      F0, 4 (S0)
  52C:  ADD.S     F0, F0, F2
  530:  SWC1      F0, 148 (S2)
  534:  LWC1      F0, 8 (S0)
  538:  SWC1      F0, 14C (S2)
  53C:  LWC1      F2, 10 (S0)
  540:  LWC1      F0, 148 (S2)
  544:  C.LT.S    F0, F2
  548:  NOP
  54C:  BC1F      .o56C
  550:  MOV.S     F12, F22
  554:  LH        V0, 64 (S0)
  558:  SLTI      V0, V0, 3
  55C:  BNEL      V0, R0, .o568
  560:  SWC1      F2, 148 (S2)
  564:  MOV.S     F12, F22
        .o568
  568:  LWC1      F0, 148 (S2)
        .o56C
  56C:  LW        A2, 144 (S2)
  570:  NEG.S     F0, F0
  574:  MFC1      A3, F0
  578:  JAL       80029C80
  57C:  NEG.S     F14, F20
  580:  NEG.S     F0, F0
  584:  SWC1      F0, 164 (S2)
  588:  LH        V0, 66 (S0)
  58C:  LWC1      F0, 148 (S2)
  590:  SLTI      V0, V0, 3
  594:  BEQ       V0, R0, .o5E4
  598:  SWC1      F0, 1C (S0)
  59C:  LWC1      F12, 24 (S0)
  5A0:  LIO       AT, 40C90FD0
  5A8:  MTC1      AT, F0
  5AC:  LWC1      F20, 44 (S0)
  5B0:  MUL.S     F12, F12, F0
  5B4:  NOP
  5B8:  LWC1      F22, 3C (S0)
  5BC:  CVT.D.S   F20, F20
  5C0:  LIF       F0, 360.0
  5C8:  CVT.D.S   F22, F22
  5CC:  JAL       {Func:SinRad}
  5D0:  DIV.S     F12, F12, F0
  5D4:  LAD       F2, $ConstDouble_8023CD78
  5DC:  BEQ       R0, R0, .o628
  5E0:  CVT.D.S   F0, F0
        .o5E4
  5E4:  LWC1      F12, 24 (S0)
  5E8:  LIO       AT, 40C90FD0
  5F0:  MTC1      AT, F0
  5F4:  LWC1      F20, 44 (S0)
  5F8:  MUL.S     F12, F12, F0
  5FC:  NOP
  600:  LWC1      F22, 3C (S0)
  604:  CVT.D.S   F20, F20
  608:  LIF       F0, 360.0
  610:  CVT.D.S   F22, F22
  614:  JAL       {Func:SinRad}
  618:  DIV.S     F12, F12, F0
  61C:  LAD       F2, $ConstDouble_8023CD80
  624:  CVT.D.S   F0, F0
        .o628
  628:  MUL.D     F0, F0, F2
  62C:  NOP
  630:  MUL.D     F0, F0, F22
  634:  NOP
  638:  ADD.D     F0, F0, F22
  63C:  ADD.D     F20, F20, F0
  640:  CVT.S.D   F20, F20
  644:  SWC1      F20, 44 (S0)
  648:  LWC1      F12, 24 (S0)
  64C:  LWC1      F0, 28 (S0)
  650:  ADD.S     F12, F12, F0
  654:  JAL       80029B24
  658:  SWC1      F12, 24 (S0)
  65C:  LHU       V0, 64 (S0)
  660:  SWC1      F0, 24 (S0)
  664:  ADDIU     V0, V0, FFFF
  668:  SH        V0, 64 (S0)
  66C:  SLL       V0, V0, 10
  670:  BNE       V0, R0, .o874
  674:  DADDU     V0, R0, R0
  678:  LWC1      F0, 10 (S0)
  67C:  ADDIU     A0, R0, 100
  680:  SWC1      F0, 148 (S2)
  684:  LWC1      F0, 18 (S0)
  688:  LWC1      F2, 1C (S0)
  68C:  LW        A2, 60 (S0)
  690:  SUB.S     F0, F0, F2
  694:  LIO       AT, 3FE66666
  69C:  MTC1      AT, F2
  6A0:  ADDIU     A1, R0, 1
  6A4:  SWC1      F2, 3C (S0)
  6A8:  NEG.S     F0, F0
  6AC:  JAL       80263CFC
  6B0:  SWC1      F0, 44 (S0)
  6B4:  BEQ       R0, R0, .o874
  6B8:  ADDIU     V0, R0, 1
        .o6BC
  6BC:  LB        V0, 83 (S4)
  6C0:  BEQ       V0, R0, .o850
  6C4:  ADDIU     V0, R0, 1
  6C8:  SH        V0, 64 (S0)
  6CC:  LH        V0, 64 (S0)
  6D0:  ADDIU     V1, R0, 168
  6D4:  BNE       V0, R0, .o6E0
  6D8:  DIV       V1, V0
  6DC:  BREAK     1C00
        .o6E0
  6E0:  ADDIU     AT, R0, FFFF
  6E4:  BNE       V0, AT, .o6F8
  6E8:  LUI       AT, 8000
  6EC:  BNE       V1, AT, .o6F8
  6F0:  NOP
  6F4:  BREAK     1800
        .o6F8
  6F8:  MFLO      V1
  6FC:  LWC1      F2, 18 (S0)
  700:  LWC1      F0, 1C (S0)
  704:  LIO       AT, 3FE66666
  70C:  MTC1      AT, F8
  710:  LWC1      F4, 1C (S0)
  714:  SUB.S     F2, F2, F0
  718:  LWC1      F0, 18 (S0)
  71C:  LIF       F6, 90.0
  724:  SUB.S     F0, F0, F4
  728:  SWC1      F8, 3C (S0)
  72C:  SWC1      F6, 24 (S0)
  730:  NEG.S     F2, F2
  734:  SWC1      F2, 44 (S0)
  738:  LAD       F2, $ConstDouble_8023CD88
  740:  ABS.S     F0, F0
  744:  CVT.D.S   F0, F0
  748:  DIV.D     F0, F0, F2
  74C:  CVT.S.D   F0, F0
  750:  SWC1      F0, 50 (S0)
  754:  MTC1      V1, F0
  758:  NOP
  75C:  CVT.S.W   F0, F0
  760:  SWC1      F0, 28 (S0)
  764:  LWC1      F0, 144 (S2)
  768:  SWC1      F0, 0 (S0)
  76C:  LWC1      F0, 148 (S2)
  770:  SWC1      F0, 4 (S0)
  774:  LWC1      F0, 14C (S2)
  778:  ADDIU     V0, R0, 3
  77C:  SWC1      F0, 8 (S0)
  780:  SW        V0, 70 (S3)
        .o784
  784:  LWC1      F12, 24 (S0)
  788:  LIO       AT, 40C90FD0
  790:  MTC1      AT, F22
  794:  NOP
  798:  MUL.S     F12, F12, F22
  79C:  NOP
  7A0:  LWC1      F20, 0 (S0)
  7A4:  LIF       F24, 360.0
  7AC:  CVT.D.S   F20, F20
  7B0:  JAL       {Func:SinRad}
  7B4:  DIV.S     F12, F12, F24
  7B8:  LWC1      F2, 50 (S0)
  7BC:  MUL.S     F2, F2, F0
  7C0:  NOP
  7C4:  LWC1      F12, 24 (S0)
  7C8:  MUL.S     F12, F12, F22
  7CC:  NOP
  7D0:  LAD       F0, $ConstDouble_8023CD90
  7D8:  CVT.D.S   F2, F2
  7DC:  DIV.D     F2, F2, F0
  7E0:  ADD.D     F20, F20, F2
  7E4:  DIV.S     F12, F12, F24
  7E8:  CVT.S.D   F20, F20
  7EC:  JAL       {Func:SinRad}
  7F0:  SWC1      F20, 0 (S0)
  7F4:  LWC1      F2, 50 (S0)
  7F8:  MUL.S     F2, F2, F0
  7FC:  NOP
  800:  LWC1      F12, 24 (S0)
  804:  LWC1      F0, 28 (S0)
  808:  ADD.S     F12, F12, F0
  80C:  LWC1      F0, 4 (S0)
  810:  SUB.S     F0, F0, F2
  814:  SWC1      F12, 24 (S0)
  818:  JAL       80029B24
  81C:  SWC1      F0, 4 (S0)
  820:  LWC1      F2, 0 (S0)
  824:  SWC1      F0, 24 (S0)
  828:  SWC1      F2, 144 (S2)
  82C:  LWC1      F0, 4 (S0)
  830:  SWC1      F0, 148 (S2)
  834:  LWC1      F0, 8 (S0)
  838:  SWC1      F0, 14C (S2)
  83C:  LAW       V0, 800DC070
  844:  ANDI      V0, V0, 2000
  848:  BEQ       V0, R0, .o858
  84C:  NOP
        .o850
  850:  BEQ       R0, R0, .o874
  854:  ADDIU     V0, R0, 2
        .o858
  858:  LHU       V1, 64 (S0)
  85C:  ADDIU     V1, V1, FFFF
  860:  SH        V1, 64 (S0)
  864:  SLL       V1, V1, 10
  868:  BEQ       V1, R0, .o874
  86C:  ADDIU     V0, R0, 1
  870:  DADDU     V0, R0, R0
        .o874
  874:  LW        RA, 24 (SP)
  878:  LW        S4, 20 (SP)
  87C:  LW        S3, 1C (SP)
  880:  LW        S2, 18 (SP)
  884:  LW        S1, 14 (SP)
  888:  LW        S0, 10 (SP)
  88C:  LDC1      F26, 40 (SP)
  890:  LDC1      F24, 38 (SP)
  894:  LDC1      F22, 30 (SP)
  898:  LDC1      F20, 28 (SP)
  89C:  JR        RA
  8A0:  ADDIU     SP, SP, 48

#new:Function $Function_80238A20
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S0, 18 (SP)
    8:  LAW       S0, 800DC14C
   10:  SW        RA, 20 (SP)
   14:  SW        S1, 1C (SP)
   18:  SDC1      F20, 28 (SP)
   1C:  BEQ       A1, R0, .o28
   20:  ADDIU     S1, S0, C
   24:  SW        R0, 70 (A0)
        .o28
   28:  LW        V0, 70 (A0)
   2C:  BNE       V0, R0, .o50
   30:  ADDIU     V0, R0, 1
   34:  LWC1      F0, 144 (S0)
   38:  LWC1      F2, 148 (S0)
   3C:  LWC1      F4, 14C (S0)
   40:  SWC1      F0, C (S0)
   44:  SWC1      F2, 10 (S0)
   48:  SWC1      F4, 14 (S0)
   4C:  SW        V0, 70 (A0)
        .o50
   50:  LWC1      F0, 50 (S0)
   54:  MTC1      R0, F20
   58:  NOP
   5C:  C.LT.S    F20, F0
   60:  NOP
   64:  BC1F      .o7C
   68:  ADDIU     A0, R0, 100
   6C:  LW        A2, 64 (S0)
   70:  JAL       80263CFC
   74:  DADDU     A1, R0, R0
   78:  LWC1      F0, 50 (S0)
        .o7C
   7C:  C.LT.S    F0, F20
   80:  NOP
   84:  BC1F      .o98
   88:  ADDIU     A0, R0, 100
   8C:  LW        A2, 68 (S0)
   90:  JAL       80263CFC
   94:  DADDU     A1, R0, R0
        .o98
   98:  LWC1      F4, 10 (S0)
   9C:  LWC1      F0, 50 (S0)
   A0:  LW        A1, 4C (S0)
   A4:  ADD.S     F4, F4, F0
   A8:  LWC1      F2, 48 (S0)
   AC:  LW        A2, 54 (S0)
   B0:  SUB.S     F0, F0, F2
   B4:  DADDU     A0, S1, R0
   B8:  SWC1      F4, 10 (S0)
   BC:  JAL       80264128
   C0:  SWC1      F0, 50 (S0)
   C4:  LWC1      F0, 10 (S0)
   C8:  LWC1      F2, 14 (S0)
   CC:  LIF       F6, 10.0
   D4:  SWC1      F0, 148 (S0)
   D8:  LWC1      F0, C (S0)
   DC:  LWC1      F4, 148 (S0)
   E0:  SWC1      F2, 14C (S0)
   E4:  C.LT.S    F4, F6
   E8:  NOP
   EC:  BC1T      .oFC
   F0:  SWC1      F0, 144 (S0)
   F4:  BEQ       R0, R0, .o128
   F8:  DADDU     V0, R0, R0
        .oFC
   FC:  LWC1      F0, 18C (S0)
  100:  SWC1      F6, 148 (S0)
  104:  SWC1      F0, 10 (SP)
  108:  LW        A1, 144 (S0)
  10C:  LW        A2, 148 (S0)
  110:  LW        A3, 14C (S0)
  114:  JAL       802642F0
  118:  ADDIU     A0, R0, 2
  11C:  JAL       80149CB4
  120:  ADDIU     A0, R0, 148
  124:  ADDIU     V0, R0, 1
        .o128
  128:  LW        RA, 20 (SP)
  12C:  LW        S1, 1C (SP)
  130:  LW        S0, 18 (SP)
  134:  LDC1      F20, 28 (SP)
  138:  JR        RA
  13C:  ADDIU     SP, SP, 30

#new:Function $Function_80238B60
    0:  LAW       V0, 800DC14C
    8:  ADDIU     SP, SP, FFE8
    C:  SW        S0, 10 (SP)
   10:  DADDU     S0, A0, R0
   14:  SW        RA, 14 (SP)
   18:  JAL       {Func:GetActor}
   1C:  LH        A0, 428 (V0)
   20:  DADDU     A0, V0, R0
   24:  LBU       V0, 136 (A0)
   28:  SLL       V0, V0, 2
   2C:  LTW       V0, V0 (80282B98)
   38:  LIA       V1, 80282B98
   40:  BNE       V0, R0, .o50
   44:  SW        V0, 84 (S0)
   48:  LW        V0, 0 (V1)
   4C:  SW        V0, 84 (S0)
        .o50
   50:  JAL       80253D10
   54:  LBU       A0, 136 (A0)
   58:  LW        RA, 14 (SP)
   5C:  LW        S0, 10 (SP)
   60:  ADDIU     V0, R0, 2
   64:  JR        RA
   68:  ADDIU     SP, SP, 18

#new:Function $Function_80238BCC
    0:  LAW       V0, 800DC14C
    8:  ADDIU     SP, SP, FFE8
    C:  SW        S0, 10 (SP)
   10:  DADDU     S0, A0, R0
   14:  SW        RA, 14 (SP)
   18:  JAL       {Func:GetActor}
   1C:  LH        A0, 428 (V0)
   20:  DADDU     A0, V0, R0
   24:  LW        V0, 0 (A0)
   28:  ANDI      V0, V0, 800
   2C:  BNE       V0, R0, .oB8
   30:  NOP
   34:  LBU       V1, 191 (A0)
   38:  LIO       V0, AAAAAAAB
   40:  MULTU     V1, V0
   44:  LWC1      F0, 188 (A0)
   48:  MFHI      A2
   4C:  SRL       V0, A2, 1
   50:  ANDI      V0, V0, FF
   54:  MTC1      V0, F2
   58:  NOP
   5C:  CVT.S.W   F2, F2
   60:  MUL.S     F2, F2, F0
   64:  NOP
   68:  LWC1      F0, 88 (S0)
   6C:  CVT.S.W   F0, F0
   70:  ADD.S     F0, F0, F2
   74:  TRUNC.W.S F4, F0
   78:  MFC1      V1, F4
   7C:  NOP
   80:  SW        V1, 88 (S0)
   84:  LBU       V0, 191 (A0)
   88:  LWC1      F0, 188 (A0)
   8C:  SRL       V0, V0, 2
   90:  MTC1      V0, F2
   94:  NOP
   98:  CVT.S.W   F2, F2
   9C:  MUL.S     F2, F2, F0
   A0:  NOP
   A4:  MTC1      V1, F0
   A8:  NOP
   AC:  CVT.S.W   F0, F0
   B0:  BEQ       R0, R0, .o138
   B4:  ADD.S     F0, F0, F2
        .oB8
   B8:  LBU       V1, 191 (A0)
   BC:  LIO       V0, AAAAAAAB
   C4:  MULTU     V1, V0
   C8:  LWC1      F0, 188 (A0)
   CC:  MFHI      A2
   D0:  SRL       V0, A2, 1
   D4:  ANDI      V0, V0, FF
   D8:  MTC1      V0, F2
   DC:  NOP
   E0:  CVT.S.W   F2, F2
   E4:  MUL.S     F2, F2, F0
   E8:  NOP
   EC:  LWC1      F0, 88 (S0)
   F0:  CVT.S.W   F0, F0
   F4:  SUB.S     F0, F0, F2
   F8:  TRUNC.W.S F4, F0
   FC:  MFC1      V1, F4
  100:  NOP
  104:  SW        V1, 88 (S0)
  108:  LBU       V0, 191 (A0)
  10C:  LWC1      F0, 188 (A0)
  110:  SRL       V0, V0, 2
  114:  MTC1      V0, F2
  118:  NOP
  11C:  CVT.S.W   F2, F2
  120:  MUL.S     F2, F2, F0
  124:  NOP
  128:  MTC1      V1, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  SUB.S     F0, F0, F2
        .o138
  138:  TRUNC.W.S F4, F0
  13C:  SWC1      F4, 88 (S0)
  140:  LW        V0, 0 (A0)
  144:  ANDI      V0, V0, 8000
  148:  BEQ       V0, R0, .o184
  14C:  NOP
  150:  LBU       V0, 191 (A0)
  154:  LWC1      F0, 188 (A0)
  158:  SRL       V0, V0, 1
  15C:  MTC1      V0, F2
  160:  NOP
  164:  CVT.S.W   F2, F2
  168:  MUL.S     F2, F2, F0
  16C:  NOP
  170:  LWC1      F0, 88 (S0)
  174:  CVT.S.W   F0, F0
  178:  SUB.S     F0, F0, F2
  17C:  TRUNC.W.S F4, F0
  180:  SWC1      F4, 88 (S0)
        .o184
  184:  LBU       V0, 191 (A0)
  188:  LWC1      F2, 188 (A0)
  18C:  MTC1      V0, F0
  190:  NOP
  194:  CVT.S.W   F0, F0
  198:  MUL.S     F0, F0, F2
  19C:  NOP
  1A0:  LBU       A1, 190 (A0)
  1A4:  TRUNC.W.S F4, F0
  1A8:  MFC1      V1, F4
  1AC:  NOP
  1B0:  SLT       V0, V1, A1
  1B4:  BNEL      V0, R0, .o1BC
  1B8:  DADDU     V1, A1, R0
        .o1BC
  1BC:  ADDIU     V0, V1, 4C
  1C0:  SW        V0, 90 (S0)
  1C4:  LBU       V0, 136 (A0)
  1C8:  SLL       V0, V0, 2
  1CC:  LTB       V1, V0 (80282EE8)
  1D8:  LW        V0, 84 (S0)
  1DC:  ADDU      V0, V0, V1
  1E0:  SW        V0, 84 (S0)
  1E4:  LBU       V0, 136 (A0)
  1E8:  SLL       V0, V0, 2
  1EC:  LTB       V1, V0 (80282EE9)
  1F8:  LW        V0, 88 (S0)
  1FC:  ADDU      V0, V0, V1
  200:  SW        V0, 88 (S0)
  204:  LBU       V0, 136 (A0)
  208:  LW        V1, 90 (S0)
  20C:  SLL       V0, V0, 2
  210:  LTB       A0, V0 (80282EEA)
  21C:  ADDU      V1, V1, A0
  220:  SW        V1, 90 (S0)
  224:  LW        RA, 14 (SP)
  228:  LW        S0, 10 (SP)
  22C:  ADDIU     V0, R0, 2
  230:  JR        RA
  234:  ADDIU     SP, SP, 18

#new:Function $Function_80238E04
    0:  ADDIU     SP, SP, FFE0
    4:  DADDU     A0, R0, R0
    8:  LIF       F0, 1.0
   10:  LUI       A1, 434E
   14:  LUI       A2, 4310
   18:  DADDU     A3, R0, R0
   1C:  SW        RA, 18 (SP)
   20:  SW        R0, 14 (SP)
   24:  JAL       80072110
   28:  SWC1      F0, 10 (SP)
   2C:  LW        RA, 18 (SP)
   30:  SAW       V0, $End[0]
   38:  ADDIU     V0, R0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 20

#new:Function $Function_80238E48
    0:  LAW       V1, $End[0]
    8:  LIF       F0, 144.0
   10:  LW        V0, C (V1)
   14:  SWC1      F0, 8 (V0)
   18:  LW        V0, 0 (V1)
   1C:  ORI       V0, V0, 10
   20:  SW        V0, 0 (V1)
   24:  JR        RA
   28:  ADDIU     V0, R0, 2

#new:Function $Function_80238E74
    0:  LIA       V0, 800DC070
    8:  LW        A1, DC (V0)
    C:  SW        R0, 84 (A0)
   10:  LH        V1, 17C (V0)
   14:  ADDIU     V0, R0, 87
   18:  BEQ       V1, V0, .o44
   1C:  SLTI      V0, V1, 88
   20:  BEQ       V0, R0, .o38
   24:  ADDIU     V0, R0, 86
   28:  BEQ       V1, V0, .o44
   2C:  ADDIU     V0, R0, 2
   30:  BEQ       R0, R0, .o60
   34:  NOP
        .o38
   38:  ADDIU     V0, R0, 88
   3C:  BNE       V1, V0, .o60
   40:  ADDIU     V0, R0, 2
        .o44
   44:  LB        V0, 220 (A1)
   48:  SLTI      V0, V0, 63
   4C:  BNE       V0, R0, .o60
   50:  ADDIU     V0, R0, 2
   54:  ADDIU     V0, R0, 1
   58:  SW        V0, 84 (A0)
   5C:  ADDIU     V0, R0, 2
        .o60
   60:  JR        RA
   64:  NOP

#new:Function $Function_80238EDC
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S3, 24 (SP)
    8:  DADDU     S3, A0, R0
    C:  LIA       V1, 800DC070
   14:  SW        RA, 28 (SP)
   18:  SW        S2, 20 (SP)
   1C:  SW        S1, 1C (SP)
   20:  SW        S0, 18 (SP)
   24:  LW        S1, C (S3)
   28:  LW        A0, DC (V1)
   2C:  LIA       A1, $End[4]
   34:  SW        R0, 0 (A1)
   38:  LB        V0, 220 (A0)
   3C:  BLEZ      V0, .o48
   40:  ADDIU     V0, R0, 1
   44:  SW        V0, 0 (A1)
        .o48
   48:  LH        V1, 17C (V1)
   4C:  ADDIU     V0, R0, 87
   50:  BEQ       V1, V0, .o80
   54:  DADDU     S2, R0, R0
   58:  SLTI      V0, V1, 88
   5C:  BEQ       V0, R0, .o74
   60:  ADDIU     V0, R0, 86
   64:  BEQ       V1, V0, .o80
   68:  NOP
   6C:  BEQ       R0, R0, .oA8
   70:  NOP
        .o74
   74:  ADDIU     V0, R0, 88
   78:  BNE       V1, V0, .oA8
   7C:  NOP
        .o80
   80:  LBU       V0, 220 (A0)
   84:  ADDIU     V0, V0, 2
   88:  SB        V0, 220 (A0)
   8C:  SLL       V0, V0, 18
   90:  SRA       V0, V0, 18
   94:  SLTI      V0, V0, 63
   98:  BNE       V0, R0, .oA8
   9C:  ADDIU     S2, R0, 1
   A0:  ADDIU     V0, R0, 63
   A4:  SB        V0, 220 (A0)
        .oA8
   A8:  LW        A1, 0 (S1)
   AC:  ADDIU     S1, S1, 4
   B0:  JAL       {Func:GetVariable}
   B4:  DADDU     A0, S3, R0
   B8:  LW        A1, 0 (S1)
   BC:  ADDIU     S1, S1, 4
   C0:  DADDU     A0, S3, R0
   C4:  JAL       {Func:GetVariable}
   C8:  DADDU     S0, V0, R0
   CC:  DADDU     A0, S3, R0
   D0:  LW        A1, 0 (S1)
   D4:  JAL       {Func:GetVariable}
   D8:  DADDU     S1, V0, R0
   DC:  DADDU     A0, S2, R0
   E0:  MTC1      S0, F2
   E4:  NOP
   E8:  CVT.S.W   F2, F2
   EC:  MFC1      A1, F2
   F0:  MTC1      S1, F2
   F4:  NOP
   F8:  CVT.S.W   F2, F2
   FC:  MFC1      A2, F2
  100:  MTC1      V0, F2
  104:  NOP
  108:  CVT.S.W   F2, F2
  10C:  LIF       F0, 1.0
  114:  MFC1      A3, F2
  118:  ADDIU     V1, R0, 3C
  11C:  SW        V1, 14 (SP)
  120:  JAL       800718D0
  124:  SWC1      F0, 10 (SP)
  128:  LIA       A1, 800DC070
  130:  LW        V1, 0 (A1)
  134:  LUI       A0, 4000
  138:  OR        V1, V1, A0
  13C:  SW        V1, 0 (A1)
  140:  LW        RA, 28 (SP)
  144:  LW        S3, 24 (SP)
  148:  LW        S2, 20 (SP)
  14C:  LW        S1, 1C (SP)
  150:  LW        S0, 18 (SP)
  154:  ADDIU     V0, R0, 2
  158:  JR        RA
  15C:  ADDIU     SP, SP, 30

#new:Function $Function_8023903C
    0:  LIA       V1, 800DC070
    8:  LW        V0, DC (V1)
    C:  LUI       A0, BFFF
   10:  SB        R0, 220 (V0)
   14:  LW        V0, 0 (V1)
   18:  ORI       A0, A0, FFFF
   1C:  AND       V0, V0, A0
   20:  SW        V0, 0 (V1)
   24:  JR        RA
   28:  ADDIU     V0, R0, 2

#new:Function $Function_80239068
    0:  LIA       A2, 800DC070
    8:  LUI       V1, 4000
    C:  LW        V0, 0 (A2)
   10:  LW        A1, DC (A2)
   14:  AND       V0, V0, V1
   18:  BEQL      V0, R0, .o20
   1C:  SB        R0, 220 (A1)
        .o20
   20:  LB        V0, 220 (A1)
   24:  LUI       V1, BFFF
   28:  SW        V0, 84 (A0)
   2C:  SB        R0, 220 (A1)
   30:  LW        V0, 0 (A2)
   34:  ORI       V1, V1, FFFF
   38:  AND       V0, V0, V1
   3C:  SW        V0, 0 (A2)
   40:  JR        RA
   44:  ADDIU     V0, R0, 2

#new:Function $Function_802390B0
    0:  LAW       V0, 800DC14C
    8:  LB        V0, 220 (V0)
    C:  SW        V0, 84 (A0)
   10:  JR        RA
   14:  ADDIU     V0, R0, 2

#new:Function $Function_802390C8
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S2, 20 (SP)
   18:  SW        S0, 18 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetFloatVariable}
   60:  DADDU     S0, V0, R0
   64:  ADDIU     A0, R0, 6
   68:  MTC1      S3, F2
   6C:  NOP
   70:  CVT.S.W   F2, F2
   74:  MFC1      A1, F2
   78:  MTC1      S2, F2
   7C:  NOP
   80:  CVT.S.W   F2, F2
   84:  MFC1      A2, F2
   88:  MTC1      S0, F2
   8C:  NOP
   90:  CVT.S.W   F2, F2
   94:  MFC1      A3, F2
   98:  ADDIU     V0, R0, 2D
   9C:  SWC1      F0, 10 (SP)
   A0:  JAL       800720B0
   A4:  SW        V0, 14 (SP)
   A8:  LW        RA, 28 (SP)
   AC:  LW        S3, 24 (SP)
   B0:  LW        S2, 20 (SP)
   B4:  LW        S1, 1C (SP)
   B8:  LW        S0, 18 (SP)
   BC:  ADDIU     V0, R0, 2
   C0:  JR        RA
   C4:  ADDIU     SP, SP, 30

#new:Function $Function_80239190
    0:  LAW       V0, $End[4]
    8:  BNEL      V0, R0, .o14
    C:  ADDIU     V0, R0, 25
   10:  ADDIU     V0, R0, 24
        .o14
   14:  SW        V0, 84 (A0)
   18:  JR        RA
   1C:  ADDIU     V0, R0, 2

#new:IdleAnimations $IdleAnimations_802391B0
.Status:Normal    00090002
.Status:Stone     00090000
.Status:Sleep     00090013
.Status:Poison    00090000
.Status:Stop      00090000
.Status:Daze      00090014
00000012 00090000
.Status:End

#new:DefenseTable $DefenseTable_802391EC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_802391F8
.Status:Normal    100`
.Status:Default   100`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802392A4
00000000 01000000 081600FF $IdleAnimations_802391B0 $DefenseTable_802391EC 00000000 00000000 00000000 00000000 

#new:Actor $Goombario
% stats
[Index]        6Fb 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802391F8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802392A4 
[Script]      $Script_Init_802392F0 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         29`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_802392F0
    0:  Call     BindTakeTurn 	( .Actor:Partner $Script_TakeTurn_802396D8 )
   14:  Call     BindIdle    	( .Actor:Partner $Script_Idle_80239350 )
   28:  Call     BindHandleEvent 	( .Actor:Partner $Script_HandleEvent_80239360 )
   3C:  Call     BindNextTurn 	( .Actor:Partner $Script_NextTurn_80239A3C )
   50:  Return
   58:  End

#new:Script $Script_Idle_80239350
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80239360
    0:  Call     UseIdleAnimation 	( .Actor:Partner .False )
   14:  Call     80269410 ( )
   20:  Call     GetEventType 	( .Actor:Partner *Var[0] )
   34:  Switch  *Var[0] 
   40:  	CaseOR  ==  .Event:HitCombo
   4C:  	CaseOR  ==  .Event:Hit
   58:  		SetConst  *Var[1]  0009000A 
   68:  		SetConst  *Var[2]  0009000A 
   78:  		ExecWait 802977BC 
   84:  		SetConst  *Var[1]  0009000A 
   94:  		ExecWait 80296014 
   A0:  	EndCaseGroup
   A8:  	CaseOR  ==  00000017
   B4:  	CaseOR  ==  .Event:Immune
   C0:  		Call     PlaySoundAtActor 	( .Actor:Partner 0000208C )
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  0009000A 
   F4:  		ExecWait 80297814 
  100:  	EndCaseGroup
  108:  	Case  ==  .Event:SpikeContact
  114:  		SetConst  *Var[1]  0009000A 
  124:  		Set  *Var[2]  0000000C 
  134:  		ExecWait 80294FE4 
  140:  		SetConst  *Var[1]  0009000A 
  150:  		ExecWait 80296014 
  15C:  	Case  ==  .Event:BurnContact
  168:  		SetConst  *Var[1]  0009000B 
  178:  		Set  *Var[2]  0000000C 
  188:  		SetConst  *Var[3]  0009000C 
  198:  		ExecWait 80294C68 
  1A4:  		SetConst  *Var[1]  0009000A 
  1B4:  		ExecWait 80296014 
  1C0:  	Case  ==  .Event:BurnHit
  1CC:  		SetConst  *Var[1]  0009000B 
  1DC:  		SetConst  *Var[2]  0009000C 
  1EC:  		ExecWait 8029621C 
  1F8:  		SetConst  *Var[1]  0009000A 
  208:  		ExecWait 80296014 
  214:  	Case  ==  .Event:ShockHit
  220:  		SetConst  *Var[1]  0009000A 
  230:  		Set  *Var[2]  0000000C 
  240:  		ExecWait 80295744 
  24C:  	Case  ==  00000033
  258:  		Call     $Function_8023903C ( )
  264:  		SetConst  *Var[1]  0009000A 
  274:  		ExecWait 80296014 
  280:  	Case  ==  00000034
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  00090001 
  2AC:  		SetConst  *Var[2]  00090003 
  2BC:  		Set  *Var[3]  00000000 
  2CC:  		ExecWait 80295EC4 
  2D8:  	CaseOR  ==  00000018
  2E4:  	CaseOR  ==  .Event:Block
  2F0:  		Call     PlaySoundAtActor 	( .Actor:Partner 0000208C )
  304:  		SetConst  *Var[0]  00000001 
  314:  		SetConst  *Var[1]  0009000E 
  324:  		ExecWait 80297814 
  330:  		Wait     0000000A 
  33C:  	EndCaseGroup
  344:  	Default
  34C:  EndSwitch
  354:  Call     UseIdleAnimation 	( .Actor:Partner .True )
  368:  Return
  370:  End

#new:Script $Script_TakeTurn_802396D8
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:FirstStrike
   28:  		ExecWait $Script_8023993C 
   34:  	Case  ==  00000000
   40:  		ExecWait $Script_802397E0 
   4C:  	Case  ==  00000005
   58:  		ExecWait $Script_80239784 
   64:  	Case  ==  00000003
   70:  		ExecWait $Script_8023994C 
   7C:  	Case  ==  00000007
   88:  		ExecWait $Script_80239988 
   94:  EndSwitch
   9C:  Return
   A4:  End

#new:Script $Script_80239784
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00090010 
   20:  SetConst  *Var[2]  00090011 
   30:  SetConst  *Var[3]  00090001 
   40:  ExecWait 80294720 
   4C:  Return
   54:  End

#new:Script $Script_802397E0
    0:  Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
   18:  Call     802694A4 ( 00000001 )
   28:  Call     SetBattleFlagBits 	( 00004000 .False )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  00000008 
   54:  		Call     80280950 ( )
   60:  		ExecWait *Var[0] 
   6C:  		Return
   74:  	Case  ==  00000002 
   80:  		Call     80267ED0 ( )
   8C:  		ExecWait *Var[0] 
   98:  		Return
   A0:  EndSwitch
   A8:  Switch  *Var[2] 
   B4:  	Case  ==  00000083 
   C0:  		ExecWait $Script_8023A754 
   CC:  	Case  ==  00000084 
   D8:  		ExecWait $Script_8023ADC4 
   E4:  	Case  ==  00000085 
   F0:  		ExecWait $Script_8023B45C 
   FC:  	Case  ==  00000086 
  108:  		ExecWait $Script_8023C5B8 
  114:  	Case  ==  00000087 
  120:  		ExecWait $Script_8023C90C 
  12C:  	Case  ==  00000088 
  138:  		ExecWait $Script_8023BB9C 
  144:  EndSwitch
  14C:  Return
  154:  End

#new:Script $Script_8023993C
    0:  Return
    8:  End

#new:Script $Script_8023994C
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00090003 
   20:  ExecWait 80294AFC 
   2C:  Return
   34:  End

#new:Script $Script_80239988
    0:  Call     UseIdleAnimation 	( .Actor:Partner .False )
   14:  Call     SetGoalToHome 	( .Actor:Partner )
   24:  Call     SetActorSpeed 	( .Actor:Partner *Fixed[6.0] )
   38:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090003 )
   50:  Call     SetActorAngle 	( .Actor:Partner 00000000 )
   64:  Call     RunToGoal   	( .Actor:Partner 00000000 )
   78:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
   90:  Call     UseIdleAnimation 	( .Actor:Partner .True )
   A4:  Return
   AC:  End

#new:Script $Script_NextTurn_80239A3C
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:PlayerBegin
   28:  		If  *Flag_BTL_04  ==  00000000 
   38:  			Call     UseIdleAnimation 	( .Actor:Partner .False )
   4C:  			Call     UseCamPreset 	( 0000000E )
   5C:  			Call     CamTargetActor ( .Actor:Self )
   6C:  			Call     MoveCamOver 	( 00000014 )
   7C:  			Wait     0000000A 
   88:  			Call     SetActorAngle 	( .Actor:Player 0000001E )
   9C:  			Wait     00000001 
   A8:  			Call     SetActorAngle 	( .Actor:Player 0000003C )
   BC:  			Wait     00000001 
   C8:  			Call     SetActorAngle 	( .Actor:Player 0000005A )
   DC:  			Wait     00000001 
   E8:  			Call     SetActorAngle 	( .Actor:Player 00000078 )
   FC:  			Wait     00000001 
  108:  			Call     SetActorAngle 	( .Actor:Player 00000096 )
  11C:  			Wait     00000001 
  128:  			Call     SetActorAngle 	( .Actor:Player 000000B4 )
  13C:  			Wait     00000005 
  148:  			Call     SayMessage  	( 000B00BA .Actor:Partner 00000000 0009000F 00090001 ) % Hey Mario, during a battle, you can change the ord ...
  168:  			Call     SetActorAngle 	( .Actor:Player 00000096 )
  17C:  			Wait     00000001 
  188:  			Call     SetActorAngle 	( .Actor:Player 00000078 )
  19C:  			Wait     00000001 
  1A8:  			Call     SetActorAngle 	( .Actor:Player 0000005A )
  1BC:  			Wait     00000001 
  1C8:  			Call     SetActorAngle 	( .Actor:Player 0000003C )
  1DC:  			Wait     00000001 
  1E8:  			Call     SetActorAngle 	( .Actor:Player 0000001E )
  1FC:  			Wait     00000001 
  208:  			Call     SetActorAngle 	( .Actor:Player 00000000 )
  21C:  			Wait     00000005 
  228:  			Set  *Flag_BTL_04  00000001 
  238:  			Call     UseIdleAnimation 	( .Actor:Partner .True )
  24C:  		EndIf
  254:  EndSwitch
  25C:  Return
  264:  End

#new:Script $Script_80239CA8
    0:  Call     80280818 ( )
    C:  Call     UseCamPreset 	( 00000033 )
   1C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
   34:  Thread
   3C:  	Wait     00000004 
   48:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
   64:  	Set  *Var[0]  000000B4 
   74:  	Loop     00000003 
   80:  		Add  *Var[0]  0000003C 
   90:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   AC:  		Wait     00000001 
   B8:  	EndLoop
   C0:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
   DC:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
   F8:  EndThread
  100:  Call     GetActorPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
  11C:  Sub  *Var[0]  0000001E 
  12C:  Set  *Var[1]  00000000 
  13C:  Call     SetGoalToPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
  158:  Call     SetActorJumpscale 	( .Actor:Partner *Fixed[1.2001953] )
  16C:  Call     $Function_80238000 ( )
  178:  Call     JumpToGoal  	( .Actor:Partner *Var[0] 00000000 00000001 00000000 )
  198:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  1B0:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
  1CC:  Wait     00000001 
  1D8:  Call     8026BA04 ( 00000100 00000000 00000013 00000000 )
  1F4:  Wait     00000001 
  200:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  21C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  238:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  250:  Call     AddToGoalPos 	( .Actor:Partner FFFFFFF6 00000000 00000000 )
  26C:  Call     JumpToGoal  	( .Actor:Partner 00000006 00000000 00000000 00000001 )
  28C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  2A4:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  2BC:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
  2D8:  Wait     00000001 
  2E4:  Call     8026BA04 ( 00000100 00000000 00000013 00000000 )
  300:  Wait     00000001 
  30C:  Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
  324:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  340:  Wait     00000002 
  34C:  Call     SetGoalToHome 	( .Actor:Partner )
  35C:  Call     SetActorSpeed 	( .Actor:Partner *Fixed[8.0] )
  370:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090003 )
  388:  Call     RunToGoal   	( .Actor:Partner 00000000 )
  39C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  3B4:  Return
  3BC:  End

#new:Script $Script_8023A06C
    0:  Call     80280818 ( )
    C:  Call     UseCamPreset 	( 00000003 )
   1C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
   34:  Call     SetGoalToHome 	( .Actor:Partner )
   44:  Call     GetGoalPos  	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
   60:  Add  *Var[0]  0000003C 
   70:  Call     SetGoalToPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
   8C:  Call     SetActorJumpscale 	( .Actor:Partner *Fixed[1.4003906] )
   A0:  Call     $Function_80238000 ( )
   AC:  Thread
   B4:  	Wait     00000004 
   C0:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
   DC:  	Sub  *Var[0]  00000004 
   EC:  	Set  *Var[1]  *Var[0] 
   FC:  	Div  *Var[1]  00000003 
  10C:  	If  *Var[1]  <  00000001 
  11C:  		Set  *Var[1]  00000001 
  12C:  	EndIf
  134:  	Set  *Var[2]  *Var[1] 
  144:  	Mod  *Var[2]  00000002 
  154:  	If  *Var[2]  ==  00000000 
  164:  		Sub  *Var[1]  00000001 
  174:  	EndIf
  17C:  	Set  *Var[0]  000000B4 
  18C:  	Loop     *Var[1] 
  198:  		Loop     00000003 
  1A4:  			Add  *Var[0]  0000003C 
  1B4:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  1D0:  			Wait     00000001 
  1DC:  		EndLoop
  1E4:  	EndLoop
  1EC:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  208:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  224:  EndThread
  22C:  Call     JumpToGoal  	( .Actor:Partner *Var[0] 00000000 00000001 00000000 )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  264:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
  280:  Wait     00000001 
  28C:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  2A8:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  2C4:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  2DC:  Call     AddToGoalPos 	( .Actor:Partner FFFFFFEC 00000000 00000000 )
  2F8:  Call     JumpToGoal  	( .Actor:Partner 00000006 00000000 00000000 00000001 )
  318:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  330:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
  34C:  Wait     00000001 
  358:  Call     AddToGoalPos 	( .Actor:Partner FFFFFFF6 00000000 00000000 )
  374:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  38C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  3A8:  Call     JumpToGoal  	( .Actor:Partner 00000004 00000000 00000000 00000001 )
  3C8:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  3E0:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
  3FC:  Wait     00000001 
  408:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  424:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  43C:  Wait     00000002 
  448:  Call     SetGoalToHome 	( .Actor:Partner )
  458:  Call     SetActorSpeed 	( .Actor:Partner *Fixed[8.0] )
  46C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090003 )
  484:  Call     RunToGoal   	( .Actor:Partner 00000000 )
  498:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  4B0:  Return
  4B8:  End

#new:Script $Script_8023A52C
    0:  Call     8026A49C ( FFFFFF81 )
   10:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   2C:  Sub  *Var[0]  00000028 
   3C:  Call     InitTargetIterator 	( )
   48:  Call     SetGoalToTarget 	( .Actor:Partner )
   58:  Call     GetGoalPos  	( .Actor:Partner *Var[3] *Var[4] *Var[5] )
   74:  Sub  *Var[3]  *Fixed[70.0] 
   84:  If  *Var[0]  <  *Var[3] 
   94:  	Set  *Var[3]  *Var[0] 
   A4:  EndIf
   AC:  Call     SetGoalToPos 	( .Actor:Partner *Var[3] *Var[4] *Var[5] )
   C8:  Call     UseCamPreset 	( 0000002F )
   D8:  Call     SetActorSpeed 	( .Actor:Partner *Fixed[5.0] )
   EC:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090003 )
  104:  Call     RunToGoal   	( .Actor:Partner 00000000 )
  118:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  130:  Return
  138:  End

#new:Script $Script_8023A66C
    0:  Call     SetGoalToTarget 	( .Actor:Partner )
   10:  Call     GetGoalPos  	( .Actor:Partner *Var[B] *Var[7] *Var[D] )
   2C:  Call     GetActorPos 	( .Actor:Partner *Var[7] *Var[D] *Var[E] )
   48:  If  *Var[B]  >  *Var[7] 
   58:  	Sub  *Var[B]  *Var[7] 
   68:  Else
   70:  	Sub  *Var[7]  *Var[B] 
   80:  	Set  *Var[B]  *Var[7] 
   90:  EndIf
   98:  Sub  *Var[B]  00000014 
   A8:  DivF  *Var[B]  *Fixed[10.588867] 
   B8:  AddF  *Var[B]  0000000F 
   C8:  Set  *Var[A]  *Var[B] 
   D8:  Return
   E0:  End

#new:Script $Script_8023A754
    0:  Call     LoadActionCommand 	( 00000001 )
   10:  Call     802A9000 ( )
   1C:  ExecWait $Script_8023A52C 
   28:  ExecWait $Script_8023A66C 
   34:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
   4C:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
   68:  Wait     00000005 
   74:  Call     8026BA04 ( 00000100 00000000 00000013 00000000 )
   90:  Wait     00000001 
   9C:  Call     UseCamPreset 	( 00000034 )
   AC:  Call     802A9120 ( *Var[A] 00000003 )
   C0:  Call     UseCamPreset 	( 00000034 )
   D0:  Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
   E8:  Call     8026BA04 ( 00000100 00000000 00000009 00000000 )
  104:  Call     SetGoalToTarget 	( .Actor:Partner )
  114:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  134:  Call     PlaySoundAtActor 	( .Actor:Partner 0000200D )
  148:  Call     $Function_8023817C ( *Var[A] 00000000 )
  15C:  Call     CheckTargetHitP 	( *Var[0] 00000080 00000014 00000000 00000001 00000010 )
  180:  If  *Var[0]  ==  00000006 
  190:  	Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  1B0:  	Call     $Function_80238A20 ( )
  1BC:  	Thread
  1C4:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  1E0:  	EndThread
  1E8:  	Call     PlaySoundAtActor 	( .Actor:Partner 00000162 )
  1FC:  	Wait     00000014 
  208:  	ExecWait $Script_80239CA8 
  214:  	Return
  21C:  EndIf
  224:  ChildThread
  22C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  248:  	Wait     00000001 
  254:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  270:  	Wait     00000001 
  27C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  298:  EndChildThread
  2A0:  Wait     00000001 
  2AC:  Call     802807D0 ( *Var[0] )
  2BC:  Switch  *Var[0] 
  2C8:  	Case  >  00000000 
  2D4:  		Call     $Function_802390B0 ( )
  2E0:  		Add  *Var[0]  00000001 
  2F0:  		Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000050 )
  314:  	Default
  31C:  		Call     $Function_80239068 ( )
  328:  		Add  *Var[0]  00000001 
  338:  		Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000030 )
  35C:  EndSwitch
  364:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  378:  Switch  *Var[0] 
  384:  	CaseOR  ==  00000000 
  390:  	CaseOR  ==  00000002 
  39C:  		ExecWait $Script_80239CA8 
  3A8:  		Return
  3B0:  	EndCaseGroup
  3B8:  	CaseOR  ==  00000001 
  3C4:  	CaseOR  ==  00000003 
  3D0:  	EndCaseGroup
  3D8:  EndSwitch
  3E0:  Thread
  3E8:  	Call     UseCamPreset 	( 00000032 )
  3F8:  	Wait     00000005 
  404:  	Call     SetGoalToTarget 	( .Actor:Partner )
  414:  	Call     UseCamPreset 	( 00000035 )
  424:  EndThread
  42C:  Call     80269524 ( *Var[F] )
  43C:  Call     80269410 ( )
  448:  Call     LoadActionCommand 	( 00000001 )
  458:  Call     802A9000 ( )
  464:  Call     802694A4 ( 00000000 )
  474:  Call     802A9120 ( 00000018 00000003 )
  488:  Set  *Var[A]  00000018 
  498:  Thread
  4A0:  	Wait     00000004 
  4AC:  	Set  *Var[0]  00000000 
  4BC:  	Loop     00000006 
  4C8:  		Add  *Var[0]  FFFFFFE2 
  4D8:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  4F4:  		Wait     00000001 
  500:  	EndLoop
  508:  EndThread
  510:  Call     SetGoalToTarget 	( .Actor:Partner )
  520:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  540:  Call     PlaySoundAtActor 	( .Actor:Partner 00000281 )
  554:  Call     $Function_8023817C ( *Var[A] 00000003 )
  568:  ChildThread
  570:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  58C:  	Wait     00000001 
  598:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  5B4:  	Wait     00000001 
  5C0:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  5DC:  EndChildThread
  5E4:  Wait     00000001 
  5F0:  Call     $Function_80239068 ( )
  5FC:  Add  *Var[0]  00000001 
  60C:  Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000020 )
  630:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  644:  Call     80269550 ( *Var[F] )
  654:  ExecWait $Script_8023A06C 
  660:  Return
  668:  End

#new:Script $Script_8023ADC4
    0:  Call     LoadActionCommand 	( 00000001 )
   10:  Call     802A9000 ( )
   1C:  ExecWait $Script_8023A52C 
   28:  ExecWait $Script_8023A66C 
   34:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
   4C:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
   68:  Wait     00000005 
   74:  Call     8026BA04 ( 00000100 00000000 00000013 00000000 )
   90:  Wait     00000001 
   9C:  Call     UseCamPreset 	( 00000034 )
   AC:  Call     802A9120 ( *Var[A] 00000003 )
   C0:  Call     UseCamPreset 	( 00000034 )
   D0:  Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
   E8:  Call     8026BA04 ( 00000100 00000000 00000009 00000000 )
  104:  Call     SetGoalToTarget 	( .Actor:Partner )
  114:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  134:  Call     PlaySoundAtActor 	( .Actor:Partner 0000200D )
  148:  Call     $Function_8023817C ( *Var[A] 00000000 )
  15C:  Call     CheckTargetHitP 	( *Var[0] 00000080 00000014 00000000 00000001 00000010 )
  180:  If  *Var[0]  ==  00000006 
  190:  	Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  1B0:  	Call     $Function_80238A20 ( )
  1BC:  	Thread
  1C4:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  1E0:  	EndThread
  1E8:  	Call     PlaySoundAtActor 	( .Actor:Partner 00000162 )
  1FC:  	Wait     00000014 
  208:  	ExecWait $Script_80239CA8 
  214:  	Return
  21C:  EndIf
  224:  ChildThread
  22C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  248:  	Wait     00000001 
  254:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  270:  	Wait     00000001 
  27C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  298:  EndChildThread
  2A0:  Wait     00000001 
  2AC:  Call     802807D0 ( *Var[0] )
  2BC:  Switch  *Var[0] 
  2C8:  	Case  >  00000000 
  2D4:  		Call     $Function_802390B0 ( )
  2E0:  		Add  *Var[0]  00000002 
  2F0:  		Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000050 )
  314:  	Default
  31C:  		Call     $Function_80239068 ( )
  328:  		Add  *Var[0]  00000002 
  338:  		Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000030 )
  35C:  EndSwitch
  364:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  378:  Switch  *Var[0] 
  384:  	CaseOR  ==  00000000 
  390:  	CaseOR  ==  00000002 
  39C:  		ExecWait $Script_80239CA8 
  3A8:  		Return
  3B0:  	EndCaseGroup
  3B8:  	CaseOR  ==  00000001 
  3C4:  	CaseOR  ==  00000003 
  3D0:  	EndCaseGroup
  3D8:  EndSwitch
  3E0:  Thread
  3E8:  	Call     UseCamPreset 	( 00000032 )
  3F8:  	Wait     00000005 
  404:  	Call     SetGoalToTarget 	( .Actor:Partner )
  414:  	Call     UseCamPreset 	( 00000035 )
  424:  EndThread
  42C:  Call     80269524 ( *Var[F] )
  43C:  Call     80269410 ( )
  448:  Call     LoadActionCommand 	( 00000001 )
  458:  Call     802A9000 ( )
  464:  Call     802694A4 ( 00000000 )
  474:  Call     802A9120 ( 00000018 00000003 )
  488:  Set  *Var[A]  00000018 
  498:  Thread
  4A0:  	Wait     00000004 
  4AC:  	Set  *Var[0]  00000000 
  4BC:  	Loop     00000006 
  4C8:  		Add  *Var[0]  FFFFFFE2 
  4D8:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  4F4:  		Wait     00000001 
  500:  	EndLoop
  508:  EndThread
  510:  Call     SetGoalToTarget 	( .Actor:Partner )
  520:  Call     EnableActorBlur 	( .Actor:Partner 00000001 )
  534:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  554:  Call     PlaySoundAtActor 	( .Actor:Partner 00000281 )
  568:  Call     $Function_8023817C ( *Var[A] 00000003 )
  57C:  Call     EnableActorBlur 	( .Actor:Partner FFFFFFFF )
  590:  ChildThread
  598:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  5B4:  	Wait     00000001 
  5C0:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  5DC:  	Wait     00000001 
  5E8:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  604:  EndChildThread
  60C:  Wait     00000001 
  618:  Call     $Function_80239068 ( )
  624:  Add  *Var[0]  00000002 
  634:  Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000020 )
  658:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  66C:  Call     80269550 ( *Var[F] )
  67C:  ExecWait $Script_8023A06C 
  688:  Return
  690:  End

#new:Script $Script_8023B45C
    0:  Call     LoadActionCommand 	( 00000001 )
   10:  Call     802A9000 ( )
   1C:  ExecWait $Script_8023A52C 
   28:  ExecWait $Script_8023A66C 
   34:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
   4C:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
   68:  Wait     00000005 
   74:  Call     8026BA04 ( 00000100 00000000 00000013 00000000 )
   90:  Wait     00000001 
   9C:  Call     UseCamPreset 	( 00000034 )
   AC:  Call     802A9120 ( *Var[A] 00000003 )
   C0:  Call     UseCamPreset 	( 00000034 )
   D0:  Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
   E8:  Call     8026BA04 ( 00000100 00000000 00000009 00000000 )
  104:  Call     SetGoalToTarget 	( .Actor:Partner )
  114:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  134:  Call     PlaySoundAtActor 	( .Actor:Partner 0000200D )
  148:  Call     $Function_8023817C ( *Var[A] 00000000 )
  15C:  Call     CheckTargetHitP 	( *Var[0] 00000080 00000014 00000000 00000001 00000010 )
  180:  If  *Var[0]  ==  00000006 
  190:  	Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  1B0:  	Call     $Function_80238A20 ( )
  1BC:  	Thread
  1C4:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  1E0:  	EndThread
  1E8:  	Call     PlaySoundAtActor 	( .Actor:Partner 00000162 )
  1FC:  	Wait     00000014 
  208:  	ExecWait $Script_80239CA8 
  214:  	Return
  21C:  EndIf
  224:  ChildThread
  22C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  248:  	Wait     00000001 
  254:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  270:  	Wait     00000001 
  27C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  298:  EndChildThread
  2A0:  Wait     00000001 
  2AC:  Call     802807D0 ( *Var[0] )
  2BC:  Switch  *Var[0] 
  2C8:  	Case  >  00000000 
  2D4:  		Call     $Function_802390B0 ( )
  2E0:  		Add  *Var[0]  00000003 
  2F0:  		Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000050 )
  314:  	Default
  31C:  		Call     $Function_80239068 ( )
  328:  		Add  *Var[0]  00000003 
  338:  		Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000030 )
  35C:  EndSwitch
  364:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  378:  Switch  *Var[0] 
  384:  	CaseOR  ==  00000000 
  390:  	CaseOR  ==  00000002 
  39C:  		ExecWait $Script_80239CA8 
  3A8:  		Return
  3B0:  	EndCaseGroup
  3B8:  	CaseOR  ==  00000001 
  3C4:  	CaseOR  ==  00000003 
  3D0:  	EndCaseGroup
  3D8:  EndSwitch
  3E0:  Thread
  3E8:  	Call     UseCamPreset 	( 00000032 )
  3F8:  	Wait     00000005 
  404:  	Call     SetGoalToTarget 	( .Actor:Partner )
  414:  	Call     UseCamPreset 	( 00000035 )
  424:  EndThread
  42C:  Call     80269524 ( *Var[F] )
  43C:  Call     80269410 ( )
  448:  Call     LoadActionCommand 	( 00000001 )
  458:  Call     802A9000 ( )
  464:  Call     802694A4 ( 00000000 )
  474:  Call     802A9120 ( 00000018 00000003 )
  488:  Set  *Var[A]  00000018 
  498:  Thread
  4A0:  	Wait     00000004 
  4AC:  	Set  *Var[0]  00000000 
  4BC:  	Loop     00000006 
  4C8:  		Add  *Var[0]  FFFFFFE2 
  4D8:  		Call     SetActorRotation 	( .Actor:Self 00000000 *Unknown[0] *Var[0] )
  4F4:  		Wait     00000001 
  500:  	EndLoop
  508:  	Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
  520:  EndThread
  528:  Thread
  530:  	Set  *Var[0]  00000000 
  540:  	Loop     *Var[A] 
  54C:  		Add  *Var[0]  00000085 
  55C:  		Call     SetActorRotation 	( .Actor:Self *Unknown[0] *Var[0] *Unknown[0] )
  578:  		Wait     00000001 
  584:  	EndLoop
  58C:  EndThread
  594:  Call     SetGoalToTarget 	( .Actor:Partner )
  5A4:  Call     EnableActorBlur 	( .Actor:Partner 00000001 )
  5B8:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  5D8:  Call     PlaySoundAtActor 	( .Actor:Partner 00000281 )
  5EC:  Call     $Function_8023817C ( *Var[A] 00000003 )
  600:  Call     EnableActorBlur 	( .Actor:Partner FFFFFFFF )
  614:  ChildThread
  61C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  638:  	Wait     00000001 
  644:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  660:  	Wait     00000001 
  66C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  688:  EndChildThread
  690:  Wait     00000001 
  69C:  Call     $Function_80239068 ( )
  6A8:  Add  *Var[0]  00000003 
  6B8:  Call     DamageEnemyP 	( *Var[0] 00000080 00000000 00000000 *Var[0] 00000020 )
  6DC:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  6F0:  Call     80269550 ( *Var[F] )
  700:  ExecWait $Script_8023A06C 
  70C:  Return
  714:  End

#new:Unknown $???_8023BB78
00000007 00000006 00000005 00000004 00000003 00000002 00000001 00000000 

#new:Unknown $???_8023BB98
000000C8 

#new:Script $Script_8023BB9C
    0:  Call     LoadActionCommand 	( 00000001 )
   10:  Call     802A9000 ( )
   1C:  ExecWait $Script_8023A52C 
   28:  ExecWait $Script_8023A66C 
   34:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
   4C:  Call     8026BA04 ( 00000100 00000000 00000012 00000000 )
   68:  Wait     00000005 
   74:  Call     8026BA04 ( 00000100 00000000 00000013 00000000 )
   90:  Wait     00000001 
   9C:  Call     UseCamPreset 	( 00000034 )
   AC:  Call     802A9120 ( *Var[A] 00000001 )
   C0:  Call     UseCamPreset 	( 00000034 )
   D0:  Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
   E8:  Call     8026BA04 ( 00000100 00000000 00000009 00000000 )
  104:  Call     SetGoalToTarget 	( .Actor:Partner )
  114:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  134:  Call     PlaySoundAtActor 	( .Actor:Partner 0000200D )
  148:  Call     $Function_8023817C ( *Var[A] 00000000 )
  15C:  Call     CheckTargetHitP 	( *Var[0] 00100080 00000014 00000000 00000001 00000010 )
  180:  If  *Var[0]  ==  00000006 
  190:  	Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  1B0:  	Call     $Function_80238A20 ( )
  1BC:  	Thread
  1C4:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  1E0:  	EndThread
  1E8:  	Call     PlaySoundAtActor 	( .Actor:Partner 00000162 )
  1FC:  	Wait     00000014 
  208:  	ExecWait $Script_80239CA8 
  214:  	Return
  21C:  EndIf
  224:  ChildThread
  22C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  248:  	Wait     00000001 
  254:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  270:  	Wait     00000001 
  27C:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  298:  EndChildThread
  2A0:  Wait     00000001 
  2AC:  Call     802807D0 ( *Var[0] )
  2BC:  Switch  *Var[0] 
  2C8:  	Case  >  00000000 
  2D4:  		Call     $Function_802390B0 ( )
  2E0:  		Add  *Var[0]  00000003 
  2F0:  		Call     DamageEnemyP 	( *Var[0] 00100080 00000000 00000000 *Var[0] 00000050 )
  314:  	Default
  31C:  		Call     $Function_80239068 ( )
  328:  		Add  *Var[0]  00000003 
  338:  		Call     DamageEnemyP 	( *Var[0] 00100080 00000000 00000000 *Var[0] 00000030 )
  35C:  EndSwitch
  364:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  378:  Switch  *Var[0] 
  384:  	CaseOR  ==  00000000 
  390:  	CaseOR  ==  00000002 
  39C:  		ExecWait $Script_80239CA8 
  3A8:  		Return
  3B0:  	EndCaseGroup
  3B8:  	CaseOR  ==  00000001 
  3C4:  	CaseOR  ==  00000003 
  3D0:  	EndCaseGroup
  3D8:  EndSwitch
  3E0:  Thread
  3E8:  	Call     UseCamPreset 	( 00000032 )
  3F8:  	Wait     00000005 
  404:  	Call     SetGoalToTarget 	( .Actor:Partner )
  414:  	Call     UseCamPreset 	( 00000035 )
  424:  EndThread
  42C:  Call     80269524 ( *Var[F] )
  43C:  Set  *Var[D]  00000000 
  44C:  Set  *Var[F]  00000000 
  45C:  Set  *Flag[00]  00000000 
  46C:  Label    0000000A 
  478:  Thread
  480:  	Call     UseCamPreset 	( 00000032 )
  490:  	Wait     00000005 
  49C:  	Call     SetGoalToTarget 	( .Actor:Partner )
  4AC:  	Call     UseCamPreset 	( 00000035 )
  4BC:  EndThread
  4C4:  Call     80269410 ( )
  4D0:  Call     8026919C ( $???_8023BB78 )
  4E0:  Call     LoadActionCommand 	( 00000001 )
  4F0:  Call     802A9000 ( )
  4FC:  Set  *Var[A]  00000018 
  50C:  Switch  *Var[F] 
  518:  	Case  ==  00000000 
  524:  		Call     802A9120 ( *Var[A] 00000001 )
  538:  	Case  ==  00000001 
  544:  		Call     802A9120 ( *Var[A] 00000002 )
  558:  	Case  ==  00000002 
  564:  		Call     802A9120 ( *Var[A] 00000003 )
  578:  	Case  ==  00000003 
  584:  		Call     802A9120 ( *Var[A] 00000004 )
  598:  	Default
  5A0:  		Call     802A9120 ( *Var[A] 00000005 )
  5B4:  EndSwitch
  5BC:  Thread
  5C4:  	Wait     00000004 
  5D0:  	Set  *Var[0]  00000000 
  5E0:  	Loop     00000006 
  5EC:  		Add  *Var[0]  FFFFFFE2 
  5FC:  		Call     SetActorRotation 	( .Actor:Self 00000000 *Unknown[0] *Var[0] )
  618:  		Wait     00000001 
  624:  	EndLoop
  62C:  	Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
  644:  EndThread
  64C:  Thread
  654:  	Set  *Var[0]  00000000 
  664:  	Loop     *Var[A] 
  670:  		Add  *Var[0]  00000085 
  680:  		Call     SetActorRotation 	( .Actor:Self *Unknown[0] *Var[0] *Unknown[0] )
  69C:  		Wait     00000001 
  6A8:  	EndLoop
  6B0:  EndThread
  6B8:  Call     SetGoalToTarget 	( .Actor:Partner )
  6C8:  Call     EnableActorBlur 	( .Actor:Partner 00000001 )
  6DC:  Call     SetJumpAnimations 	( .Actor:Partner 00000000 00090006 00090006 00090006 )
  6FC:  Call     PlaySoundAtActor 	( .Actor:Partner 00000281 )
  710:  Call     $Function_8023817C ( *Var[A] 00000003 )
  724:  Call     EnableActorBlur 	( .Actor:Partner FFFFFFFF )
  738:  Sub  *Var[D]  00000001 
  748:  Call     $Function_802380E4 ( )
  754:  If  *Var[F]  >=  *Var[0] 
  764:  	Set  *Flag[00]  00000001 
  774:  EndIf
  77C:  ChildThread
  784:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  7A0:  	Wait     00000001 
  7AC:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  7C8:  	Wait     00000001 
  7D4:  	Call     SetActorScale 	( .Actor:Partner *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  7F0:  EndChildThread
  7F8:  Wait     00000001 
  804:  Call     802807D0 ( *Var[0] )
  814:  Switch  *Var[0] 
  820:  	Case  >  00000000 
  82C:  		If  *Flag[00]  ==  00000000 
  83C:  			Call     $Function_802390B0 ( )
  848:  			Add  *Var[0]  00000003 
  858:  			Call     80280270 ( *Var[0] 00100080 00000000 00000000 *Var[0] *Var[D] 00000040 )
  880:  		Else
  888:  			Call     $Function_80239068 ( )
  894:  			Add  *Var[0]  00000003 
  8A4:  			Call     80280270 ( *Var[0] 00100080 00000000 00000000 *Var[0] *Var[D] 00000020 )
  8CC:  		EndIf
  8D4:  	Default
  8DC:  		Call     $Function_80239068 ( )
  8E8:  		Add  *Var[0]  00000003 
  8F8:  		Call     80280270 ( *Var[0] 00100080 00000000 00000000 *Var[0] *Var[D] 00000020 )
  920:  		Set  *Flag[00]  00000000 
  930:  EndSwitch
  938:  Call     PlaySoundAtActor 	( .Actor:Partner 00000000 )
  94C:  Call     80269550 ( *Var[E] )
  95C:  Switch  *Var[0] 
  968:  	CaseOR  ==  00000000 
  974:  	CaseOR  ==  00000002 
  980:  		ExecWait $Script_80239CA8 
  98C:  		Return
  994:  	EndCaseGroup
  99C:  	CaseOR  ==  00000001 
  9A8:  	CaseOR  ==  00000003 
  9B4:  		If  *Flag[00]  ==  00000001 
  9C4:  			ExecWait $Script_8023A06C 
  9D0:  			Return
  9D8:  		EndIf
  9E0:  	EndCaseGroup
  9E8:  EndSwitch
  9F0:  Add  *Var[F]  00000001 
  A00:  Goto     0000000A 
  A0C:  Return
  A14:  End

#new:Script $Script_8023C5B8
    0:  Call     GetActorPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
   1C:  Add  *Var[0]  0000001E 
   2C:  Call     SetActorSpeed 	( .Actor:Partner *Fixed[6.0] )
   40:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090003 )
   58:  Call     SetGoalToPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
   74:  Call     RunToGoal   	( .Actor:Partner 00000000 .False )
   8C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
   A4:  Call     InitTargetIterator 	( )
   B0:  Call     SetGoalToTarget 	( .Actor:Partner )
   C0:  Call     SetBattleFlagBits 	( 00000004 .True )
   D4:  Call     $Function_80238E04 ( )
   E0:  Wait     0000000C 
   EC:  Call     SetCamFlag2 	( 00000002 .True )
  100:  Call     SetCamFlag80 	( 00000002 .False )
  114:  Call     SetCamPerspective 	( 00000002 00000006 00000019 00000010 00000400 )
  134:  Call     SetCamViewport ( 00000002 00000089 0000005F 0000008A 00000063 )
  154:  Call     GetOwnerTarget ( *Var[A] *Var[B] )
  168:  Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  184:  Call     SetGoalToPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
  1A0:  Call     $Function_80238BCC ( )
  1AC:  Wait     00000001 
  1B8:  Call     802CAE50 ( 00000002 *Var[0] *Var[1] *Var[2] )
  1D4:  Call     802CABE8 ( 00000002 00000000 *Var[3] 00000064 00000004 )
  1F4:  Wait     00000002 
  200:  Call     PlaySoundAtActor 	( .Actor:Partner 00000282 )
  214:  Call     SetCamFlag80 	( 00000002 .True )
  228:  Wait     0000000A 
  234:  Call     $Function_80238B60 ( )
  240:  Call     SayMessage  	( *Var[0] .Actor:Self 00000001 0009000F 00090001 ) % variable string ID
  260:  Call     $Function_80238E48 ( )
  26C:  Wait     0000000C 
  278:  Call     SetCamFlag2 	( 00000002 .False )
  28C:  Wait     00000020 
  298:  Call     UseCamPreset 	( 00000002 )
  2A8:  Call     SetBattleFlagBits 	( 00000004 .False )
  2BC:  Call     80280818 ( )
  2C8:  Call     SetGoalToHome 	( .Actor:Partner )
  2D8:  Call     SetActorSpeed 	( .Actor:Partner *Fixed[4.0] )
  2EC:  Call     SetActorJumpscale 	( .Actor:Partner *Fixed[1.8007812] )
  300:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090003 )
  318:  Call     RunToGoal   	( .Actor:Partner 00000000 )
  32C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  344:  Return
  34C:  End

#new:Script $Script_8023C90C
    0:  Call     UseCamPreset 	( 00000037 )
   10:  Wait     0000000A 
   1C:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090007 )
   34:  Call     8026BA04 ( 00000100 00000000 00000013 00000000 )
   50:  Call     GetActorPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
   6C:  Add  *Var[1]  0000000F 
   7C:  Call     PlaySoundAtActor 	( .Actor:Partner 0000208F )
   90:  Call     $Function_802390C8 ( *Var[0] *Var[1] *Var[2] *Fixed[1.2001953] )
   AC:  Wait     00000003 
   B8:  Call     $Function_802390C8 ( *Var[0] *Var[1] *Var[2] *Fixed[0.80078125] )
   D4:  Thread
   DC:  	Wait     0000000F 
   E8:  	Call     GetActorPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
  104:  	Add  *Var[1]  0000000F 
  114:  	Add  *Var[2]  FFFFFFFB 
  124:  	Call     PlaySoundAtActor 	( .Actor:Partner 00002003 )
  138:  	Call     PlayEffect  	( 00000052 00000009 *Var[0] *Var[1] *Var[2] *Fixed[2.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  17C:  EndThread
  184:  Wait     0000001E 
  190:  Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  1A8:  Call     8026BA04 ( 00000100 00000000 00000000 00000000 )
  1C4:  Call     UseCamPreset 	( 00000002 )
  1D4:  Call     MoveCamOver 	( 0000000A )
  1E4:  Call     $Function_80238E74 ( )
  1F0:  If  *Var[0]  ==  00000000 
  200:  	Call     GetActorPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
  21C:  	Add  *Var[0]  0000000A 
  22C:  	Add  *Var[1]  00000019 
  23C:  	Add  *Var[2]  00000005 
  24C:  	Call     PlaySoundAtActor 	( .Actor:Partner 0000208E )
  260:  	Call     $Function_80238EDC ( *Var[0] *Var[1] *Var[2] )
  278:  	Wait     00000004 
  284:  	Call     SetActorJumpscale 	( .Actor:Partner *Fixed[1.4003906] )
  298:  	Call     GetActorPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
  2B4:  	Call     SetJumpAnimations 	( .Actor:Partner 00090004 00000001 00090004 00090004 )
  2D4:  	Call     SetGoalToPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
  2F0:  	Call     JumpToGoal  	( .Actor:Partner 00000014 00000001 00000001 00000000 )
  310:  	Call     SetAnimation 	( .Actor:Partner FFFFFFFF 00090001 )
  328:  	Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
  340:  	Switch  *Var[2] 
  34C:  		Case  ==  00000086 
  358:  			Call     ShowMessageBox ( 00000024 0000003C )
  36C:  		Case  ==  00000087 
  378:  			Call     $Function_80239190 ( )
  384:  			Call     ShowMessageBox ( *Var[0] 0000003C )
  398:  		Case  ==  00000088 
  3A4:  			Call     ShowMessageBox ( 00000024 0000003C )
  3B8:  	EndSwitch
  3C0:  Else
  3C8:  	Call     ShowMessageBox ( 00000008 0000003C )
  3DC:  EndIf
  3E4:  Label    00000000 
  3F0:  Wait     00000001 
  3FC:  Call     80251384 ( *Var[0] )
  40C:  If  *Var[0]  ==  00000001 
  41C:  	Goto     00000000 
  428:  EndIf
  430:  Return
  438:  End

PADDING: 8023CD4C to 8023CD50 (006F5E2C to 006F5E30)
00000000 

#new:ConstDouble $ConstDouble_8023CD50
47.000000d

#new:ConstDouble $ConstDouble_8023CD58
1.120000d

#new:ConstDouble $ConstDouble_8023CD60
0.530000d

#new:ConstDouble $ConstDouble_8023CD68
47.000000d

#new:ConstDouble $ConstDouble_8023CD70
0.800000d

#new:ConstDouble $ConstDouble_8023CD78
0.530000d

#new:ConstDouble $ConstDouble_8023CD80
0.800000d

#new:ConstDouble $ConstDouble_8023CD88
16.500000d

#new:ConstDouble $ConstDouble_8023CD90
33.000000d

PADDING: 8023CD98 to 8023CDA0 (006F5E78 to 006F5E80)
00000000 00000000 

