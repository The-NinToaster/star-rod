% Script File: jan_13.mscr
% Decoded from: 0 to 38A0 (jan_13)

#new:Function $Function_80240000
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S1, 14 (SP)
    8:  LIA       S1, $???_80240850
   10:  SW        RA, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LHU       V0, 0 (S1)
   34:  LAD       F0, $ConstDouble_80243880
   3C:  MTC1      V0, F12
   40:  NOP
   44:  CVT.S.W   F12, F12
   48:  CVT.D.S   F12, F12
   4C:  MUL.D     F12, F12, F0
   50:  NOP
   54:  JAL       {Func:SinRad}
   58:  CVT.S.D   F12, F12
   5C:  LHU       V0, 0 (S1)
   60:  LAD       F22, $ConstDouble_80243888
   68:  MTC1      V0, F12
   6C:  NOP
   70:  CVT.S.W   F12, F12
   74:  CVT.D.S   F12, F12
   78:  MUL.D     F12, F12, F22
   7C:  NOP
   80:  LIF       F26, 1.0
   88:  NOP
   8C:  ADD.S     F20, F0, F26
   90:  LAD       F24, $ConstDouble_80243890
   98:  CVT.D.S   F20, F20
   9C:  MUL.D     F20, F20, F24
   A0:  NOP
   A4:  LAD       F0, $ConstDouble_80243898
   AC:  ADD.D     F20, F20, F0
   B0:  JAL       {Func:SinRad}
   B4:  CVT.S.D   F12, F12
   B8:  ADD.S     F0, F0, F26
   BC:  CVT.D.S   F0, F0
   C0:  MUL.D     F0, F0, F22
   C4:  NOP
   C8:  ADD.D     F20, F20, F0
   CC:  LUI       S3, 1
   D0:  CVT.S.D   F20, F20
   D4:  CVT.D.S   F0, F20
   D8:  MUL.D     F0, F0, F24
   DC:  NOP
   E0:  ORI       S3, S3, 1630
   E4:  LIA       S2, 8009A674
   EC:  LIA       S0, 800741F0
   F4:  LIF       F3, 1.75
   FC:  MTC1      R0, F2
  100:  LHU       A0, 0 (S0)
  104:  LW        V0, 0 (S2)
  108:  SLL       A0, A0, 6
  10C:  ADD.D     F0, F0, F2
  110:  ADDU      A0, A0, S3
  114:  ADDU      A0, V0, A0
  118:  CVT.S.D   F0, F0
  11C:  MFC1      A1, F0
  120:  MFC1      A2, F20
  124:  JAL       80067700
  128:  DADDU     A3, A1, R0
  12C:  LUI       A1, DA38
  130:  LIA       A0, 8009A66C
  138:  ORI       A1, A1, 1
  13C:  LW        V0, 0 (A0)
  140:  LHU       V1, 0 (S0)
  144:  DADDU     A2, V0, R0
  148:  ADDIU     V0, V0, 8
  14C:  SW        V0, 0 (A0)
  150:  ADDIU     V0, V1, 1
  154:  ANDI      V1, V1, FFFF
  158:  SLL       V1, V1, 6
  15C:  ADDU      V1, V1, S3
  160:  SW        A1, 0 (A2)
  164:  SH        V0, 0 (S0)
  168:  LW        V0, 0 (S2)
  16C:  LHU       A0, 0 (S1)
  170:  ADDU      V0, V0, V1
  174:  ADDIU     A0, A0, 1
  178:  SW        V0, 4 (A2)
  17C:  SH        A0, 0 (S1)
  180:  LW        RA, 20 (SP)
  184:  LW        S3, 1C (SP)
  188:  LW        S2, 18 (SP)
  18C:  LW        S1, 14 (SP)
  190:  LW        S0, 10 (SP)
  194:  LDC1      F26, 40 (SP)
  198:  LDC1      F24, 38 (SP)
  19C:  LDC1      F22, 30 (SP)
  1A0:  LDC1      F20, 28 (SP)
  1A4:  JR        RA
  1A8:  ADDIU     SP, SP, 48

#new:Function $Function_802401AC
    0:  LWC1      F2, 88 (A0)
    4:  CVT.S.W   F2, F2
    8:  LIF       F4, 100.0
   10:  LIF       F6, 1024.0
   18:  DIV.S     F2, F2, F4
   1C:  MUL.S     F2, F2, F6
   20:  NOP
   24:  LWC1      F0, 88 (A0)
   28:  CVT.S.W   F0, F0
   2C:  DIV.S     F0, F0, F4
   30:  MUL.S     F0, F0, F6
   34:  NOP
   38:  LIO       AT, CD5B5858
   40:  MTC1      AT, F4
   44:  NOP
   48:  ADD.S     F2, F2, F4
   4C:  ADD.S     F0, F0, F4
   50:  TRUNC.W.S F8, F2
   54:  SWC1      F8, 8C (A0)
   58:  TRUNC.W.S F8, F0
   5C:  SWC1      F8, 90 (A0)
   60:  JR        RA
   64:  ADDIU     V0, R0, 2

#new:Function $Function_80240214
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  LW        S0, C (S1)
   18:  LW        V0, 0 (S0)
   1C:  BEQ       V0, R0, .o8C
   20:  ADDIU     S0, S0, 4
   24:  LW        A1, 0 (S0)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S0, S0, 4
   30:  SW        V0, 70 (S1)
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A0, S1, R0
   44:  SW        V0, 74 (S1)
   48:  LW        A1, 0 (S0)
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     A0, S1, R0
   54:  ADDIU     A0, R0, 4E
   58:  DADDU     A1, R0, R0
   5C:  LWC1      F0, 70 (S1)
   60:  CVT.S.W   F0, F0
   64:  LWC1      F2, 74 (S1)
   68:  CVT.S.W   F2, F2
   6C:  MFC1      A2, F0
   70:  MFC1      A3, F2
   74:  MTC1      V0, F0
   78:  NOP
   7C:  CVT.S.W   F0, F0
   80:  SW        V0, 78 (S1)
   84:  JAL       801499EC
   88:  SWC1      F0, 10 (SP)
        .o8C
   8C:  LW        RA, 20 (SP)
   90:  LW        S1, 1C (SP)
   94:  LW        S0, 18 (SP)
   98:  ADDIU     V0, R0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28

#new:Function $Function_802402B8
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S1, 84 (S2)
   24:  LW        V0, 88 (S2)
   28:  LW        S0, 8C (S2)
   2C:  SLTI      V0, V0, FF9D
   30:  BNEL      V0, R0, .oAC
   34:  ADDIU     S0, S0, 19
   38:  LIA       V0, 8010EFC8
   40:  LWC1      F20, 80 (V0)
   44:  LIF       F0, 180.0
   4C:  LIO       AT, 40490FD8
   54:  MTC1      AT, F2
   58:  DIV.S     F20, F20, F0
   5C:  MUL.S     F20, F20, F2
   60:  NOP
   64:  LIF       F22, 25.0
   6C:  JAL       {Func:SinRad}
   70:  MOV.S     F12, F20
   74:  MUL.S     F0, F0, F22
   78:  NOP
   7C:  MOV.S     F12, F20
   80:  TRUNC.W.S F4, F0
   84:  MFC1      V0, F4
   88:  JAL       {Func:CosRad}
   8C:  SUBU      S1, S1, V0
   90:  NEG.S     F0, F0
   94:  MUL.S     F0, F0, F22
   98:  NOP
   9C:  TRUNC.W.S F4, F0
   A0:  MFC1      V0, F4
   A4:  NOP
   A8:  SUBU      S0, S0, V0
        .oAC
   AC:  SW        S1, 84 (S2)
   B0:  SW        S0, 8C (S2)
   B4:  LW        RA, 1C (SP)
   B8:  LW        S2, 18 (SP)
   BC:  LW        S1, 14 (SP)
   C0:  LW        S0, 10 (SP)
   C4:  LDC1      F22, 28 (SP)
   C8:  LDC1      F20, 20 (SP)
   CC:  ADDIU     V0, R0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 30

#new:Function $Function_80240390
    0:  ADDIU     SP, SP, FFD0
    4:  SDC1      F20, 18 (SP)
    8:  MTC1      A1, F20
    C:  SDC1      F22, 20 (SP)
   10:  MTC1      A2, F22
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 28 (SP)
   1C:  MTC1      A3, F24
   20:  SW        RA, 14 (SP)
   24:  JAL       800674A0
   28:  DADDU     S0, A0, R0
   2C:  MUL.S     F22, F20, F22
   30:  NOP
   34:  MUL.S     F20, F20, F24
   38:  NOP
   3C:  LIF       F0, 1.0
   44:  NOP
   48:  SWC1      F0, 14 (S0)
   4C:  SWC1      F22, 10 (S0)
   50:  SWC1      F20, 18 (S0)
   54:  LW        RA, 14 (SP)
   58:  LW        S0, 10 (SP)
   5C:  LDC1      F24, 28 (SP)
   60:  LDC1      F22, 20 (SP)
   64:  LDC1      F20, 18 (SP)
   68:  JR        RA
   6C:  ADDIU     SP, SP, 30

#new:Function $Function_80240400
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 5C (SP)
   10:  SW        S2, 58 (SP)
   14:  SW        S0, 50 (SP)
   18:  SDC1      F28, 80 (SP)
   1C:  SDC1      F26, 78 (SP)
   20:  SDC1      F24, 70 (SP)
   24:  SDC1      F22, 68 (SP)
   28:  SDC1      F20, 60 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetVariable}
   38:  ADDIU     S0, S0, 4
   3C:  JAL       8011B010
   40:  DADDU     A0, V0, R0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  DADDU     A0, S1, R0
   50:  JAL       {Func:GetFloatVariable}
   54:  DADDU     S2, V0, R0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  DADDU     A0, S1, R0
   64:  JAL       {Func:GetFloatVariable}
   68:  MOV.S     F28, F0
   6C:  LW        A1, 0 (S0)
   70:  ADDIU     S0, S0, 4
   74:  DADDU     A0, S1, R0
   78:  JAL       {Func:GetFloatVariable}
   7C:  MOV.S     F26, F0
   80:  DADDU     A0, S1, R0
   84:  LW        A1, 0 (S0)
   88:  JAL       {Func:GetFloatVariable}
   8C:  MOV.S     F22, F0
   90:  DADDU     A0, S2, R0
   94:  JAL       8011AD30
   98:  MOV.S     F24, F0
   9C:  DADDU     S1, V0, R0
   A0:  LHU       V0, 0 (S1)
   A4:  ANDI      V0, V0, 400
   A8:  BNE       V0, R0, .o124
   AC:  ADDIU     S0, S1, 58
   B0:  MTC1      R0, F20
   B4:  MFC1      A2, F22
   B8:  MFC1      A1, F20
   BC:  MFC1      A3, F20
   C0:  JAL       80067900
   C4:  DADDU     A0, S0, R0
   C8:  MFC1      A1, F28
   CC:  MFC1      A2, F26
   D0:  MFC1      A3, F24
   D4:  JAL       $Function_80240390
   D8:  ADDIU     A0, SP, 10
   DC:  ADDIU     A0, SP, 10
   E0:  DADDU     A1, S0, R0
   E4:  JAL       80067600
   E8:  DADDU     A2, S0, R0
   EC:  ADDIU     A0, SP, 10
   F0:  NEG.S     F22, F22
   F4:  MFC1      A1, F20
   F8:  MFC1      A2, F22
   FC:  JAL       80067900
  100:  DADDU     A3, A1, R0
  104:  ADDIU     A0, SP, 10
  108:  DADDU     A1, S0, R0
  10C:  JAL       80067600
  110:  DADDU     A2, A1, R0
  114:  LHU       V0, 0 (S1)
  118:  ORI       V0, V0, 1400
  11C:  BEQ       R0, R0, .o19C
  120:  SH        V0, 0 (S1)
        .o124
  124:  MTC1      R0, F20
  128:  MFC1      A2, F22
  12C:  MFC1      A1, F20
  130:  MFC1      A3, F20
  134:  JAL       80067900
  138:  ADDIU     A0, SP, 10
  13C:  ADDIU     A0, SP, 10
  140:  ADDIU     S0, S1, 58
  144:  DADDU     A1, S0, R0
  148:  JAL       80067600
  14C:  DADDU     A2, S0, R0
  150:  MFC1      A1, F28
  154:  MFC1      A2, F26
  158:  MFC1      A3, F24
  15C:  JAL       $Function_80240390
  160:  ADDIU     A0, SP, 10
  164:  ADDIU     A0, SP, 10
  168:  DADDU     A1, S0, R0
  16C:  JAL       80067600
  170:  DADDU     A2, S0, R0
  174:  ADDIU     A0, SP, 10
  178:  NEG.S     F22, F22
  17C:  MFC1      A1, F20
  180:  MFC1      A2, F22
  184:  JAL       80067900
  188:  DADDU     A3, A1, R0
  18C:  ADDIU     A0, SP, 10
  190:  DADDU     A1, S0, R0
  194:  JAL       80067600
  198:  DADDU     A2, A1, R0
        .o19C
  19C:  LW        RA, 5C (SP)
  1A0:  LW        S2, 58 (SP)
  1A4:  LW        S1, 54 (SP)
  1A8:  LW        S0, 50 (SP)
  1AC:  LDC1      F28, 80 (SP)
  1B0:  LDC1      F26, 78 (SP)
  1B4:  LDC1      F24, 70 (SP)
  1B8:  LDC1      F22, 68 (SP)
  1BC:  LDC1      F20, 60 (SP)
  1C0:  ADDIU     V0, R0, 2
  1C4:  JR        RA
  1C8:  ADDIU     SP, SP, 88

PADDING: 802405CC to 802405D0 (000005CC to 000005D0)
00000000 

#new:EntryList $EntryList
{Vec4f:Entry0} % -300.0    0.0  120.0    0.0
{Vec4f:Entry1} %   55.0    0.0 -120.0  180.0

#new:Header $Header
00000000 00000000 00000000 00000000 
$Script_Main $EntryList 00000002 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 80200000 001900FB 

#new:Script $Script_80240630
    0:  SetGroup 0000001B 
    C:  Call     UseExitHeading ( 0000003C 00000001 )
   20:  Exec     ExitWalk 
   2C:  Call     GotoMap     	( $ASCII_80243870 00000000 )
   40:  Wait     00000064 
   4C:  Return
   54:  End

#new:Script $Script_8024068C
    0:  SetGroup 0000001B 
    C:  Call     UseExitHeading ( 0000003C 00000000 )
   20:  Exec     ExitWalk 
   2C:  Call     GotoMap     	( $ASCII_80243878 00000001 )
   40:  Wait     00000064 
   4C:  Return
   54:  End

#new:Script $Script_802406E8
    0:  Bind     $Script_8024068C .Trigger:FloorAbove {Collider:deilis} 00000001 00000000 
   1C:  Bind     $Script_80240630 .Trigger:FloorAbove {Collider:deilin} 00000001 00000000 
   38:  Return
   40:  End

#new:Script_Main $Script_Main
    0:  Set  *WorldMapLocation  00000024 
   10:  Call     SetSpriteShading 	( FFFFFFFF )
   20:  Call     SetCamPerspective 	( .Default 00000003 00000019 00000010 00001000 )
   40:  Call     SetCamBGColor 	( .Default 00000000 00000000 00000000 )
   5C:  Call     SetCamFlag2 	( .Default .True )
   70:  Exec     $Script_802437F0 
   7C:  Exec     $Script_80242438 
   88:  Exec     $Script_80243744 
   94:  Call     ModifyColliderFlags 	( 00000000 {Collider:deilits} 7FFFFE00 )
   AC:  Call     ModifyColliderFlags 	( 00000000 {Collider:deilitn} 7FFFFE00 )
   C4:  Set  *Var[0]  $Script_802406E8 
   D4:  Exec     EnterWalk 
   E0:  Call     SetMusicTrack 	( 00000000 .Song:DeepJungle 00000000 00000008 )
   FC:  Call     802D611C ( 00000003 )
  10C:  Return
  114:  End

PADDING: 8024084C to 80240850 (0000084C to 00000850)
00000000 

#new:Unknown $???_80240850
00000000 

#new:Script $Script_80240854
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[1] 
   20:  Set  *Var[D]  *Var[2] 
   30:  Set  *Var[0]  00000000 
   40:  Set  *Var[1]  00000000 
   50:  Loop     
   5C:  	If  *Var[B]  ==  *MapVar[0] 
   6C:  		Add  *Var[0]  0000000A 
   7C:  	Else
   84:  		Add  *Var[0]  FFFFFFF6 
   94:  	EndIf
   9C:  	If  *Var[0]  <  FFFFFFF6 
   AC:  		Set  *Var[0]  FFFFFFF6 
   BC:  	EndIf
   C4:  	If  *Var[0]  >  0000000A 
   D4:  		Set  *Var[0]  0000000A 
   E4:  	EndIf
   EC:  	Add  *Var[1]  *Var[0] 
   FC:  	If  *Var[1]  <  00000000 
  10C:  		Set  *Var[1]  00000000 
  11C:  	EndIf
  124:  	If  *Var[1]  >  00000064 
  134:  		Set  *Var[1]  00000064 
  144:  	EndIf
  14C:  	Call     $Function_802401AC ( )
  158:  	If  *Var[1]  ==  00000000 
  168:  		If  *Var[D]  !=  00000000 
  178:  		EndIf
  180:  		Call     EnableModel 	( *Var[A] .False )
  194:  	Else
  19C:  		If  *Var[D]  !=  00000000 
  1AC:  		EndIf
  1B4:  		Call     EnableModel 	( *Var[A] .True )
  1C8:  		Call     ScaleModel  	( *Var[A] *Var[3] *Var[2] *Var[3] )
  1E4:  	EndIf
  1EC:  	Wait     00000001 
  1F8:  EndLoop
  200:  Return
  208:  End

#new:Script $Script_80240A64
    0:  Call     $Function_802401AC ( )
    C:  If  *Var[3]  <  *Fixed[1.0] 
   1C:  	SetF  *Var[4]  *Var[3] 
   2C:  Else
   34:  	SetF  *Var[4]  *Fixed[1.0] 
   44:  EndIf
   4C:  Call     ScaleModel  	( *Var[A] *Var[4] *Var[2] *Var[3] )
   68:  Return
   70:  End

#new:Script $Script_80240ADC
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[1] 
   20:  Set  *Var[D]  *Var[2] 
   30:  Set  *Var[0]  00000000 
   40:  Set  *Var[1]  00000000 
   50:  If  *Flag_JAN_38  ==  00000001 
   60:  	Goto     0000000A 
   6C:  EndIf
   74:  Loop     
   80:  	If  *MapVar[0]  ==  00000005 
   90:  		If  *AreaByte[2]  ==  00000001 
   A0:  			Add  *Var[0]  0000000A 
   B0:  		Else
   B8:  			Add  *Var[0]  FFFFFFF6 
   C8:  		EndIf
   D0:  	Else
   D8:  		Add  *Var[0]  FFFFFFF6 
   E8:  	EndIf
   F0:  	If  *Var[0]  <  FFFFFFF6 
  100:  		Set  *Var[0]  FFFFFFF6 
  110:  	EndIf
  118:  	If  *Var[0]  >  0000000A 
  128:  		Set  *Var[0]  0000000A 
  138:  	EndIf
  140:  	Add  *Var[1]  *Var[0] 
  150:  	If  *Var[1]  <  00000032 
  160:  		Set  *Var[1]  00000032 
  170:  	EndIf
  178:  	If  *Var[1]  >  00000046 
  188:  		Set  *Var[1]  00000046 
  198:  	EndIf
  1A0:  	If  *Var[1]  ==  00000000 
  1B0:  		Call     EnableModel 	( *Var[A] .False )
  1C4:  		Wait     00000001 
  1D0:  	Else
  1D8:  		Call     EnableModel 	( *Var[A] .True )
  1EC:  		ExecWait $Script_80240A64 
  1F8:  	EndIf
  200:  	If  *AreaByte[2]  ==  00000002 
  210:  		BreakLoop
  218:  	EndIf
  220:  EndLoop
  228:  Set  *Var[0]  0000000A 
  238:  Loop     
  244:  	If  *MapVar[0]  ==  00000005 
  254:  		Add  *Var[1]  *Var[0] 
  264:  		If  *Var[1]  >  0000012C 
  274:  			Set  *Var[1]  0000012C 
  284:  		EndIf
  28C:  		ExecWait $Script_80240A64 
  298:  	Else
  2A0:  		Wait     00000001 
  2AC:  	EndIf
  2B4:  	If  *Flag_JAN_38  !=  00000000 
  2C4:  		BreakLoop
  2CC:  	EndIf
  2D4:  EndLoop
  2DC:  Set  *Var[0]  FFFFFFF9 
  2EC:  Loop     0000001C 
  2F8:  	Add  *Var[1]  *Var[0] 
  308:  	ExecWait $Script_80240A64 
  314:  EndLoop
  31C:  Label    0000000A 
  328:  If  *MapVar[0]  ==  00000005 
  338:  	Add  *Var[0]  0000000A 
  348:  Else
  350:  	Add  *Var[0]  FFFFFFF6 
  360:  EndIf
  368:  If  *Var[0]  <  FFFFFFF6 
  378:  	Set  *Var[0]  FFFFFFF6 
  388:  EndIf
  390:  If  *Var[0]  >  0000000A 
  3A0:  	Set  *Var[0]  0000000A 
  3B0:  EndIf
  3B8:  Add  *Var[1]  *Var[0] 
  3C8:  If  *Var[1]  <  00000000 
  3D8:  	Set  *Var[1]  00000000 
  3E8:  EndIf
  3F0:  If  *Var[1]  >  00000064 
  400:  	Set  *Var[1]  00000064 
  410:  EndIf
  418:  If  *Var[1]  ==  00000000 
  428:  	Call     EnableModel 	( *Var[A] .False )
  43C:  	Wait     00000001 
  448:  Else
  450:  	Call     EnableModel 	( *Var[A] .True )
  464:  	ExecWait $Script_80240A64 
  470:  EndIf
  478:  Goto     0000000A 
  484:  Return
  48C:  End

#new:IntTable $IntTable_80240F70
00000138 00000000 0000000C 000000ED 00000000 FFFFFFDA 00000089 00000000 
0000003E FFFFFEE0 00000000 FFFFFFDA FFFFFFDA 00000000 0000000C 00000025 
00000000 FFFFFF76 

#new:Script $Script_80240FB8
    0:  If  *AreaByte[3]  !=  *MapVar[0] 
   10:  	Set  *AreaByte[3]  *MapVar[0] 
   20:  	Set  *MapFlag[0A]  00000000 
   30:  	Call     802D62B8 ( 8000001C )
   40:  	Call     802D62B8 ( 8000001D )
   50:  	If  *MapVar[0]  ==  00000005 
   60:  		If  *Flag_JAN_38  ==  00000000 
   70:  			Return
   78:  		EndIf
   80:  	Else
   88:  		If  *MapVar[0]  ==  00000006 
   98:  			Return
   A0:  		EndIf
   A8:  	EndIf
   B0:  	Call     PlaySound   	( 8000001C )
   C0:  	Set  *MapFlag[0A]  00000001 
   D0:  	Set  *Var[0]  *MapVar[0] 
   E0:  	Add  *Var[0]  00000001 
   F0:  	UseIntBuffer $IntTable_80240F70 
   FC:  	Loop     *Var[0] 
  108:  		Get3Int  *Var[1] *Var[2] *Var[3] 
  11C:  	EndLoop
  124:  	Call     $Function_80240214 ( *MapFlag[0A] *Var[1] *Var[2] *Var[3] )
  140:  EndIf
  148:  Return
  150:  End

#new:Script $Script_80241110
    0:  Call     PlaySoundAtCollider 	( {Collider:o33} 00000191 00000000 )
   18:  Call     ShakeCam    	( .Default 00000000 00000005 *Fixed[1.5] )
   34:  Return
   3C:  End

#new:Script $Script_80241154
    0:  Set  *Flag[00]  00000000 
   10:  Set  *AreaByte[2]  00000000 
   20:  Set  *AreaByte[3]  FFFFFFFF 
   30:  Exec     $Script_80240FB8 
   3C:  Label    00000000 
   48:  If  *Flag_JAN_38  ==  00000001 
   58:  	If  *Flag[00]  ==  00000000 
   68:  		Call     EnableModel 	( {Model:o33} .False )
   7C:  		Call     ModifyColliderFlags 	( 00000000 {Collider:o33} 7FFFFE00 )
   94:  		Call     SetPushBlock 	( 00000000 0000000F 00000000 00000000 )
   B0:  		Call     SetPushBlock 	( 00000000 00000010 00000000 00000000 )
   CC:  		Call     SetPushBlock 	( 00000000 00000011 00000000 00000000 )
   E8:  		Call     SetPushBlock 	( 00000000 00000012 00000000 00000000 )
  104:  		Call     SetPushBlock 	( 00000000 00000013 00000000 00000000 )
  120:  		Call     SetPushBlock 	( 00000000 0000000F 00000001 00000000 )
  13C:  		Call     SetPushBlock 	( 00000000 00000010 00000001 00000000 )
  158:  		Call     SetPushBlock 	( 00000000 00000011 00000001 00000000 )
  174:  		Call     SetPushBlock 	( 00000000 00000012 00000001 00000000 )
  190:  		Call     SetPushBlock 	( 00000000 00000013 00000001 00000000 )
  1AC:  		Call     SetPushBlock 	( 00000000 0000000F 00000002 00000000 )
  1C8:  		Call     SetPushBlock 	( 00000000 00000010 00000002 00000000 )
  1E4:  		Call     SetPushBlock 	( 00000000 00000011 00000002 00000000 )
  200:  		Call     SetPushBlock 	( 00000000 00000012 00000002 00000000 )
  21C:  		Call     SetPushBlock 	( 00000000 00000013 00000002 00000000 )
  238:  		Set  *Flag[00]  00000001 
  248:  	EndIf
  250:  EndIf
  258:  Call     GetPushBlock 	( 00000000 0000001C 00000006 *Var[0] )
  274:  If  *Var[0]  ==  00000000 
  284:  	Set  *MapVar[0]  00000000 
  294:  	Goto     00000001 
  2A0:  EndIf
  2A8:  Call     GetPushBlock 	( 00000000 00000019 00000004 *Var[0] )
  2C4:  If  *Var[0]  ==  00000000 
  2D4:  	Set  *MapVar[0]  00000001 
  2E4:  	Goto     00000001 
  2F0:  EndIf
  2F8:  Call     GetPushBlock 	( 00000000 00000015 00000008 *Var[0] )
  314:  If  *Var[0]  ==  00000000 
  324:  	Set  *MapVar[0]  00000002 
  334:  	Goto     00000001 
  340:  EndIf
  348:  Call     GetPushBlock 	( 00000000 00000004 00000004 *Var[0] )
  364:  If  *Var[0]  ==  00000000 
  374:  	Set  *MapVar[0]  00000003 
  384:  	Goto     00000001 
  390:  EndIf
  398:  Call     GetPushBlock 	( 00000000 0000000E 00000006 *Var[0] )
  3B4:  If  *Var[0]  ==  00000000 
  3C4:  	Set  *MapVar[0]  00000004 
  3D4:  	Goto     00000001 
  3E0:  EndIf
  3E8:  If  *Flag_JAN_38  ==  00000000 
  3F8:  	Call     DisablePlayerInput 	( .True )
  408:  	Call     SetPushBlock 	( 00000000 0000000F 00000000 00000000 )
  424:  	Call     SetPushBlock 	( 00000000 00000010 00000000 00000000 )
  440:  	Call     SetPushBlock 	( 00000000 00000011 00000000 00000000 )
  45C:  	Call     SetPushBlock 	( 00000000 00000012 00000000 00000000 )
  478:  	Call     SetPushBlock 	( 00000000 00000013 00000000 00000000 )
  494:  	Call     SetPushBlock 	( 00000000 0000000F 00000001 00000000 )
  4B0:  	Call     SetPushBlock 	( 00000000 00000010 00000001 00000000 )
  4CC:  	Call     SetPushBlock 	( 00000000 00000011 00000001 00000000 )
  4E8:  	Call     SetPushBlock 	( 00000000 00000012 00000001 00000000 )
  504:  	Call     SetPushBlock 	( 00000000 00000013 00000001 00000000 )
  520:  	Call     SetPushBlock 	( 00000000 0000000F 00000002 00000000 )
  53C:  	Call     SetPushBlock 	( 00000000 00000010 00000002 00000000 )
  558:  	Call     SetPushBlock 	( 00000000 00000011 00000002 00000000 )
  574:  	Call     SetPushBlock 	( 00000000 00000012 00000002 00000000 )
  590:  	Call     SetPushBlock 	( 00000000 00000013 00000002 00000000 )
  5AC:  	Set  *MapVar[0]  00000005 
  5BC:  	Wait     0000001E 
  5C8:  	Loop     00000002 
  5D4:  		Exec     $Script_80241110 
  5E0:  		Call     RotateModel 	( {Model:o33} 00000003 00000000 *Fixed[0.20019531] 00000001 )
  600:  		Wait     00000008 
  60C:  		Call     RotateModel 	( {Model:o33} FFFFFFFD 00000000 *Fixed[0.20019531] 00000001 )
  62C:  		Wait     00000008 
  638:  	EndLoop
  640:  	Thread
  648:  		Call     PlaySoundAtPlayer 	( 00000262 00000000 )
  65C:  		Call     ShowEmote   	( 00000000 .Emote:Exclamation 00000000 00000014 00000000 00000000 00000000 00000000 00000000 )
  68C:  		Call     GetModelCenter ( {Model:o33} )
  69C:  		Call     802D2884 ( *Var[0] *Var[2] 00000004 )
  6B4:  		Call     GetPlayerPos 	( *Var[3] *Var[1] *Var[2] )
  6CC:  		Set  *Var[4]  *Var[0] 
  6DC:  		Set  *Var[5]  *Var[0] 
  6EC:  		Sub  *Var[4]  00000078 
  6FC:  		Add  *Var[5]  00000078 
  70C:  		Switch  *Var[3] 
  718:  			Case  *Var[4]  to  *Var[5] 
  728:  				Add  *Var[0]  *Var[3] 
  738:  				Div  *Var[0]  00000002 
  748:  		EndSwitch
  750:  		Call     UseSettingsFrom 	( .Default *Var[0] *Var[1] *Var[2] )
  76C:  		Call     SetPanTarget 	( .Default *Var[0] *Var[1] *Var[2] )
  788:  		Call     SetCamDistance ( .Default 00000190 )
  79C:  		Call     SetCamSpeed 	( .Default *Fixed[3.0] )
  7B0:  		Call     PanToTarget 	( .Default 00000000 00000001 )
  7C8:  	EndThread
  7D0:  	Loop     00000003 
  7DC:  		Exec     $Script_80241110 
  7E8:  		Call     RotateModel 	( {Model:o33} 00000005 00000000 *Fixed[0.20019531] 00000001 )
  808:  		Wait     00000005 
  814:  		Call     RotateModel 	( {Model:o33} FFFFFFFB 00000000 *Fixed[0.20019531] 00000001 )
  834:  		Wait     00000005 
  840:  	EndLoop
  848:  	Loop     00000007 
  854:  		Exec     $Script_80241110 
  860:  		Call     RotateModel 	( {Model:o33} 00000007 00000000 *Fixed[0.20019531] 00000001 )
  880:  		Wait     00000003 
  88C:  		Call     RotateModel 	( {Model:o33} FFFFFFF9 00000000 *Fixed[0.20019531] 00000001 )
  8AC:  		Wait     00000003 
  8B8:  	EndLoop
  8C0:  	Loop     00000008 
  8CC:  		Call     RandInt     	( 00000002 *Var[0] )
  8E0:  		Switch  *Var[0] 
  8EC:  			Case  ==  00000000 
  8F8:  				Call     PlayEffect  	( {FX:Steam:SmallOutward} 00000008 00000000 FFFFFFAE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  93C:  			Case  ==  00000001 
  948:  				Call     PlayEffect  	( {FX:Steam:SmallOutward} 00000026 00000000 FFFFFFC2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  98C:  			Case  ==  00000002 
  998:  				Call     PlayEffect  	( {FX:Steam:SmallOutward} 0000004E 00000000 FFFFFFB3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9DC:  		EndSwitch
  9E4:  		Exec     $Script_80241110 
  9F0:  		Call     RotateModel 	( {Model:o33} 0000000A 00000000 *Fixed[0.20019531] 00000001 )
  A10:  		Wait     00000003 
  A1C:  		Call     RotateModel 	( {Model:o33} FFFFFFF6 00000000 *Fixed[0.20019531] 00000001 )
  A3C:  		Wait     00000003 
  A48:  	EndLoop
  A50:  	Thread
  A58:  		Call     ShakeCam    	( .Default 00000000 0000000F *Fixed[0.40039062] )
  A74:  	EndThread
  A7C:  	Call     PlaySoundAt 	( 8000001D 00000000 00000025 00000000 FFFFFF76 )
  A9C:  	Set  *AreaByte[2]  00000001 
  AAC:  	Thread
  AB4:  		Loop     000000C8 
  AC0:  			Call     RotateModel 	( {Model:o33} 0000000A 00000000 *Fixed[0.20019531] 00000001 )
  AE0:  			Wait     00000003 
  AEC:  			Call     RotateModel 	( {Model:o33} FFFFFFF6 00000000 *Fixed[0.20019531] 00000001 )
  B0C:  			Wait     00000003 
  B18:  		EndLoop
  B20:  	EndThread
  B28:  	Set  *Var[0]  00000000 
  B38:  	Loop     00000012 
  B44:  		Add  *Var[0]  00000003 
  B54:  		Call     TranslateModel ( {Model:o33} 00000000 *Var[0] 00000000 )
  B70:  		Wait     00000001 
  B7C:  	EndLoop
  B84:  	Loop     0000003C 
  B90:  		Call     TranslateModel ( {Model:o33} 00000000 *Var[0] 00000000 )
  BAC:  		Wait     00000001 
  BB8:  	EndLoop
  BC0:  	Set  *AreaByte[2]  00000002 
  BD0:  	Loop     00000019 
  BDC:  		Add  *Var[0]  00000008 
  BEC:  		Call     TranslateModel ( {Model:o33} 00000000 *Var[0] 00000000 )
  C08:  		Wait     00000001 
  C14:  	EndLoop
  C1C:  	Set  *Var[0]  000000C8 
  C2C:  	Set  *Var[1]  00000000 
  C3C:  	Set  *Var[2]  00000000 
  C4C:  	Loop     0000003C 
  C58:  		Add  *Var[1]  00000001 
  C68:  		Sub  *Var[0]  *Var[1] 
  C78:  		Add  *Var[2]  0000000A 
  C88:  		Add  *Var[2]  FFFFFFF6 
  C98:  		Call     TranslateModel ( {Model:o33} FFFFFF38 *Var[0] FFFFFE0C )
  CB4:  		Call     RotateModel 	( {Model:o33} *Var[2] FFFFFFFF *Fixed[0.10058594] *Fixed[0.10058594] )
  CD4:  		Wait     00000001 
  CE0:  	EndLoop
  CE8:  	Call     EnableModel 	( {Model:o33} .False )
  CFC:  	Call     ModifyColliderFlags 	( 00000000 {Collider:o33} 7FFFFE00 )
  D14:  	Set  *Flag_JAN_38  00000001 
  D24:  	Set  *Flag[00]  00000001 
  D34:  	Call     ResetCam    	( .Default *Fixed[5.0] )
  D48:  	Call     DisablePlayerInput 	( .False )
  D58:  Else
  D60:  	Call     GetPushBlock 	( 00000000 00000011 00000000 *Var[0] )
  D7C:  	If  *Var[0]  ==  00000000 
  D8C:  		Set  *MapVar[0]  00000005 
  D9C:  		Goto     00000001 
  DA8:  	EndIf
  DB0:  EndIf
  DB8:  Set  *MapVar[0]  00000006 
  DC8:  Label    00000001 
  DD4:  Exec     $Script_80240FB8 
  DE0:  Wait     00000001 
  DEC:  Goto     00000000 
  DF8:  Return
  E00:  End

#new:Script $Script_80241F5C
    0:  Loop     
    C:  	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   24:  	Call     GetGridIndexFromPos 	( 00000000 *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] )
   48:  	Set  *Var[5]  00000000 
   58:  	If  *MapVar[0]  ==  00000000 
   68:  		If  *Var[3]  ==  0000001C 
   78:  			If  *Var[4]  ==  00000006 
   88:  				Set  *Var[5]  00000001 
   98:  			EndIf
   A0:  		EndIf
   A8:  	EndIf
   B0:  	If  *MapVar[0]  ==  00000001 
   C0:  		If  *Var[3]  ==  00000019 
   D0:  			If  *Var[4]  ==  00000004 
   E0:  				Set  *Var[5]  00000001 
   F0:  			EndIf
   F8:  		EndIf
  100:  	EndIf
  108:  	If  *MapVar[0]  ==  00000002 
  118:  		If  *Var[3]  ==  00000015 
  128:  			If  *Var[4]  ==  00000008 
  138:  				Set  *Var[5]  00000001 
  148:  			EndIf
  150:  		EndIf
  158:  	EndIf
  160:  	If  *MapVar[0]  ==  00000003 
  170:  		If  *Var[3]  ==  00000004 
  180:  			If  *Var[4]  ==  00000004 
  190:  				Set  *Var[5]  00000001 
  1A0:  			EndIf
  1A8:  		EndIf
  1B0:  	EndIf
  1B8:  	If  *MapVar[0]  ==  00000004 
  1C8:  		If  *Var[3]  ==  0000000E 
  1D8:  			If  *Var[4]  ==  00000006 
  1E8:  				Set  *Var[5]  00000001 
  1F8:  			EndIf
  200:  		EndIf
  208:  	EndIf
  210:  	If  *MapVar[0]  ==  00000005 
  220:  		If  *Var[3]  ==  00000011 
  230:  			If  *Var[4]  ==  00000000 
  240:  				Set  *Var[5]  00000001 
  250:  			EndIf
  258:  		EndIf
  260:  	EndIf
  268:  	If  *MapVar[0]  ==  00000005 
  278:  		If  *Var[3]  ==  00000010 
  288:  			If  *Var[4]  ==  00000000 
  298:  				Set  *Var[5]  00000001 
  2A8:  			EndIf
  2B0:  		EndIf
  2B8:  	EndIf
  2C0:  	If  *MapVar[0]  ==  00000005 
  2D0:  		If  *Var[3]  ==  00000012 
  2E0:  			If  *Var[4]  ==  00000000 
  2F0:  				Set  *Var[5]  00000001 
  300:  			EndIf
  308:  		EndIf
  310:  	EndIf
  318:  	If  *MapVar[0]  ==  00000005 
  328:  		If  *Var[3]  ==  00000013 
  338:  			If  *Var[4]  ==  00000000 
  348:  				Set  *Var[5]  00000001 
  358:  			EndIf
  360:  		EndIf
  368:  	EndIf
  370:  	If  *Var[5]  ==  00000001 
  380:  		Call     DisablePlayerInput 	( .True )
  390:  		Call     $Function_802402B8 ( )
  39C:  		Call     802D2B6C ( )
  3A8:  		Loop     0000000A 
  3B4:  			Call     GetPlayerPos 	( *Var[3] *Var[4] *Var[5] )
  3CC:  			If  *Var[4]  <  00000028 
  3DC:  				AddF  *Var[4]  00000006 
  3EC:  			EndIf
  3F4:  			MulF  *Var[3]  0000000A 
  404:  			MulF  *Var[5]  0000000A 
  414:  			AddF  *Var[3]  *Var[0] 
  424:  			AddF  *Var[5]  *Var[2] 
  434:  			DivF  *Var[3]  0000000B 
  444:  			DivF  *Var[5]  0000000B 
  454:  			Call     SetPlayerPos 	( *Var[3] *Var[4] *Var[5] )
  46C:  			Call     SetPlayerAnimation 	( 0001002E )
  47C:  			Wait     00000001 
  488:  		EndLoop
  490:  		Call     SetPlayerAnimation 	( 00010002 )
  4A0:  		Call     DisablePlayerInput 	( .False )
  4B0:  	EndIf
  4B8:  	Wait     00000001 
  4C4:  EndLoop
  4CC:  Return
  4D4:  End

#new:Script $Script_80242438
    0:  Call     CreatePushBlockGrid 	( 00000000 {PushGrid:Grid_80242438} 00000000 )
   28:  Call     SetPushBlock 	( 00000000 00000007 00000005 00000001 )
   44:  Call     SetPushBlock 	( 00000000 0000000D 00000009 00000001 )
   60:  Call     SetPushBlock 	( 00000000 00000010 00000005 00000001 )
   7C:  Call     SetPushBlock 	( 00000000 00000015 00000002 00000001 )
   98:  Call     SetPushBlock 	( 00000000 00000016 00000004 00000001 )
   B4:  Call     SetPushBlock 	( 00000000 0000001A 00000006 00000001 )
   D0:  Call     SetPushBlock 	( 00000000 0000001B 00000007 00000001 )
   EC:  Call     SetPushBlock 	( 00000000 0000000F 00000000 00000002 )
  108:  Call     SetPushBlock 	( 00000000 00000010 00000000 00000002 )
  124:  Call     SetPushBlock 	( 00000000 00000011 00000000 00000002 )
  140:  Call     SetPushBlock 	( 00000000 00000012 00000000 00000002 )
  15C:  Call     SetPushBlock 	( 00000000 00000013 00000000 00000002 )
  178:  Call     SetPushBlock 	( 00000000 0000000F 00000001 00000002 )
  194:  Call     SetPushBlock 	( 00000000 00000010 00000001 00000002 )
  1B0:  Call     SetPushBlock 	( 00000000 00000011 00000001 00000002 )
  1CC:  Call     SetPushBlock 	( 00000000 00000012 00000001 00000002 )
  1E8:  Call     SetPushBlock 	( 00000000 00000013 00000001 00000002 )
  204:  Call     SetPushBlock 	( 00000000 0000000F 00000002 00000002 )
  220:  Call     SetPushBlock 	( 00000000 00000010 00000002 00000002 )
  23C:  Call     SetPushBlock 	( 00000000 00000011 00000002 00000002 )
  258:  Call     SetPushBlock 	( 00000000 00000012 00000002 00000002 )
  274:  Call     SetPushBlock 	( 00000000 00000013 00000002 00000002 )
  290:  Set  *Var[0]  00000000 
  2A0:  Loop     00000020 
  2AC:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000000 00000002 )
  2C8:  	Add  *Var[0]  00000001 
  2D8:  EndLoop
  2E0:  Set  *Var[0]  00000000 
  2F0:  Loop     0000000F 
  2FC:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000001 00000002 )
  318:  	Add  *Var[0]  00000001 
  328:  EndLoop
  330:  Set  *Var[0]  00000014 
  340:  Loop     0000000C 
  34C:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000001 00000002 )
  368:  	Add  *Var[0]  00000001 
  378:  EndLoop
  380:  Set  *Var[0]  00000000 
  390:  Loop     00000003 
  39C:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000002 00000002 )
  3B8:  	Add  *Var[0]  00000001 
  3C8:  EndLoop
  3D0:  Set  *Var[0]  0000000A 
  3E0:  Loop     00000004 
  3EC:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000002 00000002 )
  408:  	Add  *Var[0]  00000001 
  418:  EndLoop
  420:  Set  *Var[0]  0000001A 
  430:  Loop     00000006 
  43C:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000002 00000002 )
  458:  	Add  *Var[0]  00000001 
  468:  EndLoop
  470:  Set  *Var[0]  00000000 
  480:  Loop     00000002 
  48C:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000003 00000002 )
  4A8:  	Add  *Var[0]  00000001 
  4B8:  EndLoop
  4C0:  Set  *Var[0]  0000000A 
  4D0:  Loop     00000004 
  4DC:  	Call     SetPushBlock 	( 00000000 *Var[0] 00000003 00000002 )
  4F8:  	Add  *Var[0]  00000001 
  508:  EndLoop
  510:  Exec     $Script_80241154 
  51C:  Set  *Var[0]  0000002E 
  52C:  Set  *Var[1]  00000000 
  53C:  Set  *Var[2]  00000013 
  54C:  Call     ModifyColliderFlags 	( 00000000 *Var[2] 7FFFFE00 )
  564:  Exec     $Script_80240854 
  570:  Set  *Var[0]  00000030 
  580:  Set  *Var[1]  00000001 
  590:  Set  *Var[2]  00000014 
  5A0:  Call     ModifyColliderFlags 	( 00000000 *Var[2] 7FFFFE00 )
  5B8:  Exec     $Script_80240854 
  5C4:  Set  *Var[0]  00000032 
  5D4:  Set  *Var[1]  00000002 
  5E4:  Set  *Var[2]  00000015 
  5F4:  Call     ModifyColliderFlags 	( 00000000 *Var[2] 7FFFFE00 )
  60C:  Exec     $Script_80240854 
  618:  Set  *Var[0]  00000034 
  628:  Set  *Var[1]  00000003 
  638:  Set  *Var[2]  00000016 
  648:  Call     ModifyColliderFlags 	( 00000000 *Var[2] 7FFFFE00 )
  660:  Exec     $Script_80240854 
  66C:  Set  *Var[0]  00000036 
  67C:  Set  *Var[1]  00000004 
  68C:  Set  *Var[2]  00000017 
  69C:  Call     ModifyColliderFlags 	( 00000000 *Var[2] 7FFFFE00 )
  6B4:  Exec     $Script_80240854 
  6C0:  Set  *Var[0]  00000038 
  6D0:  Set  *Var[1]  00000005 
  6E0:  Set  *Var[2]  0000001A 
  6F0:  Call     ModifyColliderFlags 	( 00000000 *Var[2] 7FFFFE00 )
  708:  Exec     $Script_80240ADC 
  714:  Exec     $Script_80241F5C 
  720:  Call     EnableTexPanning 	( {Model:o72} .True )
  734:  Call     EnableTexPanning 	( {Model:o73} .True )
  748:  Call     EnableTexPanning 	( {Model:o74} .True )
  75C:  Call     EnableTexPanning 	( {Model:o75} .True )
  770:  Call     EnableTexPanning 	( {Model:o76} .True )
  784:  Call     EnableTexPanning 	( {Model:o71} .True )
  798:  Call     802C90FC ( 0000002E 00000000 FFFFFFFF )
  7B0:  Call     802C90FC ( 00000030 00000000 FFFFFFFF )
  7C8:  Call     802C90FC ( 00000032 00000000 FFFFFFFF )
  7E0:  Call     802C90FC ( 00000034 00000000 FFFFFFFF )
  7F8:  Call     802C90FC ( 00000036 00000000 FFFFFFFF )
  810:  Call     802C90FC ( 00000038 00000000 FFFFFFFF )
  828:  Call     802C94A0 ( 00000000 $Function_80240000 00000000 )
  840:  Set  *Var[0]  00000000 
  850:  Loop     
  85C:  	Sub  *Var[0]  000007D0 
  86C:  	If  *Var[0]  <  FFFF0000 
  87C:  		Add  *Var[0]  00010000 
  88C:  	EndIf
  894:  	Call     802C9364 ( 00000001 00000000 00000000 *Var[0] )
  8B0:  	Wait     00000001 
  8BC:  EndLoop
  8C4:  Return
  8CC:  End

PADDING: 80242D0C to 80242D10 (00002D0C to 00002D10)
00000000 

% Origin: HEURISTIC
#new:Script $Script_80242D10
    0:  UseIntBuffer *Var[0] 
    C:  Get4Int  *Var[1] *Var[2] *Var[3] *Var[4] 
   24:  Call     GetPlayerPos 	( *Var[5] *Var[F] *Var[7] )
   3C:  Thread
   44:  	Set  *Flag[00]  00000000 
   54:  	If  *Var[1]  !=  00000000 
   64:  		Loop     00000005 
   70:  			UseIntBuffer *Var[1] 
   7C:  			Get1Int  *Var[2] 
   88:  			Loop     *Var[2] 
   94:  				Get1Int  *Var[3] 
   A0:  				Call     $Function_80240400 ( *Var[3] *Fixed[0.10058594] 00000001 *Var[F] 00000000 )
   C0:  				If  *Flag[00]  ==  00000000 
   D0:  					Set  *Flag[00]  00000001 
   E0:  					Call     PlaySoundAtModel 	( *Var[3] 00000153 00000000 )
   F8:  				EndIf
  100:  			EndLoop
  108:  			Wait     00000001 
  114:  			UseIntBuffer *Var[1] 
  120:  			Get1Int  *Var[2] 
  12C:  			Loop     *Var[2] 
  138:  				Get1Int  *Var[3] 
  144:  				Call     $Function_80240400 ( *Var[3] *Fixed[0.10058594] FFFFFFFF *Var[F] 00000000 )
  164:  			EndLoop
  16C:  			Wait     00000001 
  178:  		EndLoop
  180:  		UseIntBuffer *Var[1] 
  18C:  		Get1Int  *Var[2] 
  198:  		Loop     *Var[2] 
  1A4:  			Get1Int  *Var[3] 
  1B0:  			Call     TranslateModel ( *Var[3] 00000000 00000000 00000000 )
  1CC:  		EndLoop
  1D4:  		Wait     00000001 
  1E0:  	EndIf
  1E8:  EndThread
  1F0:  Thread
  1F8:  	If  *Var[2]  !=  00000000 
  208:  		UseIntBuffer *Var[2] 
  214:  		Get1Int  *Var[3] 
  220:  		Loop     *Var[3] 
  22C:  			Get1Int  *Var[4] 
  238:  			Get3Int  *Var[5] *Var[6] *Var[7] 
  24C:  			Get3Int  *Var[8] *Var[9] *Var[A] 
  260:  			If  *Var[A]  ==  00000000 
  270:  				Call     DropItemEntity ( *Var[4] *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] )
  294:  			Else
  29C:  				Call     GetValueByRef 	( *Var[A] *Var[B] )
  2B0:  				If  *Var[B]  ==  00000000 
  2C0:  					Call     SetValueByRef 	( *Var[A] 00000001 )
  2D4:  					Call     DropItemEntity ( *Var[4] *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] )
  2F8:  				EndIf
  300:  			EndIf
  308:  		EndLoop
  310:  	EndIf
  318:  EndThread
  320:  Wait     0000000F 
  32C:  If  *Var[4]  !=  00000000 
  33C:  	ExecWait *Var[4] 
  348:  EndIf
  350:  Return
  358:  End

#new:Script $Script_ShakeTree_80243070
    0:  SetTimescale *Fixed[2.0] 
    C:  UseIntBuffer *Var[0] 
   18:  Get4Int  *Var[1] *Var[2] *Var[3] *Var[4] 
   30:  Get1Int  *Var[5] 
   3C:  Call     GetPlayerPos 	( *Var[6] *Var[F] *Var[8] )
   54:  Call     PlaySound   	( 00000165 )
   64:  Call     PlaySound   	( 00000166 )
   74:  Thread
   7C:  	Set  *Flag[00]  00000000 
   8C:  	If  *Var[1]  !=  00000000 
   9C:  		Wait     00000001 
   A8:  		Loop     00000005 
   B4:  			UseIntBuffer *Var[1] 
   C0:  			Get1Int  *Var[2] 
   CC:  			Loop     *Var[2] 
   D8:  				Get1Int  *Var[3] 
   E4:  				Call     $Function_80240400 ( *Var[3] *Fixed[0.10058594] *Fixed[0.20019531] *Var[F] 00000000 )
  104:  				If  *Flag[00]  ==  00000000 
  114:  					Set  *Flag[00]  00000001 
  124:  					Call     PlaySoundAtModel 	( *Var[3] 00000166 00000000 )
  13C:  				EndIf
  144:  			EndLoop
  14C:  			Wait     00000001 
  158:  			UseIntBuffer *Var[1] 
  164:  			Get1Int  *Var[2] 
  170:  			Loop     *Var[2] 
  17C:  				Get1Int  *Var[3] 
  188:  				Call     $Function_80240400 ( *Var[3] *Fixed[0.10058594] *Fixed[-0.19921875] *Var[F] 00000000 )
  1A8:  			EndLoop
  1B0:  			Wait     00000001 
  1BC:  		EndLoop
  1C4:  		UseIntBuffer *Var[1] 
  1D0:  		Get1Int  *Var[2] 
  1DC:  		Loop     *Var[2] 
  1E8:  			Get1Int  *Var[3] 
  1F4:  			Call     TranslateModel ( *Var[3] 00000000 00000000 00000000 )
  210:  		EndLoop
  218:  		Wait     00000001 
  224:  	EndIf
  22C:  EndThread
  234:  Thread
  23C:  	Set  *Flag[00]  00000000 
  24C:  	If  *Var[2]  !=  00000000 
  25C:  		Loop     00000005 
  268:  			UseIntBuffer *Var[2] 
  274:  			Get1Int  *Var[3] 
  280:  			Loop     *Var[3] 
  28C:  				Get1Int  *Var[4] 
  298:  				Call     $Function_80240400 ( *Var[4] *Fixed[0.10058594] *Fixed[0.20019531] *Var[F] 00000000 )
  2B8:  				If  *Flag[00]  ==  00000000 
  2C8:  					Set  *Flag[00]  00000001 
  2D8:  					Call     PlaySoundAtModel 	( *Var[4] 00000165 00000000 )
  2F0:  				EndIf
  2F8:  			EndLoop
  300:  			Wait     00000001 
  30C:  			UseIntBuffer *Var[2] 
  318:  			Get1Int  *Var[3] 
  324:  			Loop     *Var[3] 
  330:  				Get1Int  *Var[4] 
  33C:  				Call     $Function_80240400 ( *Var[4] *Fixed[0.10058594] *Fixed[-0.19921875] *Var[F] 00000000 )
  35C:  			EndLoop
  364:  			Wait     00000001 
  370:  		EndLoop
  378:  		UseIntBuffer *Var[2] 
  384:  		Get1Int  *Var[3] 
  390:  		Loop     *Var[3] 
  39C:  			Get1Int  *Var[4] 
  3A8:  			Call     TranslateModel ( *Var[4] 00000000 00000000 00000000 )
  3C4:  		EndLoop
  3CC:  		Wait     00000001 
  3D8:  	EndIf
  3E0:  EndThread
  3E8:  Thread
  3F0:  	If  *Var[3]  !=  00000000 
  400:  		UseIntBuffer *Var[3] 
  40C:  		Get1Int  *Var[4] 
  418:  		Loop     *Var[4] 
  424:  			Get1Int  *Var[5] 
  430:  			Get3Int  *Var[6] *Var[7] *Var[8] 
  444:  			Get3Int  *Var[9] *Var[A] *Var[B] 
  458:  			If  *Var[B]  ==  00000000 
  468:  				Call     DropItemEntity ( *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] *Var[A] )
  48C:  			Else
  494:  				Call     GetValueByRef 	( *Var[B] *Var[C] )
  4A8:  				If  *Var[C]  ==  00000000 
  4B8:  					Call     SetValueByRef 	( *Var[B] 00000001 )
  4CC:  					Call     DropItemEntity ( *Var[5] *Var[6] *Var[7] *Var[8] *Var[9] *Var[A] )
  4F0:  				EndIf
  4F8:  			EndIf
  500:  		EndLoop
  508:  	EndIf
  510:  EndThread
  518:  Thread
  520:  	If  *Var[4]  !=  00000000 
  530:  		UseIntBuffer *Var[4] 
  53C:  		Get1Int  *Var[5] 
  548:  		Loop     *Var[5] 
  554:  			Get3Int  *Var[6] *Var[7] *Var[8] 
  568:  			Call     PlayEffect  	( {FX:DropLeaves:Random} *Var[6] *Var[7] *Var[8] 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5AC:  		EndLoop
  5B4:  	EndIf
  5BC:  EndThread
  5C4:  If  *Var[5]  !=  00000000 
  5D4:  	ExecWait *Var[5] 
  5E0:  EndIf
  5E8:  Wait     0000000F 
  5F4:  Return
  5FC:  End

#new:TreeModelList $TreeModelList_Leaves_80243674
00000003 {Model:o54} {Model:o55} {Model:o56} 

#new:TreeModelList $TreeModelList_Trunk_80243684
00000001 {Model:o53} 

#new:TreeDropList $TreeDropList_8024368C
00000001 
.Item:Coin {Vec3d:Tree8024368C_Drop0} 0000000F *Flag_JAN_2E 00000000 

#new:TreeEffectVectors $TreeEffectVectors_802436AC
00000002 
FFFFFE7C 00000072 FFFFFFB3 
FFFFFED1 00000072 FFFFFFA9 

#new:ShakeTreeEvent $ShakeTreeEvent_802436C8
$TreeModelList_Leaves_80243674 
$TreeModelList_Trunk_80243684 
$TreeDropList_8024368C 
$TreeEffectVectors_802436AC 
00000000 

#new:TriggerCoord $TriggerCoord_802436DC
{BombPos:Bomb_802436DC} % -348.000000 0.000000 -107.000000 0.000000

#new:TreeModelList $TreeModelList_Leaves_802436EC
00000003 {Model:o50} {Model:o51} {Model:o52} 

#new:TreeModelList $TreeModelList_Trunk_802436FC
00000001 {Model:o49} 

#new:TreeEffectVectors $TreeEffectVectors_80243704
00000002 
00000108 00000072 FFFFFFAF 
0000015D 00000072 FFFFFFA5 

#new:ShakeTreeEvent $ShakeTreeEvent_80243720
$TreeModelList_Leaves_802436EC 
$TreeModelList_Trunk_802436FC 
00000000 
$TreeEffectVectors_80243704 
00000000 

#new:TriggerCoord $TriggerCoord_80243734
{BombPos:Bomb_80243734} % 304.000000 0.000000 -111.000000 0.000000

#new:Script $Script_80243744
    0:  Set  *Var[0]  $ShakeTreeEvent_802436C8 
   10:  Bind     $Script_ShakeTree_80243070 .Trigger:WallHammer {Collider:o113} 00000001 00000000 
   2C:  Bind     $Script_ShakeTree_80243070 .Trigger:PointBomb $TriggerCoord_802436DC 00000001 00000000 
   48:  Set  *Var[0]  $ShakeTreeEvent_80243720 
   58:  Bind     $Script_ShakeTree_80243070 .Trigger:WallHammer {Collider:o110} 00000001 00000000 
   74:  Bind     $Script_ShakeTree_80243070 .Trigger:PointBomb $TriggerCoord_80243734 00000001 00000000 
   90:  Return
   98:  End

PADDING: 802437E4 to 802437F0 (000037E4 to 000037F0)
00000000 00000000 00000000 

#new:Script $Script_802437F0
    0:  Call     MakeEntity  	( .Entity:PinkFlower {Vec4d:Entity802437F0} 80000000 )
   24:  Call     MakeEntity  	( .Entity:HiddenYellowBlock {Vec4d:Entity80243814} .Item:VoltShroom 80000000 )
   4C:  Call     AssignBlockFlag 	( *Flag_JAN_24 )
   5C:  Call     80111F2C ( 00000001 )
   6C:  Return
   74:  End

PADDING: 8024386C to 80243870 (0000386C to 00003870)
00000000 

#new:ASCII $ASCII_80243870
jan_14

#new:ASCII $ASCII_80243878
jan_12

#new:ConstDouble $ConstDouble_80243880
0.020000d

#new:ConstDouble $ConstDouble_80243888
0.100000d

#new:ConstDouble $ConstDouble_80243890
0.300000d

#new:ConstDouble $ConstDouble_80243898
0.600000d

