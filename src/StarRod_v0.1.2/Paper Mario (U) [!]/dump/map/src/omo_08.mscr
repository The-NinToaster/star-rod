% Script File: omo_08.mscr
% Decoded from: 0 to 8900 (omo_08)

#new:Function $Function_80240000
    0:  LIA       V1, 800B1D80
    8:  LHU       V0, 2 (V1)
    C:  ANDI      V0, V0, FFFE
   10:  SH        V0, 2 (V1)
   14:  JR        RA
   18:  ADDIU     V0, R0, 2

#new:Function $Function_8024001C
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  LW        S0, C (S1)
   28:  LW        S2, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F24, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F22, F0
   64:  DADDU     A0, S1, R0
   68:  LW        A1, 0 (S0)
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F20, F0
   74:  MOV.S     F12, F24
   78:  MFC1      A2, F20
   7C:  MFC1      A3, F0
   80:  JAL       80029C80
   84:  MOV.S     F14, F22
   88:  JAL       80029B24
   8C:  MOV.S     F12, F0
   90:  DADDU     A0, S1, R0
   94:  MFC1      A2, F0
   98:  JAL       {Func:SetFloatVariable}
   9C:  DADDU     A1, S2, R0
   A0:  LW        RA, 1C (SP)
   A4:  LW        S2, 18 (SP)
   A8:  LW        S1, 14 (SP)
   AC:  LW        S0, 10 (SP)
   B0:  LDC1      F24, 30 (SP)
   B4:  LDC1      F22, 28 (SP)
   B8:  LDC1      F20, 20 (SP)
   BC:  ADDIU     V0, R0, 2
   C0:  JR        RA
   C4:  ADDIU     SP, SP, 38

#new:Function $Function_802400E4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  SDC1      F20, 20 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       {Func:GetFloatVariable}
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  DADDU     A0, S1, R0
   34:  JAL       {Func:GetFloatVariable}
   38:  MOV.S     F20, F0
   3C:  C.LT.S    F0, F20
   40:  NOP
   44:  BC1F      .o58
   48:  DADDU     A0, S1, R0
   4C:  LW        A1, 0 (S0)
   50:  BEQ       R0, R0, .o60
   54:  ADDIU     A2, R0, 1
        .o58
   58:  LW        A1, 0 (S0)
   5C:  DADDU     A2, R0, R0
        .o60
   60:  JAL       {Func:SetVariable}
   64:  NOP
   68:  LW        RA, 18 (SP)
   6C:  LW        S1, 14 (SP)
   70:  LW        S0, 10 (SP)
   74:  LDC1      F20, 20 (SP)
   78:  ADDIU     V0, R0, 2
   7C:  JR        RA
   80:  ADDIU     SP, SP, 28

#new:Function $Function_80240168
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       {Func:GetVariable}
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  DADDU     A0, S2, R0
   34:  JAL       {Func:GetVariable}
   38:  DADDU     S1, V0, R0
   3C:  DADDU     A0, S2, R0
   40:  LW        A1, 0 (S0)
   44:  JAL       {Func:GetVariable}
   48:  DADDU     S0, V0, R0
   4C:  MULT      S0, V0
   50:  ADDIU     V0, R0, 2
   54:  LW        V1, 138 (S2)
   58:  MFLO      A2
   5C:  ADDU      S1, S1, A2
   60:  SLLV      S1, S1, V0
   64:  ADDU      V1, V1, S1
   68:  SW        V1, 138 (S2)
   6C:  LW        RA, 1C (SP)
   70:  LW        S2, 18 (SP)
   74:  LW        S1, 14 (SP)
   78:  LW        S0, 10 (SP)
   7C:  JR        RA
   80:  ADDIU     SP, SP, 20

#new:Function $Function_802401EC
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  SDC1      F24, 30 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       {Func:GetFloatVariable}
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  DADDU     A0, S1, R0
   3C:  JAL       {Func:GetFloatVariable}
   40:  MOV.S     F24, F0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  DADDU     A0, S1, R0
   50:  JAL       {Func:GetFloatVariable}
   54:  MOV.S     F22, F0
   58:  DADDU     A0, S1, R0
   5C:  LW        A1, 0 (S0)
   60:  JAL       {Func:GetFloatVariable}
   64:  MOV.S     F20, F0
   68:  LIA       V0, 8010EFC8
   70:  SWC1      F24, 28 (V0)
   74:  SWC1      F22, 2C (V0)
   78:  SWC1      F20, 30 (V0)
   7C:  SWC1      F0, 80 (V0)
   80:  LW        RA, 18 (SP)
   84:  LW        S1, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  LDC1      F24, 30 (SP)
   90:  LDC1      F22, 28 (SP)
   94:  LDC1      F20, 20 (SP)
   98:  ADDIU     V0, R0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 38

#new:Function $Function_80240290
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F26, 38 (SP)
   1C:  SDC1      F24, 30 (SP)
   20:  SDC1      F22, 28 (SP)
   24:  SDC1      F20, 20 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       {Func:GetVariable}
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  DADDU     A0, S1, R0
   44:  JAL       {Func:GetFloatVariable}
   48:  DADDU     S2, V0, R0
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  DADDU     A0, S1, R0
   58:  JAL       {Func:GetFloatVariable}
   5C:  MOV.S     F26, F0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S1, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  DADDU     A0, S1, R0
   78:  LW        A1, 0 (S0)
   7C:  JAL       {Func:GetFloatVariable}
   80:  MOV.S     F20, F0
   84:  DADDU     A0, S2, R0
   88:  JAL       8003AB48
   8C:  MOV.S     F22, F0
   90:  DADDU     A0, V0, R0
   94:  SWC1      F26, 38 (A0)
   98:  MOV.S     F0, F26
   9C:  SWC1      F24, 3C (A0)
   A0:  MOV.S     F2, F24
   A4:  SWC1      F20, 40 (A0)
   A8:  MOV.S     F4, F20
   AC:  LW        V1, 0 (A0)
   B0:  LUI       A1, 1
   B4:  SWC1      F22, C (A0)
   B8:  SWC1      F0, 6C (A0)
   BC:  SWC1      F2, 70 (A0)
   C0:  SWC1      F4, 74 (A0)
   C4:  OR        V1, V1, A1
   C8:  SW        V1, 0 (A0)
   CC:  LW        RA, 1C (SP)
   D0:  LW        S2, 18 (SP)
   D4:  LW        S1, 14 (SP)
   D8:  LW        S0, 10 (SP)
   DC:  LDC1      F26, 38 (SP)
   E0:  LDC1      F24, 30 (SP)
   E4:  LDC1      F22, 28 (SP)
   E8:  LDC1      F20, 20 (SP)
   EC:  ADDIU     V0, R0, 2
   F0:  JR        RA
   F4:  ADDIU     SP, SP, 40

#new:Function $Function_80240388
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A1, S4, R0
   44:  DADDU     S3, V0, R0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       {Func:GetFloatVariable}
   5C:  DADDU     A0, S2, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S2, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S2, R0
   80:  JAL       {Func:GetVariable}
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S2, R0
   94:  JAL       {Func:GetVariable}
   98:  DADDU     S1, V0, R0
   9C:  DADDU     A0, S2, R0
   A0:  LW        A1, 0 (S0)
   A4:  JAL       {Func:GetFloatVariable}
   A8:  DADDU     S0, V0, R0
   AC:  LIF       F2, 180.0
   B4:  LIO       AT, 40490FD8
   BC:  MTC1      AT, F4
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  DADDU     A0, S2, R0
   F4:  DADDU     S3, S1, R0
   F8:  DADDU     A1, S4, R0
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A2, S1, R0
        .o104
  104:  LIO       AT, 40490FD8
  10C:  MTC1      AT, F0
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       {Func:CosRad}
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  DADDU     A0, S2, R0
  150:  MFC1      A2, F2
  154:  JAL       {Func:SetFloatVariable}
  158:  DADDU     A1, S5, R0
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  ADDIU     V0, R0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48

#new:Function $Function_80240518
    0:  LIA       V1, 8007419C
    8:  LW        V0, 0 (V1)
    C:  SW        R0, 84 (A0)
   10:  LW        V0, 10 (V0)
   14:  ANDI      V0, V0, 8000
   18:  BEQ       V0, R0, .o24
   1C:  ADDIU     V0, R0, 1
   20:  SW        V0, 84 (A0)
        .o24
   24:  LW        V0, 0 (V1)
   28:  LW        V0, 10 (V0)
   2C:  ANDI      V0, V0, 4000
   30:  BEQ       V0, R0, .o3C
   34:  ADDIU     V0, R0, 1
   38:  SW        V0, 84 (A0)
        .o3C
   3C:  JR        RA
   40:  ADDIU     V0, R0, 2

#new:Function $Function_8024055C
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       8011BC1C
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       8011BC34
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       8011BC4C
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       8011BC64
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  DADDU     V0, R0, R0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18

#new:Function $Function_80240680
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       8011BC1C
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       8011BC34
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       8011BC4C
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       8011BC64
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  DADDU     V0, R0, R0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18

PADDING: 80240868 to 80240870 (00000868 to 00000870)
00000000 00000000 

#new:Function $Function_80240870
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, 148 (S1)
   18:  JAL       8003AAEC
   1C:  LH        A0, 8 (S0)
   20:  LWC1      F0, 18 (V0)
   24:  LAD       F2, $ConstDouble_80248760
   2C:  CVT.D.S   F0, F0
   30:  MUL.D     F0, F0, F2
   34:  NOP
   38:  CVT.S.D   F0, F0
   3C:  SWC1      F0, 18 (V0)
   40:  LW        V1, CC (S0)
   44:  LW        A0, 30 (V1)
   48:  ADDIU     V1, R0, 5
   4C:  SH        V1, 8E (V0)
   50:  SW        A0, 28 (V0)
   54:  ADDIU     V0, R0, F
   58:  SW        V0, 70 (S1)
   5C:  LW        RA, 18 (SP)
   60:  LW        S1, 14 (SP)
   64:  LW        S0, 10 (SP)
   68:  JR        RA
   6C:  ADDIU     SP, SP, 20

#new:Function $Function_802408E0
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 28 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 2C (SP)
   10:  SW        S1, 24 (SP)
   14:  SW        S0, 20 (SP)
   18:  LW        S1, 148 (S2)
   1C:  JAL       8003AAEC
   20:  LH        A0, 8 (S1)
   24:  DADDU     S0, V0, R0
   28:  DADDU     A0, S0, R0
   2C:  LWC1      F0, C (S0)
   30:  ADDIU     A2, SP, 18
   34:  SWC1      F0, 18 (SP)
   38:  SW        R0, 10 (SP)
   3C:  SW        R0, 14 (SP)
   40:  LW        A1, 18 (S0)
   44:  JAL       8004A784
   48:  DADDU     A3, R0, R0
   4C:  BNE       V0, R0, .o64
   50:  NOP
   54:  LW        A1, 18 (S0)
   58:  LW        A2, C (S0)
   5C:  JAL       8003AA54
   60:  DADDU     A0, S0, R0
        .o64
   64:  LHU       V0, 8E (S0)
   68:  ADDIU     V0, V0, FFFF
   6C:  SH        V0, 8E (S0)
   70:  SLL       V0, V0, 10
   74:  BNE       V0, R0, .oB8
   78:  NOP
   7C:  LWC1      F0, 18 (S0)
   80:  LAD       F2, $ConstDouble_80248768
   88:  CVT.D.S   F0, F0
   8C:  MUL.D     F0, F0, F2
   90:  NOP
   94:  CVT.S.D   F0, F0
   98:  SWC1      F0, 18 (S0)
   9C:  LW        V0, CC (S1)
   A0:  LW        V1, 2C (V0)
   A4:  ADDIU     V0, R0, A
   A8:  SH        V0, 8E (S0)
   AC:  ADDIU     V0, R0, 10
   B0:  SW        V1, 28 (S0)
   B4:  SW        V0, 70 (S2)
        .oB8
   B8:  LW        RA, 2C (SP)
   BC:  LW        S2, 28 (SP)
   C0:  LW        S1, 24 (SP)
   C4:  LW        S0, 20 (SP)
   C8:  JR        RA
   CC:  ADDIU     SP, SP, 30

#new:Function $Function_802409B0
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  LW        V0, 148 (S1)
   18:  JAL       8003AAEC
   1C:  LH        A0, 8 (V0)
   20:  DADDU     S0, V0, R0
   24:  DADDU     A0, S0, R0
   28:  LWC1      F0, C (S0)
   2C:  ADDIU     A2, SP, 18
   30:  SWC1      F0, 18 (SP)
   34:  SW        R0, 10 (SP)
   38:  SW        R0, 14 (SP)
   3C:  LW        A1, 18 (S0)
   40:  JAL       8004A784
   44:  DADDU     A3, R0, R0
   48:  BNE       V0, R0, .o60
   4C:  NOP
   50:  LW        A1, 18 (S0)
   54:  LW        A2, C (S0)
   58:  JAL       8003AA54
   5C:  DADDU     A0, S0, R0
        .o60
   60:  LHU       V0, 8E (S0)
   64:  ADDIU     V0, V0, FFFF
   68:  SH        V0, 8E (S0)
   6C:  SLL       V0, V0, 10
   70:  BNE       V0, R0, .o84
   74:  ADDIU     V0, R0, 1E
   78:  SH        V0, 8E (S0)
   7C:  ADDIU     V0, R0, 11
   80:  SW        V0, 70 (S1)
        .o84
   84:  LW        RA, 28 (SP)
   88:  LW        S1, 24 (SP)
   8C:  LW        S0, 20 (SP)
   90:  JR        RA
   94:  ADDIU     SP, SP, 30

#new:Function $Function_80240A48
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, 148 (S1)
   18:  JAL       8003AAEC
   1C:  LH        A0, 8 (S0)
   20:  DADDU     V1, V0, R0
   24:  LHU       V0, 8E (V1)
   28:  ADDIU     V0, V0, FFFF
   2C:  SH        V0, 8E (V1)
   30:  SLL       V0, V0, 10
   34:  BNE       V0, R0, .o4C
   38:  NOP
   3C:  LW        V0, CC (S0)
   40:  LW        V0, 0 (V0)
   44:  SW        V0, 28 (V1)
   48:  SW        R0, 70 (S1)
        .o4C
   4C:  LW        RA, 18 (SP)
   50:  LW        S1, 14 (SP)
   54:  LW        S0, 10 (SP)
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20

#new:Function $Function_80240AA8
    0:  ADDIU     SP, SP, FF98
    4:  SW        S3, 54 (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        RA, 60 (SP)
   10:  SW        S5, 5C (SP)
   14:  SW        S4, 58 (SP)
   18:  SW        S2, 50 (SP)
   1C:  SW        S1, 4C (SP)
   20:  SW        S0, 48 (SP)
   24:  LW        S1, 148 (S3)
   28:  LH        A0, 8 (S1)
   2C:  JAL       8003AAEC
   30:  DADDU     S0, A1, R0
   34:  LW        V1, C (S3)
   38:  DADDU     A0, S3, R0
   3C:  LW        A1, 0 (V1)
   40:  JAL       {Func:GetVariable}
   44:  DADDU     S2, V0, R0
   48:  SW        R0, 18 (SP)
   4C:  LW        V1, D0 (S1)
   50:  LW        V1, 30 (V1)
   54:  SW        V1, 1C (SP)
   58:  LW        V1, D0 (S1)
   5C:  LW        V1, 1C (V1)
   60:  SW        V1, 20 (SP)
   64:  LW        V1, D0 (S1)
   68:  LW        V1, 24 (V1)
   6C:  SW        V1, 24 (SP)
   70:  LW        V1, D0 (S1)
   74:  LW        V1, 28 (V1)
   78:  ADDIU     S5, SP, 18
   7C:  SW        V1, 28 (SP)
   80:  LW        V1, D0 (S1)
   84:  LIF       F0, 65.0
   8C:  LW        V1, 2C (V1)
   90:  DADDU     S4, V0, R0
   94:  SWC1      F0, 30 (SP)
   98:  SH        R0, 34 (SP)
   9C:  BNE       S0, R0, .oB4
   A0:  SW        V1, 2C (SP)
   A4:  LW        V0, B0 (S1)
   A8:  ANDI      V0, V0, 4
   AC:  BEQ       V0, R0, .o1C0
   B0:  NOP
        .oB4
   B4:  ADDIU     A0, R0, F7FF
   B8:  SW        R0, 70 (S3)
   BC:  SH        R0, 8E (S2)
   C0:  LW        V0, CC (S1)
   C4:  LW        V1, 0 (S2)
   C8:  LW        V0, 0 (V0)
   CC:  AND       V1, V1, A0
   D0:  SW        V1, 0 (S2)
   D4:  SW        V0, 28 (S2)
   D8:  LW        V0, D0 (S1)
   DC:  LW        V0, 34 (V0)
   E0:  BNEL      V0, R0, .oF8
   E4:  ADDIU     V0, R0, FDFF
   E8:  ORI       V0, V1, 200
   EC:  ADDIU     V1, R0, FFF7
   F0:  BEQ       R0, R0, .o100
   F4:  AND       V0, V0, V1
        .oF8
   F8:  AND       V0, V1, V0
   FC:  ORI       V0, V0, 8
        .o100
  100:  SW        V0, 0 (S2)
  104:  LW        V0, B0 (S1)
  108:  ANDI      V0, V0, 4
  10C:  BEQ       V0, R0, .o120
  110:  ADDIU     V0, R0, 63
  114:  SW        V0, 70 (S3)
  118:  BEQ       R0, R0, .o138
  11C:  SW        R0, 74 (S3)
        .o120
  120:  LW        V0, 0 (S1)
  124:  LUI       V1, 4000
  128:  AND       V0, V0, V1
  12C:  BEQ       V0, R0, .o138
  130:  ADDIU     V0, R0, C
  134:  SW        V0, 70 (S3)
        .o138
  138:  LIO       A2, BFFFFFFF
  140:  ADDIU     A1, SP, 38
  144:  ADDIU     A0, R0, FFFB
  148:  LW        V0, B0 (S1)
  14C:  LW        V1, 0 (S1)
  150:  LIF       F0, 100.0
  158:  AND       V0, V0, A0
  15C:  AND       V1, V1, A2
  160:  SW        V0, B0 (S1)
  164:  SW        V1, 0 (S1)
  168:  LH        V0, A8 (S2)
  16C:  ADDIU     A3, SP, 40
  170:  SWC1      F0, 44 (SP)
  174:  LWC1      F6, 38 (S2)
  178:  LWC1      F0, 3C (S2)
  17C:  LWC1      F2, 40 (S2)
  180:  MTC1      V0, F4
  184:  NOP
  188:  CVT.S.W   F4, F4
  18C:  ADDIU     V0, SP, 44
  190:  ADD.S     F0, F0, F4
  194:  SWC1      F6, 38 (SP)
  198:  SWC1      F2, 40 (SP)
  19C:  SWC1      F0, 3C (SP)
  1A0:  SW        V0, 10 (SP)
  1A4:  LW        A0, 80 (S2)
  1A8:  JAL       800DCB7C
  1AC:  ADDIU     A2, SP, 3C
  1B0:  BEQ       V0, R0, .o1C0
  1B4:  NOP
  1B8:  LWC1      F0, 3C (SP)
  1BC:  SWC1      F0, 3C (S2)
        .o1C0
  1C0:  LW        V1, 70 (S3)
  1C4:  SLTIU     V0, V1, 64
  1C8:  BEQ       V0, R0, .o30C
  1CC:  SLL       V0, V1, 2
  1D0:  LTW       V0, V0 ($JumpTable_80248770)
  1DC:  JR        V0
  1E0:  NOP
% LBL: from $JumpTable_80248770 , entry 0`
  1E4:  DADDU     A0, S3, R0
  1E8:  DADDU     A1, S4, R0
  1EC:  JAL       800495A0
  1F0:  DADDU     A2, S5, R0
% LBL: from $JumpTable_80248770 , entry 1`
  1F4:  DADDU     A0, S3, R0
  1F8:  DADDU     A1, S4, R0
  1FC:  JAL       800496B8
  200:  DADDU     A2, S5, R0
  204:  BEQ       R0, R0, .o30C
  208:  NOP
% LBL: from $JumpTable_80248770 , entry 2`
  20C:  DADDU     A0, S3, R0
  210:  DADDU     A1, S4, R0
  214:  JAL       80049B44
  218:  DADDU     A2, S5, R0
% LBL: from $JumpTable_80248770 , entry 3`
  21C:  DADDU     A0, S3, R0
  220:  DADDU     A1, S4, R0
  224:  JAL       80049C04
  228:  DADDU     A2, S5, R0
  22C:  BEQ       R0, R0, .o30C
  230:  NOP
% LBL: from $JumpTable_80248770 , entry 10`
  234:  DADDU     A0, S3, R0
  238:  DADDU     A1, S4, R0
  23C:  JAL       80049E3C
  240:  DADDU     A2, S5, R0
% LBL: from $JumpTable_80248770 , entry 11`
  244:  DADDU     A0, S3, R0
  248:  DADDU     A1, S4, R0
  24C:  JAL       80049ECC
  250:  DADDU     A2, S5, R0
  254:  BEQ       R0, R0, .o30C
  258:  NOP
% LBL: from $JumpTable_80248770 , entry 12`
  25C:  DADDU     A0, S3, R0
  260:  DADDU     A1, S4, R0
  264:  JAL       80049F7C
  268:  DADDU     A2, S5, R0
% LBL: from $JumpTable_80248770 , entry 13`
  26C:  DADDU     A0, S3, R0
  270:  DADDU     A1, S4, R0
  274:  JAL       8004A124
  278:  DADDU     A2, S5, R0
  27C:  LW        V1, 70 (S3)
  280:  ADDIU     V0, R0, E
  284:  BNE       V1, V0, .o30C
  288:  NOP
% LBL: from $JumpTable_80248770 , entry 14`
  28C:  DADDU     A0, S3, R0
  290:  DADDU     A1, S4, R0
  294:  JAL       $Function_80240870
  298:  DADDU     A2, S5, R0
  29C:  LW        V1, 70 (S3)
  2A0:  ADDIU     V0, R0, F
  2A4:  BNE       V1, V0, .o30C
  2A8:  NOP
% LBL: from $JumpTable_80248770 , entry 15`
  2AC:  DADDU     A0, S3, R0
  2B0:  DADDU     A1, S4, R0
  2B4:  JAL       $Function_802408E0
  2B8:  DADDU     A2, S5, R0
  2BC:  LW        V1, 70 (S3)
  2C0:  ADDIU     V0, R0, 10
  2C4:  BNE       V1, V0, .o30C
  2C8:  NOP
% LBL: from $JumpTable_80248770 , entry 16`
  2CC:  DADDU     A0, S3, R0
  2D0:  DADDU     A1, S4, R0
  2D4:  JAL       $Function_802409B0
  2D8:  DADDU     A2, S5, R0
  2DC:  LW        V1, 70 (S3)
  2E0:  ADDIU     V0, R0, 11
  2E4:  BNE       V1, V0, .o30C
  2E8:  NOP
% LBL: from $JumpTable_80248770 , entry 17`
  2EC:  DADDU     A0, S3, R0
  2F0:  DADDU     A1, S4, R0
  2F4:  JAL       $Function_80240A48
  2F8:  DADDU     A2, S5, R0
  2FC:  BEQ       R0, R0, .o30C
  300:  NOP
% LBL: from $JumpTable_80248770 , entry 99`
  304:  JAL       8004A73C
  308:  DADDU     A0, S3, R0
% LBL: from $JumpTable_80248770 , entry 98`
        .o30C
  30C:  LW        RA, 60 (SP)
  310:  LW        S5, 5C (SP)
  314:  LW        S4, 58 (SP)
  318:  LW        S3, 54 (SP)
  31C:  LW        S2, 50 (SP)
  320:  LW        S1, 4C (SP)
  324:  LW        S0, 48 (SP)
  328:  DADDU     V0, R0, R0
  32C:  JR        RA
  330:  ADDIU     SP, SP, 68

PADDING: 80240DDC to 80240DE0 (00000DDC to 00000DE0)
00000000 

#new:EntryList $EntryList
{Vec4f:Entry0} %  333.0    0.0  333.0  315.0
{Vec4f:Entry1} % -335.0   10.0 -335.0  135.0
{Vec4f:Entry2} %  340.0   10.0 -340.0  225.0

#new:Header $Header
00000000 00000000 00000000 00000000 
$Script_Main $EntryList 00000003 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 80200000 001900E0 

#new:Script $Script_80240E50
    0:  Call     GetLoadType 	( *Var[1] )
   10:  If  *Var[1]  ==  00000001 
   20:  	Call     SetMusicTrack 	( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
   3C:  Else
   44:  	Call     GetEntryID  	( *Var[0] )
   54:  	If  *Var[0]  ==  00000000 
   64:  		Call     SetMusicTrack 	( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
   80:  	Else
   88:  		Call     SetMusicTrack 	( 00000000 .Song:ToyboxTrain 00000000 00000008 )
   A4:  	EndIf
   AC:  EndIf
   B4:  Return
   BC:  End

PADDING: 80240F14 to 80240F20 (00000F14 to 00000F20)
00000000 00000000 00000000 

#new:Script $Script_80240F20
    0:  SetGroup 0000001B 
    C:  Call     UseExitHeading ( 0000003C 00000000 )
   20:  Exec     ExitWalk 
   2C:  Call     GotoMap     	( $ASCII_80248730 00000000 )
   40:  Wait     00000064 
   4C:  Return
   54:  End

#new:Script $Script_80240F7C
    0:  Bind     $Script_80240F20 .Trigger:FloorAbove {Collider:deili3} 00000001 00000000 
   1C:  Return
   24:  End

#new:Script $Script_80240FA8
    0:  Call     GetLoadType 	( *Var[1] )
   10:  If  *Var[1]  ==  00000001 
   20:  	Exec     EnterSavePoint 
   2C:  	Exec     $Script_80240F7C 
   38:  	Return
   40:  EndIf
   48:  Call     GetEntryID  	( *Var[0] )
   58:  If  *Var[0]  ==  00000000 
   68:  	Set  *Var[0]  $Script_80240F7C 
   78:  	Exec     EnterWalk 
   84:  	Wait     00000001 
   90:  Else
   98:  	Exec     $Script_80240F7C 
   A4:  	Wait     00000003 
   B0:  EndIf
   B8:  Return
   C0:  End

#new:Script_Main $Script_Main
    0:  Set  *WorldMapLocation  00000010 
   10:  Call     SetSpriteShading 	( FFFFFFFF )
   20:  Call     SetCamPerspective 	( .Default 00000003 00000019 00000010 00001000 )
   40:  Call     SetCamBGColor 	( .Default 00000000 00000000 00000000 )
   5C:  Call     SetCamFlag4 	( .Default .False )
   70:  Call     SetCamFlag2 	( .Default .True )
   84:  Call     MakeNpcs    	( 00000001 $NpcGroupList_802486DC )
   98:  ExecWait $Script_80247590 
   A4:  ExecWait $Script_80240E50 
   B0:  ExecWait $Script_80247450 
   BC:  ExecWait $Script_80243A68 
   C8:  Exec     $Script_80240FA8 
   D4:  Wait     00000001 
   E0:  Return
   E8:  End

#new:Unknown $???_80241160
00000000 0000005D 0000005A 0000005C 00000059 

#new:Unknown $???_80241174
00000001 00000064 00000061 00000063 00000060 

#new:Unknown $???_80241188
00000002 0000006B 00000068 0000006A 00000067 

#new:Unknown $???_8024119C
00000003 00000072 0000006F 00000071 0000006E 

#new:Script $Script_802411B0
    0:  Call     EnableModel 	( {Model:bm1_1} .True )
   14:  Call     EnableModel 	( {Model:b1_1} .True )
   28:  Call     EnableModel 	( {Model:bm1_2} .False )
   3C:  Call     EnableModel 	( {Model:b1_2} .False )
   50:  Return
   58:  End

#new:Script $Script_80241210
    0:  Call     EnableModel 	( {Model:bm2_1} .True )
   14:  Call     EnableModel 	( {Model:b2_1} .True )
   28:  Call     EnableModel 	( {Model:bm2_2} .False )
   3C:  Call     EnableModel 	( {Model:b2_2} .False )
   50:  Return
   58:  End

#new:Script $Script_80241270
    0:  Call     EnableModel 	( {Model:bm3_1} .True )
   14:  Call     EnableModel 	( {Model:b3_1} .True )
   28:  Call     EnableModel 	( {Model:bm3_2} .False )
   3C:  Call     EnableModel 	( {Model:b3_2} .False )
   50:  Return
   58:  End

#new:Script $Script_802412D0
    0:  Call     EnableModel 	( {Model:bm4_1} .True )
   14:  Call     EnableModel 	( {Model:b4_1} .True )
   28:  Call     EnableModel 	( {Model:bm4_2} .False )
   3C:  Call     EnableModel 	( {Model:b4_2} .False )
   50:  Return
   58:  End

#new:Script $Script_80241330
    0:  Call     EnableModel 	( {Model:bm1_1} .False )
   14:  Call     EnableModel 	( {Model:b1_1} .False )
   28:  Call     EnableModel 	( {Model:bm1_2} .True )
   3C:  Call     EnableModel 	( {Model:b1_2} .True )
   50:  Return
   58:  End

#new:Script $Script_80241390
    0:  Call     EnableModel 	( {Model:bm2_1} .False )
   14:  Call     EnableModel 	( {Model:b2_1} .False )
   28:  Call     EnableModel 	( {Model:bm2_2} .True )
   3C:  Call     EnableModel 	( {Model:b2_2} .True )
   50:  Return
   58:  End

#new:Script $Script_802413F0
    0:  Call     EnableModel 	( {Model:bm3_1} .False )
   14:  Call     EnableModel 	( {Model:b3_1} .False )
   28:  Call     EnableModel 	( {Model:bm3_2} .True )
   3C:  Call     EnableModel 	( {Model:b3_2} .True )
   50:  Return
   58:  End

#new:Script $Script_80241450
    0:  Call     EnableModel 	( {Model:bm4_1} .False )
   14:  Call     EnableModel 	( {Model:b4_1} .False )
   28:  Call     EnableModel 	( {Model:bm4_2} .True )
   3C:  Call     EnableModel 	( {Model:b4_2} .True )
   50:  Return
   58:  End

#new:Script $Script_802414B0
    0:  Label    00000000 
    C:  Call     GetNpcPos   	( 00000002 *Var[0] *Var[1] *Var[2] )
   28:  Call     GetNpcPos   	( 00000003 *Var[0] *Var[2] *Var[3] )
   44:  Call     GetNpcPos   	( 00000004 *Var[0] *Var[3] *Var[4] )
   60:  Call     GetNpcPos   	( 00000005 *Var[0] *Var[4] *Var[5] )
   7C:  Add  *Var[1]  *Var[2] 
   8C:  Add  *Var[1]  *Var[3] 
   9C:  Add  *Var[1]  *Var[4] 
   AC:  If  *Var[1]  !=  FFFFF060 
   BC:  	Wait     00000001 
   C8:  	Goto     00000000 
   D4:  EndIf
   DC:  Thread
   E4:  	Exec     $Script_802411B0 
   F0:  	Call     MakeLerp    	( 0000005A 00000000 0000000A 0000000A )
  10C:  	Loop     
  118:  		Call     UpdateLerp  	( )
  124:  		Call     RotateModel 	( {Model:bm1_2} *Var[0] FFFFFFFF 00000000 00000000 )
  144:  		Call     RotateModel 	( {Model:bm1_1} *Var[0] FFFFFFFF 00000000 00000000 )
  164:  		Wait     00000001 
  170:  		If  *Var[1]  ==  00000000 
  180:  			BreakLoop
  188:  		EndIf
  190:  	EndLoop
  198:  EndThread
  1A0:  Wait     00000002 
  1AC:  Thread
  1B4:  	Exec     $Script_80241210 
  1C0:  	Call     MakeLerp    	( 0000005A 00000000 0000000A 0000000A )
  1DC:  	Loop     
  1E8:  		Call     UpdateLerp  	( )
  1F4:  		Call     RotateModel 	( {Model:bm2_2} *Var[0] FFFFFFFF 00000000 00000000 )
  214:  		Call     RotateModel 	( {Model:bm2_1} *Var[0] FFFFFFFF 00000000 00000000 )
  234:  		Wait     00000001 
  240:  		If  *Var[1]  ==  00000000 
  250:  			BreakLoop
  258:  		EndIf
  260:  	EndLoop
  268:  EndThread
  270:  Wait     00000003 
  27C:  Thread
  284:  	Exec     $Script_80241270 
  290:  	Call     MakeLerp    	( 0000005A 00000000 0000000A 0000000A )
  2AC:  	Loop     
  2B8:  		Call     UpdateLerp  	( )
  2C4:  		Call     RotateModel 	( {Model:bm3_2} *Var[0] FFFFFFFF 00000000 00000000 )
  2E4:  		Call     RotateModel 	( {Model:bm3_1} *Var[0] FFFFFFFF 00000000 00000000 )
  304:  		Wait     00000001 
  310:  		If  *Var[1]  ==  00000000 
  320:  			BreakLoop
  328:  		EndIf
  330:  	EndLoop
  338:  EndThread
  340:  Wait     00000003 
  34C:  Exec     $Script_802412D0 
  358:  Call     MakeLerp    	( 0000005A 00000000 0000000A 0000000A )
  374:  Loop     
  380:  	Call     UpdateLerp  	( )
  38C:  	Call     RotateModel 	( {Model:bm4_2} *Var[0] FFFFFFFF 00000000 00000000 )
  3AC:  	Call     RotateModel 	( {Model:bm4_1} *Var[0] FFFFFFFF 00000000 00000000 )
  3CC:  	Wait     00000001 
  3D8:  	If  *Var[1]  ==  00000000 
  3E8:  		BreakLoop
  3F0:  	EndIf
  3F8:  EndLoop
  400:  Set  *MapVar[F]  00000000 
  410:  Set  *MapVar[E]  00000000 
  420:  Call     EnableModel 	( {Model:bm1_2} .False )
  434:  Call     EnableModel 	( {Model:b1_2} .False )
  448:  Set  *Var[0]  $???_80241160 
  458:  Bind     $Script_80243648 .Trigger:WallHammer {Collider:o907} 00000001 00000000 
  474:  Call     EnableModel 	( {Model:bm2_2} .False )
  488:  Call     EnableModel 	( {Model:b2_2} .False )
  49C:  Set  *Var[0]  $???_80241174 
  4AC:  Bind     $Script_80243648 .Trigger:WallHammer {Collider:o911} 00000001 00000000 
  4C8:  Call     EnableModel 	( {Model:bm3_2} .False )
  4DC:  Call     EnableModel 	( {Model:b3_2} .False )
  4F0:  Set  *Var[0]  $???_80241188 
  500:  Bind     $Script_80243648 .Trigger:WallHammer {Collider:o915} 00000001 00000000 
  51C:  Call     EnableModel 	( {Model:bm4_2} .False )
  530:  Call     EnableModel 	( {Model:b4_2} .False )
  544:  Set  *Var[0]  $???_8024119C 
  554:  Bind     $Script_80243648 .Trigger:WallHammer {Collider:o918} 00000001 00000000 
  570:  Return
  578:  End

#new:Script $Script_80241A30
    0:  Set  *Var[0]  00000004 
   10:  Loop     00000003 
   1C:  	Exec     $Script_802411B0 
   28:  	Wait     *Var[0] 
   34:  	Exec     $Script_80241210 
   40:  	Wait     *Var[0] 
   4C:  	Exec     $Script_80241270 
   58:  	Wait     *Var[0] 
   64:  	Exec     $Script_802412D0 
   70:  	Wait     *Var[0] 
   7C:  	Call     PlaySoundAtCollider 	( {Collider:o907} 000001A6 00000000 )
   94:  	Exec     $Script_80241330 
   A0:  	Wait     *Var[0] 
   AC:  	Call     PlaySoundAtCollider 	( {Collider:o911} 000001A5 00000000 )
   C4:  	Exec     $Script_80241390 
   D0:  	Wait     *Var[0] 
   DC:  	Call     PlaySoundAtCollider 	( {Collider:o915} 000001A7 00000000 )
   F4:  	Exec     $Script_802413F0 
  100:  	Wait     *Var[0] 
  10C:  	Call     PlaySoundAtCollider 	( {Collider:o918} 000001A8 00000000 )
  124:  	Exec     $Script_80241450 
  130:  	Wait     *Var[0] 
  13C:  	Sub  *Var[0]  00000001 
  14C:  EndLoop
  154:  Wait     00000004 
  160:  Set  *Var[0]  00000004 
  170:  Loop     00000003 
  17C:  	Exec     $Script_802411B0 
  188:  	Exec     $Script_80241210 
  194:  	Exec     $Script_80241270 
  1A0:  	Exec     $Script_802412D0 
  1AC:  	Wait     *Var[0] 
  1B8:  	Call     PlaySound   	( 000001A9 )
  1C8:  	Exec     $Script_80241330 
  1D4:  	Exec     $Script_80241390 
  1E0:  	Exec     $Script_802413F0 
  1EC:  	Exec     $Script_80241450 
  1F8:  	Wait     *Var[0] 
  204:  	Sub  *Var[0]  00000001 
  214:  EndLoop
  21C:  Wait     00000002 
  228:  Thread
  230:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  24C:  	Loop     
  258:  		Call     UpdateLerp  	( )
  264:  		Call     RotateModel 	( {Model:bm1_2} *Var[0] FFFFFFFF 00000000 00000000 )
  284:  		Call     RotateModel 	( {Model:bm1_1} *Var[0] FFFFFFFF 00000000 00000000 )
  2A4:  		Wait     00000001 
  2B0:  		If  *Var[1]  ==  00000000 
  2C0:  			BreakLoop
  2C8:  		EndIf
  2D0:  	EndLoop
  2D8:  	Call     GetModelCenter ( {Model:b1_1} )
  2E8:  	Call     MakeItemEntity ( .Item:Coin *Var[0] 00000028 *Var[2] 00000004 00000000 )
  30C:  EndThread
  314:  Wait     00000003 
  320:  Thread
  328:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  344:  	Loop     
  350:  		Call     UpdateLerp  	( )
  35C:  		Call     RotateModel 	( {Model:bm2_2} *Var[0] FFFFFFFF 00000000 00000000 )
  37C:  		Call     RotateModel 	( {Model:bm2_1} *Var[0] FFFFFFFF 00000000 00000000 )
  39C:  		Wait     00000001 
  3A8:  		If  *Var[1]  ==  00000000 
  3B8:  			BreakLoop
  3C0:  		EndIf
  3C8:  	EndLoop
  3D0:  	Call     GetModelCenter ( {Model:b2_1} )
  3E0:  	Call     MakeItemEntity ( .Item:Coin *Var[0] 00000028 *Var[2] 00000004 00000000 )
  404:  EndThread
  40C:  Wait     00000003 
  418:  Thread
  420:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  43C:  	Loop     
  448:  		Call     UpdateLerp  	( )
  454:  		Call     RotateModel 	( {Model:bm3_2} *Var[0] FFFFFFFF 00000000 00000000 )
  474:  		Call     RotateModel 	( {Model:bm3_1} *Var[0] FFFFFFFF 00000000 00000000 )
  494:  		Wait     00000001 
  4A0:  		If  *Var[1]  ==  00000000 
  4B0:  			BreakLoop
  4B8:  		EndIf
  4C0:  	EndLoop
  4C8:  	Call     GetModelCenter ( {Model:b3_1} )
  4D8:  	Call     MakeItemEntity ( .Item:Coin *Var[0] 00000028 *Var[2] 00000004 00000000 )
  4FC:  EndThread
  504:  Wait     00000003 
  510:  Thread
  518:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  534:  	Loop     
  540:  		Call     UpdateLerp  	( )
  54C:  		Call     RotateModel 	( {Model:bm4_2} *Var[0] FFFFFFFF 00000000 00000000 )
  56C:  		Call     RotateModel 	( {Model:bm4_1} *Var[0] FFFFFFFF 00000000 00000000 )
  58C:  		Wait     00000001 
  598:  		If  *Var[1]  ==  00000000 
  5A8:  			BreakLoop
  5B0:  		EndIf
  5B8:  	EndLoop
  5C0:  	Call     GetModelCenter ( {Model:b4_1} )
  5D0:  	Call     MakeItemEntity ( .Item:Coin *Var[0] 00000028 *Var[2] 00000004 00000000 )
  5F4:  	Wait     00000014 
  600:  	Call     ResetCam    	( .Default 00000002 )
  614:  EndThread
  61C:  Return
  624:  End

#new:Script $Script_8024205C
    0:  Call     DisablePlayerInput 	( .True )
   10:  Loop     00000004 
   1C:  	Exec     $Script_802411B0 
   28:  	Wait     00000003 
   34:  	Exec     $Script_80241210 
   40:  	Wait     00000003 
   4C:  	Exec     $Script_80241270 
   58:  	Wait     00000003 
   64:  	Exec     $Script_802412D0 
   70:  	Wait     00000003 
   7C:  	Call     PlaySoundAtCollider 	( {Collider:o907} 000001A6 00000000 )
   94:  	Exec     $Script_80241330 
   A0:  	Wait     00000003 
   AC:  	Call     PlaySoundAtCollider 	( {Collider:o911} 000001A5 00000000 )
   C4:  	Exec     $Script_80241390 
   D0:  	Wait     00000003 
   DC:  	Call     PlaySoundAtCollider 	( {Collider:o915} 000001A7 00000000 )
   F4:  	Exec     $Script_802413F0 
  100:  	Wait     00000003 
  10C:  	Call     PlaySoundAtCollider 	( {Collider:o918} 000001A8 00000000 )
  124:  	Exec     $Script_80241450 
  130:  	Wait     00000003 
  13C:  EndLoop
  144:  Call     UseSettingsFrom 	( .Default 000000A0 0000000A FFFFFF38 )
  160:  Call     SetPanTarget 	( .Default 000000A0 0000000A FFFFFF38 )
  17C:  Call     SetCamDistance ( .Default 000002BC )
  190:  Call     SetCamAngles 	( .Default 00000028 *Fixed[-4.5] )
  1A8:  Call     SetCamSpeed 	( .Default *Fixed[2.0] )
  1BC:  Call     PanToTarget 	( .Default 00000000 00000001 )
  1D4:  Wait     0000001E 
  1E0:  Thread
  1E8:  	Call     MakeLerp    	( 00000000 0000005A 00000028 00000002 )
  204:  	Loop     
  210:  		Call     UpdateLerp  	( )
  21C:  		Call     RotateGroup 	( {Model:t1} *Var[0] 00000001 00000000 00000000 )
  23C:  		Wait     00000001 
  248:  		If  *Var[1]  ==  00000000 
  258:  			BreakLoop
  260:  		EndIf
  268:  	EndLoop
  270:  	Call     GetModelCenter ( {Model:o875} )
  280:  	Call     PlaySoundAt 	( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
  2A0:  	Call     PlayEffect  	( {FX:Steam:LargeOutward} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call     ShakeCam    	( .Default 00000000 00000003 *Fixed[0.80078125] )
  300:  EndThread
  308:  Wait     0000000A 
  314:  Thread
  31C:  	Call     MakeLerp    	( 00000000 0000005A 00000028 00000002 )
  338:  	Loop     
  344:  		Call     UpdateLerp  	( )
  350:  		Call     RotateGroup 	( {Model:t2} *Var[0] 00000001 00000000 00000000 )
  370:  		Wait     00000001 
  37C:  		If  *Var[1]  ==  00000000 
  38C:  			BreakLoop
  394:  		EndIf
  39C:  	EndLoop
  3A4:  	Call     GetModelCenter ( {Model:o877} )
  3B4:  	Call     PlaySoundAt 	( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
  3D4:  	Call     PlayEffect  	( {FX:Steam:LargeOutward} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Call     ShakeCam    	( .Default 00000000 00000003 *Fixed[0.80078125] )
  434:  EndThread
  43C:  Wait     0000000A 
  448:  Thread
  450:  	Call     MakeLerp    	( 00000000 0000005A 00000028 00000002 )
  46C:  	Loop     
  478:  		Call     UpdateLerp  	( )
  484:  		Call     RotateGroup 	( {Model:t3} *Var[0] 00000001 00000000 00000000 )
  4A4:  		Wait     00000001 
  4B0:  		If  *Var[1]  ==  00000000 
  4C0:  			BreakLoop
  4C8:  		EndIf
  4D0:  	EndLoop
  4D8:  	Call     GetModelCenter ( {Model:o879} )
  4E8:  	Call     PlaySoundAt 	( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
  508:  	Call     PlayEffect  	( {FX:Steam:LargeOutward} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  54C:  	Call     ShakeCam    	( .Default 00000000 00000003 *Fixed[0.80078125] )
  568:  EndThread
  570:  Wait     0000000A 
  57C:  Thread
  584:  	Call     MakeLerp    	( 00000000 0000005A 00000028 00000002 )
  5A0:  	Loop     
  5AC:  		Call     UpdateLerp  	( )
  5B8:  		Call     RotateGroup 	( {Model:t4} *Var[0] 00000001 00000000 00000000 )
  5D8:  		Wait     00000001 
  5E4:  		If  *Var[1]  ==  00000000 
  5F4:  			BreakLoop
  5FC:  		EndIf
  604:  	EndLoop
  60C:  	Call     GetModelCenter ( {Model:o881} )
  61C:  	Call     PlaySoundAt 	( 000001F3 00000000 *Var[0] *Var[1] *Var[2] )
  63C:  	Call     PlayEffect  	( {FX:Steam:LargeOutward} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  680:  	Call     ShakeCam    	( .Default 00000000 00000003 *Fixed[0.80078125] )
  69C:  EndThread
  6A4:  Wait     00000064 
  6B0:  Call     UseSettingsFrom 	( .Default 00000064 00000000 00000172 )
  6CC:  Call     SetPanTarget 	( .Default 00000064 00000000 00000172 )
  6E8:  Call     SetCamDistance ( .Default FFFFFE3E )
  6FC:  Call     SetCamAngles 	( .Default 00000010 *Fixed[-6.0] )
  714:  Call     SetCamSpeed 	( .Default *Fixed[90.0] )
  728:  Call     PanToTarget 	( .Default 00000000 00000001 )
  740:  Wait     0000000A 
  74C:  Thread
  754:  	Call     GetModelCenter ( {Model:b1_1} )
  764:  	Call     802C9308 ( 0000005F 00000000 )
  778:  	Call     PlaySoundAtCollider 	( {Collider:o907} 00002098 00000000 )
  790:  	Loop     00000004 
  79C:  		Set  *Var[3]  00000014 
  7AC:  		Call     RandInt     	( 00000028 *Var[6] )
  7C0:  		Sub  *Var[3]  *Var[6] 
  7D0:  		Add  *Var[3]  *Var[0] 
  7E0:  		Set  *Var[4]  00000014 
  7F0:  		Call     RandInt     	( 00000028 *Var[7] )
  804:  		Sub  *Var[4]  *Var[7] 
  814:  		Add  *Var[4]  *Var[1] 
  824:  		Set  *Var[5]  00000014 
  834:  		Call     RandInt     	( 00000028 *Var[8] )
  848:  		Sub  *Var[5]  *Var[8] 
  858:  		Add  *Var[5]  *Var[2] 
  868:  		Call     PlayEffect  	( {FX:Explosion1} *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8AC:  		Wait     00000002 
  8B8:  	EndLoop
  8C0:  EndThread
  8C8:  Wait     0000001E 
  8D4:  Thread
  8DC:  	Call     GetModelCenter ( {Model:b2_1} )
  8EC:  	Call     802C9308 ( 00000066 00000000 )
  900:  	Call     PlaySoundAtCollider 	( {Collider:o911} 00002098 00000000 )
  918:  	Loop     00000004 
  924:  		Set  *Var[3]  00000014 
  934:  		Call     RandInt     	( 00000028 *Var[6] )
  948:  		Sub  *Var[3]  *Var[6] 
  958:  		Add  *Var[3]  *Var[0] 
  968:  		Set  *Var[4]  00000014 
  978:  		Call     RandInt     	( 00000028 *Var[7] )
  98C:  		Sub  *Var[4]  *Var[7] 
  99C:  		Add  *Var[4]  *Var[1] 
  9AC:  		Set  *Var[5]  00000014 
  9BC:  		Call     RandInt     	( 00000028 *Var[8] )
  9D0:  		Sub  *Var[5]  *Var[8] 
  9E0:  		Add  *Var[5]  *Var[2] 
  9F0:  		Call     PlayEffect  	( {FX:Explosion1} *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A34:  		Wait     00000002 
  A40:  	EndLoop
  A48:  EndThread
  A50:  Wait     0000001E 
  A5C:  Thread
  A64:  	Call     GetModelCenter ( {Model:b3_1} )
  A74:  	Call     802C9308 ( 0000006D 00000000 )
  A88:  	Call     PlaySoundAtCollider 	( {Collider:o915} 00002098 00000000 )
  AA0:  	Loop     00000004 
  AAC:  		Set  *Var[3]  00000014 
  ABC:  		Call     RandInt     	( 00000028 *Var[6] )
  AD0:  		Sub  *Var[3]  *Var[6] 
  AE0:  		Add  *Var[3]  *Var[0] 
  AF0:  		Set  *Var[4]  00000014 
  B00:  		Call     RandInt     	( 00000028 *Var[7] )
  B14:  		Sub  *Var[4]  *Var[7] 
  B24:  		Add  *Var[4]  *Var[1] 
  B34:  		Set  *Var[5]  00000014 
  B44:  		Call     RandInt     	( 00000028 *Var[8] )
  B58:  		Sub  *Var[5]  *Var[8] 
  B68:  		Add  *Var[5]  *Var[2] 
  B78:  		Call     PlayEffect  	( {FX:Explosion1} *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BBC:  		Wait     00000002 
  BC8:  	EndLoop
  BD0:  EndThread
  BD8:  Wait     0000001E 
  BE4:  Thread
  BEC:  	Call     GetModelCenter ( {Model:b4_1} )
  BFC:  	Call     802C9308 ( 00000074 00000000 )
  C10:  	Call     PlaySoundAtCollider 	( {Collider:o918} 00002098 00000000 )
  C28:  	Loop     00000004 
  C34:  		Set  *Var[3]  00000014 
  C44:  		Call     RandInt     	( 00000028 *Var[6] )
  C58:  		Sub  *Var[3]  *Var[6] 
  C68:  		Add  *Var[3]  *Var[0] 
  C78:  		Set  *Var[4]  00000014 
  C88:  		Call     RandInt     	( 00000028 *Var[7] )
  C9C:  		Sub  *Var[4]  *Var[7] 
  CAC:  		Add  *Var[4]  *Var[1] 
  CBC:  		Set  *Var[5]  00000014 
  CCC:  		Call     RandInt     	( 00000028 *Var[8] )
  CE0:  		Sub  *Var[5]  *Var[8] 
  CF0:  		Add  *Var[5]  *Var[2] 
  D00:  		Call     PlayEffect  	( {FX:Explosion1} *Var[3] *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  D44:  		Wait     00000002 
  D50:  	EndLoop
  D58:  EndThread
  D60:  Call     ModifyColliderFlags 	( 00000000 {Collider:o907} 7FFFFE00 )
  D78:  Call     ModifyColliderFlags 	( 00000000 {Collider:o911} 7FFFFE00 )
  D90:  Call     ModifyColliderFlags 	( 00000000 {Collider:o915} 7FFFFE00 )
  DA8:  Call     ModifyColliderFlags 	( 00000000 {Collider:o918} 7FFFFE00 )
  DC0:  Wait     00000014 
  DCC:  Call     ResetCam    	( .Default 00000002 )
  DE0:  Set  *StoryProgress  00000000 
  DF0:  Call     DisablePlayerInput 	( .False )
  E00:  Return
  E08:  End

#new:Script $Script_80242E6C
    0:  Set  *Var[0]  00000004 
   10:  Loop     00000003 
   1C:  	Exec     $Script_802411B0 
   28:  	Wait     *Var[0] 
   34:  	Exec     $Script_80241210 
   40:  	Wait     *Var[0] 
   4C:  	Exec     $Script_80241270 
   58:  	Wait     *Var[0] 
   64:  	Exec     $Script_802412D0 
   70:  	Wait     *Var[0] 
   7C:  	Call     PlaySoundAtCollider 	( {Collider:o907} 000001A6 00000000 )
   94:  	Exec     $Script_80241450 
   A0:  	Wait     *Var[0] 
   AC:  	Call     PlaySoundAtCollider 	( {Collider:o911} 000001A5 00000000 )
   C4:  	Exec     $Script_802413F0 
   D0:  	Wait     *Var[0] 
   DC:  	Call     PlaySoundAtCollider 	( {Collider:o915} 000001A7 00000000 )
   F4:  	Exec     $Script_80241390 
  100:  	Wait     *Var[0] 
  10C:  	Call     PlaySoundAtCollider 	( {Collider:o918} 000001A8 00000000 )
  124:  	Exec     $Script_80241330 
  130:  	Wait     *Var[0] 
  13C:  	Sub  *Var[0]  00000001 
  14C:  EndLoop
  154:  Wait     00000004 
  160:  Set  *Var[0]  00000004 
  170:  Loop     00000003 
  17C:  	Exec     $Script_802411B0 
  188:  	Exec     $Script_80241210 
  194:  	Exec     $Script_80241270 
  1A0:  	Exec     $Script_802412D0 
  1AC:  	Wait     *Var[0] 
  1B8:  	Call     PlaySound   	( 000001A9 )
  1C8:  	Exec     $Script_80241330 
  1D4:  	Exec     $Script_80241390 
  1E0:  	Exec     $Script_802413F0 
  1EC:  	Exec     $Script_80241450 
  1F8:  	Wait     *Var[0] 
  204:  	Sub  *Var[0]  00000001 
  214:  EndLoop
  21C:  Wait     00000002 
  228:  Thread
  230:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  24C:  	Loop     
  258:  		Call     UpdateLerp  	( )
  264:  		Call     RotateModel 	( {Model:bm1_2} *Var[0] FFFFFFFF 00000000 00000000 )
  284:  		Call     RotateModel 	( {Model:bm1_1} *Var[0] FFFFFFFF 00000000 00000000 )
  2A4:  		Wait     00000001 
  2B0:  		If  *Var[1]  ==  00000000 
  2C0:  			BreakLoop
  2C8:  		EndIf
  2D0:  	EndLoop
  2D8:  	Call     PlaySoundAtCollider 	( {Collider:o907} 0000032C 00000000 )
  2F0:  	Call     GetModelCenter ( {Model:b1_1} )
  300:  	Call     SetNpcPos   	( 00000002 *Var[0] *Var[1] *Var[2] )
  31C:  	Call     SetNpcJumpscale 	( 00000002 *Fixed[1.0] )
  330:  	Add  *Var[2]  0000003C 
  340:  	Call     NpcJump0    	( 00000002 *Var[0] 00000000 *Var[2] 00000014 )
  360:  	Call     SetNpcFlagBits ( 00000002 00000040 .False )
  378:  EndThread
  380:  Wait     00000003 
  38C:  Thread
  394:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  3B0:  	Loop     
  3BC:  		Call     UpdateLerp  	( )
  3C8:  		Call     RotateModel 	( {Model:bm2_2} *Var[0] FFFFFFFF 00000000 00000000 )
  3E8:  		Call     RotateModel 	( {Model:bm2_1} *Var[0] FFFFFFFF 00000000 00000000 )
  408:  		Wait     00000001 
  414:  		If  *Var[1]  ==  00000000 
  424:  			BreakLoop
  42C:  		EndIf
  434:  	EndLoop
  43C:  	Call     PlaySoundAtCollider 	( {Collider:o911} 0000032C 00000000 )
  454:  	Call     GetModelCenter ( {Model:b2_1} )
  464:  	Call     SetNpcPos   	( 00000003 *Var[0] *Var[1] *Var[2] )
  480:  	Call     SetNpcJumpscale 	( 00000003 *Fixed[1.0] )
  494:  	Add  *Var[2]  0000003C 
  4A4:  	Call     NpcJump0    	( 00000003 *Var[0] 00000000 *Var[2] 00000014 )
  4C4:  	Call     SetNpcFlagBits ( 00000003 00000040 .False )
  4DC:  EndThread
  4E4:  Wait     00000003 
  4F0:  Thread
  4F8:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  514:  	Loop     
  520:  		Call     UpdateLerp  	( )
  52C:  		Call     RotateModel 	( {Model:bm3_2} *Var[0] FFFFFFFF 00000000 00000000 )
  54C:  		Call     RotateModel 	( {Model:bm3_1} *Var[0] FFFFFFFF 00000000 00000000 )
  56C:  		Wait     00000001 
  578:  		If  *Var[1]  ==  00000000 
  588:  			BreakLoop
  590:  		EndIf
  598:  	EndLoop
  5A0:  	Call     PlaySoundAtCollider 	( {Collider:o915} 0000032C 00000000 )
  5B8:  	Call     GetModelCenter ( {Model:b3_1} )
  5C8:  	Call     SetNpcPos   	( 00000004 *Var[0] *Var[1] *Var[2] )
  5E4:  	Call     SetNpcJumpscale 	( 00000004 *Fixed[1.0] )
  5F8:  	Add  *Var[2]  0000003C 
  608:  	Call     NpcJump0    	( 00000004 *Var[0] 00000000 *Var[2] 00000014 )
  628:  	Call     SetNpcFlagBits ( 00000004 00000040 .False )
  640:  EndThread
  648:  Wait     00000003 
  654:  Thread
  65C:  	Call     MakeLerp    	( 00000000 0000005A 0000000A 0000000A )
  678:  	Loop     
  684:  		Call     UpdateLerp  	( )
  690:  		Call     RotateModel 	( {Model:bm4_2} *Var[0] FFFFFFFF 00000000 00000000 )
  6B0:  		Call     RotateModel 	( {Model:bm4_1} *Var[0] FFFFFFFF 00000000 00000000 )
  6D0:  		Wait     00000001 
  6DC:  		If  *Var[1]  ==  00000000 
  6EC:  			BreakLoop
  6F4:  		EndIf
  6FC:  	EndLoop
  704:  	Call     PlaySoundAtCollider 	( {Collider:o918} 0000032C 00000000 )
  71C:  	Call     GetModelCenter ( {Model:b4_1} )
  72C:  	Call     SetNpcPos   	( 00000005 *Var[0] *Var[1] *Var[2] )
  748:  	Call     SetNpcJumpscale 	( 00000005 *Fixed[1.0] )
  75C:  	Add  *Var[2]  0000003C 
  76C:  	Call     NpcJump0    	( 00000005 *Var[0] 00000000 *Var[2] 00000014 )
  78C:  	Call     SetNpcFlagBits ( 00000005 00000040 .False )
  7A4:  	Call     ResetCam    	( .Default 00000001 )
  7B8:  	Exec     $Script_802414B0 
  7C4:  EndThread
  7CC:  Return
  7D4:  End

#new:Script $Script_80243648
    0:  Switch  *Var[0] 
    C:  	Case  ==  $???_80241160 
   18:  		Call     PlaySoundAtCollider 	( {Collider:o907} 000001A2 00000000 )
   30:  	Case  ==  $???_80241174 
   3C:  		Call     PlaySoundAtCollider 	( {Collider:o911} 000001A1 00000000 )
   54:  	Case  ==  $???_80241188 
   60:  		Call     PlaySoundAtCollider 	( {Collider:o915} 000001A3 00000000 )
   78:  	Case  ==  $???_8024119C 
   84:  		Call     PlaySoundAtCollider 	( {Collider:o918} 000001A4 00000000 )
   9C:  EndSwitch
   A4:  UseIntBuffer *Var[0] 
   B0:  Get1Int  *Var[1] 
   BC:  Get4Int  *Var[2] *Var[3] *Var[4] *Var[5] 
   D4:  Loop     00000005 
   E0:  	Call     EnableModel 	( *Var[2] .False )
   F4:  	Call     EnableModel 	( *Var[3] .False )
  108:  	Call     EnableModel 	( *Var[4] .True )
  11C:  	Call     EnableModel 	( *Var[5] .True )
  130:  	Wait     00000001 
  13C:  	Call     EnableModel 	( *Var[2] .True )
  150:  	Call     EnableModel 	( *Var[3] .True )
  164:  	Call     EnableModel 	( *Var[4] .False )
  178:  	Call     EnableModel 	( *Var[5] .False )
  18C:  	Wait     00000001 
  198:  EndLoop
  1A0:  Mul  *MapVar[F]  00000004 
  1B0:  OR       *MapVar[F] *Var[1] 
  1C0:  Add  *MapVar[E]  00000001 
  1D0:  If  *MapVar[E]  ==  00000004 
  1E0:  	Call     DisablePlayerInput 	( .True )
  1F0:  	Wait     00000005 
  1FC:  	Call     UseSettingsFrom 	( .Default 00000064 00000000 00000172 )
  218:  	Call     SetPanTarget 	( .Default 00000064 00000000 00000172 )
  234:  	Call     SetCamDistance ( .Default FFFFFE3E )
  248:  	Call     SetCamAngles 	( .Default 00000010 *Fixed[-6.0] )
  260:  	Call     SetCamSpeed 	( .Default 00000001 )
  274:  	Call     PanToTarget 	( .Default 00000000 00000001 )
  28C:  	Wait     0000001E 
  298:  	Switch  *MapVar[F] 
  2A4:  		Case  ==  0000001B 
  2B0:  			ExecWait $Script_80241A30 
  2BC:  		Case  ==  0000004B 
  2C8:  			ExecWait $Script_8024205C 
  2D4:  		Default
  2DC:  			ExecWait $Script_80242E6C 
  2E8:  	EndSwitch
  2F0:  	Call     DisablePlayerInput 	( .False )
  300:  Else
  308:  	Thread
  310:  		Label    0000000A 
  31C:  		Call     EnableModel 	( *Var[2] .False )
  330:  		Call     EnableModel 	( *Var[3] .False )
  344:  		Call     EnableModel 	( *Var[4] .True )
  358:  		Call     EnableModel 	( *Var[5] .True )
  36C:  		Wait     00000005 
  378:  		Call     EnableModel 	( *Var[2] .True )
  38C:  		Call     EnableModel 	( *Var[3] .True )
  3A0:  		Call     EnableModel 	( *Var[4] .False )
  3B4:  		Call     EnableModel 	( *Var[5] .False )
  3C8:  		Wait     0000000A 
  3D4:  		If  *MapVar[E]  !=  00000004 
  3E4:  			Goto     0000000A 
  3F0:  		EndIf
  3F8:  	EndThread
  400:  EndIf
  408:  Unbind
  410:  Return
  418:  End

#new:Script $Script_80243A68
    0:  If  *StoryProgress  <  00000000 
   10:  	Set  *MapVar[F]  00000000 
   20:  	Set  *MapVar[E]  00000000 
   30:  	Call     EnableModel 	( {Model:bm1_2} .False )
   44:  	Call     EnableModel 	( {Model:b1_2} .False )
   58:  	Set  *Var[0]  $???_80241160 
   68:  	Bind     $Script_80243648 .Trigger:WallHammer {Collider:o907} 00000001 00000000 
   84:  	Call     EnableModel 	( {Model:bm2_2} .False )
   98:  	Call     EnableModel 	( {Model:b2_2} .False )
   AC:  	Set  *Var[0]  $???_80241174 
   BC:  	Bind     $Script_80243648 .Trigger:WallHammer {Collider:o911} 00000001 00000000 
   D8:  	Call     EnableModel 	( {Model:bm3_2} .False )
   EC:  	Call     EnableModel 	( {Model:b3_2} .False )
  100:  	Set  *Var[0]  $???_80241188 
  110:  	Bind     $Script_80243648 .Trigger:WallHammer {Collider:o915} 00000001 00000000 
  12C:  	Call     EnableModel 	( {Model:bm4_2} .False )
  140:  	Call     EnableModel 	( {Model:b4_2} .False )
  154:  	Set  *Var[0]  $???_8024119C 
  164:  	Bind     $Script_80243648 .Trigger:WallHammer {Collider:o918} 00000001 00000000 
  180:  Else
  188:  	Call     802C9308 ( 00000075 00000000 )
  19C:  	Call     ModifyColliderFlags 	( 00000000 {Collider:o907} 7FFFFE00 )
  1B4:  	Call     ModifyColliderFlags 	( 00000000 {Collider:o911} 7FFFFE00 )
  1CC:  	Call     ModifyColliderFlags 	( 00000000 {Collider:o915} 7FFFFE00 )
  1E4:  	Call     ModifyColliderFlags 	( 00000000 {Collider:o918} 7FFFFE00 )
  1FC:  	Call     ModifyColliderFlags 	( 00000000 {Collider:sen1} 7FFFFE00 )
  214:  	Call     ModifyColliderFlags 	( 00000000 {Collider:sen2} 7FFFFE00 )
  22C:  	Call     RotateGroup 	( {Model:t1} 0000005A 00000001 00000000 00000000 )
  24C:  	Call     RotateGroup 	( {Model:t2} 0000005A 00000001 00000000 00000000 )
  26C:  	Call     RotateGroup 	( {Model:t3} 0000005A 00000001 00000000 00000000 )
  28C:  	Call     RotateGroup 	( {Model:t4} 0000005A 00000001 00000000 00000000 )
  2AC:  EndIf
  2B4:  Return
  2BC:  End

PADDING: 80243D2C to 80243D30 (00003D2C to 00003D30)
00000000 

#new:Script $Script_80243D30
    0:  NewArray 00000014 *Var[0] 
   10:  UseArray *Var[0] 
   1C:  SetF  *Array[2]  *Fixed[0.0] 
   2C:  SetF  *Array[3]  *Fixed[0.0] 
   3C:  SetF  *Array[7]  *Fixed[0.0] 
   4C:  SetF  *Array[8]  *Fixed[0.0] 
   5C:  SetF  *Array[E]  *Fixed[0.0] 
   6C:  SetF  *Array[F]  *Fixed[0.0] 
   7C:  SetF  *Array[10]  *Fixed[0.0] 
   8C:  Set  *AreaFlag[003]  00000000 
   9C:  Label    00000000 
   A8:  Switch  *MapVar[0] 
   B4:  	Case  ==  00000000 
   C0:  		UseIntBuffer *MapVar[1] 
   CC:  		Get3Int  *Var[0] *Var[1] *Var[2] 
   E0:  		SetF  *Array[0]  *Var[0] 
   F0:  		SetF  *Array[1]  *Var[1] 
  100:  		Call     AddVectorPolar ( *Array[0] *Array[1] *Fixed[40.0] *Var[2] )
  11C:  		SetF  *Array[5]  *Var[0] 
  12C:  		SetF  *Array[6]  *Var[1] 
  13C:  		SetF  *Var[3]  *Var[2] 
  14C:  		AddF  *Var[3]  *Fixed[180.0] 
  15C:  		Call     AddVectorPolar ( *Array[5] *Array[6] *Fixed[40.0] *Var[3] )
  178:  		SetF  *Array[B]  *Var[0] 
  188:  		SetF  *Array[C]  *Var[1] 
  198:  		SetF  *MapVar[B]  *Array[B] 
  1A8:  		SetF  *MapVar[C]  *Array[C] 
  1B8:  		SetF  *MapVar[D]  *Var[2] 
  1C8:  		SetF  *Array[11]  *Fixed[0.0] 
  1D8:  		Label    0000000B 
  1E4:  		Get2Int  *Var[2] *Var[3] 
  1F4:  		If  *Var[2]  ==  FFFFFFFF 
  204:  			Goto     0000000C 
  210:  		EndIf
  218:  		Call     GetDist2D   	( *Var[4] *Var[0] *Var[1] *Var[2] *Var[3] )
  238:  		AddF  *Array[11]  *Var[4] 
  248:  		SetF  *Var[0]  *Var[2] 
  258:  		SetF  *Var[1]  *Var[3] 
  268:  		Goto     0000000B 
  274:  		Label    0000000C 
  280:  		SubF  *Array[11]  *Fixed[40.0] 
  290:  		SetF  *Array[A]  *Fixed[0.0] 
  2A0:  		SetF  *Array[D]  *Fixed[0.0] 
  2B0:  		Set  *Array[12]  00000000 
  2C0:  		If  *MapFlag[00]  ==  00000001 
  2D0:  			Set  *MapVar[0]  00000001 
  2E0:  		EndIf
  2E8:  	Case  ==  00000001 
  2F4:  		UseIntBuffer *MapVar[1] 
  300:  		Call     $Function_80240168 ( 00000003 00000000 00000000 )
  318:  		Get2Int  *Var[0] *Var[1] 
  328:  		If  *Var[0]  ==  FFFFFFFF 
  338:  			Set  *MapVar[0]  00000064 
  348:  			Set  *MapFlag[00]  00000000 
  358:  		Else
  360:  			SetF  *Array[2]  *Var[0] 
  370:  			SetF  *Array[3]  *Var[1] 
  380:  			Set  *Array[4]  00000001 
  390:  			SetF  *Array[7]  *Var[0] 
  3A0:  			SetF  *Array[8]  *Var[1] 
  3B0:  			Set  *Array[9]  00000001 
  3C0:  			Set  *MapVar[0]  0000000A 
  3D0:  		EndIf
  3D8:  	Case  ==  0000000A 
  3E4:  		Switch  *MapVar[2] 
  3F0:  			Case  ==  00000000 
  3FC:  				SetF  *Array[A]  *Fixed[10.0] 
  40C:  			Case  ==  00000001 
  418:  				Call     $Function_80240388 ( *Array[12] *Array[A] *Fixed[0.0] *Fixed[10.0] 00000064 00000001 *Fixed[0.0] )
  440:  				Add  *Array[12]  00000001 
  450:  			Case  ==  00000002 
  45C:  				Set  *Var[0]  *Array[D] 
  46C:  				Set  *Var[1]  *Array[11] 
  47C:  				Call     $Function_80240388 ( *Var[0] *Array[A] *Fixed[10.0] *Fixed[2.0] *Var[1] 00000000 *Fixed[0.0] )
  4A4:  			Case  ==  00000003 
  4B0:  				Set  *Var[0]  *Array[D] 
  4C0:  				Set  *Var[1]  *Array[11] 
  4D0:  				Div  *Var[1]  00000002 
  4E0:  				Call     $Function_80240388 ( *Var[0] *Array[A] *Fixed[1.0] *Fixed[10.0] *Var[1] 00000000 *Fixed[0.0] )
  508:  		EndSwitch
  510:  		Call     GetDist2D   	( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
  530:  		Call     $Function_802400E4 ( *Var[0] *Array[A] *Var[2] )
  548:  		If  *Var[2]  ==  00000001 
  558:  			Call     $Function_8024001C ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
  578:  			Call     AddVectorPolar ( *Array[0] *Array[1] *Array[A] *Var[0] )
  594:  		Else
  59C:  			SetF  *Var[1]  *Array[A] 
  5AC:  			SubF  *Var[1]  *Var[0] 
  5BC:  			SetF  *Array[0]  *Array[2] 
  5CC:  			SetF  *Array[1]  *Array[3] 
  5DC:  			UseIntBuffer *MapVar[1] 
  5E8:  			Call     $Function_80240168 ( 00000003 00000002 *Array[4] )
  600:  			Get2Int  *Array[2] *Array[3] 
  610:  			Add  *Array[4]  00000001 
  620:  			If  *Array[2]  ==  FFFFFFFF 
  630:  				Set  *MapVar[0]  00000064 
  640:  				Set  *MapFlag[00]  00000000 
  650:  				Set  *Flag[01]  00000001 
  660:  			Else
  668:  				Call     $Function_8024001C ( *Var[0] *Array[0] *Array[1] *Array[2] *Array[3] )
  688:  				Call     AddVectorPolar ( *Array[0] *Array[1] *Var[1] *Var[0] )
  6A4:  			EndIf
  6AC:  		EndIf
  6B4:  		Call     GetDist2D   	( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
  6D4:  		Call     $Function_802400E4 ( *Var[0] *Array[A] *Var[2] )
  6EC:  		If  *Var[2]  ==  00000001 
  6FC:  			Call     $Function_8024001C ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
  71C:  			Call     AddVectorPolar ( *Array[5] *Array[6] *Array[A] *Var[0] )
  738:  		Else
  740:  			SetF  *Var[1]  *Array[A] 
  750:  			SubF  *Var[1]  *Var[0] 
  760:  			SetF  *Array[5]  *Array[7] 
  770:  			SetF  *Array[6]  *Array[8] 
  780:  			UseIntBuffer *MapVar[1] 
  78C:  			Call     $Function_80240168 ( 00000003 00000002 *Array[9] )
  7A4:  			Get2Int  *Array[7] *Array[8] 
  7B4:  			Add  *Array[9]  00000001 
  7C4:  			If  *Array[7]  ==  FFFFFFFF 
  7D4:  				Set  *MapVar[0]  00000064 
  7E4:  				Set  *MapFlag[00]  00000000 
  7F4:  				Set  *Flag[01]  00000000 
  804:  			Else
  80C:  				Call     $Function_8024001C ( *Var[0] *Array[5] *Array[6] *Array[7] *Array[8] )
  82C:  				Call     AddVectorPolar ( *Array[5] *Array[6] *Var[1] *Var[0] )
  848:  			EndIf
  850:  		EndIf
  858:  		If  *MapVar[0]  ==  00000064 
  868:  			If  *Flag[01]  ==  00000001 
  878:  				Call     $Function_8024001C ( *Var[0] *Array[0] *Array[1] *Array[5] *Array[6] )
  898:  				SetF  *Array[5]  *Array[0] 
  8A8:  				SetF  *Array[6]  *Array[1] 
  8B8:  				Call     AddVectorPolar ( *Array[5] *Array[6] *Fixed[80.0] *Var[0] )
  8D4:  			Else
  8DC:  				Call     $Function_8024001C ( *Var[0] *Array[5] *Array[6] *Array[0] *Array[1] )
  8FC:  				SetF  *Array[0]  *Array[5] 
  90C:  				SetF  *Array[1]  *Array[6] 
  91C:  				Call     AddVectorPolar ( *Array[0] *Array[1] *Fixed[80.0] *Var[0] )
  938:  			EndIf
  940:  		EndIf
  948:  		SetF  *Var[0]  *Array[0] 
  958:  		SetF  *Var[1]  *Array[1] 
  968:  		AddF  *Var[0]  *Array[5] 
  978:  		AddF  *Var[1]  *Array[6] 
  988:  		DivF  *Var[0]  *Fixed[2.0] 
  998:  		DivF  *Var[1]  *Fixed[2.0] 
  9A8:  		Call     $Function_8024001C ( *Var[2] *Array[5] *Array[6] *Array[0] *Array[1] )
  9C8:  		SetF  *MapVar[B]  *Var[0] 
  9D8:  		SetF  *MapVar[C]  *Var[1] 
  9E8:  		SetF  *MapVar[D]  *Var[2] 
  9F8:  		Call     GetDist2D   	( *Var[3] *Var[0] *Var[1] *Array[B] *Array[C] )
  A18:  		AddF  *Array[D]  *Var[3] 
  A28:  		SetF  *Array[E]  *Array[D] 
  A38:  		MulF  *Array[E]  *Fixed[1.4326172] 
  A48:  		If  *Flag[00]  ==  00000000 
  A58:  			SetF  *Var[0]  *Array[A] 
  A68:  			If  *Var[0]  <  00000001 
  A78:  				SetF  *Var[0]  *Fixed[1.0] 
  A88:  			EndIf
  A90:  			DivF  *Var[0]  *Fixed[3.0] 
  AA0:  			SubF  *Array[F]  *Var[0] 
  AB0:  			If  *Array[F]  <  FFFFFFF6 
  AC0:  				SetF  *Array[F]  *Fixed[-10.0] 
  AD0:  				Set  *Flag[00]  00000001 
  AE0:  				If  *AreaFlag[003]  ==  00000000 
  AF0:  					Call     PlaySound   	( 000001FF )
  B00:  				Else
  B08:  					Call     PlaySound   	( 00000084 )
  B18:  				EndIf
  B20:  			EndIf
  B28:  		Else
  B30:  			SetF  *Var[0]  *Array[A] 
  B40:  			If  *Var[0]  <  00000001 
  B50:  				SetF  *Var[0]  *Fixed[1.0] 
  B60:  			EndIf
  B68:  			DivF  *Var[0]  *Fixed[3.0] 
  B78:  			AddF  *Array[F]  *Var[0] 
  B88:  			If  *Array[F]  >  0000000A 
  B98:  				SetF  *Array[F]  *Fixed[10.0] 
  BA8:  				Set  *Flag[00]  00000000 
  BB8:  				If  *AreaFlag[003]  ==  00000000 
  BC8:  					Call     PlaySound   	( 000001FE )
  BD8:  					Set  *AreaFlag[003]  00000001 
  BE8:  				Else
  BF0:  					Call     PlaySound   	( 000001FE )
  C00:  					Set  *AreaFlag[003]  00000000 
  C10:  				EndIf
  C18:  			EndIf
  C20:  		EndIf
  C28:  		SetF  *Var[0]  *MapVar[B] 
  C38:  		SetF  *Var[1]  *MapVar[C] 
  C48:  		SetF  *Var[2]  *MapVar[D] 
  C58:  		Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
  C74:  		Call     $Function_802401EC ( *Var[0] 00000032 *Var[1] *MapVar[D] )
  C90:  		SetF  *Var[0]  *MapVar[B] 
  CA0:  		SetF  *Var[1]  *MapVar[C] 
  CB0:  		SetF  *Var[2]  *MapVar[D] 
  CC0:  		AddF  *Var[2]  *Fixed[180.0] 
  CD0:  		Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[15.0] *Var[2] )
  CEC:  		Call     $Function_80240290 ( FFFFFFFC *Var[0] 00000032 *Var[1] *MapVar[D] )
  D0C:  		SetF  *Var[0]  *MapVar[B] 
  D1C:  		SetF  *Var[1]  *MapVar[C] 
  D2C:  		SetF  *Var[2]  *MapVar[D] 
  D3C:  		If  *Var[2]  <  000000B4 
  D4C:  			AddF  *Var[2]  *Fixed[90.0] 
  D5C:  		Else
  D64:  			SubF  *Var[2]  *Fixed[90.0] 
  D74:  		EndIf
  D7C:  		Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
  D98:  		Call     $Function_80240290 ( 00000000 *Var[0] 00000032 *Var[1] *MapVar[D] )
  DB8:  	Case  ==  00000064 
  DC4:  EndSwitch
  DCC:  Call     TranslateGroup ( {Model:p2} *Fixed[79.100586] *Fixed[-27.929688] *Fixed[-29.529297] )
  DE8:  Call     TranslateGroup ( {Model:p3} *Fixed[-35.09961] *Fixed[-27.929688] *Fixed[-29.529297] )
  E04:  Call     RotateGroup 	( {Model:p2} *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  E24:  Call     RotateGroup 	( {Model:p3} *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  E44:  Call     TranslateGroup ( {Model:p5} *Fixed[40.5] *Fixed[-20.0] *Fixed[-0.39941406] )
  E60:  Call     TranslateGroup ( {Model:p6} *Fixed[-39.5] *Fixed[-20.0] *Fixed[-0.39941406] )
  E7C:  Call     TranslateGroup ( {Model:popo} *MapVar[B] *Fixed[10.0] *MapVar[C] )
  E98:  If  *MapVar[D]  <  000000B4 
  EA8:  	SetF  *Var[1]  *MapVar[D] 
  EB8:  	SubF  *Var[1]  *Fixed[90.0] 
  EC8:  	Call     RotateGroup 	( {Model:popo} *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
  EE8:  Else
  EF0:  	SetF  *Var[1]  *MapVar[D] 
  F00:  	SubF  *Var[1]  *Fixed[180.0] 
  F10:  	SubF  *Var[1]  *Fixed[90.0] 
  F20:  	Call     RotateGroup 	( {Model:popo} *Var[1] *Fixed[0.0] *Fixed[-1.0] *Fixed[0.0] )
  F40:  EndIf
  F48:  Call     RotateGroup 	( {Model:p2} *Fixed[45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  F68:  Call     RotateGroup 	( {Model:p3} *Fixed[-45.0] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
  F88:  Call     TranslateGroup ( {Model:p2} *Fixed[-79.09961] *Fixed[27.930664] *Fixed[29.530273] )
  FA4:  Call     TranslateGroup ( {Model:p3} *Fixed[35.100586] *Fixed[27.930664] *Fixed[29.530273] )
  FC0:  Call     TranslateGroup ( {Model:p5} *Fixed[-40.5] *Fixed[20.0] *Fixed[0.40039062] )
  FDC:  Call     TranslateGroup ( {Model:p6} *Fixed[39.5] *Fixed[20.0] *Fixed[0.40039062] )
  FF8:  If  *MapVar[D]  <  000000B4 
 1008:  	Call     RotateGroup 	( {Model:p5} *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
 1028:  	Call     RotateGroup 	( {Model:p6} *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[-1.0] )
 1048:  Else
 1050:  	Call     RotateGroup 	( {Model:p5} *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
 1070:  	Call     RotateGroup 	( {Model:p6} *Array[E] *Fixed[0.0] *Fixed[0.0] *Fixed[1.0] )
 1090:  EndIf
 1098:  Call     TranslateGroup ( {Model:p2} *Fixed[0.0] *Array[F] *Fixed[0.0] )
 10B4:  SetF  *Var[0]  *Array[F] 
 10C4:  MulF  *Var[0]  *Fixed[-1.0] 
 10D4:  Call     TranslateGroup ( {Model:p3} *Fixed[0.0] *Var[0] *Fixed[0.0] )
 10F0:  SetF  *Var[0]  *Array[A] 
 1100:  If  *Var[0]  <  00000001 
 1110:  	SetF  *Var[0]  *Fixed[1.0] 
 1120:  EndIf
 1128:  AddF  *Array[10]  *Var[0] 
 1138:  If  *Array[10]  >  00000168 
 1148:  	SubF  *Array[10]  *Fixed[360.0] 
 1158:  EndIf
 1160:  Call     RotateGroup 	( {Model:p4} *Array[10] *Fixed[0.0] *Fixed[1.0] *Fixed[0.0] )
 1180:  SetF  *Array[B]  *MapVar[B] 
 1190:  SetF  *Array[C]  *MapVar[C] 
 11A0:  Wait     00000001 
 11AC:  Goto     00000000 
 11B8:  Return
 11C0:  End

#new:Script $Script_80244EF8
    0:  Label    00000000 
    C:  Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   24:  Call     802CAF2C ( 00000000 *Var[0] 00000000 *Var[2] )
   40:  Wait     00000001 
   4C:  Goto     00000000 
   58:  Return
   60:  End

#new:Script $Script_80244F60
    0:  Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   18:  Call     MakeLerp    	( 00000000 *Var[1] 0000002D 00000000 )
   34:  Loop     
   40:  	Call     UpdateLerp  	( )
   4C:  	Call     GetPlayerPos 	( *Var[2] *Var[3] *Var[4] )
   64:  	Call     802CAF2C ( 00000000 *Var[2] *Var[0] *Var[4] )
   80:  	Wait     00000001 
   8C:  	If  *Var[1]  ==  00000000 
   9C:  		BreakLoop
   A4:  	EndIf
   AC:  EndLoop
   B4:  Return
   BC:  End

#new:Script $Script_80245024
    0:  Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   18:  Call     MakeLerp    	( *Var[1] 00000000 00000028 00000000 )
   34:  Loop     
   40:  	Call     UpdateLerp  	( )
   4C:  	Call     GetPlayerPos 	( *Var[2] *Var[3] *Var[4] )
   64:  	Call     802CAF2C ( 00000000 *Var[2] *Var[0] *Var[4] )
   80:  	Wait     00000001 
   8C:  	If  *Var[1]  ==  00000000 
   9C:  		BreakLoop
   A4:  	EndIf
   AC:  EndLoop
   B4:  Loop     
   C0:  	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   D8:  	Call     802CAF2C ( 00000000 *Var[0] 00000000 *Var[2] )
   F4:  	Wait     00000001 
  100:  EndLoop
  108:  Return
  110:  End

#new:Script $Script_8024513C
    0:  Call     SetNpcFlagBits ( 00000000 00000140 .True )
   18:  Call     SetNpcFlagBits ( .Npc:Partner 00000140 .True )
   30:  Thread
   38:  	UseIntBuffer *Var[0] 
   44:  	Get3Int  *Var[1] *Var[2] *Var[3] 
   58:  	Call     AddVectorPolar ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
   74:  	Call     SetPlayerAnimation 	( .PlayerAnim:Walking )
   84:  	Call     SetPlayerSpeed ( *Fixed[4.0] )
   94:  	Call     MovePlayerTo 	( *Var[1] *Var[2] 00000000 )
   AC:  	Call     SetPlayerSpeed ( *Fixed[0.7001953] )
   BC:  	Call     MovePlayerTo 	( *Var[1] *Var[2] 00000000 )
   D4:  	Call     SetPlayerPos 	( *Var[1] 00000032 *Var[2] )
   EC:  	Call     SetPlayerAnimation 	( 00010002 )
   FC:  	Call     InterpPlayerYaw 	( *Var[3] 00000000 )
  110:  EndThread
  118:  Wait     00000005 
  124:  UseIntBuffer *Var[0] 
  130:  Get3Int  *Var[1] *Var[2] *Var[3] 
  144:  SetF  *Var[A]  *Var[3] 
  154:  AddF  *Var[3]  *Fixed[180.0] 
  164:  Call     AddVectorPolar ( *Var[1] *Var[2] *Fixed[15.0] *Var[3] )
  180:  Call     SetNpcJumpscale 	( .Npc:Partner *Fixed[0.7001953] )
  194:  Call     NpcJump0    	( .Npc:Partner *Var[1] 00000032 *Var[2] 0000000A )
  1B4:  Call     SetNpcSpeed 	( .Npc:Partner *Fixed[0.5] )
  1C8:  Call     MoveNpcTo   	( .Npc:Partner *Var[1] *Var[2] 00000000 )
  1E4:  Call     SetNpcAnimation 	( .Npc:Partner 00000106 )
  1F8:  Call     InterpNpcYaw 	( .Npc:Partner *Var[A] 00000000 )
  210:  Wait     00000005 
  21C:  UseIntBuffer *Var[0] 
  228:  Get3Int  *Var[1] *Var[2] *Var[3] 
  23C:  SetF  *Var[A]  *Var[3] 
  24C:  If  *Var[3]  <  000000B4 
  25C:  	AddF  *Var[3]  *Fixed[90.0] 
  26C:  Else
  274:  	SubF  *Var[3]  *Fixed[90.0] 
  284:  EndIf
  28C:  SetF  *Var[4]  *Var[1] 
  29C:  SetF  *Var[5]  *Var[2] 
  2AC:  SetF  *Var[6]  *Var[3] 
  2BC:  Call     AddVectorPolar ( *Var[1] *Var[2] *Fixed[100.0] *Var[3] )
  2D8:  Call     SetNpcSpeed 	( 00000000 *Fixed[3.0] )
  2EC:  Call     SetNpcAnimation 	( 00000000 008C0003 )
  300:  Call     MoveNpcTo   	( 00000000 *Var[1] *Var[2] 00000000 )
  31C:  Call     SetNpcAnimation 	( 00000000 008C0001 )
  330:  Call     AddVectorPolar ( *Var[4] *Var[5] *Fixed[20.0] *Var[6] )
  34C:  Call     SetNpcJumpscale 	( 00000000 *Fixed[0.7001953] )
  360:  Call     NpcJump0    	( 00000000 *Var[4] 00000032 *Var[5] 0000000A )
  380:  Call     InterpNpcYaw 	( 00000000 *Var[A] 00000000 )
  398:  Call     SayMessage0 	( 00000000 008C0004 008C0001 00000005 000F0009 ) % We're leaving! All aboard!
  3B8:  Call     PlaySound   	( 00000083 )
  3C8:  Call     SetMusicTrack 	( 00000000 .Song:ToyboxTrain 00000000 00000008 )
  3E4:  Wait     0000000A 
  3F0:  Return
  3F8:  End

#new:Script $Script_8024553C
    0:  Call     802D62B8 ( 00000083 )
   10:  Call     SetMusicTrack 	( 00000000 .Song:ShyGuyToybox 00000000 00000008 )
   2C:  Call     SetNpcFlagBits ( 00000000 00000140 .True )
   44:  Call     SetNpcFlagBits ( .Npc:Partner 00000140 .True )
   5C:  SetF  *Var[0]  *MapVar[B] 
   6C:  SetF  *Var[1]  *MapVar[C] 
   7C:  SetF  *Var[2]  *MapVar[D] 
   8C:  If  *Var[2]  <  000000B4 
   9C:  	AddF  *Var[2]  *Fixed[90.0] 
   AC:  Else
   B4:  	SubF  *Var[2]  *Fixed[90.0] 
   C4:  EndIf
   CC:  Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[100.0] *Var[2] )
   E8:  Thread
   F0:  	Call     SetNpcJumpscale 	( 00000000 *Fixed[1.0] )
  104:  	Call     NpcJump0    	( 00000000 *Var[0] 00000032 *Var[1] 0000000A )
  124:  	Call     SetNpcAnimation 	( 00000000 008C0003 )
  138:  	Call     SetNpcSpeed 	( 00000000 *Fixed[2.0] )
  14C:  	UseIntBuffer *Var[9] 
  158:  	Get2Int  *Var[3] *Var[4] 
  168:  	Call     MoveNpcTo   	( 00000000 *Var[3] *Var[4] 00000000 )
  184:  	Call     SetNpcAnimation 	( 00000000 008C0001 )
  198:  	Call     InterpNpcYaw 	( 00000000 0000010E 0000000F )
  1B0:  	Call     SetNpcFlagBits ( 00000000 00000140 .False )
  1C8:  EndThread
  1D0:  Wait     0000000A 
  1DC:  Thread
  1E4:  	AddF  *Var[2]  *Fixed[60.0] 
  1F4:  	Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[20.0] *Var[2] )
  210:  	Call     SetPlayerAnimation 	( .PlayerAnim:Walking )
  220:  	Call     SetPlayerSpeed ( *Fixed[3.0] )
  230:  	Call     MovePlayerTo 	( *Var[0] *Var[1] 00000000 )
  248:  	Call     SetPlayerAnimation 	( 00010002 )
  258:  EndThread
  260:  Wait     0000000A 
  26C:  Sub  *Var[1]  0000001E 
  27C:  Call     SetNpcAnimation 	( .Npc:Partner 00000102 )
  290:  Call     SetNpcSpeed 	( .Npc:Partner *Fixed[2.5] )
  2A4:  Call     MoveNpcTo   	( .Npc:Partner *Var[0] *Var[1] 00000000 )
  2C0:  Call     SetNpcAnimation 	( .Npc:Partner 00000106 )
  2D4:  Call     SetNpcFlagBits ( .Npc:Partner 00000140 .False )
  2EC:  Return
  2F4:  End

#new:Script $Script_80245838
    0:  Switch  *AreaByte[6] 
    C:  	Case  ==  00000000 
   18:  		Call     GotoMapSpecial ( $ASCII_80248750 00000003 00000001 )
   30:  	Case  ==  00000001 
   3C:  		Call     GotoMapSpecial ( $ASCII_80248748 00000003 00000001 )
   54:  	Case  ==  00000002 
   60:  		Call     GotoMapSpecial ( $ASCII_80248740 00000002 00000001 )
   78:  	Case  ==  00000003 
   84:  		Call     GotoMapSpecial ( $ASCII_80248738 00000003 00000001 )
   9C:  EndSwitch
   A4:  Wait     00000064 
   B0:  Return
   B8:  End

#new:Script $Script_802458F8
    0:  Switch  *AreaByte[5] 
    C:  	Case  00000000  to  00000001 
   1C:  		Switch  *AreaByte[6] 
   28:  			Case  ==  00000000 
   34:  				Call     GotoMapSpecial ( $ASCII_80248750 00000002 00000001 )
   4C:  			Case  ==  00000001 
   58:  				Call     GotoMapSpecial ( $ASCII_80248748 00000002 00000001 )
   70:  			Case  ==  00000002 
   7C:  				Call     GotoMapSpecial ( $ASCII_80248740 00000001 00000001 )
   94:  			Case  ==  00000003 
   A0:  				Call     GotoMapSpecial ( $ASCII_80248738 00000002 00000001 )
   B8:  		EndSwitch
   C0:  	Case  ==  00000002 
   CC:  		Switch  *AreaByte[6] 
   D8:  			Case  ==  00000000 
   E4:  				Call     GotoMapSpecial ( $ASCII_80248750 00000002 00000001 )
   FC:  			Case  ==  00000001 
  108:  				If  *Flag_OMO_03  ==  00000001 
  118:  					Call     GotoMapSpecial ( $ASCII_80248748 00000002 00000001 )
  130:  				Else
  138:  					Call     GotoMapSpecial ( $ASCII_80248750 00000002 00000001 )
  150:  				EndIf
  158:  			Case  ==  00000003 
  164:  				Call     GotoMapSpecial ( $ASCII_80248738 00000002 00000001 )
  17C:  		EndSwitch
  184:  	Case  ==  00000003 
  190:  		Switch  *AreaByte[6] 
  19C:  			Case  ==  00000000 
  1A8:  				Call     GotoMapSpecial ( $ASCII_80248750 00000002 00000001 )
  1C0:  			Case  ==  00000001 
  1CC:  				If  *Flag_OMO_03  ==  00000001 
  1DC:  					Call     GotoMapSpecial ( $ASCII_80248748 00000002 00000001 )
  1F4:  				Else
  1FC:  					Call     GotoMapSpecial ( $ASCII_80248750 00000002 00000001 )
  214:  				EndIf
  21C:  			Case  ==  00000002 
  228:  				If  *Flag_OMO_03  ==  00000001 
  238:  					Call     GotoMapSpecial ( $ASCII_80248740 00000001 00000001 )
  250:  				Else
  258:  					Call     GotoMapSpecial ( $ASCII_80248750 00000002 00000001 )
  270:  				EndIf
  278:  		EndSwitch
  280:  EndSwitch
  288:  Wait     00000064 
  294:  Return
  29C:  End

#new:Script $Script_80245B9C
    0:  Label    0000000A 
    C:  Wait     00000001 
   18:  Call     $Function_80240518 ( )
   24:  If  *Var[0]  !=  00000001 
   34:  	Goto     0000000A 
   40:  EndIf
   48:  If  *AreaFlag[002]  ==  00000000 
   58:  	ExecWait $Script_80245838 
   64:  Else
   6C:  	ExecWait $Script_802458F8 
   78:  EndIf
   80:  Return
   88:  End

#new:Script $Script_80245C2C
    0:  Call     SetTexPanner 	( {Model:y_a} 00000002 )
   14:  Call     EnableTexPanning 	( {Model:y_a} .True )
   28:  Set  *MapVar[9]  00008000 
   38:  Thread
   40:  	Loop     
   4C:  		Call     802C9364 ( 00000002 00000000 *MapVar[9] 00000000 )
   68:  		Wait     00000001 
   74:  	EndLoop
   7C:  EndThread
   84:  Set  *Var[5]  00000000 
   94:  Label    00000000 
   A0:  Add  *Var[5]  00000002 
   B0:  If  *Var[5]  >  00000168 
   C0:  	Sub  *Var[5]  00000168 
   D0:  EndIf
   D8:  Call     RotateModel 	( {Model:y_a} *Var[5] 00000000 00000000 FFFFFFFF )
   F8:  Wait     00000001 
  104:  If  *MapFlag[01]  ==  00000001 
  114:  	Goto     0000000A 
  120:  EndIf
  128:  Goto     00000000 
  134:  Label    0000000A 
  140:  If  *AreaFlag[002]  ==  00000000 
  150:  	Set  *Var[2]  0000010E 
  160:  	Call     EnableTexPanning 	( {Model:y_c2} .False )
  174:  	Call     EnableTexPanning 	( {Model:y_b2} .True )
  188:  Else
  190:  	Set  *Var[2]  0000005A 
  1A0:  	Call     EnableTexPanning 	( {Model:y_b2} .False )
  1B4:  	Call     EnableTexPanning 	( {Model:y_c2} .True )
  1C8:  EndIf
  1D0:  If  *Var[2]  <  *Var[5] 
  1E0:  	Add  *Var[2]  00000168 
  1F0:  EndIf
  1F8:  Set  *Var[6]  *AreaFlag[002] 
  208:  Call     MakeLerp    	( *Var[5] *Var[2] 0000003C 00000008 )
  224:  Call     UpdateLerp  	( )
  230:  Set  *Var[4]  FFFFFFFF 
  240:  Label    0000000B 
  24C:  Call     UpdateLerp  	( )
  258:  If  *Var[2]  <  *Var[0] 
  268:  	Set  *Var[3]  00000000 
  278:  Else
  280:  	Set  *Var[3]  00000001 
  290:  EndIf
  298:  If  *Var[4]  !=  FFFFFFFF 
  2A8:  	If  *Var[3]  !=  *Var[4] 
  2B8:  		Call     PlaySound   	( 000001F9 )
  2C8:  	EndIf
  2D0:  EndIf
  2D8:  Set  *Var[4]  *Var[3] 
  2E8:  Call     RotateModel 	( {Model:y_a} *Var[0] 00000000 00000000 FFFFFFFF )
  308:  Wait     00000001 
  314:  If  *AreaFlag[002]  !=  *Var[6] 
  324:  	Goto     00000015 
  330:  EndIf
  338:  If  *Var[1]  ==  00000001 
  348:  	Goto     0000000B 
  354:  EndIf
  35C:  Call     PlaySound   	( 000001FA )
  36C:  If  *AreaFlag[002]  ==  00000000 
  37C:  	Set  *MapVar[9]  00004000 
  38C:  Else
  394:  	Set  *MapVar[9]  0000C000 
  3A4:  EndIf
  3AC:  Label    00000014 
  3B8:  Wait     00000001 
  3C4:  If  *AreaFlag[002]  ==  *Var[6] 
  3D4:  	Goto     00000014 
  3E0:  EndIf
  3E8:  Label    00000015 
  3F4:  Set  *Var[5]  *Var[0] 
  404:  Goto     0000000A 
  410:  Return
  418:  End

#new:Script $Script_8024604C
    0:  Call     802D2B0C ( *Var[0] )
   10:  If  *Var[0]  !=  00000000 
   20:  	Call     GetCurrentPartner 	( *Var[0] )
   30:  	If  *Var[0]  ==  00000004 
   40:  		Return
   48:  	EndIf
   50:  EndIf
   58:  If  *MapFlag[01]  ==  00000001 
   68:  	If  *AreaFlag[002]  ==  00000000 
   78:  		Return
   80:  	EndIf
   88:  EndIf
   90:  Set  *MapFlag[01]  00000001 
   A0:  Set  *AreaFlag[002]  00000000 
   B0:  Call     MakeLerp    	( 00000000 FFFFFFEE 0000000F 00000000 )
   CC:  Label    00000000 
   D8:  Call     UpdateLerp  	( )
   E4:  Call     TranslateModel ( {Model:y_b1} 00000000 *Var[0] 00000000 )
  100:  Call     TranslateModel ( {Model:y_b2} 00000000 *Var[0] 00000000 )
  11C:  Call     UpdateColliderTransform 	( {Collider:o920} )
  12C:  Call     UpdateColliderTransform 	( {Collider:o921} )
  13C:  Wait     00000001 
  148:  If  *Var[1]  ==  00000001 
  158:  	Goto     00000000 
  164:  EndIf
  16C:  Call     MakeLerp    	( FFFFFFEE 00000000 0000000F 00000000 )
  188:  Label    00000001 
  194:  Call     UpdateLerp  	( )
  1A0:  Call     TranslateModel ( {Model:y_b1} 00000000 *Var[0] 00000000 )
  1BC:  Call     TranslateModel ( {Model:y_b2} 00000000 *Var[0] 00000000 )
  1D8:  Call     UpdateColliderTransform 	( {Collider:o920} )
  1E8:  Call     UpdateColliderTransform 	( {Collider:o921} )
  1F8:  Wait     00000001 
  204:  If  *Var[1]  ==  00000001 
  214:  	Goto     00000001 
  220:  EndIf
  228:  Return
  230:  End

#new:Script $Script_80246284
    0:  Call     802D2B0C ( *Var[0] )
   10:  If  *Var[0]  !=  00000000 
   20:  	Call     GetCurrentPartner 	( *Var[0] )
   30:  	If  *Var[0]  ==  00000004 
   40:  		Return
   48:  	EndIf
   50:  EndIf
   58:  If  *MapFlag[01]  ==  00000001 
   68:  	If  *AreaFlag[002]  ==  00000001 
   78:  		Return
   80:  	EndIf
   88:  EndIf
   90:  Set  *MapFlag[01]  00000001 
   A0:  Set  *AreaFlag[002]  00000001 
   B0:  Call     MakeLerp    	( 00000000 FFFFFFEE 0000000F 00000000 )
   CC:  Label    00000000 
   D8:  Call     UpdateLerp  	( )
   E4:  Call     TranslateModel ( {Model:y_c1} 00000000 *Var[0] 00000000 )
  100:  Call     TranslateModel ( {Model:y_c2} 00000000 *Var[0] 00000000 )
  11C:  Call     UpdateColliderTransform 	( {Collider:o923} )
  12C:  Call     UpdateColliderTransform 	( {Collider:o924} )
  13C:  Wait     00000001 
  148:  If  *Var[1]  ==  00000001 
  158:  	Goto     00000000 
  164:  EndIf
  16C:  Call     MakeLerp    	( FFFFFFEE 00000000 0000000F 00000000 )
  188:  Label    00000001 
  194:  Call     UpdateLerp  	( )
  1A0:  Call     TranslateModel ( {Model:y_c1} 00000000 *Var[0] 00000000 )
  1BC:  Call     TranslateModel ( {Model:y_c2} 00000000 *Var[0] 00000000 )
  1D8:  Call     UpdateColliderTransform 	( {Collider:o923} )
  1E8:  Call     UpdateColliderTransform 	( {Collider:o924} )
  1F8:  Wait     00000001 
  204:  If  *Var[1]  ==  00000001 
  214:  	Goto     00000001 
  220:  EndIf
  228:  Return
  230:  End

#new:Script $Script_802464BC
    0:  SetGroup 00000000 
    C:  If  *Var[5]  ==  00000001 
   1C:  	If  *Var[6]  ==  00000001 
   2C:  		If  *Var[7]  ==  00000001 
   3C:  			If  *Var[8]  ==  00000001 
   4C:  				Call     $Function_8024055C ( )
   58:  				Return
   60:  			EndIf
   68:  		EndIf
   70:  	EndIf
   78:  EndIf
   80:  Call     $Function_80240680 ( )
   8C:  Return
   94:  End

#new:Script $Script_80246558
    0:  Set  *MapFlag[01]  00000000 
   10:  Set  *MapFlag[0A]  00000000 
   20:  Exec     $Script_80245C2C 
   2C:  Call     ParentColliderToModel 	( {Collider:o920} {Model:y_b1} )
   40:  Call     ParentColliderToModel 	( {Collider:o921} {Model:y_b2} )
   54:  Call     ParentColliderToModel 	( {Collider:o923} {Model:y_c1} )
   68:  Call     ParentColliderToModel 	( {Collider:o924} {Model:y_c2} )
   7C:  Bind     $Script_8024604C .Trigger:FloorTouch {Collider:o920} 00000001 00000000 
   98:  Bind     $Script_8024604C .Trigger:WallHammer {Collider:o921} 00000001 00000000 
   B4:  Bind     $Script_80246284 .Trigger:FloorTouch {Collider:o923} 00000001 00000000 
   D0:  Bind     $Script_80246284 .Trigger:WallHammer {Collider:o924} 00000001 00000000 
   EC:  Thread
   F4:  	Set  *Var[0]  00000001 
  104:  	Set  *Var[1]  FFFFFBB4 
  114:  	Set  *Var[2]  00000000 
  124:  	Set  *Var[3]  00000000 
  134:  	Set  *Var[4]  00000000 
  144:  	Set  *Var[5]  00000001 
  154:  	Set  *Var[6]  00000001 
  164:  	Set  *Var[7]  00000001 
  174:  	Set  *Var[8]  00000001 
  184:  	Set  *Var[9]  00000000 
  194:  	Set  *Var[A]  00000000 
  1A4:  	Set  *Var[B]  00000000 
  1B4:  	Set  *Var[C]  00000000 
  1C4:  	Exec     $Script_802464BC 
  1D0:  EndThread
  1D8:  Return
  1E0:  End

#new:Unknown $???_80246740
FFFFFF6F FFFFFF92 

#new:Unknown $???_80246748
F2486D98 F247316B F24C1E84 F24A7A80 F247BE80 F24E9480 F246A528 F251F729 
F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF 

#new:Script $Script_80246778
    0:  Call     FadeOutMusic 	( 00000000 00000BB8 )
   14:  Call     DisablePlayerInput 	( .True )
   24:  Call     DisablePartnerAI 	( 00000000 )
   34:  Call     SetNpcAnimation 	( .Npc:Partner 00000106 )
   48:  Wait     0000000A 
   54:  Call     DisablePlayerPhysics 	( .True )
   64:  Exec     $Script_80245024 
   70:  Set  *AreaByte[5]  00000002 
   80:  Set  *Var[0]  $???_80246748 
   90:  ExecWait $Script_8024513C 
   9C:  Call     ModifyColliderFlags 	( 00000000 {Collider:o1074} 7FFFFE00 )
   B4:  Set  *MapVar[0]  00000000 
   C4:  Set  *MapVar[1]  $???_80246748 
   D4:  Set  *MapVar[2]  00000001 
   E4:  Set  *MapFlag[00]  00000001 
   F4:  Label    0000000A 
  100:  If  *MapVar[B]  <  0000015E 
  110:  	Wait     00000001 
  11C:  	Goto     0000000A 
  128:  EndIf
  130:  Call     GotoMap     	( $ASCII_80248758 00000000 )
  144:  Set  *ToyTrain_Destination  00000002 
  154:  Wait     00000064 
  160:  Return
  168:  End

#new:Unknown $???_802468E8
F2486D98 F247316B F24EEE84 F2466080 F246A528 F244F4D4 F244F3C0 F242FDD8 
F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF 

#new:Script $Script_80246918
    0:  Call     FadeOutMusic 	( 00000000 00000BB8 )
   14:  Call     DisablePlayerInput 	( .True )
   24:  Call     DisablePartnerAI 	( 00000000 )
   34:  Call     SetNpcAnimation 	( .Npc:Partner 00000106 )
   48:  Wait     0000000A 
   54:  Call     DisablePlayerPhysics 	( .True )
   64:  Exec     $Script_80245024 
   70:  Set  *AreaByte[5]  00000002 
   80:  Set  *Var[0]  $???_802468E8 
   90:  ExecWait $Script_8024513C 
   9C:  Call     ModifyColliderFlags 	( 00000000 {Collider:o1074} 7FFFFE00 )
   B4:  Set  *MapVar[0]  00000000 
   C4:  Set  *MapVar[1]  $???_802468E8 
   D4:  Set  *MapVar[2]  00000001 
   E4:  Set  *MapFlag[00]  00000001 
   F4:  Label    0000000A 
  100:  If  *MapVar[B]  >  FFFFFEA2 
  110:  	Wait     00000001 
  11C:  	Goto     0000000A 
  128:  EndIf
  130:  Call     GotoMap     	( $ASCII_80248758 00000001 )
  144:  Set  *ToyTrain_Destination  00000001 
  154:  Wait     00000064 
  160:  Return
  168:  End

#new:Unknown $???_80246A88
F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24A7A80 
F247BE80 F247D306 F2470824 FFFFFFFF FFFFFFFF FFFFFFFF 

#new:Unknown $???_80246AC0
F250F60B F243CEBC F24DEA2E F25000B7 F244F44A F24E9480 F246A528 F24A7A80 
F247BE80 F2466080 F246A528 F244F4D4 F244F3C0 F242FDD8 F2429C51 FFFFFFFF 
FFFFFFFF FFFFFFFF 

#new:Script $Script_80246B08
    0:  Call     DisablePlayerInput 	( .True )
   10:  Call     DisablePlayerPhysics 	( .True )
   20:  Call     802D10D8 ( 0000000A )
   30:  Call     DisablePartnerAI 	( 00000000 )
   40:  Call     ModifyColliderFlags 	( 00000000 {Collider:o1074} 7FFFFE00 )
   58:  If  *AreaByte[6]  ==  00000002 
   68:  	Set  *MapVar[0]  00000000 
   78:  	Set  *MapVar[1]  $???_80246A88 
   88:  	Set  *MapVar[2]  00000002 
   98:  	Exec     $Script_80243D30 
   A4:  	Set  *MapFlag[00]  00000001 
   B4:  	Wait     00000001 
   C0:  	Exec     $Script_80244EF8 *Var[B] 
   D0:  	Label    0000000A 
   DC:  	If  *MapFlag[00]  ==  00000001 
   EC:  		Wait     00000001 
   F8:  		Goto     0000000A 
  104:  	EndIf
  10C:  	Wait     00000014 
  118:  	Kill     *Var[B] 
  124:  	Exec     $Script_80244F60 
  130:  	Call     $Function_80240000 ( )
  13C:  	Set  *Var[9]  $???_80246740 
  14C:  	ExecWait $Script_8024553C 
  158:  	Call     SayMessage0 	( 00000000 008C0004 008C0001 00000000 000F0010 ) % Station stop: Green Station! Welcome to Green Stat ...
  178:  	Call     ModifyColliderFlags 	( 00000001 {Collider:o1074} 7FFFFE00 )
  190:  	Call     DisablePlayerPhysics 	( .False )
  1A0:  	Call     EnablePartnerAI 	( )
  1AC:  	Call     DisablePlayerInput 	( .False )
  1BC:  Else
  1C4:  	Exec     $Script_80244EF8 
  1D0:  	Set  *MapVar[0]  00000000 
  1E0:  	Set  *MapVar[1]  $???_80246AC0 
  1F0:  	Set  *MapVar[2]  00000000 
  200:  	Exec     $Script_80243D30 
  20C:  	Set  *MapFlag[00]  00000001 
  21C:  	Wait     00000001 
  228:  	Exec     $Script_80245B9C 
  234:  	Label    00000014 
  240:  	If  *MapVar[B]  >  FFFFFEA2 
  250:  		Wait     00000001 
  25C:  		Goto     00000014 
  268:  	EndIf
  270:  	Call     GotoMap     	( $ASCII_80248758 00000001 )
  284:  	Set  *ToyTrain_Destination  00000001 
  294:  	Wait     00000064 
  2A0:  EndIf
  2A8:  Return
  2B0:  End

#new:Unknown $???_80246DC0
F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F249082F 
F2475AB4 FFFFFFFF FFFFFFFF FFFFFFFF 

#new:Unknown $???_80246DF0
F243FEF6 F243CEBC F24CAACD F244F4D4 F244F3C0 F2466080 F246A528 F24A7A80 
F247BE80 F24E9480 F246A528 F251F729 F2429C51 FFFFFFFF FFFFFFFF FFFFFFFF 

#new:Script $Script_80246E30
    0:  Call     DisablePlayerInput 	( .True )
   10:  Call     DisablePlayerPhysics 	( .True )
   20:  Call     802D10D8 ( 0000000A )
   30:  Call     DisablePartnerAI 	( 00000000 )
   40:  Call     ModifyColliderFlags 	( 00000000 {Collider:o1074} 7FFFFE00 )
   58:  If  *AreaByte[6]  ==  00000002 
   68:  	Set  *MapVar[0]  00000000 
   78:  	Set  *MapVar[1]  $???_80246DC0 
   88:  	Set  *MapVar[2]  00000002 
   98:  	Exec     $Script_80243D30 
   A4:  	Set  *MapFlag[00]  00000001 
   B4:  	Wait     00000001 
   C0:  	Exec     $Script_80244EF8 *Var[B] 
   D0:  	Label    0000000A 
   DC:  	If  *MapFlag[00]  ==  00000001 
   EC:  		Wait     00000001 
   F8:  		Goto     0000000A 
  104:  	EndIf
  10C:  	Wait     00000014 
  118:  	Kill     *Var[B] 
  124:  	Exec     $Script_80244F60 
  130:  	Call     $Function_80240000 ( )
  13C:  	Set  *Var[9]  $???_80246740 
  14C:  	ExecWait $Script_8024553C 
  158:  	Call     SayMessage0 	( 00000000 008C0004 008C0001 00000000 000F0010 ) % Station stop: Green Station! Welcome to Green Stat ...
  178:  	Call     ModifyColliderFlags 	( 00000001 {Collider:o1074} 7FFFFE00 )
  190:  	Call     DisablePlayerPhysics 	( .False )
  1A0:  	Call     EnablePartnerAI 	( )
  1AC:  	Call     DisablePlayerInput 	( .False )
  1BC:  Else
  1C4:  	Exec     $Script_80244EF8 
  1D0:  	Set  *MapVar[0]  00000000 
  1E0:  	Set  *MapVar[1]  $???_80246DF0 
  1F0:  	Set  *MapVar[2]  00000000 
  200:  	Exec     $Script_80243D30 
  20C:  	Set  *MapFlag[00]  00000001 
  21C:  	Wait     00000001 
  228:  	Exec     $Script_80245B9C 
  234:  	Label    00000014 
  240:  	If  *MapVar[B]  <  0000015E 
  250:  		Wait     00000001 
  25C:  		Goto     00000014 
  268:  	EndIf
  270:  	Call     GotoMap     	( $ASCII_80248758 00000000 )
  284:  	Set  *ToyTrain_Destination  00000002 
  294:  	Wait     00000064 
  2A0:  EndIf
  2A8:  Return
  2B0:  End

#new:IntTable $IntTable_802470E8
00000001 00000000 00000003 

#new:IntTable $IntTable_802470F4
00000003 00000000 00000001 

#new:Script $Script_80247100
    0:  If  *MapFlag[01]  ==  00000000 
   10:  	Call     SayMessage0 	( 00000000 008C0004 008C0001 00000000 000F0006 ) % Which way are you heading? Press one of those swit ...
   30:  Else
   38:  	If  *AreaFlag[002]  ==  00000000 
   48:  		Call     SayMessage0 	( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go? 
   68:  		If  *Flag_OMO_03  ==  00000000 
   78:  			Call     ShowChoice  	( 001E0040 ) % Pink Station Blue Station Don't get on 
   88:  			If  *Var[0]  !=  00000002 
   98:  				Call     802D0A98 ( )
   A4:  				UseIntBuffer $IntTable_802470E8 
   B0:  				Add  *Var[0]  00000001 
   C0:  				Loop     *Var[0] 
   CC:  					Get1Int  *Var[1] 
   D8:  				EndLoop
   E0:  				Set  *AreaByte[6]  *Var[1] 
   F0:  				ExecWait $Script_80246918 
   FC:  			Else
  104:  				Call     SayMessage2 	( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
  124:  			EndIf
  12C:  		Else
  134:  			Call     ShowChoice  	( 001E0041 ) % Pink Station Blue Station Red Station Don't get on ...
  144:  			If  *Var[0]  !=  00000003 
  154:  				Call     802D0A98 ( )
  160:  				UseIntBuffer $IntTable_802470E8 
  16C:  				Add  *Var[0]  00000001 
  17C:  				Loop     *Var[0] 
  188:  					Get1Int  *Var[1] 
  194:  				EndLoop
  19C:  				Set  *AreaByte[6]  *Var[1] 
  1AC:  				ExecWait $Script_80246918 
  1B8:  			Else
  1C0:  				Call     SayMessage2 	( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
  1E0:  			EndIf
  1E8:  		EndIf
  1F0:  	Else
  1F8:  		Switch  *StoryProgress 
  204:  			Case  <  00000000 
  210:  				Call     SayMessage0 	( 00000000 008C0006 008C0002 00000000 000F0016 ) % We can't go to Red Station.  The tracks are broken ...
  230:  			Case  >=  00000000 
  23C:  				Call     SayMessage0 	( 00000000 008C0004 008C0001 00000000 000F0007 ) % Where would you like to go? 
  25C:  				Call     ShowChoice  	( 001E003F ) % Red Station Blue Station Pink Station Don't get on ...
  26C:  				If  *Var[0]  !=  00000003 
  27C:  					Call     802D0A98 ( )
  288:  					UseIntBuffer $IntTable_802470F4 
  294:  					Add  *Var[0]  00000001 
  2A4:  					Loop     *Var[0] 
  2B0:  						Get1Int  *Var[1] 
  2BC:  					EndLoop
  2C4:  					Set  *AreaByte[6]  *Var[1] 
  2D4:  					ExecWait $Script_80246778 
  2E0:  				Else
  2E8:  					Call     SayMessage2 	( 00000000 008C0004 008C0001 00000000 000F0008 ) % Please ride with us again, OK?
  308:  				EndIf
  310:  		EndSwitch
  318:  	EndIf
  320:  EndIf
  328:  Return
  330:  End

#new:Unknown $???_80247438
F2486D98 F247316B F24C1E84 FFFFFFFF FFFFFFFF FFFFFFFF 

#new:Script $Script_80247450
    0:  ExecWait $Script_80246558 
    C:  Call     GetLoadType 	( *Var[1] )
   1C:  If  *Var[1]  ==  00000001 
   2C:  	Set  *MapVar[0]  00000000 
   3C:  	Set  *MapVar[1]  $???_80247438 
   4C:  	Set  *MapVar[2]  00000000 
   5C:  	Exec     $Script_80243D30 
   68:  	Set  *MapFlag[00]  00000001 
   78:  Else
   80:  	Call     GetEntryID  	( *Var[0] )
   90:  	Switch  *Var[0] 
   9C:  		Case  ==  00000001 
   A8:  			Exec     $Script_80246E30 
   B4:  		Case  ==  00000002 
   C0:  			Exec     $Script_80246B08 
   CC:  		Default
   D4:  			Set  *MapVar[0]  00000000 
   E4:  			Set  *MapVar[1]  $???_80247438 
   F4:  			Set  *MapVar[2]  00000000 
  104:  			Exec     $Script_80243D30 
  110:  			Set  *MapFlag[00]  00000001 
  120:  	EndSwitch
  128:  EndIf
  130:  Return
  138:  End

#new:Script $Script_80247590
    0:  Call     MakeEntity  	( .Entity:SavePoint {Vec4d:Entity80247590} 80000000 )
   24:  Call     MakeEntity  	( .Entity:HiddenYellowBlock {Vec4d:Entity802475B4} .Item:FireFlower 80000000 )
   4C:  Call     AssignBlockFlag 	( *Flag_OMO_2F )
   5C:  Call     MakeEntity  	( .Entity:HiddenPanel {Vec4d:Entity802475EC} {Model:soto} 80000000 )
   84:  Call     AssignPanelFlag 	( *Flag_OMO_5E )
   94:  Return
   9C:  End

PADDING: 80247634 to 80247640 (00007634 to 00007640)
00000000 00000000 00000000 

#new:Script $Script_80247640
    0:  Return
    8:  End

#new:NpcSettings $NpcSettings_80247650
00000000 00200018 $Script_80247640 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00630000 

#new:AISettings $AISettings_8024767C
    2.0 % move speed
    60` % move time
    15` % wait time
  100.0 % alert radius
   30.0
    4`
    4.0 % chase speed
    6`
    1`
  140.0 % chase radius
   30.0
    1`

#new:Script $Script_NpcAI_802476AC
    0:  Call     $Function_80240AA8 ( $AISettings_8024767C )
   10:  Return
   18:  End

#new:NpcSettings $NpcSettings_802476CC
00000000 00170016 00000000 00000000 $Script_NpcAI_802476AC 80077F70 00000000 8007809C 
00000000 00000000 000E0001 

#new:Script $Script_802476F8
    0:  Call     DisablePlayerInput 	( .True )
   10:  ExecWait $Script_80247100 
   1C:  Call     DisablePlayerInput 	( .False )
   2C:  Return
   34:  End

#new:Script $Script_Init_80247734
    0:  Call     BindNpcInteract 	( .Npc:Self $Script_802476F8 )
   14:  Return
   1C:  End

#new:Script $Script_80247758
    0:  Switch  *StoryProgress 
    C:  	Case  <  00000000 
   18:  		Call     FindKeyItem 	( .Item:MysteryNote *Var[0] )
   2C:  		If  *Var[0]  ==  FFFFFFFF 
   3C:  			If  *Flag_OMO_30  ==  00000000 
   4C:  				Call     SayMessage0 	( .Npc:Self 008C0304 008C0301 00000000 000F002B ) % This is Green Station. I'm certainly feeling green ...
   6C:  			Else
   74:  				If  *Flag_OMO_31  ==  00000000 
   84:  					Call     SayMessage0 	( .Npc:Self 008C0304 008C0301 00000000 000F002C ) % I witnessed a Shy Guy with a book running to the r ...
   A4:  				Else
   AC:  					Call     SayMessage0 	( .Npc:Self 008C0304 008C0301 00000000 000F002F ) % It looks like the Shy Guys are really robbing Toad ...
   CC:  				EndIf
   D4:  			EndIf
   DC:  		Else
   E4:  			Call     SayMessage0 	( .Npc:Self 008C0304 008C0301 00000000 000F002D ) % That Memo you have is written in Shy Guy language. ...
  104:  		EndIf
  10C:  	Case  <  00000002 
  118:  		Call     SayMessage0 	( .Npc:Self 008C0304 008C0301 00000000 000F002E ) % We can go to Red Station now! Great! Feel free to  ...
  138:  	Case  <  00000004 
  144:  		Call     SayMessage0 	( .Npc:Self 008C0304 008C0301 00000000 000F002F ) % It looks like the Shy Guys are really robbing Toad ...
  164:  	Default
  16C:  		Call     SayMessage0 	( .Npc:Self 008C0304 008C0301 00000000 000F0030 ) % I'm sure the Shy Guys are going to knock it off fo ...
  18C:  EndSwitch
  194:  Return
  19C:  End

#new:Script $Script_Init_802478FC
    0:  Call     BindNpcInteract 	( .Npc:Self $Script_80247758 )
   14:  Return
   1C:  End

#new:Script $Script_80247920
    0:  Loop     
    C:  	Call     GetOwnerVar 	( 00000000 *Var[0] )
   20:  	Switch  *Var[0] 
   2C:  		Case  ==  00000000 
   38:  			Call     GetNpcPos   	( .Npc:Self *Var[0] *Var[1] *Var[2] )
   54:  			If  *Var[1]  ==  00000000 
   64:  				Call     SetOwnerVar 	( 00000000 00000001 )
   78:  				Call     BindNpcAI   	( .Npc:Self $Script_NpcAI_802476AC )
   8C:  			EndIf
   94:  		Case  ==  00000002 
   A0:  			Call     DisablePlayerInput 	( .True )
   B0:  			Wait     00000019 
   BC:  			Call     SetNpcPos   	( .Npc:Self 00000000 FFFFFC18 00000000 )
   D8:  			Call     SetNpcFlagBits ( .Npc:Self 00000002 .False )
   F0:  			Call     SetNpcFlagBits ( .Npc:Self 00000040 .True )
  108:  			Call     SetOwnerVar 	( 00000000 00000000 )
  11C:  			Call     DisablePlayerInput 	( .False )
  12C:  	EndSwitch
  134:  	Wait     00000001 
  140:  EndLoop
  148:  Return
  150:  End

#new:Script $Script_80247A78
    0:  Call     GetBattleOutcome 	( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  00000000 
   28:  		Call     SetOwnerVar 	( 00000000 00000002 )
   3C:  		Call     BindNpcAI   	( .Npc:Self $Script_80247920 )
   50:  		Call     DoNpcDefeat 	( )
   5C:  	Case  ==  00000001 
   68:  	Case  ==  00000002 
   74:  EndSwitch
   7C:  Return
   84:  End

#new:Script $Script_Init_80247B04
    0:  Call     BindNpcIdle 	( .Npc:Self $Script_80247920 )
   14:  Call     BindNpcDefeat 	( .Npc:Self $Script_80247A78 )
   28:  Return
   30:  End

#new:NpcGroup $NpcGroup_80247B3C
00000000 $NpcSettings_80247650 {Vec3f:NPC_80247B3C} % -145 50 -110
00400D05 $Script_Init_80247734 00000000 00000000 0000010E 
{NoItems} {NoHP} {NoFP} {NoCoinBonus}
{Movement:NPC_80247B3C}
008C0001 008C0003 008C0001 008C0001 008C0001 008C0001 008C0001 008C0001 
008C0001 008C0001 008C0001 008C0001 008C0001 008C0001 008C0001 008C0001 
00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...
% 
% $NpcGroup_80247B3C[1F0]
00000001 $NpcSettings_80247650 {Vec3f:NPC_80247D2C} % -250 0 50
00400D05 $Script_Init_802478FC 00000000 00000000 0000005A 
{NoItems} {NoHP} {NoFP} {NoCoinBonus}
{Movement:NPC_80247D2C}
008C0301 008C0301 008C0301 008C0301 008C0301 008C0301 008C0301 008C0301 
008C0301 008C0301 008C0301 008C0301 008C0301 008C0301 008C0301 008C0301 
00000000 00000000 00000000 001A00B8 % He's an employee of the Toy Box station. The emplo ...

#new:NpcGroup $NpcGroup_80247F1C
00000002 $NpcSettings_802476CC {Vec3f:NPC_80247F1C} % 0 -1000 0
00200F04 $Script_Init_80247B04 00000000 00000000 0000010E 
{NoItems} {NoHP} {NoFP} {NoCoinBonus}
{Movement:NPC_80247F1C}
003B0001 003B0002 003B0003 003B0003 003B0001 003B0001 003B000C 003B000C 
003B0015 003B0012 003B0011 003B0010 003B0005 003B0001 003B0001 003B0001 
00000000 00000000 00000000 00000000 % no tattle string

#new:NpcGroup $NpcGroup_8024810C
00000003 $NpcSettings_802476CC {Vec3f:NPC_8024810C} % 0 -1000 0
00200F04 $Script_Init_80247B04 00000000 00000000 0000010E 
{NoItems} {NoHP} {NoFP} {NoCoinBonus}
{Movement:NPC_8024810C}
003B0001 003B0002 003B0003 003B0003 003B0001 003B0001 003B000C 003B000C 
003B0015 003B0012 003B0011 003B0010 003B0005 003B0001 003B0001 003B0001 
00000000 00000000 00000000 00000000 % no tattle string

#new:NpcGroup $NpcGroup_802482FC
00000004 $NpcSettings_802476CC {Vec3f:NPC_802482FC} % 0 -1000 0
00200F04 $Script_Init_80247B04 00000000 00000000 0000010E 
{NoItems} {NoHP} {NoFP} {NoCoinBonus}
{Movement:NPC_802482FC}
003B0001 003B0002 003B0003 003B0003 003B0001 003B0001 003B000C 003B000C 
003B0015 003B0012 003B0011 003B0010 003B0005 003B0001 003B0001 003B0001 
00000000 00000000 00000000 00000000 % no tattle string

#new:NpcGroup $NpcGroup_802484EC
00000005 $NpcSettings_802476CC {Vec3f:NPC_802484EC} % 0 -1000 0
00200F04 $Script_Init_80247B04 00000000 00000000 0000010E 
{NoItems} {NoHP} {NoFP} {NoCoinBonus}
{Movement:NPC_802484EC}
003B0001 003B0002 003B0003 003B0003 003B0001 003B0001 003B000C 003B000C 
003B0015 003B0012 003B0011 003B0010 003B0005 003B0001 003B0001 003B0001 
00000000 00000000 00000000 00000000 % no tattle string

#new:NpcGroupList $NpcGroupList_802486DC
00000002 $NpcGroup_80247B3C 00000000 
00000001 $NpcGroup_80247F1C 120A0007 
00000001 $NpcGroup_8024810C 120A0007 
00000001 $NpcGroup_802482FC 120A0007 
00000001 $NpcGroup_802484EC 120A0007 
00000000 00000000 00000000 

PADDING: 80248724 to 80248730 (00008724 to 00008730)
00000000 00000000 00000000 

#new:ASCII $ASCII_80248730
omo_09

#new:ASCII $ASCII_80248738
omo_10

#new:ASCII $ASCII_80248740
omo_08

#new:ASCII $ASCII_80248748
omo_06

#new:ASCII $ASCII_80248750
omo_03

#new:ASCII $ASCII_80248758
omo_16

#new:ConstDouble $ConstDouble_80248760
0.600000d

#new:ConstDouble $ConstDouble_80248768
0.600000d

#new:JumpTable $JumpTable_80248770
$Function_80240AA8[1E4] $Function_80240AA8[1F4] $Function_80240AA8[20C] $Function_80240AA8[21C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[234] $Function_80240AA8[244] 
$Function_80240AA8[25C] $Function_80240AA8[26C] $Function_80240AA8[28C] $Function_80240AA8[2AC] 
$Function_80240AA8[2CC] $Function_80240AA8[2EC] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] 
$Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[30C] $Function_80240AA8[304] 

