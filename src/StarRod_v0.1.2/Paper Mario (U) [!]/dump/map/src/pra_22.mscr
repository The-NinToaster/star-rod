% Script File: pra_22.mscr
% Decoded from: 0 to 1170 (pra_22)

#new:Function_Init $Function_Init
    0:  LAW       V1, 8007419C
    8:  ADDIU     V0, R0, 1
    C:  SB        V0, 84 (V1)
   10:  JR        RA
   14:  DADDU     V0, R0, R0

PADDING: 80240018 to 80240020 (00000018 to 00000020)
00000000 00000000 

#new:Function $Function_80240020
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       {Func:GetVariable}
   18:  LW        A1, 0 (V0)
   1C:  DADDU     A2, V0, R0
   20:  LAH       A1, 8015A550
   28:  LIA       A0, 8010EFC8
   30:  BEQ       A1, A2, .o44
   34:  ADDIU     V0, R0, 14
   38:  LB        V1, B4 (A0)
   3C:  BEQ       V1, V0, .o58
   40:  NOP
        .o44
   44:  LW        V0, 14 (A0)
   48:  LUI       V1, FFFF
   4C:  AND       V0, V0, V1
   50:  BEQ       V0, R0, .o68
   54:  NOP
        .o58
   58:  JAL       800E5DA4
   5C:  DADDU     A0, R0, R0
   60:  BEQ       R0, R0, .oA8
   64:  SW        R0, 84 (S0)
        .o68
   68:  BNEL      A1, A2, .oA8
   6C:  SW        R0, 84 (S0)
   70:  LB        V1, B4 (A0)
   74:  ADDIU     V0, R0, 14
   78:  BEQ       V1, V0, .o90
   7C:  ADDIU     V0, R0, 1
   80:  BEQ       V1, V0, .o90
   84:  ADDIU     V0, R0, 2
   88:  BNEL      V1, V0, .oAC
   8C:  SW        R0, 84 (S0)
        .o90
   90:  LW        V0, 4 (A0)
   94:  ANDI      V0, V0, 1
   98:  BNEL      V0, R0, .oA8
   9C:  SW        R0, 84 (S0)
   A0:  ADDIU     V0, R0, 1
   A4:  SW        V0, 84 (S0)
        .oA8
   A8:  ADDIU     V0, R0, 2
        .oAC
   AC:  LW        RA, 14 (SP)
   B0:  LW        S0, 10 (SP)
   B4:  JR        RA
   B8:  ADDIU     SP, SP, 18

#new:Function $Function_802400DC
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 34 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S0, 30 (SP)
   10:  LIA       S0, 8010EFC8
   18:  SW        RA, 38 (SP)
   1C:  LWC1      F0, 84 (S1)
   20:  CVT.S.W   F0, F0
   24:  ADDIU     V0, SP, 2C
   28:  DADDU     A0, R0, R0
   2C:  ADDIU     A1, SP, 20
   30:  ADDIU     A2, SP, 24
   34:  SWC1      F0, 28 (S0)
   38:  SWC1      F0, 20 (SP)
   3C:  LWC1      F0, 2C (S0)
   40:  LIF       F2, 10.0
   48:  LWC1      F4, 30 (S0)
   4C:  LIF       F6, 300.0
   54:  ADD.S     F0, F0, F2
   58:  SWC1      F4, 28 (SP)
   5C:  SWC1      F6, 2C (SP)
   60:  SWC1      F0, 24 (SP)
   64:  LIF       F0, 270.0
   6C:  LH        V1, B2 (S0)
   70:  ADDIU     A3, SP, 28
   74:  SW        V0, 10 (SP)
   78:  SWC1      F0, 14 (SP)
   7C:  MTC1      V1, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  JAL       800DC778
   8C:  SWC1      F0, 18 (SP)
   90:  LWC1      F0, 20 (SP)
   94:  LWC1      F2, 28 (SP)
   98:  SWC1      F0, 28 (S0)
   9C:  SWC1      F2, 30 (S0)
   A0:  SW        R0, AC (S1)
   A4:  LWC1      F2, 2C (S0)
   A8:  LWC1      F0, 24 (SP)
   AC:  C.EQ.S    F2, F0
   B0:  NOP
   B4:  BC1T      .oDC
   B8:  NOP
   BC:  SW        R0, 2C (S0)
   C0:  LW        V0, 90 (S1)
   C4:  ADDIU     V0, V0, 1
   C8:  SW        V0, 90 (S1)
   CC:  SLTI      V0, V0, 1E
   D0:  BNE       V0, R0, .oDC
   D4:  ADDIU     V0, R0, 1
   D8:  SW        V0, AC (S1)
        .oDC
   DC:  LW        RA, 38 (SP)
   E0:  LW        S1, 34 (SP)
   E4:  LW        S0, 30 (SP)
   E8:  ADDIU     V0, R0, 2
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 40

#new:Function $Function_802401D0
    0:  LIA       V1, 8010EFC8
    8:  LWC1      F2, 80 (V1)
    C:  MTC1      R0, F0
   10:  NOP
   14:  C.LE.S    F0, F2
   18:  NOP
   1C:  BC1F      .o48
   20:  NOP
   24:  LIF       F0, 180.0
   2C:  NOP
   30:  C.LT.S    F2, F0
   34:  NOP
   38:  BC1F      .o54
   3C:  ADDIU     V0, R0, 1A9
   40:  SW        V0, 84 (A0)
   44:  LWC1      F2, 80 (V1)
        .o48
   48:  LIF       F0, 180.0
   50:  NOP
        .o54
   54:  C.LE.S    F0, F2
   58:  NOP
   5C:  BC1F      .o84
   60:  NOP
   64:  LIF       F0, 360.0
   6C:  NOP
   70:  C.LT.S    F2, F0
   74:  NOP
   78:  BC1F      .o84
   7C:  ADDIU     V0, R0, 145
   80:  SW        V0, 84 (A0)
        .o84
   84:  JR        RA
   88:  ADDIU     V0, R0, 2

#new:Function $Function_8024025C
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  LIA       V0, 8010EFC8
   14:  SW        RA, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LH        V1, 18 (V0)
   20:  BNE       V1, R0, .o38
   24:  DADDU     S0, V0, R0
   28:  LIO       A1, *MapVar[0]
   30:  JAL       {Func:SetVariable}
   34:  DADDU     A2, R0, R0
        .o38
   38:  LH        V1, 18 (S0)
   3C:  ADDIU     V0, R0, FF38
   40:  BNE       V1, V0, .o58
   44:  DADDU     A0, S1, R0
   48:  LIO       A1, *MapVar[0]
   50:  JAL       {Func:SetVariable}
   54:  ADDIU     A2, R0, 1
        .o58
   58:  LW        RA, 18 (SP)
   5C:  LW        S1, 14 (SP)
   60:  LW        S0, 10 (SP)
   64:  DADDU     V0, R0, R0
   68:  JR        RA
   6C:  ADDIU     SP, SP, 20

PADDING: 802402CC to 802402D0 (000002CC to 000002D0)
00000000 

#new:EntryList $EntryList
{Vec4f:Entry0} %  126.0    0.0  137.0    0.0
{Vec4f:Entry1} %  487.0 -200.0   70.0  270.0

#new:Header $Header
00000000 00000000 00000000 00000000 
$Script_Main $EntryList 00000002 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00190148 

#new:Script $Script_80240330
    0:  Call     SetMusicTrack 	( 00000000 .Song:CrystalPalace 00000000 00000008 )
   1C:  Call     UseDoorSounds 	( 00000000 )
   2C:  Return
   34:  End

PADDING: 8024036C to 80240370 (0000036C to 00000370)
00000000 

#new:Unknown $???_80240370
0000002D FFFFFFFF 

#new:Unknown $???_80240378
0000002F FFFFFFFF 

#new:Script $Script_80240380
    0:  SetGroup 0000001B 
    C:  Call     DisablePlayerInput 	( .True )
   1C:  Set  *Var[0]  00000000 
   2C:  Set  *Var[1]  0000000C 
   3C:  Set  *Var[2]  0000002A 
   4C:  Set  *Var[3]  00000001 
   5C:  Exec     ExitSingleDoor 
   68:  Wait     00000011 
   74:  Call     GotoMap     	( $ASCII_80241160 00000004 )
   88:  Wait     00000064 
   94:  Return
   9C:  End

#new:Script $Script_80240424
    0:  SetGroup 0000001B 
    C:  Call     DisablePlayerInput 	( .True )
   1C:  Set  *Var[0]  00000001 
   2C:  Set  *Var[1]  00000019 
   3C:  Set  *Var[2]  $???_80240370 
   4C:  Set  *Var[3]  $???_80240378 
   5C:  Exec     80285EEC 
   68:  Wait     00000011 
   74:  Call     GotoMap     	( $ASCII_80241168 00000000 )
   88:  Wait     00000064 
   94:  Return
   9C:  End

#new:Script $Script_802404C8
    0:  Bind     $Script_80240380 .Trigger:WallPressA {Collider:deilittssw} 00000001 00000000 
   1C:  Bind     $Script_80240424 .Trigger:WallPressA {Collider:deilittsse} 00000001 00000000 
   38:  Return
   40:  End

#new:Script $Script_80240510
    0:  Call     GetLoadType 	( *Var[1] )
   10:  If  *Var[1]  ==  00000001 
   20:  	Exec     EnterSavePoint 
   2C:  	Exec     $Script_802404C8 
   38:  	Return
   40:  EndIf
   48:  Call     GetEntryID  	( *Var[0] )
   58:  Switch  *Var[0] 
   64:  	Case  ==  00000000 
   70:  		Set  *Var[2]  0000002A 
   80:  		Set  *Var[3]  00000001 
   90:  		ExecWait EnterSingleDoor 
   9C:  	Case  ==  00000001 
   A8:  		Set  *Var[2]  $???_80240370 
   B8:  		Set  *Var[3]  $???_80240378 
   C8:  		ExecWait 802861B0 
   D4:  EndSwitch
   DC:  Exec     $Script_802404C8 
   E8:  Return
   F0:  End

#new:Script $Script_80240608
    0:  Loop     0000001E 
    C:  	Call     802D2B0C ( *Var[A] )
   1C:  	If  *Var[A]  !=  00000000 
   2C:  		Set  *Var[8]  FFFFFFFF 
   3C:  		Return
   44:  	EndIf
   4C:  	Call     $Function_80240020 ( *Var[9] )
   5C:  	If  *Var[0]  ==  00000000 
   6C:  		Set  *Var[8]  FFFFFFFF 
   7C:  		Return
   84:  	Else
   8C:  		Call     802D10D8 ( 00000014 )
   9C:  	EndIf
   A4:  	Wait     00000001 
   B0:  EndLoop
   B8:  Call     802D2B0C ( *Var[A] )
   C8:  If  *Var[A]  !=  00000000 
   D8:  	Set  *Var[8]  FFFFFFFF 
   E8:  	Return
   F0:  EndIf
   F8:  Call     DisablePlayerInput 	( .True )
  108:  Thread
  110:  	Call     ShakeCam    	( .Default 00000000 00000064 *Fixed[0.60058594] )
  12C:  EndThread
  134:  Thread
  13C:  	If  *Var[6]  >=  *Var[7] 
  14C:  		Call     InterpPlayerYaw 	( 0000010E 00000000 )
  160:  	Else
  168:  		Call     InterpPlayerYaw 	( 0000005A 00000000 )
  17C:  	EndIf
  184:  	Call     802D10D8 ( 00000014 )
  194:  	Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
  1AC:  	Set  *Var[1]  *Var[0] 
  1BC:  	Set  *Var[2]  *Var[7] 
  1CC:  	Sub  *Var[2]  *Var[6] 
  1DC:  	Add  *Var[1]  *Var[2] 
  1EC:  	Call     MakeLerp    	( *Var[0] *Var[1] 00000064 00000000 )
  208:  	Set  *Var[3]  00000000 
  218:  	Loop     
  224:  		Call     802D10D8 ( 00000014 )
  234:  		Call     UpdateLerp  	( )
  240:  		Call     $Function_802400DC ( )
  24C:  		If  *Var[A]  ==  00000001 
  25C:  			BreakLoop
  264:  		EndIf
  26C:  		Wait     00000001 
  278:  		If  *Var[1]  ==  00000000 
  288:  			BreakLoop
  290:  		EndIf
  298:  	EndLoop
  2A0:  	Call     802D10D8 ( 00000000 )
  2B0:  	Wait     00000001 
  2BC:  	If  *Var[A]  ==  00000001 
  2CC:  		Call     DisablePlayerPhysics 	( .True )
  2DC:  		Wait     00000001 
  2E8:  		Call     SetPlayerAnimation 	( 00080002 )
  2F8:  		Wait     0000000F 
  304:  		Call     SetPlayerAnimation 	( 00010002 )
  314:  		Wait     00000001 
  320:  		Call     DisablePlayerPhysics 	( .False )
  330:  		Call     802D10D8 ( 00000008 )
  340:  		Wait     00000001 
  34C:  	EndIf
  354:  	Call     DisablePlayerInput 	( .False )
  364:  EndThread
  36C:  Call     MakeLerp    	( *Var[6] *Var[7] 00000064 00000000 )
  388:  Call     PlaySoundAtCollider 	( {Collider:o1064} 80000010 00000000 )
  3A0:  Loop     
  3AC:  	Call     UpdateLerp  	( )
  3B8:  	Call     TranslateModel ( {Model:o1005} *Var[0] 00000000 00000000 )
  3D4:  	Call     TranslateModel ( {Model:o1006} *Var[0] 00000000 00000000 )
  3F0:  	Call     TranslateModel ( {Model:o1007} *Var[0] 00000000 00000000 )
  40C:  	Call     TranslateModel ( {Model:o1008} *Var[0] 00000000 00000000 )
  428:  	Call     TranslateModel ( {Model:o1009} *Var[0] 00000000 00000000 )
  444:  	Call     UpdateColliderTransform 	( {Collider:o1064} )
  454:  	Wait     00000001 
  460:  	If  *Var[1]  ==  00000000 
  470:  		BreakLoop
  478:  	EndIf
  480:  EndLoop
  488:  Call     802D62B8 ( 80000010 )
  498:  Return
  4A0:  End

#new:Script $Script_80240AB0
    0:  Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   18:  If  *Var[0]  <=  00000151 
   28:  	Set  *Var[6]  00000000 
   38:  	Set  *Var[7]  00000032 
   48:  	Set  *Var[8]  00000002 
   58:  EndIf
   60:  If  *Var[0]  >=  0000019D 
   70:  	Set  *Var[6]  00000000 
   80:  	Set  *Var[7]  FFFFFFCE 
   90:  	Set  *Var[8]  00000001 
   A0:  Else
   A8:  	Return
   B0:  EndIf
   B8:  Set  *Var[9]  0000001C 
   C8:  ExecWait $Script_80240608 
   D4:  If  *Var[8]  !=  FFFFFFFF 
   E4:  	Set  *StoryProgress  00000054 
   F4:  	Set  *Byte_PRA_03  *Var[8] 
  104:  	Thread
  10C:  		Call     ShakeCam    	( .Default 00000000 0000000A *Fixed[1.0] )
  128:  	EndThread
  130:  	Unbind
  138:  EndIf
  140:  Return
  148:  End

#new:Script_Main $Script_Main
    0:  Set  *WorldMapLocation  00000015 
   10:  Call     SetSpriteShading 	( FFFFFFFF )
   20:  Call     SetCamPerspective 	( .Default 00000003 00000019 00000010 00001000 )
   40:  Call     SetCamBGColor 	( .Default 00000018 00000018 00000028 )
   5C:  Call     SetCamFlag4 	( .Default .False )
   70:  Call     SetCamFlag2 	( .Default .True )
   84:  ExecWait $Script_80241088 
   90:  Exec     $Script_80240330 
   9C:  If  *StoryProgress  <  00000054 
   AC:  	Bind     $Script_80240AB0 .Trigger:WallPush {Collider:o1064} 00000001 00000000 
   C8:  	Set  *Var[0]  00000000 
   D8:  Else
   E0:  	Switch  *Byte_PRA_03 
   EC:  		Case  ==  00000000 
   F8:  			Set  *Var[0]  FFFFFFCE 
  108:  		Case  ==  00000001 
  114:  			Set  *Var[0]  FFFFFFCE 
  124:  		Case  ==  00000002 
  130:  			Set  *Var[0]  00000032 
  140:  	EndSwitch
  148:  EndIf
  150:  Call     ParentColliderToModel 	( {Collider:o1064} {Model:o1005} )
  164:  Call     TranslateModel ( {Model:o1005} *Var[0] 00000000 00000000 )
  180:  Call     TranslateModel ( {Model:o1006} *Var[0] 00000000 00000000 )
  19C:  Call     TranslateModel ( {Model:o1007} *Var[0] 00000000 00000000 )
  1B8:  Call     TranslateModel ( {Model:o1008} *Var[0] 00000000 00000000 )
  1D4:  Call     TranslateModel ( {Model:o1009} *Var[0] 00000000 00000000 )
  1F0:  Call     UpdateColliderTransform 	( {Collider:o1064} )
  200:  Exec     $Script_80240510 
  20C:  Wait     00000001 
  218:  Return
  220:  End

PADDING: 80240E28 to 80240E30 (00000E28 to 00000E30)
00000000 00000000 

#new:Script $Script_80240E30
    0:  Label    00000000 
    C:  Call     GetPlayerPos 	( *Var[0] *Var[1] *Var[2] )
   24:  If  *Var[1]  >=  *Var[3] 
   34:  	Set  *Var[1]  *Var[3] 
   44:  EndIf
   4C:  Call     802CAF2C ( 00000000 *Var[0] *Var[1] *Var[2] )
   68:  Wait     00000001 
   74:  Goto     00000000 
   80:  Return
   88:  End

#new:Script $Script_80240EC0
    0:  Call     DisablePlayerInput 	( .True )
   10:  Call     DisablePlayerPhysics 	( .True )
   20:  Call     802D10D8 ( 00000006 )
   30:  Call     GetPlayerPos 	( *Var[7] *Var[8] *Var[9] )
   48:  If  *MapVar[0]  ==  00000000 
   58:  	Set  *Var[3]  FFFFFF51 
   68:  	Exec     $Script_80240E30 *Var[A] 
   78:  	Call     $Function_802401D0 ( )
   84:  	Set  *Var[1]  FFFFFF38 
   94:  	Set  *Var[2]  0000000F 
   A4:  	Call     SetPlayerJumpscale 	( *Fixed[2.0] )
   B4:  Else
   BC:  	Set  *Var[3]  00000000 
   CC:  	Exec     $Script_80240E30 *Var[A] 
   DC:  	If  *Byte_PRA_03  ==  00000002 
   EC:  		Set  *Var[0]  00000154 
   FC:  	Else
  104:  		Set  *Var[0]  0000019A 
  114:  	EndIf
  11C:  	Set  *Var[1]  00000000 
  12C:  	Set  *Var[2]  00000023 
  13C:  	Call     SetPlayerJumpscale 	( *Fixed[0.7001953] )
  14C:  EndIf
  154:  Call     PlayerJump  	( *Var[0] *Var[1] *Var[9] *Var[2] )
  170:  Kill     *Var[A] 
  17C:  Call     802D10D8 ( 00000000 )
  18C:  Wait     00000002 
  198:  Call     DisablePlayerPhysics 	( .False )
  1A8:  Call     DisablePlayerInput 	( .False )
  1B8:  Return
  1C0:  End

#new:Script $Script_80241088
    0:  Thread
    8:  	Call     $Function_8024025C ( )
   14:  EndThread
   1C:  Call     MakeEntity  	( .Entity:ScriptSpring {Vec4d:Entity802410A4} 80000000 )
   40:  Call     AssignScript 	( $Script_80240EC0 )
   50:  Call     MakeEntity  	( .Entity:HiddenYellowBlock {Vec4d:Entity802410D8} .Item:JamminJelly 80000000 )
   78:  Call     AssignBlockFlag 	( *Flag_PRA_15 )
   88:  Call     MakeEntity  	( .Entity:HiddenPanel {Vec4d:Entity80241110} {Model:o1088} 80000000 )
   B0:  Call     AssignPanelFlag 	( *Flag_PRA_16 )
   C0:  Return
   C8:  End

PADDING: 80241158 to 80241160 (00001158 to 00001160)
00000000 00000000 

#new:ASCII $ASCII_80241160
pra_20

#new:ASCII $ASCII_80241168
pra_37

