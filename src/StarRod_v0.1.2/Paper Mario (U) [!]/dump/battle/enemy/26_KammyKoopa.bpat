% Automatically dumped from section 26

#new:Actor $26_KammyKoopa
% stats
[Index]        87b 
[Level]        99`b 
[MaxHP]        10`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80218624_26 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_802186D0_26 
[Script]      $Script_Init_80218740_26 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         24`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Function $Function_80218000_26
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  SW        S1, 14 (SP)
    C:  SW        S0, 10 (SP)
   10:  JAL       {Func:GetActor}
   14:  LW        A0, 148 (A0)
   18:  LIA       S0, $???_802187E4_26
   20:  LW        V1, 0 (S0)
   24:  DADDU     S1, V0, R0
   28:  ADDIU     V1, V1, 9
   2C:  MTC1      V1, F12
   30:  NOP
   34:  CVT.S.W   F12, F12
   38:  JAL       80029B24
   3C:  SW        V1, 0 (S0)
   40:  TRUNC.W.S F4, F0
   44:  MFC1      V0, F4
   48:  LIO       AT, 40C90FD0
   50:  MTC1      AT, F0
   54:  MTC1      V0, F12
   58:  NOP
   5C:  CVT.S.W   F12, F12
   60:  MUL.S     F12, F12, F0
   64:  NOP
   68:  LIF       F0, 360.0
   70:  SW        V0, 0 (S0)
   74:  JAL       {Func:SinRad}
   78:  DIV.S     F12, F12, F0
   7C:  LIF       F2, 3.0
   84:  NOP
   88:  MUL.S     F0, F0, F2
   8C:  NOP
   90:  TRUNC.W.S F4, F0
   94:  MFC1      V1, F4
   98:  NOP
   9C:  SB        V1, 19A (S1)
   A0:  LW        RA, 18 (SP)
   A4:  LW        S1, 14 (SP)
   A8:  LW        S0, 10 (SP)
   AC:  ADDIU     V0, R0, 2
   B0:  JR        RA
   B4:  ADDIU     SP, SP, 20

#new:Function $Function_802180B8_26
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  DADDU     A0, S1, R0
   40:  JAL       {Func:GetVariable}
   44:  DADDU     S2, V0, R0
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  MTC1      V0, F24
   54:  NOP
   58:  CVT.S.W   F24, F24
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     A0, S1, R0
   64:  LW        A1, 0 (S0)
   68:  MTC1      V0, F22
   6C:  NOP
   70:  CVT.S.W   F22, F22
   74:  JAL       {Func:GetVariable}
   78:  DADDU     A0, S1, R0
   7C:  MTC1      V0, F20
   80:  NOP
   84:  CVT.S.W   F20, F20
   88:  JAL       801105E8
   8C:  DADDU     A0, S2, R0
   90:  DADDU     V1, V0, R0
   94:  SWC1      F24, 48 (V1)
   98:  SWC1      F22, 4C (V1)
   9C:  SWC1      F20, 50 (V1)
   A0:  LW        RA, 1C (SP)
   A4:  LW        S2, 18 (SP)
   A8:  LW        S1, 14 (SP)
   AC:  LW        S0, 10 (SP)
   B0:  LDC1      F24, 30 (SP)
   B4:  LDC1      F22, 28 (SP)
   B8:  LDC1      F20, 20 (SP)
   BC:  ADDIU     V0, R0, 2
   C0:  JR        RA
   C4:  ADDIU     SP, SP, 38

#new:Function $Function_80218180_26
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       {Func:GetVariable}
   24:  ADDIU     S0, S0, 4
   28:  JAL       801105E8
   2C:  DADDU     A0, V0, R0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  DADDU     S1, V0, R0
   3C:  LWC1      F0, 48 (S1)
   40:  TRUNC.W.S F2, F0
   44:  MFC1      A2, F2
   48:  JAL       {Func:SetVariable}
   4C:  DADDU     A0, S2, R0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  LWC1      F0, 4C (S1)
   5C:  TRUNC.W.S F2, F0
   60:  MFC1      A2, F2
   64:  JAL       {Func:SetVariable}
   68:  DADDU     A0, S2, R0
   6C:  LWC1      F0, 50 (S1)
   70:  LW        A1, 0 (S0)
   74:  TRUNC.W.S F2, F0
   78:  MFC1      A2, F2
   7C:  JAL       {Func:SetVariable}
   80:  DADDU     A0, S2, R0
   84:  LW        RA, 1C (SP)
   88:  LW        S2, 18 (SP)
   8C:  LW        S1, 14 (SP)
   90:  LW        S0, 10 (SP)
   94:  ADDIU     V0, R0, 2
   98:  JR        RA
   9C:  ADDIU     SP, SP, 20

#new:Function $Function_80218220_26
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        A0, A8 (S2)
   1C:  JAL       801105E8
   20:  DADDU     S0, A1, R0
   24:  BEQ       S0, R0, .o38
   28:  DADDU     S1, V0, R0
   2C:  ADDIU     V0, R0, 3C
   30:  SW        R0, 70 (S2)
   34:  SW        V0, 74 (S2)
        .o38
   38:  ADDIU     V1, R0, 3C
   3C:  LW        V0, 74 (S2)
   40:  LIF       F2, 60.0
   48:  SUBU      V0, V1, V0
   4C:  MTC1      V0, F0
   50:  NOP
   54:  CVT.S.W   F0, F0
   58:  DIV.S     F0, F0, F2
   5C:  SWC1      F0, 54 (S1)
   60:  LW        V0, 74 (S2)
   64:  LIO       AT, 40490FD8
   6C:  MTC1      AT, F12
   70:  SUBU      V0, V1, V0
   74:  MTC1      V0, F0
   78:  NOP
   7C:  CVT.S.W   F0, F0
   80:  DIV.S     F0, F0, F2
   84:  SWC1      F0, 58 (S1)
   88:  LW        V0, 74 (S2)
   8C:  MUL.S     F12, F0, F12
   90:  NOP
   94:  SUBU      V1, V1, V0
   98:  MTC1      V1, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  DIV.S     F0, F0, F2
   A8:  JAL       {Func:CosRad}
   AC:  SWC1      F0, 5C (S1)
   B0:  LIF       F2, 1.0
   B8:  NOP
   BC:  SUB.S     F2, F2, F0
   C0:  LIF       F0, 1080.0
   C8:  NOP
   CC:  MUL.S     F2, F2, F0
   D0:  NOP
   D4:  LIF       F0, 0.5
   DC:  NOP
   E0:  MUL.S     F2, F2, F0
   E4:  NOP
   E8:  SWC1      F2, 64 (S1)
   EC:  LW        V1, 74 (S2)
   F0:  ADDIU     V1, V1, FFFF
   F4:  NOR       V0, R0, V1
   F8:  SLTIU     V0, V0, 1
   FC:  SW        V1, 74 (S2)
  100:  LW        RA, 1C (SP)
  104:  LW        S2, 18 (SP)
  108:  LW        S1, 14 (SP)
  10C:  LW        S0, 10 (SP)
  110:  SLL       V0, V0, 1
  114:  JR        RA
  118:  ADDIU     SP, SP, 20

#new:Function $Function_8021833C_26
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o50
   10:  SW        RA, 14 (SP)
   14:  ADDIU     A0, R0, 1
   18:  DADDU     A1, R0, R0
   1C:  DADDU     A2, A1, R0
   20:  DADDU     A3, A1, R0
   24:  ADDIU     V0, R0, 14
   28:  JAL       80137E4C
   2C:  SW        V0, 70 (S0)
   30:  ADDIU     A0, R0, 1
   34:  DADDU     A1, A0, R0
   38:  ADDIU     A2, R0, 140
   3C:  JAL       80137E4C
   40:  ADDIU     A3, R0, F0
   44:  LUI       A1, 4316
   48:  JAL       80137DA4
   4C:  ADDIU     A0, R0, C
        .o50
   50:  LW        V0, 70 (S0)
   54:  BNE       V0, R0, .o98
   58:  ADDIU     V0, V0, FFFF
   5C:  ADDIU     A0, R0, 1
   60:  DADDU     A1, R0, R0
   64:  DADDU     A2, A1, R0
   68:  JAL       80137E4C
   6C:  DADDU     A3, A1, R0
   70:  ADDIU     A0, R0, 1
   74:  DADDU     A1, A0, R0
   78:  ADDIU     A2, R0, 140
   7C:  JAL       80137E4C
   80:  ADDIU     A3, R0, F0
   84:  LUI       A1, BF80
   88:  JAL       80137DA4
   8C:  ADDIU     A0, R0, FF
   90:  BEQ       R0, R0, .oA0
   94:  ADDIU     V0, R0, 2
        .o98
   98:  SW        V0, 70 (S0)
   9C:  DADDU     V0, R0, R0
        .oA0
   A0:  LW        RA, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  JR        RA
   AC:  ADDIU     SP, SP, 18

#new:Function $Function_802183EC_26
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o50
   10:  SW        RA, 14 (SP)
   14:  ADDIU     A0, R0, 1
   18:  DADDU     A1, R0, R0
   1C:  DADDU     A2, A1, R0
   20:  DADDU     A3, A1, R0
   24:  ADDIU     V0, R0, 1E
   28:  JAL       80137E4C
   2C:  SW        V0, 70 (S0)
   30:  ADDIU     A0, R0, 1
   34:  DADDU     A1, A0, R0
   38:  ADDIU     A2, R0, 140
   3C:  JAL       80137E4C
   40:  ADDIU     A3, R0, F0
   44:  LUI       A1, 4316
   48:  JAL       80137DA4
   4C:  ADDIU     A0, R0, C
        .o50
   50:  LW        V0, 70 (S0)
   54:  BNE       V0, R0, .o98
   58:  ADDIU     V0, V0, FFFF
   5C:  ADDIU     A0, R0, 1
   60:  DADDU     A1, R0, R0
   64:  DADDU     A2, A1, R0
   68:  JAL       80137E4C
   6C:  DADDU     A3, A1, R0
   70:  ADDIU     A0, R0, 1
   74:  DADDU     A1, A0, R0
   78:  ADDIU     A2, R0, 140
   7C:  JAL       80137E4C
   80:  ADDIU     A3, R0, F0
   84:  LUI       A1, BF80
   88:  JAL       80137DA4
   8C:  ADDIU     A0, R0, FF
   90:  BEQ       R0, R0, .oA0
   94:  ADDIU     V0, R0, 2
        .o98
   98:  SW        V0, 70 (S0)
   9C:  DADDU     V0, R0, R0
        .oA0
   A0:  LW        RA, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  JR        RA
   AC:  ADDIU     SP, SP, 18

#new:Function $Function_8021849C_26
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 1C (SP)
    8:  SW        S2, 18 (SP)
    C:  SW        S1, 14 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, A8 (A0)
   18:  JAL       801105E8
   1C:  DADDU     A0, S0, R0
   20:  DADDU     S1, V0, R0
   24:  LIA       S2, 8015A550
   2C:  ORI       S0, S0, 4000
   30:  LIA       A0, 8010EFC8
   38:  SB        R0, 7 (S1)
   3C:  SH        S0, 14 (S2)
   40:  LW        V0, 0 (A0)
   44:  LUI       V1, 100
   48:  OR        V0, V0, V1
   4C:  SW        V0, 0 (A0)
   50:  ADDIU     V0, R0, 40
   54:  SB        V0, 6 (S1)
   58:  ADDIU     V0, R0, 12
   5C:  SB        V0, B4 (A0)
   60:  LW        V0, 38 (S1)
   64:  LW        V0, 14 (V0)
   68:  JALR      V0, RA
   6C:  DADDU     A0, S1, R0
   70:  ADDIU     V1, R0, A
   74:  SB        V1, 7 (S1)
   78:  LW        V1, 0 (S1)
   7C:  LUI       A0, 1
   80:  OR        V1, V1, A0
   84:  SW        V1, 0 (S1)
   88:  ADDIU     V1, R0, FFFF
   8C:  SH        V1, 14 (S2)
   90:  LW        RA, 1C (SP)
   94:  LW        S2, 18 (SP)
   98:  LW        S1, 14 (SP)
   9C:  LW        S0, 10 (SP)
   A0:  ADDIU     V0, R0, 2
   A4:  JR        RA
   A8:  ADDIU     SP, SP, 20

#new:IdleAnimations $IdleAnimations_80218600_26
.Status:Normal    00610005
.Status:End

#new:IdleAnimations $IdleAnimations_8021860C_26
.Status:Normal    0061000C
.Status:End

#new:DefenseTable $DefenseTable_80218618_26
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80218624_26
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802186D0_26
00800000 01000000 F62300FF $IdleAnimations_80218600_26 $DefenseTable_80218618_26 00000000 00000000 00F80000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021860C_26 $DefenseTable_80218618_26 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_80218740_26
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802189A0_26 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802187E8_26 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80218824_26 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80219334_26 )
   50:  Call     SetBattleFlagBits2 	( 02000000 .True )
   64:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   7C:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   94:  Return
   9C:  End

#new:Unknown $???_802187E4_26
00000000 

#new:Script $Script_Idle_802187E8_26
    0:  Loop     
    C:  	Call     $Function_80218000_26 ( )
   18:  	Wait     00000001 
   24:  EndLoop
   2C:  Return
   34:  End

#new:Script $Script_HandleEvent_80218824_26
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	Case  ==  .Event:BeginFirstStrike
   40:  	CaseOR  ==  .Event:HitCombo
   4C:  	CaseOR  ==  .Event:Hit
   58:  		SetConst  *Var[0]  00000001 
   68:  		SetConst  *Var[1]  0061000D 
   78:  		ExecWait DoNormalHit 
   84:  		ExecWait $Script_802195B8_26 
   90:  	EndCaseGroup
   98:  	CaseOR  ==  00000017
   A4:  	CaseOR  ==  .Event:Immune
   B0:  		SetConst  *Var[0]  00000001 
   C0:  		SetConst  *Var[1]  00610005 
   D0:  		ExecWait DoImmune 
   DC:  		ExecWait $Script_802195B8_26 
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:Death
   FC:  		SetConst  *Var[0]  00000001 
  10C:  		SetConst  *Var[1]  0061000D 
  11C:  		ExecWait DoNormalHit 
  128:  		Wait     0000000A 
  134:  		ExecWait $Script_80219980_26 
  140:  		Return
  148:  	Default
  150:  EndSwitch
  158:  Call     UseIdleAnimation 	( .Actor:Self .True )
  16C:  Return
  174:  End

#new:Script $Script_TakeTurn_802189A0_26
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   28:  Call     UseCamPreset 	( 0000000E )
   38:  Call     CamTargetActor ( .Actor:Self )
   48:  Wait     0000001E 
   54:  Call     SetAnimation 	( .Actor:Self 00000001 00610007 )
   6C:  Wait     00000005 
   78:  Call     PlaySoundAtActor 	( .Actor:Self 0000207A )
   8C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   A8:  Sub  *Var[0]  00000019 
   B8:  Add  *Var[1]  00000028 
   C8:  Call     PlayEffect  	( {FX:GatherEnergyPink} *Var[0] *Var[1] *Var[2] 00000001 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  10C:  Wait     00000014 
  118:  Call     UseCamPreset 	( 00000013 )
  128:  Call     SetCamTarget 	( 00000050 0000005F 0000000F )
  140:  Call     SetCamZoom  	( 00000154 )
  150:  Call     MoveCamOver 	( 0000003C )
  160:  Call     PlaySoundAtActor 	( .Actor:Self 0000207B )
  174:  Sub  *Var[0]  0000000F 
  184:  Add  *Var[1]  0000001E 
  194:  Set  *Var[3]  *Var[1] 
  1A4:  Add  *Var[3]  00000014 
  1B4:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[3] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1F8:  Wait     00000014 
  204:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[3] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  248:  Wait     0000000A 
  254:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[3] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  Wait     00000005 
  2A4:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[3] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E8:  Wait     00000003 
  2F4:  Call     PlayEffect  	( 00000013 00000001 *Var[0] *Var[3] *Var[2] *Fixed[1.0] 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  338:  Call     MakeEntity  	( 802EA10C *Var[0] *Var[1] *Var[2] 00000000 80000000 )
  35C:  Set  *Var[9]  *Var[0] 
  36C:  Call     $Function_80218220_26 ( )
  378:  Thread
  380:  	Call     $Function_8021833C_26 ( )
  38C:  EndThread
  394:  Call     PlaySoundAtActor 	( .Actor:Self 0000207C )
  3A8:  Call     $Function_80218180_26 ( *Var[9] *Var[2] *Var[3] *Var[4] )
  3C4:  Call     MakeLerp    	( *Var[3] 0000012C 00000014 00000001 )
  3E0:  Loop     
  3EC:  	Call     UpdateLerp  	( )
  3F8:  	Call     $Function_802180B8_26 ( *Var[9] *Var[2] *Var[0] *Var[4] )
  414:  	Wait     00000001 
  420:  	If  *Var[1]  !=  00000001 
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Wait     00000014 
  454:  Call     SetAnimation 	( .Actor:Self 00000001 00610008 )
  46C:  Wait     0000000A 
  478:  Call     UseCamPreset 	( 00000013 )
  488:  Call     SetCamTarget 	( FFFFFFB0 00000025 00000005 )
  4A0:  Call     SetCamZoom  	( 00000100 )
  4B0:  Call     MoveCamOver 	( 00000001 )
  4C0:  Call     SetGoalToTarget 	( .Actor:Self )
  4D0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4EC:  ChildThread
  4F4:  	Wait     0000000A 
  500:  	Call     AddCamZoom  	( 00000064 )
  510:  	Call     MoveCamOver 	( 0000000A )
  520:  	Wait     00000005 
  52C:  	Call     $Function_802183EC_26 ( )
  538:  EndChildThread
  540:  Call     PlaySoundAtActor 	( .Actor:Self 0000207D )
  554:  Set  *Var[5]  *Var[1] 
  564:  Add  *Var[5]  000000C8 
  574:  Call     $Function_802180B8_26 ( *Var[9] *Var[0] *Var[5] *Var[2] )
  590:  Call     $Function_80218180_26 ( *Var[9] *Var[2] *Var[3] *Var[4] )
  5AC:  Call     MakeLerp    	( *Var[5] *Var[1] 00000014 00000002 )
  5C8:  Loop     
  5D4:  	Call     UpdateLerp  	( )
  5E0:  	Call     $Function_802180B8_26 ( *Var[9] *Var[2] *Var[0] *Var[4] )
  5FC:  	Wait     00000001 
  608:  	If  *Var[1]  !=  00000001 
  618:  		BreakLoop
  620:  	EndIf
  628:  EndLoop
  630:  Call     $Function_8021849C_26 ( )
  63C:  ChildThread
  644:  	Call     80254218 ( 00000005 )
  654:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  670:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  68C:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[6.0] )
  6A8:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[5.0] )
  6C4:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[4.0] )
  6E0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[3.0] )
  6FC:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[2.0] )
  718:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  734:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  750:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
  76C:  EndChildThread
  774:  Call     SetAnimation 	( .Actor:Self 00000001 00610005 )
  78C:  Wait     00000002 
  798:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000004 00000020 )
  7C0:  Set  *Var[F]  *Var[0] 
  7D0:  Switch  *Var[F] 
  7DC:  	CaseOR  ==  00000000 
  7E8:  	CaseOR  ==  00000002 
  7F4:  		Wait     00000013 
  800:  		Call     UseCamPreset 	( 00000002 )
  810:  	EndCaseGroup
  818:  EndSwitch
  820:  Call     GetLastDamage 	( .Actor:Partner *Var[0] )
  834:  If  *Var[0]  ==  00000000 
  844:  	Call     UseCamPreset 	( 00000013 )
  854:  	Call     SetCamTarget 	( 00000045 0000000E FFFFFFEE )
  86C:  	Call     SetCamZoom  	( 00000154 )
  87C:  	Call     SetCamOffsetZ 	( 0000003E )
  88C:  	Call     MoveCamOver 	( 00000014 )
  89C:  	Call     FreezeCam   	( .True )
  8AC:  	Wait     00000014 
  8B8:  	Thread
  8C0:  		Call     SetGoalToHome 	( .Actor:Self )
  8D0:  		Call     AddToGoalPos 	( .Actor:Self 0000000A 00000005 00000000 )
  8EC:  		Call     MoveToGoal  	( .Actor:Self 00000006 00000000 .Easing:Linear )
  908:  	EndThread
  910:  	Call     SayMessage  	( 0013009A .Actor:Self 00000001 00610006 00610005 ) % It... It can't be.... My attacks don't work... Oh. ...
  930:  	Wait     0000000A 
  93C:  	Call     FreezeCam   	( .False )
  94C:  	Call     UseCamPreset 	( 00000002 )
  95C:  EndIf
  964:  Wait     0000000A 
  970:  Call     UseIdleAnimation 	( .Actor:Self .True )
  984:  Return
  98C:  End

#new:Script $Script_NextTurn_80219334_26
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetBattlePhase ( *Var[0] )
   24:  Switch  *Var[0] 
   30:  	Case  ==  .Phase:PlayerBegin
   3C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  		Switch  *Var[0] 
   60:  			Case  ==  00000000 
   6C:  				Call     UseCamPreset 	( 00000013 )
   7C:  				Call     SetCamTarget 	( 00000045 0000000E FFFFFFEE )
   94:  				Call     SetCamZoom  	( 00000154 )
   A4:  				Call     SetCamOffsetZ 	( 0000003E )
   B4:  				Call     MoveCamOver 	( 00000014 )
   C4:  				Wait     00000014 
   D0:  				Call     SayMessage  	( 00130093 .Actor:Self 00000001 00610006 00610005 ) % You little whippersnapper... You're too young to f ...
   F0:  				Wait     0000000A 
   FC:  				Call     UseCamPreset 	( 00000013 )
  10C:  				Call     SetCamTarget 	( FFFFFFC8 FFFFFFF7 FFFFFFEE )
  124:  				Call     SetCamZoom  	( 00000154 )
  134:  				Call     SetCamOffsetZ 	( 0000003E )
  144:  				Call     MoveCamOver 	( 00000001 )
  154:  				Wait     0000000A 
  160:  				Call     SayMessage  	( 00130094 .Actor:Partner 00000001 0020000D 00200008 ) % I... I... I'm not afraid of you!!
  180:  				Wait     0000000A 
  18C:  				Call     UseCamPreset 	( 00000013 )
  19C:  				Call     SetCamTarget 	( FFFFFFBE FFFFFFF7 FFFFFFEE )
  1B4:  				Call     SetCamZoom  	( 00000154 )
  1C4:  				Call     SetCamOffsetZ 	( 0000003E )
  1D4:  				Call     MoveCamOver 	( 0000000A )
  1E4:  				Wait     0000000A 
  1F0:  				Call     SayMessage  	( 00130095 .Actor:Player 00000001 000C0007 000C0008 ) % Oh, be careful, Twink!
  210:  				Wait     0000000A 
  21C:  				Call     UseCamPreset 	( 00000002 )
  22C:  				Call     ActorVarAdd 	( .Actor:Self 00000000 00000001 )
  244:  		EndSwitch
  24C:  	Case  ==  .Phase:EnemyBegin
  258:  EndSwitch
  260:  Call     UseIdleAnimation 	( .Actor:Self .True )
  274:  Return
  27C:  End

#new:Script $Script_802195B8_26
    0:  Call     8026BF48 ( 00000001 )
   10:  Call     UseIdleAnimation 	( .Actor:Self .False )
   24:  Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   3C:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   50:  Switch  *Var[0] 
   5C:  	Case  ==  0000000A 
   68:  		Call     UseCamPreset 	( 00000013 )
   78:  		Call     SetCamTarget 	( 00000045 0000000E FFFFFFEE )
   90:  		Call     SetCamZoom  	( 00000154 )
   A0:  		Call     SetCamOffsetZ 	( 0000003E )
   B0:  		Call     MoveCamOver 	( 00000014 )
   C0:  		Call     FreezeCam   	( .True )
   D0:  		Wait     00000014 
   DC:  		Call     SayMessage  	( 00130097 .Actor:Self 00000001 00610009 00610005 ) % Nyeah heh hoo hah... Did I just feel a breeze? Was ...
   FC:  		Wait     0000000A 
  108:  		Call     FreezeCam   	( .False )
  118:  		Call     UseCamPreset 	( 00000002 )
  128:  	CaseOR  ==  00000009 
  134:  	CaseOR  ==  00000008 
  140:  		Call     UseCamPreset 	( 00000013 )
  150:  		Call     SetCamTarget 	( 00000045 0000000E FFFFFFEE )
  168:  		Call     SetCamZoom  	( 00000154 )
  178:  		Call     SetCamOffsetZ 	( 0000003E )
  188:  		Call     MoveCamOver 	( 00000014 )
  198:  		Call     FreezeCam   	( .True )
  1A8:  		Wait     00000014 
  1B4:  		Call     SayMessage  	( 00130098 .Actor:Self 00000001 0061000A 00610005 ) % Ow! Why, you little... So you can fight a little.. ...
  1D4:  		Wait     0000000A 
  1E0:  		Call     FreezeCam   	( .False )
  1F0:  		Call     UseCamPreset 	( 00000002 )
  200:  	EndCaseGroup
  208:  	CaseOR  ==  00000007 
  214:  	CaseOR  ==  00000006 
  220:  	CaseOR  ==  00000005 
  22C:  	CaseOR  ==  00000004 
  238:  	CaseOR  ==  00000003 
  244:  	CaseOR  ==  00000002 
  250:  	CaseOR  ==  00000001 
  25C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  274:  		If  *Var[0]  ==  00000002 
  284:  			BreakCase
  28C:  		EndIf
  294:  		Call     UseCamPreset 	( 00000013 )
  2A4:  		Call     SetCamTarget 	( 00000045 0000000E FFFFFFEE )
  2BC:  		Call     SetCamZoom  	( 00000154 )
  2CC:  		Call     SetCamOffsetZ 	( 0000003E )
  2DC:  		Call     MoveCamOver 	( 00000014 )
  2EC:  		Call     FreezeCam   	( .True )
  2FC:  		Wait     00000014 
  308:  		Call     SayMessage  	( 00130099 .Actor:Self 00000001 00610006 00610005 ) % Yeeow! What's going on!? Why does it seem like thi ...
  328:  		Wait     0000000A 
  334:  		Call     FreezeCam   	( .False )
  344:  		Call     UseCamPreset 	( 00000002 )
  354:  		Call     ActorVarAdd 	( .Actor:Self 00000000 00000001 )
  36C:  	EndCaseGroup
  374:  EndSwitch
  37C:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  394:  Call     UseIdleAnimation 	( .Actor:Self .True )
  3A8:  Call     8026BF48 ( 00000000 )
  3B8:  Return
  3C0:  End

#new:Script $Script_80219980_26
    0:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   14:  Call     8027D32C ( FFFFFF81 )
   24:  Call     UseCamPreset 	( 0000000E )
   34:  Call     CamTargetActor ( .Actor:Self )
   44:  Call     MoveCamOver 	( 0000003C )
   54:  Wait     0000000A 
   60:  Call     SetAnimation 	( .Actor:Self 00000001 00610002 )
   78:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   94:  Sub  *Var[2]  00000001 
   A4:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
   C4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
   E0:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
   F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  110:  Set  *Var[1]  00000000 
  120:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  134:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  150:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  170:  Call     PlaySoundAtActor 	( .Actor:Self 000020E4 )
  184:  Call     UseCamPreset 	( 00000001 )
  194:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B0:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  1D0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  20C:  Call     PlaySoundAtActor 	( .Actor:Self 000020E5 )
  220:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  23C:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  258:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:SeeingStars )
  274:  Call     SetAnimation 	( .Actor:Self 00000001 00610003 )
  28C:  Wait     00000032 
  298:  Call     SetBattleFlagBits 	( 00060000 .True )
  2AC:  Call     SetActorFlagBits 	( .Actor:Self 00400000 .True )
  2C4:  Call     SayMessage  	( 0013009B .Actor:Self 00000001 00610003 00610003 ) % Ooooohhh... King Bowser... I have failed you...
  2E4:  Wait     0000000A 
  2F0:  Call     UseCamPreset 	( 00000002 )
  300:  Call     MoveCamOver 	( 0000003C )
  310:  Wait     00000028 
  31C:  Call     SetBattleFlagBits 	( 00100000 .False )
  330:  Return
  338:  End

