% Automatically dumped from section 01

#new:Actor $01_GoomnutTree
% stats
[Index]        93b 
[Level]         1`b 
[MaxHP]        -1`b 
[Coins]         0`b 
[Flags]       02004004 
[StatusTable] $StatusTable_802232F0_01 
% ai
[SpriteCount]   5`s 
[SpriteTable] $SpriteTable_8022339C_01 
[Script]      $Script_Init_80223488_01 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   0`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]          0`b   0`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b   0`b % dx dy
[StatusIcon]    0`b   0`b % dx dy

#new:Function $Function_80218B10_01
    0:  ADDIU     SP, SP, FFD0
    4:  SDC1      F20, 18 (SP)
    8:  MTC1      A1, F20
    C:  SDC1      F22, 20 (SP)
   10:  MTC1      A2, F22
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 28 (SP)
   1C:  MTC1      A3, F24
   20:  SW        RA, 14 (SP)
   24:  JAL       800674A0
   28:  DADDU     S0, A0, R0
   2C:  MUL.S     F22, F20, F22
   30:  NOP
   34:  MUL.S     F20, F20, F24
   38:  NOP
   3C:  LIF       F0, 1.0
   44:  NOP
   48:  SWC1      F0, 14 (S0)
   4C:  SWC1      F22, 10 (S0)
   50:  SWC1      F20, 18 (S0)
   54:  LW        RA, 14 (SP)
   58:  LW        S0, 10 (SP)
   5C:  LDC1      F24, 28 (SP)
   60:  LDC1      F22, 20 (SP)
   64:  LDC1      F20, 18 (SP)
   68:  JR        RA
   6C:  ADDIU     SP, SP, 30

#new:Function $Function_80218B80_01
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 5C (SP)
   10:  SW        S2, 58 (SP)
   14:  SW        S0, 50 (SP)
   18:  SDC1      F28, 80 (SP)
   1C:  SDC1      F26, 78 (SP)
   20:  SDC1      F24, 70 (SP)
   24:  SDC1      F22, 68 (SP)
   28:  SDC1      F20, 60 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetVariable}
   38:  ADDIU     S0, S0, 4
   3C:  JAL       8011B010
   40:  DADDU     A0, V0, R0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  DADDU     A0, S1, R0
   50:  JAL       {Func:GetFloatVariable}
   54:  DADDU     S2, V0, R0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  DADDU     A0, S1, R0
   64:  JAL       {Func:GetFloatVariable}
   68:  MOV.S     F28, F0
   6C:  LW        A1, 0 (S0)
   70:  ADDIU     S0, S0, 4
   74:  DADDU     A0, S1, R0
   78:  JAL       {Func:GetFloatVariable}
   7C:  MOV.S     F26, F0
   80:  DADDU     A0, S1, R0
   84:  LW        A1, 0 (S0)
   88:  JAL       {Func:GetFloatVariable}
   8C:  MOV.S     F22, F0
   90:  DADDU     A0, S2, R0
   94:  JAL       8011AD30
   98:  MOV.S     F24, F0
   9C:  DADDU     S1, V0, R0
   A0:  LHU       V0, 0 (S1)
   A4:  ANDI      V0, V0, 400
   A8:  BNE       V0, R0, .o124
   AC:  ADDIU     S0, S1, 58
   B0:  MTC1      R0, F20
   B4:  MFC1      A2, F22
   B8:  MFC1      A1, F20
   BC:  MFC1      A3, F20
   C0:  JAL       80067900
   C4:  DADDU     A0, S0, R0
   C8:  MFC1      A1, F28
   CC:  MFC1      A2, F26
   D0:  MFC1      A3, F24
   D4:  JAL       $Function_80218B10_01
   D8:  ADDIU     A0, SP, 10
   DC:  ADDIU     A0, SP, 10
   E0:  DADDU     A1, S0, R0
   E4:  JAL       80067600
   E8:  DADDU     A2, S0, R0
   EC:  ADDIU     A0, SP, 10
   F0:  NEG.S     F22, F22
   F4:  MFC1      A1, F20
   F8:  MFC1      A2, F22
   FC:  JAL       80067900
  100:  DADDU     A3, A1, R0
  104:  ADDIU     A0, SP, 10
  108:  DADDU     A1, S0, R0
  10C:  JAL       80067600
  110:  DADDU     A2, A1, R0
  114:  LHU       V0, 0 (S1)
  118:  ORI       V0, V0, 1400
  11C:  BEQ       R0, R0, .o19C
  120:  SH        V0, 0 (S1)
        .o124
  124:  MTC1      R0, F20
  128:  MFC1      A2, F22
  12C:  MFC1      A1, F20
  130:  MFC1      A3, F20
  134:  JAL       80067900
  138:  ADDIU     A0, SP, 10
  13C:  ADDIU     A0, SP, 10
  140:  ADDIU     S0, S1, 58
  144:  DADDU     A1, S0, R0
  148:  JAL       80067600
  14C:  DADDU     A2, S0, R0
  150:  MFC1      A1, F28
  154:  MFC1      A2, F26
  158:  MFC1      A3, F24
  15C:  JAL       $Function_80218B10_01
  160:  ADDIU     A0, SP, 10
  164:  ADDIU     A0, SP, 10
  168:  DADDU     A1, S0, R0
  16C:  JAL       80067600
  170:  DADDU     A2, S0, R0
  174:  ADDIU     A0, SP, 10
  178:  NEG.S     F22, F22
  17C:  MFC1      A1, F20
  180:  MFC1      A2, F22
  184:  JAL       80067900
  188:  DADDU     A3, A1, R0
  18C:  ADDIU     A0, SP, 10
  190:  DADDU     A1, S0, R0
  194:  JAL       80067600
  198:  DADDU     A2, A1, R0
        .o19C
  19C:  LW        RA, 5C (SP)
  1A0:  LW        S2, 58 (SP)
  1A4:  LW        S1, 54 (SP)
  1A8:  LW        S0, 50 (SP)
  1AC:  LDC1      F28, 80 (SP)
  1B0:  LDC1      F26, 78 (SP)
  1B4:  LDC1      F24, 70 (SP)
  1B8:  LDC1      F22, 68 (SP)
  1BC:  LDC1      F20, 60 (SP)
  1C0:  ADDIU     V0, R0, 2
  1C4:  JR        RA
  1C8:  ADDIU     SP, SP, 88

#new:IdleAnimations $IdleAnimations_802232D0_01
.Status:Normal    00640000
.Status:End

#new:DefenseTable $DefenseTable_802232DC_01
.Element:Normal 00000000
.Element:Hammer 00000000
.Element:End

#new:StatusTable $StatusTable_802232F0_01
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022339C_01
00800000 01000000 000A00FF 00000000 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 02000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 03000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 04000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 
00120000 05000000 000A00FF $IdleAnimations_802232D0_01 $DefenseTable_802232DC_01 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_80223488_01
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80223804_01 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80223678_01 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80223688_01 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   6C:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   84:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   9C:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   B4:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000006 00000001 )
   E4:  Call     SetSpritePos 	( .Actor:Self 00000002 0000000A 0000008C 0000000A )
  104:  Call     SetSpritePos 	( .Actor:Self 00000003 FFFFFFA1 0000008C 0000000A )
  124:  Call     SetSpritePos 	( .Actor:Self 00000004 FFFFFF8D 00000082 00000000 )
  144:  Call     SetSpritePos 	( .Actor:Self 00000005 FFFFFFBF 00000076 00000005 )
  164:  Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  184:  Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1A4:  Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1C4:  Call     8026D158 ( FFFFFF81 00000001 00000004 00000001 )
  1E0:  Return
  1E8:  End

#new:Script $Script_Idle_80223678_01
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80223688_01
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastElement ( *Var[E] )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  Switch  *Var[0] 
   58:  	CaseOR  ==  .Event:HitCombo
   64:  	CaseOR  ==  00000017
   70:  		ExecWait $Script_80223D90_01 
   7C:  	EndCaseGroup
   84:  	CaseOR  ==  .Event:Hit
   90:  	CaseOR  ==  .Event:Immune
   9C:  		ExecWait $Script_80223D90_01 
   A8:  		ExecWait $Script_80223DBC_01 
   B4:  	EndCaseGroup
   BC:  	Case  ==  .Event:MultibounceHit
   C8:  		ExecWait $Script_80223D90_01 
   D4:  		ExecWait $Script_80223DBC_01 
   E0:  	Case  ==  .Event:Death
   EC:  		ExecWait $Script_80223D90_01 
   F8:  	Case  ==  .Event:MultibounceDeath
  104:  		ExecWait $Script_80223D90_01 
  110:  	Case  ==  .Event:SpikeContact
  11C:  	Case  ==  .Event:ShockHit
  128:  	Case  ==  .Event:EndFirstStrike
  134:  	Default
  13C:  EndSwitch
  144:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  158:  Call     UseIdleAnimation 	( .Actor:Self .True )
  16C:  Return
  174:  End

#new:Script $Script_TakeTurn_80223804_01
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000006 
   18:  		Return
   20:  EndSwitch
   28:  Switch  *Var[0] 
   34:  	Case  ==  00000000 
   40:  	Case  ==  0000000A 
   4C:  EndSwitch
   54:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
   68:  Call     UseIdleAnimation 	( .Actor:Self .True )
   7C:  Return
   84:  End

#new:Script $Script_80223890_01
    0:  SetTimescale *Fixed[2.0] 
    C:  UseIntBuffer *Var[0] 
   18:  Get4Int  *Var[1] *Var[2] *Var[3] *Var[4] 
   30:  Get1Int  *Var[5] 
   3C:  Call     GetActorPos 	( .Actor:Player *Var[6] *Var[F] *Var[8] )
   58:  Call     PlaySound   	( 00000165 )
   68:  Call     PlaySound   	( 00000166 )
   78:  Thread
   80:  	Set  *Flag[00]  00000000 
   90:  	If  *Var[1]  !=  00000000 
   A0:  		Wait     00000001 
   AC:  		Loop     00000005 
   B8:  			UseIntBuffer *Var[1] 
   C4:  			Get1Int  *Var[2] 
   D0:  			Loop     *Var[2] 
   DC:  				Get1Int  *Var[3] 
   E8:  				Call     $Function_80218B80_01 ( *Var[3] *Fixed[0.10058594] *Fixed[0.20019531] *Var[F] 00000000 )
  108:  				If  *Flag[00]  ==  00000000 
  118:  					Set  *Flag[00]  00000001 
  128:  					Call     PlaySoundAtModel 	( *Var[3] 00000166 00000000 )
  140:  				EndIf
  148:  			EndLoop
  150:  			Wait     00000001 
  15C:  			UseIntBuffer *Var[1] 
  168:  			Get1Int  *Var[2] 
  174:  			Loop     *Var[2] 
  180:  				Get1Int  *Var[3] 
  18C:  				Call     $Function_80218B80_01 ( *Var[3] *Fixed[0.10058594] *Fixed[-0.19921875] *Var[F] 00000000 )
  1AC:  			EndLoop
  1B4:  			Wait     00000001 
  1C0:  		EndLoop
  1C8:  		UseIntBuffer *Var[1] 
  1D4:  		Get1Int  *Var[2] 
  1E0:  		Loop     *Var[2] 
  1EC:  			Get1Int  *Var[3] 
  1F8:  			Call     TranslateModel ( *Var[3] 00000000 00000000 00000000 )
  214:  		EndLoop
  21C:  		Wait     00000001 
  228:  	EndIf
  230:  EndThread
  238:  Thread
  240:  	Set  *Flag[00]  00000000 
  250:  	If  *Var[2]  !=  00000000 
  260:  		Loop     00000005 
  26C:  			UseIntBuffer *Var[2] 
  278:  			Get1Int  *Var[3] 
  284:  			Loop     *Var[3] 
  290:  				Get1Int  *Var[4] 
  29C:  				Call     $Function_80218B80_01 ( *Var[4] *Fixed[0.10058594] *Fixed[0.20019531] *Var[F] 00000000 )
  2BC:  				If  *Flag[00]  ==  00000000 
  2CC:  					Set  *Flag[00]  00000001 
  2DC:  					Call     PlaySoundAtModel 	( *Var[4] 00000165 00000000 )
  2F4:  				EndIf
  2FC:  			EndLoop
  304:  			Wait     00000001 
  310:  			UseIntBuffer *Var[2] 
  31C:  			Get1Int  *Var[3] 
  328:  			Loop     *Var[3] 
  334:  				Get1Int  *Var[4] 
  340:  				Call     $Function_80218B80_01 ( *Var[4] *Fixed[0.10058594] *Fixed[-0.19921875] *Var[F] 00000000 )
  360:  			EndLoop
  368:  			Wait     00000001 
  374:  		EndLoop
  37C:  		UseIntBuffer *Var[2] 
  388:  		Get1Int  *Var[3] 
  394:  		Loop     *Var[3] 
  3A0:  			Get1Int  *Var[4] 
  3AC:  			Call     TranslateModel ( *Var[4] 00000000 00000000 00000000 )
  3C8:  		EndLoop
  3D0:  		Wait     00000001 
  3DC:  	EndIf
  3E4:  EndThread
  3EC:  Thread
  3F4:  	If  *Var[4]  !=  00000000 
  404:  		UseIntBuffer *Var[4] 
  410:  		Get1Int  *Var[5] 
  41C:  		Loop     *Var[5] 
  428:  			Get3Int  *Var[6] *Var[7] *Var[8] 
  43C:  			Call     PlayEffect  	( {FX:DropLeaves:Random} *Var[6] *Var[7] *Var[8] 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  480:  		EndLoop
  488:  	EndIf
  490:  EndThread
  498:  Wait     0000000F 
  4A4:  Return
  4AC:  End

#new:Script $Script_80223D90_01
    0:  Set  *Var[0]  $???_80223D7C_01 
   10:  ExecWait $Script_80223890_01 
   1C:  Return
   24:  End

#new:Script $Script_80223DBC_01
    0:  Call     PlayEffect  	( {FX:DropLeaves:Random} FFFFFFE7 00000078 00000000 0000005A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   44:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
   5C:  If  *Var[0]  !=  00000000 
   6C:  	Return
   74:  EndIf
   7C:  Call     UseCamPreset 	( 0000000F )
   8C:  Call     CamTargetActor ( .Actor:Enemy0 )
   9C:  Wait     00000014 
   A8:  Call     SetActorVar 	( .Actor:Self 00000005 00000001 )
   C0:  Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
   D4:  If  *Var[0]  ==  00000000 
   E4:  	Call     SetGoalToPos 	( .Actor:Self 0000000A 00000000 0000000A )
  100:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  11C:  	Call     PlaySoundAtSprite 	( .Actor:Self 00000002 00000301 )
  134:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.80078125] )
  14C:  	Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[4.0] )
  164:  	Call     JumpSpriteB 	( .Actor:Self 00000002 0000000A 00000014 0000000A 00000014 )
  188:  	Call     JumpSpriteA 	( .Actor:Self 00000002 0000001E 00000014 0000000A 0000000A .True )
  1B0:  	Call     JumpSpriteA 	( .Actor:Self 00000002 00000028 00000014 0000000A 00000005 .True )
  1D8:  	Loop     00000014 
  1E4:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  200:  		Wait     00000001 
  20C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  228:  		Wait     00000001 
  234:  	EndLoop
  23C:  	Return
  244:  EndIf
  24C:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 00000301 )
  264:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.80078125] )
  27C:  Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[4.0] )
  294:  Call     GetStatusFlags ( .Actor:Enemy0 *Var[0] )
  2A8:  If  *Var[0]  !&  00080000 
  2B8:  	Call     JumpSpriteB 	( .Actor:Self 00000002 0000000A 00000050 0000000A 0000000A )
  2DC:  Else
  2E4:  	Call     JumpSpriteB 	( .Actor:Self 00000002 0000000A 00000020 0000000A 0000000A )
  308:  EndIf
  310:  Call     UseCamPreset 	( 00000002 )
  320:  Call     MoveCamOver 	( 0000001E )
  330:  Call     SetOwnerTarget ( 00000200 00000002 )
  344:  Call     SetGoalToTarget 	( .Actor:Self )
  354:  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000003 00000020 )
  37C:  Call     ActorExists 	( .Actor:Enemy1 *Var[0] )
  390:  If  *Var[0]  ==  00000000 
  3A0:  	Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  3C0:  	Add  *Var[0]  00000041 
  3D0:  	Set  *Var[1]  00000014 
  3E0:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.7001953] )
  3F8:  	Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  420:  	Add  *Var[0]  0000000C 
  430:  	Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000008 .True )
  458:  	Loop     00000014 
  464:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  480:  		Wait     00000001 
  48C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  4A8:  		Wait     00000001 
  4B4:  	EndLoop
  4BC:  	Return
  4C4:  EndIf
  4CC:  Call     GetActorPos 	( .Actor:Enemy1 *Var[0] *Var[1] *Var[2] )
  4E8:  Call     GetStatusFlags ( .Actor:Enemy1 *Var[3] )
  4FC:  If  *Var[3]  !&  00080000 
  50C:  	Add  *Var[1]  00000032 
  51C:  Else
  524:  	Add  *Var[1]  00000014 
  534:  EndIf
  53C:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.7001953] )
  554:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  57C:  Call     SetOwnerTarget ( 00000201 00000001 )
  590:  Call     SetGoalToTarget 	( .Actor:Self )
  5A0:  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000003 00000020 )
  5C8:  Call     ActorExists 	( .Actor:Enemy2 *Var[0] )
  5DC:  If  *Var[0]  ==  00000000 
  5EC:  	Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  60C:  	Add  *Var[0]  00000023 
  61C:  	Set  *Var[1]  00000014 
  62C:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.7001953] )
  644:  	Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  66C:  	Add  *Var[0]  0000000C 
  67C:  	Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000008 .True )
  6A4:  	Loop     00000014 
  6B0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  6CC:  		Wait     00000001 
  6D8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  6F4:  		Wait     00000001 
  700:  	EndLoop
  708:  	Return
  710:  EndIf
  718:  Call     GetActorPos 	( .Actor:Enemy2 *Var[0] *Var[1] *Var[2] )
  734:  Call     GetStatusFlags ( .Actor:Enemy2 *Var[3] )
  748:  If  *Var[3]  !&  00080000 
  758:  	Add  *Var[1]  00000032 
  768:  Else
  770:  	Add  *Var[1]  00000014 
  780:  EndIf
  788:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.7001953] )
  7A0:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  7C8:  Call     SetOwnerTarget ( 00000202 00000001 )
  7DC:  Call     SetGoalToTarget 	( .Actor:Self )
  7EC:  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000003 00000020 )
  814:  Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  834:  Add  *Var[0]  00000014 
  844:  Set  *Var[1]  00000014 
  854:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.7001953] )
  86C:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  894:  Add  *Var[0]  0000000C 
  8A4:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000008 .True )
  8CC:  Loop     00000014 
  8D8:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  8F4:  	Wait     00000001 
  900:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  91C:  	Wait     00000001 
  928:  EndLoop
  930:  Return
  938:  End

