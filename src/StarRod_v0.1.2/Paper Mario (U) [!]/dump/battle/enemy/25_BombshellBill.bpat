% Automatically dumped from section 25

#new:Actor $25_BombshellBill
% stats
[Index]        4Ab 
[Level]        24`b 
[MaxHP]         3`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80218E1C_25 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80218EC8_25 
[Script]      $Script_Init_80218F38_25 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]     100`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  22`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:DefenseTable $DefenseTable_80218E10_25
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80218E1C_25
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink    100`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80218EC8_25
00800000 01000000 001000FF $IdleAnimations_80218F14_25 $DefenseTable_80218E10_25 00000400 00000000 00FA0000 00000000 

#new:IdleAnimations $IdleAnimations_80218F14_25
.Status:Normal    002D0101
.Status:Stone     002D0100
.Status:Stop      002D0100
.Status:Paralyze  002D0100
.Status:End

#new:Script $Script_Init_80218F38_25
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80219670_25 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80219230_25 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219298_25 )
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  If  *Var[0]  ==  00000000 
   64:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   80:  	Add  *Var[1]  00000010 
   90:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   AC:  	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C8:  	Call     HPBarToHome 	( .Actor:Self )
   D8:  Else
   E0:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   F8:  	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  114:  	Call     GetStatusFlags ( *Var[0] *Var[4] )
  128:  	If  *Var[4]  &  00080000 
  138:  		Set  *Var[5]  FFFFFFF3 
  148:  		Set  *Var[6]  00000004 
  158:  	Else
  160:  		Set  *Var[5]  FFFFFFDF 
  170:  		Set  *Var[6]  0000000B 
  180:  	EndIf
  188:  	Add  *Var[1]  *Var[5] 
  198:  	Add  *Var[2]  *Var[6] 
  1A8:  	Call     SetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  1C4:  	Call     8027DCBC ( *Var[0] FFFFFF81 )
  1D8:  	Call     CopyStatBoosts ( *Var[0] .Actor:Self )
  1EC:  	Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  208:  	Call     GetActorPos 	( *Var[0] *Var[1] *Var[B] *Var[C] )
  224:  	Sub  *Var[1]  0000005A 
  234:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.0107421875] )
  248:  	Call     SetAnimation 	( .Actor:Self 00000001 002D0103 )
  260:  	Call     SetGoalToPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  27C:  	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  	Call     SetAnimation 	( .Actor:Self 00000001 002D0101 )
  2B4:  	Call     ForceHomePos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  2D0:  	Call     HPBarToHome 	( .Actor:Self )
  2E0:  EndIf
  2E8:  Return
  2F0:  End

#new:Script $Script_Idle_80219230_25
    0:  Return
    8:  End

#new:Script $Script_80219240_25
    0:  ExecWait $Script_80219A90_25 
    C:  SetConst  *Var[0]  00000001 
   1C:  SetConst  *Var[1]  002D0107 
   2C:  Set  *Var[2]  FFFFCFC7 
   3C:  ExecWait DoDeath 
   48:  Return
   50:  End

#new:Script $Script_HandleEvent_80219298_25
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		SetConst  *Var[0]  00000001 
   64:  		SetConst  *Var[1]  002D0105 
   74:  		ExecWait DoNormalHit 
   80:  	Case  ==  .Event:Hit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  002D0105 
   AC:  		ExecWait DoNormalHit 
   B8:  	Case  ==  .Event:BurnHit
   C4:  		ExecWait $Script_80219240_25 
   D0:  		Return
   D8:  	Case  ==  .Event:BurnDeath
   E4:  		ExecWait $Script_80219240_25 
   F0:  		Return
   F8:  	Case  ==  .Event:MultibounceHit
  104:  		ExecWait $Script_80219240_25 
  110:  		Return
  118:  	Case  ==  .Event:MultibounceDeath
  124:  		ExecWait $Script_80219240_25 
  130:  		Return
  138:  	Case  ==  .Event:ShockHit
  144:  		SetConst  *Var[0]  00000001 
  154:  		SetConst  *Var[1]  002D0105 
  164:  		ExecWait DoShockHit 
  170:  		ExecWait $Script_80219240_25 
  17C:  		Return
  184:  	Case  ==  .Event:ShockDeath
  190:  		SetConst  *Var[0]  00000001 
  1A0:  		SetConst  *Var[1]  002D0105 
  1B0:  		ExecWait DoShockHit 
  1BC:  		ExecWait $Script_80219240_25 
  1C8:  		Return
  1D0:  	CaseOR  ==  00000017
  1DC:  	CaseOR  ==  .Event:Immune
  1E8:  	CaseOR  ==  .Event:AirLiftFailed
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  002D0101 
  214:  		ExecWait DoImmune 
  220:  	EndCaseGroup
  228:  	Case  ==  .Event:Death
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  002D0105 
  254:  		ExecWait DoNormalHit 
  260:  		ExecWait $Script_80219240_25 
  26C:  		Return
  274:  	Case  ==  .Event:ExplodeTrigger
  280:  		ExecWait $Script_80219240_25 
  28C:  		Return
  294:  	Case  ==  .Event:RecoverStatus
  2A0:  		SetConst  *Var[0]  00000001 
  2B0:  		SetConst  *Var[1]  002D0101 
  2C0:  		ExecWait DoRecover 
  2CC:  	Case  ==  .Event:ScareAway
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  002D0105 
  2F8:  		ExecWait DoNormalHit 
  304:  		ExecWait $Script_80219240_25 
  310:  		Return
  318:  	Case  ==  .Event:BeginAirLift
  324:  		SetConst  *Var[0]  00000001 
  334:  		SetConst  *Var[1]  002D0103 
  344:  		ExecWait DoAirLift 
  350:  	Case  ==  .Event:BlowAway
  35C:  		SetConst  *Var[0]  00000001 
  36C:  		SetConst  *Var[1]  002D0103 
  37C:  		ExecWait DoBlowAway 
  388:  		Return
  390:  	Default
  398:  EndSwitch
  3A0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3B4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  3C8:  Return
  3D0:  End

#new:Script $Script_TakeTurn_80219670_25
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 0000003F )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     SetAnimation 	( .Actor:Self 00000001 002D0104 )
   9C:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
   B8:  Wait     00000001 
   C4:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
   E0:  Wait     0000000F 
   EC:  Call     8024E664 ( 00000013 )
   FC:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000006 00000010 )
  120:  Switch  *Var[0] 
  12C:  	CaseOR  ==  00000006 
  138:  	CaseOR  ==  00000005 
  144:  		Set  *Var[A]  *Var[0] 
  154:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  170:  		Set  *Var[3]  *Var[1] 
  180:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  19C:  		Set  *Var[1]  *Var[3] 
  1AC:  		Sub  *Var[0]  0000005A 
  1BC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.0107421875] )
  1D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  		Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  20C:  		If  *Var[A]  ==  00000005 
  21C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  240:  		EndIf
  248:  		Call     UseCamPreset 	( 00000002 )
  258:  		Call     8027D7F0 ( )
  264:  		Call     8027D32C ( FFFFFF81 )
  274:  		Call     UseIdleAnimation 	( .Actor:Self .False )
  288:  		Call     RemoveActor 	( .Actor:Self )
  298:  		Return
  2A0:  	EndCaseGroup
  2A8:  EndSwitch
  2B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2CC:  Set  *Var[3]  *Var[1] 
  2DC:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  2F8:  Set  *Var[1]  *Var[3] 
  308:  Add  *Var[0]  0000000A 
  318:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.0107421875] )
  32C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  348:  Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  368:  ExecWait $Script_80219A90_25 
  374:  Call     SetGoalToTarget 	( .Actor:Self )
  384:  Wait     00000002 
  390:  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000006 00000020 )
  3B8:  Call     UseCamPreset 	( 00000002 )
  3C8:  Call     8027D7F0 ( )
  3D4:  SetConst  *Var[0]  00000001 
  3E4:  SetConst  *Var[1]  002D0107 
  3F4:  Set  *Var[2]  FFFFCFC7 
  404:  ExecWait DoDeath 
  410:  Return
  418:  End

#new:Script $Script_80219A90_25
    0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   1C:  Add  *Var[2]  00000002 
   2C:  Call     PlayEffect  	( {FX:SmokeRing:Blast1} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   70:  Add  *Var[1]  00000010 
   80:  Add  *Var[2]  00000002 
   90:  Call     PlayEffect  	( {FX:FaintDustCloud} *Var[0] *Var[1] *Var[2] *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D4:  Call     PlaySoundAtActor 	( .Actor:Self 00002078 )
   E8:  Call     80254218 ( 0000000B )
   F8:  Thread
  100:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  11C:  EndThread
  124:  Return
  12C:  End

