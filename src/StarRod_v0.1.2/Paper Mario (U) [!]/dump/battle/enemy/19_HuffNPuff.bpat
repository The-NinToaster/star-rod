% Automatically dumped from section 19

#new:Actor $19_HuffNPuff
% stats
[Index]        BAb 
[Level]        80`b 
[MaxHP]        60`b 
[Coins]         0`b 
[Flags]       00008200 
[StatusTable] $StatusTable_80219A60_19 
% ai
[SpriteCount]   4`s 
[SpriteTable] $SpriteTable_80219B0C_19 
[Script]      $Script_Init_80219BC4_19 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        125`b  95`b % width height
[HealthBar]   -17`b -31`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Function $Function_80218000_19
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218058_19
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       {Func:GetActor}
   20:  ADDIU     A0, R0, 200
   24:  DADDU     A0, S2, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S1, V0, R0
   34:  LWC1      F0, 138 (S1)
   38:  MTC1      V0, F2
   3C:  NOP
   40:  CVT.S.W   F2, F2
   44:  ADD.S     F0, F0, F2
   48:  ADDIU     S0, S0, 4
   4C:  TRUNC.W.S F6, F0
   50:  MFC1      V0, F6
   54:  NOP
   58:  SH        V0, 156 (S1)
   5C:  LW        A1, 0 (S0)
   60:  JAL       {Func:GetVariable}
   64:  DADDU     A0, S2, R0
   68:  MTC1      V0, F4
   6C:  NOP
   70:  CVT.S.W   F4, F4
   74:  LWC1      F0, 13C (S1)
   78:  LWC1      F2, 140 (S1)
   7C:  ADD.S     F0, F0, F4
   80:  TRUNC.W.S F6, F2
   84:  MFC1      V1, F6
   88:  NOP
   8C:  SH        V1, 15A (S1)
   90:  TRUNC.W.S F6, F0
   94:  MFC1      V1, F6
   98:  NOP
   9C:  SH        V1, 158 (S1)
   A0:  LW        RA, 1C (SP)
   A4:  LW        S2, 18 (SP)
   A8:  LW        S1, 14 (SP)
   AC:  LW        S0, 10 (SP)
   B0:  ADDIU     V0, R0, 2
   B4:  JR        RA
   B8:  ADDIU     SP, SP, 20

#new:Function $Function_80218114_19
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A1, S4, R0
   44:  DADDU     S3, V0, R0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       {Func:GetFloatVariable}
   5C:  DADDU     A0, S2, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S2, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S2, R0
   80:  JAL       {Func:GetVariable}
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S2, R0
   94:  JAL       {Func:GetVariable}
   98:  DADDU     S1, V0, R0
   9C:  DADDU     A0, S2, R0
   A0:  LW        A1, 0 (S0)
   A4:  JAL       {Func:GetFloatVariable}
   A8:  DADDU     S0, V0, R0
   AC:  LIF       F2, 180.0
   B4:  LIO       AT, 40490FD8
   BC:  MTC1      AT, F4
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  DADDU     A0, S2, R0
   F4:  DADDU     S3, S1, R0
   F8:  DADDU     A1, S4, R0
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A2, S1, R0
        .o104
  104:  LIO       AT, 40490FD8
  10C:  MTC1      AT, F0
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       {Func:CosRad}
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  DADDU     A0, S2, R0
  150:  MFC1      A2, F2
  154:  JAL       {Func:SetFloatVariable}
  158:  DADDU     A1, S5, R0
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  ADDIU     V0, R0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48

#new:Function $Function_802182A4_19
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 2C (SP)
   10:  SW        S4, 28 (SP)
   14:  SW        S3, 24 (SP)
   18:  SW        S2, 20 (SP)
   1C:  SW        S0, 18 (SP)
   20:  SDC1      F30, 58 (SP)
   24:  SDC1      F28, 50 (SP)
   28:  SDC1      F26, 48 (SP)
   2C:  SDC1      F24, 40 (SP)
   30:  SDC1      F22, 38 (SP)
   34:  SDC1      F20, 30 (SP)
   38:  LW        S0, C (S1)
   3C:  LW        S3, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  JAL       {Func:GetFloatVariable}
   48:  DADDU     A1, S3, R0
   4C:  SWC1      F0, 10 (SP)
   50:  LW        S4, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  DADDU     A1, S4, R0
   64:  MOV.S     F30, F0
   68:  LW        S2, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  DADDU     A0, S1, R0
   74:  JAL       {Func:GetFloatVariable}
   78:  DADDU     A1, S2, R0
   7C:  MOV.S     F28, F0
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  JAL       {Func:GetFloatVariable}
   8C:  DADDU     A0, S1, R0
   90:  LW        A1, 0 (S0)
   94:  ADDIU     S0, S0, 4
   98:  DADDU     A0, S1, R0
   9C:  JAL       {Func:GetFloatVariable}
   A0:  MOV.S     F26, F0
   A4:  MOV.S     F24, F0
   A8:  LW        A1, 0 (S0)
   AC:  JAL       {Func:GetFloatVariable}
   B0:  DADDU     A0, S1, R0
   B4:  MOV.S     F12, F26
   B8:  LIF       F2, 15.0
   C0:  MOV.S     F22, F0
   C4:  JAL       {Func:CosDeg}
   C8:  SUB.S     F24, F24, F2
   CC:  MOV.S     F20, F0
   D0:  JAL       {Func:CosDeg}
   D4:  MOV.S     F12, F24
   D8:  MUL.S     F20, F22, F20
   DC:  NOP
   E0:  MUL.S     F20, F20, F0
   E4:  NOP
   E8:  LWC1      F4, 10 (SP)
   EC:  ADD.S     F4, F4, F20
   F0:  MOV.S     F12, F26
   F4:  JAL       {Func:SinDeg}
   F8:  SWC1      F4, 10 (SP)
   FC:  MUL.S     F0, F22, F0
  100:  NOP
  104:  MOV.S     F12, F26
  108:  JAL       {Func:CosDeg}
  10C:  ADD.S     F30, F30, F0
  110:  MOV.S     F12, F24
  114:  JAL       {Func:SinDeg}
  118:  MOV.S     F20, F0
  11C:  MUL.S     F22, F22, F20
  120:  NOP
  124:  MUL.S     F22, F22, F0
  128:  NOP
  12C:  DADDU     A0, S1, R0
  130:  DADDU     A1, S3, R0
  134:  LW        A2, 10 (SP)
  138:  JAL       {Func:SetFloatVariable}
  13C:  SUB.S     F28, F28, F22
  140:  DADDU     A0, S1, R0
  144:  MFC1      A2, F30
  148:  JAL       {Func:SetFloatVariable}
  14C:  DADDU     A1, S4, R0
  150:  DADDU     A0, S1, R0
  154:  MFC1      A2, F28
  158:  JAL       {Func:SetFloatVariable}
  15C:  DADDU     A1, S2, R0
  160:  LW        RA, 2C (SP)
  164:  LW        S4, 28 (SP)
  168:  LW        S3, 24 (SP)
  16C:  LW        S2, 20 (SP)
  170:  LW        S1, 1C (SP)
  174:  LW        S0, 18 (SP)
  178:  LDC1      F30, 58 (SP)
  17C:  LDC1      F28, 50 (SP)
  180:  LDC1      F26, 48 (SP)
  184:  LDC1      F24, 40 (SP)
  188:  LDC1      F22, 38 (SP)
  18C:  LDC1      F20, 30 (SP)
  190:  ADDIU     V0, R0, 2
  194:  JR        RA
  198:  ADDIU     SP, SP, 60

#new:Function $Function_80218440_19
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S1, 3C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 40 (SP)
   10:  SW        S0, 38 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A1, V0, R0
   28:  ANDI      V0, A1, 2
   2C:  BNE       V0, R0, .o40
   30:  DADDU     A0, R0, R0
   34:  ADDIU     V0, R0, 2
   38:  SW        V0, 10 (SP)
   3C:  ADDIU     A0, R0, 1
        .o40
   40:  ANDI      V0, A1, 8
   44:  BNE       V0, R0, .o64
   48:  ANDI      V0, A1, 20
   4C:  SLL       V0, A0, 2
   50:  ADDU      V1, SP, V0
   54:  ADDIU     V0, R0, 8
   58:  SW        V0, 10 (V1)
   5C:  ADDIU     A0, A0, 1
   60:  ANDI      V0, A1, 20
        .o64
   64:  BNE       V0, R0, .o84
   68:  ANDI      V0, A1, 80
   6C:  SLL       V0, A0, 2
   70:  ADDU      V1, SP, V0
   74:  ADDIU     V0, R0, 20
   78:  SW        V0, 10 (V1)
   7C:  ADDIU     A0, A0, 1
   80:  ANDI      V0, A1, 80
        .o84
   84:  BNE       V0, R0, .oA4
   88:  ANDI      V0, A1, 200
   8C:  SLL       V0, A0, 2
   90:  ADDU      V1, SP, V0
   94:  ADDIU     V0, R0, 80
   98:  SW        V0, 10 (V1)
   9C:  ADDIU     A0, A0, 1
   A0:  ANDI      V0, A1, 200
        .oA4
   A4:  BNE       V0, R0, .oC4
   A8:  ANDI      V0, A1, 1
   AC:  SLL       V0, A0, 2
   B0:  ADDU      V1, SP, V0
   B4:  ADDIU     V0, R0, 200
   B8:  SW        V0, 10 (V1)
   BC:  ADDIU     A0, A0, 1
   C0:  ANDI      V0, A1, 1
        .oC4
   C4:  BNE       V0, R0, .oE4
   C8:  ANDI      V0, A1, 4
   CC:  SLL       V0, A0, 2
   D0:  ADDU      V1, SP, V0
   D4:  ADDIU     V0, R0, 1
   D8:  SW        V0, 10 (V1)
   DC:  ADDU      A0, A0, V0
   E0:  ANDI      V0, A1, 4
        .oE4
   E4:  BNE       V0, R0, .o104
   E8:  ANDI      V0, A1, 10
   EC:  SLL       V0, A0, 2
   F0:  ADDU      V1, SP, V0
   F4:  ADDIU     V0, R0, 4
   F8:  SW        V0, 10 (V1)
   FC:  ADDIU     A0, A0, 1
  100:  ANDI      V0, A1, 10
        .o104
  104:  BNE       V0, R0, .o11C
  108:  SLL       V0, A0, 2
  10C:  ADDU      V1, SP, V0
  110:  ADDIU     V0, R0, 10
  114:  SW        V0, 10 (V1)
  118:  ADDIU     A0, A0, 1
        .o11C
  11C:  BNE       A0, R0, .o15C
  120:  ANDI      V0, A1, 100
  124:  BNE       V0, R0, .o13C
  128:  ANDI      V0, A1, 40
  12C:  ADDIU     V0, R0, 100
  130:  SW        V0, 10 (SP)
  134:  ADDIU     A0, R0, 1
  138:  ANDI      V0, A1, 40
        .o13C
  13C:  BNE       V0, R0, .o154
  140:  SLL       V0, A0, 2
  144:  ADDU      V1, SP, V0
  148:  ADDIU     V0, R0, 40
  14C:  SW        V0, 10 (V1)
  150:  ADDIU     A0, A0, 1
        .o154
  154:  BEQ       A0, R0, .o170
  158:  ADDIU     A2, R0, FFFF
        .o15C
  15C:  JAL       {Func:GetRandom}
  160:  ADDIU     A0, A0, FFFF
  164:  SLL       V0, V0, 2
  168:  ADDU      V0, SP, V0
  16C:  LW        A2, 10 (V0)
        .o170
  170:  LW        A1, 0 (S0)
  174:  JAL       {Func:SetVariable}
  178:  DADDU     A0, S1, R0
  17C:  LW        RA, 40 (SP)
  180:  LW        S1, 3C (SP)
  184:  LW        S0, 38 (SP)
  188:  ADDIU     V0, R0, 2
  18C:  JR        RA
  190:  ADDIU     SP, SP, 48

#new:Function $Function_802185D4_19
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  JAL       {Func:GetActor}
   14:  LW        A0, 148 (S0)
   18:  LB        V0, 1F1 (V0)
   1C:  SAW       V0, $SpecialFormation_8021A354_19[8]
   24:  JAL       {Func:GetActor}
   28:  LW        A0, 148 (S0)
   2C:  LB        V1, 1F1 (V0)
   30:  LW        RA, 14 (SP)
   34:  LW        S0, 10 (SP)
   38:  ADDIU     V0, R0, 2
   3C:  SAW       V1, $SpecialFormation_8021A370_19[8]
   44:  JR        RA
   48:  ADDIU     SP, SP, 18

#new:Function $Function_80218620_19
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S1, 14 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S2)
   1C:  LW        A1, 0 (S0)
   20:  JAL       {Func:GetVariable}
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  DADDU     A0, S2, R0
   34:  LIA       V1, $End[0]
   3C:  SLL       S1, V0, 3
   40:  ADDU      S1, S1, V0
   44:  SLL       S1, S1, 2
   48:  JAL       {Func:GetVariable}
   4C:  ADDU      S1, S1, V1
   50:  MTC1      V0, F0
   54:  NOP
   58:  CVT.S.W   F0, F0
   5C:  SWC1      F0, 0 (S1)
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  JAL       {Func:GetVariable}
   6C:  DADDU     A0, S2, R0
   70:  MTC1      V0, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 4 (S1)
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  JAL       {Func:GetVariable}
   8C:  DADDU     A0, S2, R0
   90:  ADDIU     A0, R0, 14
   94:  MTC1      V0, F0
   98:  NOP
   9C:  CVT.S.W   F0, F0
   A0:  JAL       {Func:GetRandom}
   A4:  SWC1      F0, 8 (S1)
   A8:  ADDIU     A0, R0, 28
   AC:  SUBU      V0, R0, V0
   B0:  MTC1      V0, F0
   B4:  NOP
   B8:  CVT.S.W   F0, F0
   BC:  JAL       {Func:GetRandom}
   C0:  SWC1      F0, C (S1)
   C4:  ADDIU     V0, V0, 3C
   C8:  MTC1      V0, F0
   CC:  NOP
   D0:  CVT.S.W   F0, F0
   D4:  SWC1      F0, 10 (S1)
   D8:  SW        R0, 14 (S1)
   DC:  LW        A1, 0 (S0)
   E0:  ADDIU     S0, S0, 4
   E4:  JAL       {Func:GetVariable}
   E8:  DADDU     A0, S2, R0
   EC:  MTC1      V0, F0
   F0:  NOP
   F4:  CVT.S.W   F0, F0
   F8:  SWC1      F0, 18 (S1)
   FC:  LW        A1, 0 (S0)
  100:  ADDIU     S0, S0, 4
  104:  JAL       {Func:GetVariable}
  108:  DADDU     A0, S2, R0
  10C:  MTC1      V0, F0
  110:  NOP
  114:  CVT.S.W   F0, F0
  118:  SWC1      F0, 1C (S1)
  11C:  LW        A1, 0 (S0)
  120:  JAL       {Func:GetVariable}
  124:  DADDU     A0, S2, R0
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  SWC1      F0, 20 (S1)
  138:  LW        RA, 1C (SP)
  13C:  LW        S2, 18 (SP)
  140:  LW        S1, 14 (SP)
  144:  LW        S0, 10 (SP)
  148:  ADDIU     V0, R0, 2
  14C:  JR        RA
  150:  ADDIU     SP, SP, 20

#new:Function $Function_80218774_19
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 2C (SP)
   10:  SW        S2, 28 (SP)
   14:  SW        S0, 20 (SP)
   18:  SDC1      F30, 58 (SP)
   1C:  SDC1      F28, 50 (SP)
   20:  SDC1      F26, 48 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S1)
   34:  LW        A1, 0 (S0)
   38:  JAL       {Func:GetVariable}
   3C:  ADDIU     S0, S0, 4
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetFloatVariable}
   50:  DADDU     S2, V0, R0
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  DADDU     A0, S1, R0
   60:  JAL       {Func:GetFloatVariable}
   64:  MOV.S     F30, F0
   68:  LW        A1, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  DADDU     A0, S1, R0
   74:  JAL       {Func:GetFloatVariable}
   78:  MOV.S     F28, F0
   7C:  LW        A1, 0 (S0)
   80:  ADDIU     S0, S0, 4
   84:  DADDU     A0, S1, R0
   88:  JAL       {Func:GetFloatVariable}
   8C:  MOV.S     F26, F0
   90:  LW        A1, 0 (S0)
   94:  ADDIU     S0, S0, 4
   98:  DADDU     A0, S1, R0
   9C:  JAL       {Func:GetFloatVariable}
   A0:  MOV.S     F24, F0
   A4:  LW        A1, 0 (S0)
   A8:  ADDIU     S0, S0, 4
   AC:  DADDU     A0, S1, R0
   B0:  JAL       {Func:GetFloatVariable}
   B4:  MOV.S     F22, F0
   B8:  LW        A1, 0 (S0)
   BC:  ADDIU     S0, S0, 4
   C0:  DADDU     A0, S1, R0
   C4:  JAL       {Func:GetVariable}
   C8:  MOV.S     F20, F0
   CC:  MFC1      A1, F30
   D0:  MFC1      A2, F28
   D4:  MFC1      A3, F26
   D8:  DADDU     A0, S2, R0
   DC:  SWC1      F24, 10 (SP)
   E0:  SWC1      F22, 14 (SP)
   E4:  SWC1      F20, 18 (SP)
   E8:  JAL       800721D0
   EC:  SW        V0, 1C (SP)
   F0:  DADDU     A0, S1, R0
   F4:  LW        A1, 0 (S0)
   F8:  JAL       {Func:SetVariable}
   FC:  DADDU     A2, V0, R0
  100:  LW        RA, 2C (SP)
  104:  LW        S2, 28 (SP)
  108:  LW        S1, 24 (SP)
  10C:  LW        S0, 20 (SP)
  110:  LDC1      F30, 58 (SP)
  114:  LDC1      F28, 50 (SP)
  118:  LDC1      F26, 48 (SP)
  11C:  LDC1      F24, 40 (SP)
  120:  LDC1      F22, 38 (SP)
  124:  LDC1      F20, 30 (SP)
  128:  ADDIU     V0, R0, 2
  12C:  JR        RA
  130:  ADDIU     SP, SP, 60

#new:Function $Function_802188A8_19
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       8011D82C
    C:  ADDIU     A0, R0, 1
   10:  DADDU     A0, R0, R0
   14:  ADDIU     V0, R0, 1
   18:  DADDU     A1, A0, R0
   1C:  DADDU     A2, A0, R0
   20:  LAW       V1, 801512F0
   28:  DADDU     A3, A0, R0
   2C:  JAL       8011BE5C
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  ADDIU     V0, R0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18

#new:Function $Function_802188EC_19
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       {Func:GetVariable}
   10:  LW        A1, 0 (V0)
   14:  DADDU     A0, R0, R0
   18:  DADDU     A1, A0, R0
   1C:  DADDU     A2, A0, R0
   20:  JAL       8011BE5C
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  ADDIU     V0, R0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18

#new:Function $Function_80218924_19
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S2, 20 (SP)
   18:  SW        S0, 18 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetFloatVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F4
   68:  NOP
   6C:  CVT.S.W   F4, F4
   70:  MFC1      A1, F4
   74:  MTC1      S2, F4
   78:  NOP
   7C:  CVT.S.W   F4, F4
   80:  LIF       F2, 2.5
   88:  MFC1      A2, F4
   8C:  MUL.S     F0, F0, F2
   90:  NOP
   94:  MTC1      S0, F4
   98:  NOP
   9C:  CVT.S.W   F4, F4
   A0:  MFC1      A3, F4
   A4:  DADDU     A0, R0, R0
   A8:  SW        R0, 14 (SP)
   AC:  JAL       80071930
   B0:  SWC1      F0, 10 (SP)
   B4:  SW        V0, 84 (S1)
   B8:  LW        RA, 28 (SP)
   BC:  LW        S3, 24 (SP)
   C0:  LW        S2, 20 (SP)
   C4:  LW        S1, 1C (SP)
   C8:  LW        S0, 18 (SP)
   CC:  ADDIU     V0, R0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 30

#new:Function $Function_802189FC_19
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  DADDU     A0, S1, R0
   3C:  JAL       {Func:GetFloatVariable}
   40:  DADDU     S2, V0, R0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  DADDU     A0, S1, R0
   50:  JAL       {Func:GetFloatVariable}
   54:  MOV.S     F22, F0
   58:  DADDU     A0, S1, R0
   5C:  LW        A1, 0 (S0)
   60:  JAL       {Func:GetFloatVariable}
   64:  MOV.S     F20, F0
   68:  LW        V0, C (S2)
   6C:  SWC1      F22, 4 (V0)
   70:  LW        V0, C (S2)
   74:  SWC1      F20, 8 (V0)
   78:  LW        V1, C (S2)
   7C:  SWC1      F0, C (V1)
   80:  LW        RA, 1C (SP)
   84:  LW        S2, 18 (SP)
   88:  LW        S1, 14 (SP)
   8C:  LW        S0, 10 (SP)
   90:  LDC1      F22, 28 (SP)
   94:  LDC1      F20, 20 (SP)
   98:  ADDIU     V0, R0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 30

#new:Function $Function_80218AA0_19
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  LW        S0, C (S1)
   28:  LW        S2, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F24, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F22, F0
   64:  DADDU     A0, S1, R0
   68:  LW        A1, 0 (S0)
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F20, F0
   74:  MOV.S     F12, F24
   78:  MFC1      A2, F20
   7C:  MFC1      A3, F0
   80:  JAL       80029C80
   84:  MOV.S     F14, F22
   88:  DADDU     A0, S1, R0
   8C:  MFC1      A2, F0
   90:  JAL       {Func:SetFloatVariable}
   94:  DADDU     A1, S2, R0
   98:  LW        RA, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LDC1      F24, 30 (SP)
   AC:  LDC1      F22, 28 (SP)
   B0:  LDC1      F20, 20 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 38

#new:Function $Function_80218B60_19
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S2, 20 (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F22, 38 (SP)
   20:  SDC1      F20, 30 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  DADDU     A0, S1, R0
   40:  JAL       {Func:GetFloatVariable}
   44:  DADDU     S3, V0, R0
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  DADDU     A0, S1, R0
   54:  JAL       {Func:GetFloatVariable}
   58:  MOV.S     F22, F0
   5C:  LW        A1, 0 (S0)
   60:  ADDIU     S0, S0, 4
   64:  DADDU     A0, S1, R0
   68:  JAL       {Func:GetVariable}
   6C:  MOV.S     F20, F0
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  DADDU     A0, S1, R0
   7C:  JAL       {Func:GetVariable}
   80:  DADDU     S2, V0, R0
   84:  DADDU     A0, S3, R0
   88:  MFC1      A1, F22
   8C:  MFC1      A2, F20
   90:  DADDU     A3, S2, R0
   94:  JAL       8002A3B4
   98:  SW        V0, 10 (SP)
   9C:  LW        A1, 0 (S0)
   A0:  MFC1      A2, F0
   A4:  JAL       {Func:SetFloatVariable}
   A8:  DADDU     A0, S1, R0
   AC:  LW        RA, 28 (SP)
   B0:  LW        S3, 24 (SP)
   B4:  LW        S2, 20 (SP)
   B8:  LW        S1, 1C (SP)
   BC:  LW        S0, 18 (SP)
   C0:  LDC1      F22, 38 (SP)
   C4:  LDC1      F20, 30 (SP)
   C8:  ADDIU     V0, R0, 2
   CC:  JR        RA
   D0:  ADDIU     SP, SP, 40

#new:Function $Function_80218C40_19
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A1, S4, R0
   44:  DADDU     S3, V0, R0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       {Func:GetFloatVariable}
   5C:  DADDU     A0, S2, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S2, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S2, R0
   80:  JAL       {Func:GetVariable}
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S2, R0
   94:  JAL       {Func:GetVariable}
   98:  DADDU     S1, V0, R0
   9C:  DADDU     A0, S2, R0
   A0:  LW        A1, 0 (S0)
   A4:  JAL       {Func:GetFloatVariable}
   A8:  DADDU     S0, V0, R0
   AC:  LIF       F2, 180.0
   B4:  LIO       AT, 40490FD8
   BC:  MTC1      AT, F4
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  DADDU     A0, S2, R0
   F4:  DADDU     S3, S1, R0
   F8:  DADDU     A1, S4, R0
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A2, S1, R0
        .o104
  104:  LIO       AT, 40490FD8
  10C:  MTC1      AT, F0
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       {Func:CosRad}
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  DADDU     A0, S2, R0
  150:  MFC1      A2, F2
  154:  JAL       {Func:SetFloatVariable}
  158:  DADDU     A1, S5, R0
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  ADDIU     V0, R0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48

#new:IdleAnimations $IdleAnimations_802198F0_19
.Status:Normal    007C0001
.Status:Stone     007C0001
.Status:Sleep     007C0001
.Status:Poison    007C0001
.Status:Stop      007C0001
.Status:Static    007C0001
.Status:Paralyze  007C0001
.Status:Paralyze  007C0001
.Status:Dizzy     007C0001
.Status:Dizzy     007C0001
.Status:Fear      007C0001
.Status:End

#new:IdleAnimations $IdleAnimations_8021994C_19
.Status:Normal    007C0002
.Status:Stone     007C0002
.Status:Sleep     007C0002
.Status:Poison    007C0002
.Status:Stop      007C0002
.Status:Static    007C0002
.Status:Paralyze  007C0002
.Status:Paralyze  007C0002
.Status:Dizzy     007C0002
.Status:Dizzy     007C0002
.Status:Fear      007C0002
.Status:End

#new:IdleAnimations $IdleAnimations_802199A8_19
.Status:Normal    007C0003
.Status:Stone     007C0003
.Status:Sleep     007C0003
.Status:Poison    007C0003
.Status:Stop      007C0003
.Status:Static    007C0003
.Status:Paralyze  007C0003
.Status:Paralyze  007C0003
.Status:Dizzy     007C0003
.Status:Dizzy     007C0003
.Status:Fear      007C0003
.Status:End

#new:IdleAnimations $IdleAnimations_80219A04_19
.Status:Normal    007C0011
.Status:End

#new:IdleAnimations $IdleAnimations_80219A10_19
.Status:Normal    007C0012
.Status:End

#new:IdleAnimations $IdleAnimations_80219A1C_19
.Status:Normal    007C0013
.Status:End

#new:IdleAnimations $IdleAnimations_80219A28_19
.Status:Normal    004C0002
.Status:End

#new:DefenseTable $DefenseTable_80219A34_19
.Element:Normal 00000000
.Element:Shock  00000063
.Element:Mystery00000000
.Element:Jump   00000000
.Element:Hammer 00000000
.Element:End

#new:StatusTable $StatusTable_80219A60_19
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80219B0C_19
00800028 01000000 F62800FF $IdleAnimations_802198F0_19 $DefenseTable_80219A34_19 00000000 00000000 F1CE0000 00000000 
00020000 02000000 000000FF $IdleAnimations_8021994C_19 $DefenseTable_80219A34_19 00000000 00000000 00000000 00000000 
00020000 03000000 000000FF $IdleAnimations_802199A8_19 $DefenseTable_80219A34_19 00000000 00000000 00000000 00000000 
00020001 04000000 000000FF $IdleAnimations_80219A28_19 $DefenseTable_80219A34_19 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_80219BC4_19
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D2B8_19 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021A0E4_19 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021BA6C_19 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021D840_19 )
   50:  Call     SetActorVar 	( .Actor:Enemy0 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   98:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   B0:  Call     SetActorVar 	( .Actor:Self 00000006 00000064 )
   C8:  Call     SetActorVar 	( .Actor:Self 00000007 00000064 )
   E0:  ExecWait $Script_80219CC0_19 
   EC:  Return
   F4:  End

#new:Script $Script_80219CC0_19
    0:  Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
   18:  Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
   30:  Mul  *Var[0]  00000091 
   40:  Mul  *Var[1]  00000087 
   50:  Div  *Var[0]  00000064 
   60:  Div  *Var[1]  00000064 
   70:  Call     8027D810 ( 00000200 *Var[1] *Var[0] )
   88:  Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
   A0:  Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
   B8:  Mul  *Var[0]  FFFFFFF6 
   C8:  Mul  *Var[1]  00000028 
   D8:  Div  *Var[0]  00000064 
   E8:  Div  *Var[1]  00000064 
   F8:  Call     SetTargetOffset 	( .Actor:Enemy0 00000001 *Var[0] *Var[1] )
  114:  Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
  12C:  Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
  144:  Mul  *Var[0]  FFFFFFF1 
  154:  Mul  *Var[1]  FFFFFFCE 
  164:  Div  *Var[0]  00000064 
  174:  Div  *Var[1]  00000064 
  184:  Call     8027D4C8 ( 00000200 00000001 *Var[0] *Var[1] )
  1A0:  Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
  1B8:  Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
  1D0:  Mul  *Var[0]  FFFFFFEF 
  1E0:  Mul  *Var[1]  FFFFFFE1 
  1F0:  Div  *Var[0]  00000064 
  200:  Div  *Var[1]  00000064 
  210:  Call     $Function_80218058_19 ( *Var[0] *Var[1] )
  224:  Return
  22C:  End

#new:Script $Script_80219EF4_19
    0:  Set  *Flag[00]  00000000 
   10:  Set  *Var[A]  00000000 
   20:  Set  *Var[B]  00000000 
   30:  Label    00000000 
   3C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   54:  Switch  *Var[0] 
   60:  	CaseOR  ==  00000003 
   6C:  	CaseOR  ==  00000004 
   78:  	CaseOR  ==  0000000A 
   84:  	CaseOR  ==  0000000B 
   90:  		If  *Flag[00]  ==  00000000 
   A0:  			Call     RandInt     	( 00000002 *Var[A] )
   B4:  			Call     RandInt     	( 00000002 *Var[B] )
   C8:  			Set  *Flag[00]  00000001 
   D8:  		Else
   E0:  			Mul  *Var[A]  FFFFFFFF 
   F0:  			Mul  *Var[B]  FFFFFFFF 
  100:  			Set  *Flag[00]  00000000 
  110:  		EndIf
  118:  	EndCaseGroup
  120:  	CaseOR  ==  00000007 
  12C:  	CaseOR  ==  00000008 
  138:  		If  *Flag[00]  ==  00000000 
  148:  			Call     RandInt     	( 00000001 *Var[A] )
  15C:  			Set  *Flag[00]  00000001 
  16C:  		Else
  174:  			Mul  *Var[A]  FFFFFFFF 
  184:  			Set  *Flag[00]  00000000 
  194:  		EndIf
  19C:  	EndCaseGroup
  1A4:  EndSwitch
  1AC:  Call     8026BA04 ( FFFFFF81 *Var[A] *Var[B] 00000000 )
  1C8:  Wait     00000001 
  1D4:  Goto     00000000 
  1E0:  Return
  1E8:  End

#new:Script $Script_Idle_8021A0E4_19
    0:  Set  *Var[F]  00000000 
   10:  Loop     
   1C:  	Call     GetActorVar 	( .Actor:Self 00000003 *Var[A] )
   34:  	Switch  *Var[A] 
   40:  		Case  ==  00000000 
   4C:  			Call     $Function_80218114_19 ( *Var[F] *Var[0] *Fixed[0.9707031] *Fixed[1.0302734] 0000000F 00000000 00000000 )
   74:  			Call     $Function_80218114_19 ( *Var[F] *Var[1] *Fixed[1.0302734] *Fixed[0.9707031] 0000000F 00000000 00000000 )
   9C:  			Add  *Var[F]  00000001 
   AC:  		Case  ==  00000001 
   B8:  			Call     $Function_80218114_19 ( *Var[F] *Var[0] *Fixed[0.9501953] *Fixed[1.0507812] 0000000F 00000000 00000000 )
   E0:  			Call     $Function_80218114_19 ( *Var[F] *Var[1] *Fixed[1.0507812] *Fixed[0.9501953] 0000000F 00000000 00000000 )
  108:  			Add  *Var[F]  00000003 
  118:  		Case  ==  00000002 
  124:  			Call     $Function_80218114_19 ( *Var[F] *Var[0] *Fixed[0.9003906] *Fixed[1.1005859] 0000000F 00000000 00000000 )
  14C:  			Call     $Function_80218114_19 ( *Var[F] *Var[1] *Fixed[1.1005859] *Fixed[0.9003906] 0000000F 00000000 00000000 )
  174:  			Add  *Var[F]  00000005 
  184:  	EndSwitch
  18C:  	Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  1A4:  	Call     GetActorVar 	( .Actor:Self 00000007 *Var[3] )
  1BC:  	DivF  *Var[2]  *Fixed[100.0] 
  1CC:  	DivF  *Var[3]  *Fixed[100.0] 
  1DC:  	MulF  *Var[1]  *Var[2] 
  1EC:  	MulF  *Var[0]  *Var[3] 
  1FC:  	Call     SetActorScale 	( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
  218:  	If  *Var[F]  >=  0000001E 
  228:  		Set  *Var[F]  00000000 
  238:  	EndIf
  240:  	Wait     00000001 
  24C:  EndLoop
  254:  Return
  25C:  End

#new:Vector3D $Vector3D_8021A348_19
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021A354_19
$TuffPuff_19 $Vector3D_8021A348_19 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_8021A370_19
$TuffPuff_19 $Vector3D_8021A348_19 00000000 00000001 00000000 00000000 00000000 

#new:Script $Script_ShedTuffPuffs_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     GetLastDamage 	( .Actor:Self *Var[9] )
   20:  If  *Var[9]  <=  00000000 
   30:  	Return
   38:  EndIf
   40:  Call     GetBattleFlags ( *Var[0] )
   50:  If  *Var[0]  &  00000240 
   60:  	If  *Var[9]  >  00000008 
   70:  		Set  *Var[9]  00000008 
   80:  	EndIf
   88:  Else
   90:  	If  *Var[9]  >  00000004 
   A0:  		Set  *Var[9]  00000004 
   B0:  	EndIf
   B8:  EndIf
   C0:  Call     GetEventType 	( .Actor:Self *Var[0] )
   D4:  Switch  *Var[0] 
   E0:  	CaseOR  ==  .Event:Death
   EC:  	CaseOR  ==  .Event:BurnDeath
   F8:  		Return
  100:  	EndCaseGroup
  108:  EndSwitch
  110:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
  128:  Call     GetLastDamage 	( .Actor:Self *Var[8] )
  13C:  Mul  *Var[8]  00000001 
  14C:  Sub  *Var[0]  *Var[8] 
  15C:  If  *Var[0]  <  00000032 
  16C:  	Set  *Var[0]  00000032 
  17C:  EndIf
  184:  Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  19C:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
  1B4:  Call     GetLastDamage 	( .Actor:Self *Var[8] )
  1C8:  Mul  *Var[8]  00000001 
  1D8:  Sub  *Var[0]  *Var[8] 
  1E8:  If  *Var[0]  <  00000032 
  1F8:  	Set  *Var[0]  00000032 
  208:  EndIf
  210:  Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
  228:  ExecWait $Script_80219CC0_19 
  234:  Set  *Var[A]  00000000 
  244:  Call     GetBattleFlags ( *Var[0] )
  254:  If  *Var[0]  &  00000240 
  264:  	Set  *Var[0]  *Var[9] 
  274:  	If  *Var[0]  >  00000001 
  284:  		Set  *Var[A]  *Var[0] 
  294:  		Div  *Var[A]  00000002 
  2A4:  		Set  *Var[9]  *Var[0] 
  2B4:  		Mod  *Var[9]  00000002 
  2C4:  		Add  *Var[9]  *Var[A] 
  2D4:  	EndIf
  2DC:  EndIf
  2E4:  Loop     *Var[9] 
  2F0:  	Call     $Function_802185D4_19 ( )
  2FC:  	If  *Var[A]  >  00000000 
  30C:  		Sub  *Var[A]  00000001 
  31C:  		Call     SummonEnemy 	( $SpecialFormation_8021A370_19 00000000 )
  330:  		Call     SetActorVar 	( *Var[0] 00000005 00000002 )
  348:  	Else
  350:  		Call     SummonEnemy 	( $SpecialFormation_8021A354_19 00000000 )
  364:  		Call     SetActorVar 	( *Var[0] 00000005 00000001 )
  37C:  	EndIf
  384:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  39C:  	Call     $Function_80218440_19 ( *Var[1] *Var[2] )
  3B0:  	Switch  *Var[2] 
  3BC:  		Case  ==  00000001 
  3C8:  			ConstOR  *Var[1] 00000001 
  3D8:  			Set  *Var[2]  00000000 
  3E8:  			Set  *Array[0]  *Var[0] 
  3F8:  		Case  ==  00000002 
  404:  			ConstOR  *Var[1] 00000002 
  414:  			Set  *Var[2]  00000001 
  424:  			Set  *Array[1]  *Var[0] 
  434:  		Case  ==  00000004 
  440:  			ConstOR  *Var[1] 00000004 
  450:  			Set  *Var[2]  00000002 
  460:  			Set  *Array[2]  *Var[0] 
  470:  		Case  ==  00000008 
  47C:  			ConstOR  *Var[1] 00000008 
  48C:  			Set  *Var[2]  00000003 
  49C:  			Set  *Array[3]  *Var[0] 
  4AC:  		Case  ==  00000010 
  4B8:  			ConstOR  *Var[1] 00000010 
  4C8:  			Set  *Var[2]  00000004 
  4D8:  			Set  *Array[4]  *Var[0] 
  4E8:  		Case  ==  00000020 
  4F4:  			ConstOR  *Var[1] 00000020 
  504:  			Set  *Var[2]  00000005 
  514:  			Set  *Array[5]  *Var[0] 
  524:  		Case  ==  00000040 
  530:  			ConstOR  *Var[1] 00000040 
  540:  			Set  *Var[2]  00000006 
  550:  			Set  *Array[6]  *Var[0] 
  560:  		Case  ==  00000080 
  56C:  			ConstOR  *Var[1] 00000080 
  57C:  			Set  *Var[2]  00000007 
  58C:  			Set  *Array[7]  *Var[0] 
  59C:  		Case  ==  00000100 
  5A8:  			ConstOR  *Var[1] 00000100 
  5B8:  			Set  *Var[2]  00000008 
  5C8:  			Set  *Array[8]  *Var[0] 
  5D8:  		Case  ==  00000200 
  5E4:  			ConstOR  *Var[1] 00000200 
  5F4:  			Set  *Var[2]  00000009 
  604:  			Set  *Array[9]  *Var[0] 
  614:  		Default
  61C:  			Set  *Var[2]  FFFFFFFF 
  62C:  	EndSwitch
  634:  	Call     SetActorVar 	( .Actor:Self 00000002 *Var[1] )
  64C:  	Call     PlaySoundAtActor 	( *Var[0] .Sound:OpenShell )
  660:  	Thread
  668:  		Set  *Var[3]  *Var[0] 
  678:  		Call     MakeLerp    	( 00000096 000000FF 0000000F 00000001 )
  694:  		Label    0000007B 
  6A0:  		Call     UpdateLerp  	( )
  6AC:  		Call     SetSpriteAlpha ( *Var[3] 00000001 *Var[0] )
  6C4:  		Wait     00000001 
  6D0:  		If  *Var[1]  ==  00000001 
  6E0:  			Goto     0000007B 
  6EC:  		EndIf
  6F4:  		Call     SetSpriteAlpha ( *Var[3] 00000001 000000FF )
  70C:  	EndThread
  714:  	If  *Var[2]  !=  FFFFFFFF 
  724:  		Call     8027DCBC ( FFFFFF81 *Var[0] )
  738:  		Call     CopyStatBoosts ( .Actor:Self *Var[0] )
  74C:  		Call     SetActorVar 	( *Var[0] 00000001 *Var[2] )
  764:  		Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  780:  		Call     SetActorPos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
  79C:  		Add  *Var[3]  FFFFFFFB 
  7AC:  		Add  *Var[4]  00000000 
  7BC:  		Add  *Var[5]  00000000 
  7CC:  		Mul  *Var[2]  00000024 
  7DC:  		Add  *Var[2]  00000000 
  7EC:  		Call     $Function_802182A4_19 ( *Var[3] *Var[4] *Var[5] *Var[2] *Fixed[0.0] *Fixed[50.0] )
  810:  		Thread
  818:  			Call     SetActorJumpscale 	( *Var[0] *Fixed[0.80078125] )
  82C:  			Call     SetGoalToPos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
  848:  			Call     JumpToGoal  	( *Var[0] 0000001E 00000000 00000000 00000000 )
  868:  			Call     ForceHomePos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
  884:  			Call     HPBarToHome 	( *Var[0] )
  894:  		EndThread
  89C:  	Else
  8A4:  		Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  8C0:  		Call     SetActorPos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
  8DC:  		Call     RandInt     	( 000000C8 *Var[6] )
  8F0:  		Sub  *Var[6]  00000064 
  900:  		Add  *Var[3]  *Var[6] 
  910:  		Add  *Var[5]  0000000A 
  920:  		Thread
  928:  			Call     SetActorJumpscale 	( *Var[0] *Fixed[0.80078125] )
  93C:  			Call     SetGoalToPos 	( *Var[0] *Var[3] FFFFFFE2 *Var[5] )
  958:  			Call     JumpToGoal  	( *Var[0] 00000028 00000000 00000000 00000000 )
  978:  			Call     RemoveActor 	( *Var[0] )
  988:  		EndThread
  990:  	EndIf
  998:  EndLoop
  9A0:  Return
  9A8:  End

#new:Script $Script_8021AD3C_19
    0:  ExecWait $Script_ShedTuffPuffs_19 
    C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   24:  Switch  *Var[0] 
   30:  	CaseOR  ==  00000004 
   3C:  	CaseOR  ==  00000008 
   48:  	CaseOR  ==  0000000B 
   54:  		SetConst  *Var[2]  007C0011 
   64:  		SetConst  *Var[3]  007C0012 
   74:  		SetConst  *Var[4]  007C0013 
   84:  	EndCaseGroup
   8C:  	Default
   94:  		SetConst  *Var[2]  007C0007 
   A4:  		SetConst  *Var[3]  007C0008 
   B4:  		SetConst  *Var[4]  007C0009 
   C4:  EndSwitch
   CC:  Thread
   D4:  	Set  *Var[0]  00000001 
   E4:  	Set  *Var[1]  *Var[2] 
   F4:  	ExecWait DoNormalHit 
  100:  EndThread
  108:  Thread
  110:  	Set  *Var[0]  00000002 
  120:  	Set  *Var[1]  *Var[3] 
  130:  	ExecWait DoNormalHit 
  13C:  EndThread
  144:  Thread
  14C:  	Set  *Var[0]  00000003 
  15C:  	Set  *Var[1]  *Var[4] 
  16C:  	ExecWait DoNormalHit 
  178:  EndThread
  180:  Wait     0000001E 
  18C:  Return
  194:  End

#new:Script $Script_8021AED8_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Label    00000000 
   18:  Call     GetBattleFlags ( *Var[0] )
   28:  If  *Var[0]  &  00000100 
   38:  	Wait     00000001 
   44:  	Goto     00000000 
   50:  EndIf
   58:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   70:  If  *Var[0]  &  00000001 
   80:  	Call     80269EAC ( 00000000 )
   90:  	Call     DispatchEvent 	( *Array[0] .Event:Death )
   A4:  EndIf
   AC:  If  *Var[0]  &  00000002 
   BC:  	Call     80269EAC ( 00000000 )
   CC:  	Call     DispatchEvent 	( *Array[1] .Event:Death )
   E0:  EndIf
   E8:  If  *Var[0]  &  00000004 
   F8:  	Call     80269EAC ( 00000000 )
  108:  	Call     DispatchEvent 	( *Array[2] .Event:Death )
  11C:  EndIf
  124:  If  *Var[0]  &  00000008 
  134:  	Call     80269EAC ( 00000000 )
  144:  	Call     DispatchEvent 	( *Array[3] .Event:Death )
  158:  EndIf
  160:  If  *Var[0]  &  00000010 
  170:  	Call     80269EAC ( 00000000 )
  180:  	Call     DispatchEvent 	( *Array[4] .Event:Death )
  194:  EndIf
  19C:  If  *Var[0]  &  00000020 
  1AC:  	Call     80269EAC ( 00000000 )
  1BC:  	Call     DispatchEvent 	( *Array[5] .Event:Death )
  1D0:  EndIf
  1D8:  If  *Var[0]  &  00000040 
  1E8:  	Call     80269EAC ( 00000000 )
  1F8:  	Call     DispatchEvent 	( *Array[6] .Event:Death )
  20C:  EndIf
  214:  If  *Var[0]  &  00000080 
  224:  	Call     80269EAC ( 00000000 )
  234:  	Call     DispatchEvent 	( *Array[7] .Event:Death )
  248:  EndIf
  250:  If  *Var[0]  &  00000100 
  260:  	Call     80269EAC ( 00000000 )
  270:  	Call     DispatchEvent 	( *Array[8] .Event:Death )
  284:  EndIf
  28C:  If  *Var[0]  &  00000200 
  29C:  	Call     80269EAC ( 00000000 )
  2AC:  	Call     DispatchEvent 	( *Array[9] .Event:Death )
  2C0:  EndIf
  2C8:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  2E0:  Switch  *Var[0] 
  2EC:  	CaseOR  ==  00000004 
  2F8:  	CaseOR  ==  00000008 
  304:  	CaseOR  ==  0000000B 
  310:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  328:  		Kill     *Var[0] 
  334:  		Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  34C:  		Call     RemoveEffect 	( *Var[0] )
  35C:  		Call     802D62B8 ( 0000035C )
  36C:  	EndCaseGroup
  374:  EndSwitch
  37C:  Call     SetAnimation 	( .Actor:Self 00000002 007C0008 )
  394:  Call     SetAnimation 	( .Actor:Self 00000003 007C0009 )
  3AC:  Set  *Var[0]  00000001 
  3BC:  Set  *Var[1]  007C0007 
  3CC:  ExecWait DoDeath 
  3D8:  Return
  3E0:  End

#new:Script $Script_8021B2C0_19
    0:  ExecWait $Script_ShedTuffPuffs_19 
    C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   24:  Switch  *Var[0] 
   30:  	CaseOR  ==  00000004 
   3C:  	CaseOR  ==  00000008 
   48:  	CaseOR  ==  0000000B 
   54:  		SetConst  *Var[2]  007C0011 
   64:  		SetConst  *Var[3]  007C0012 
   74:  		SetConst  *Var[4]  007C0013 
   84:  	EndCaseGroup
   8C:  	Default
   94:  		SetConst  *Var[2]  007C0023 
   A4:  		SetConst  *Var[3]  007C0024 
   B4:  		SetConst  *Var[4]  007C0025 
   C4:  EndSwitch
   CC:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
   E4:  Call     SetAnimation 	( .Actor:Self 00000002 *Var[3] )
   FC:  Call     SetAnimation 	( .Actor:Self 00000003 *Var[4] )
  114:  Wait     00000014 
  120:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  138:  Switch  *Var[0] 
  144:  	CaseOR  ==  00000004 
  150:  	CaseOR  ==  00000008 
  15C:  	CaseOR  ==  0000000B 
  168:  		SetConst  *Var[2]  007C0011 
  178:  		SetConst  *Var[3]  007C0012 
  188:  		SetConst  *Var[4]  007C0013 
  198:  	EndCaseGroup
  1A0:  	Default
  1A8:  		SetConst  *Var[2]  007C0026 
  1B8:  		SetConst  *Var[3]  007C0027 
  1C8:  		SetConst  *Var[4]  007C0028 
  1D8:  EndSwitch
  1E0:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
  1F8:  Call     SetAnimation 	( .Actor:Self 00000002 *Var[3] )
  210:  Call     SetAnimation 	( .Actor:Self 00000003 *Var[4] )
  228:  Wait     0000000A 
  234:  Return
  23C:  End

#new:Script $Script_8021B504_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Label    00000000 
   18:  Call     GetBattleFlags ( *Var[0] )
   28:  If  *Var[0]  &  00000100 
   38:  	Wait     00000001 
   44:  	Goto     00000000 
   50:  EndIf
   58:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   70:  If  *Var[0]  &  00000001 
   80:  	Call     DispatchEvent 	( *Array[0] .Event:Death )
   94:  EndIf
   9C:  If  *Var[0]  &  00000002 
   AC:  	Call     DispatchEvent 	( *Array[1] .Event:Death )
   C0:  EndIf
   C8:  If  *Var[0]  &  00000004 
   D8:  	Call     DispatchEvent 	( *Array[2] .Event:Death )
   EC:  EndIf
   F4:  If  *Var[0]  &  00000008 
  104:  	Call     DispatchEvent 	( *Array[3] .Event:Death )
  118:  EndIf
  120:  If  *Var[0]  &  00000010 
  130:  	Call     DispatchEvent 	( *Array[4] .Event:Death )
  144:  EndIf
  14C:  If  *Var[0]  &  00000020 
  15C:  	Call     DispatchEvent 	( *Array[5] .Event:Death )
  170:  EndIf
  178:  If  *Var[0]  &  00000040 
  188:  	Call     DispatchEvent 	( *Array[6] .Event:Death )
  19C:  EndIf
  1A4:  If  *Var[0]  &  00000080 
  1B4:  	Call     DispatchEvent 	( *Array[7] .Event:Death )
  1C8:  EndIf
  1D0:  If  *Var[0]  &  00000100 
  1E0:  	Call     DispatchEvent 	( *Array[8] .Event:Death )
  1F4:  EndIf
  1FC:  If  *Var[0]  &  00000200 
  20C:  	Call     DispatchEvent 	( *Array[9] .Event:Death )
  220:  EndIf
  228:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  240:  Switch  *Var[0] 
  24C:  	CaseOR  ==  00000004 
  258:  	CaseOR  ==  00000008 
  264:  	CaseOR  ==  0000000B 
  270:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  288:  		Kill     *Var[0] 
  294:  		Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  2AC:  		Call     RemoveEffect 	( *Var[0] )
  2BC:  		Call     802D62B8 ( 0000035C )
  2CC:  	EndCaseGroup
  2D4:  EndSwitch
  2DC:  Call     SetAnimation 	( .Actor:Self 00000002 007C0027 )
  2F4:  Call     SetAnimation 	( .Actor:Self 00000003 007C0028 )
  30C:  Set  *Var[0]  00000001 
  31C:  Set  *Var[1]  007C0026 
  32C:  ExecWait DoDeath 
  338:  Return
  340:  End

#new:Script $Script_8021B84C_19
    0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	CaseOR  ==  00000004 
   30:  	CaseOR  ==  00000008 
   3C:  	CaseOR  ==  0000000B 
   48:  		SetConst  *Var[2]  007C0011 
   58:  		SetConst  *Var[3]  007C0012 
   68:  		SetConst  *Var[4]  007C0013 
   78:  	EndCaseGroup
   80:  	Default
   88:  		SetConst  *Var[2]  007C0001 
   98:  		SetConst  *Var[3]  007C0002 
   A8:  		SetConst  *Var[4]  007C0003 
   B8:  EndSwitch
   C0:  Thread
   C8:  	Set  *Var[0]  00000001 
   D8:  	Set  *Var[1]  *Var[2] 
   E8:  	ExecWait DoImmune 
   F4:  EndThread
   FC:  Thread
  104:  	Set  *Var[0]  00000002 
  114:  	Set  *Var[1]  *Var[3] 
  124:  	ExecWait DoImmune 
  130:  EndThread
  138:  Thread
  140:  	Set  *Var[0]  00000003 
  150:  	Set  *Var[1]  *Var[4] 
  160:  	ExecWait DoImmune 
  16C:  EndThread
  174:  Wait     0000001E 
  180:  Return
  188:  End

#new:Script $Script_8021B9DC_19
    0:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  		Call     SetActorVar 	( .Actor:Self 00000003 00000001 )
   48:  	Case  ==  00000001 
   54:  		Call     SetActorVar 	( .Actor:Self 00000003 00000002 )
   6C:  	Case  ==  00000002 
   78:  EndSwitch
   80:  Return
   88:  End

#new:Script $Script_HandleEvent_8021BA6C_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	Case  ==  .Event:HitCombo
   40:  		ExecWait $Script_8021B9DC_19 
   4C:  		ExecWait $Script_8021AD3C_19 
   58:  	Case  ==  .Event:Hit
   64:  		ExecWait $Script_8021B9DC_19 
   70:  		ExecWait $Script_8021AD3C_19 
   7C:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
   94:  		ConstAND *Var[0] FFFFFFFD 
   A4:  		Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
   BC:  		Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   D4:  	Case  ==  .Event:BurnHit
   E0:  		ExecWait $Script_8021B9DC_19 
   EC:  		ExecWait $Script_8021B2C0_19 
   F8:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  110:  		ConstAND *Var[0] FFFFFFFD 
  120:  		Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  138:  		Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
  150:  	Case  ==  .Event:BurnDeath
  15C:  		ExecWait $Script_8021B9DC_19 
  168:  		ExecWait $Script_8021B2C0_19 
  174:  		ExecWait $Script_8021B504_19 
  180:  		Return
  188:  	Case  ==  00000017
  194:  		ExecWait $Script_8021B84C_19 
  1A0:  	Case  ==  .Event:Immune
  1AC:  		ExecWait $Script_8021B84C_19 
  1B8:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  1D0:  		ConstAND *Var[0] FFFFFFFD 
  1E0:  		Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  1F8:  	Case  ==  .Event:Death
  204:  		ExecWait $Script_8021B9DC_19 
  210:  		ExecWait $Script_8021AD3C_19 
  21C:  		ExecWait $Script_8021AED8_19 
  228:  		Return
  230:  	Case  ==  .Event:BeginAirLift
  23C:  		ExecWait $Script_8021B9DC_19 
  248:  	Case  ==  .Event:AirLiftFailed
  254:  		ExecWait $Script_8021B84C_19 
  260:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  278:  		ConstAND *Var[0] FFFFFFFD 
  288:  		Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2A0:  		Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
  2B8:  	Default
  2C0:  EndSwitch
  2C8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  2DC:  Return
  2E4:  End

#new:Script $Script_8021BD58_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   24:  If  *Var[0]  &  00000010 
   34:  	Set  *Var[0]  *Array[4] 
   44:  	Goto     00000000 
   50:  EndIf
   58:  If  *Var[0]  &  00000200 
   68:  	Set  *Var[0]  *Array[9] 
   78:  	Goto     00000000 
   84:  EndIf
   8C:  If  *Var[0]  &  00000008 
   9C:  	Set  *Var[0]  *Array[3] 
   AC:  	Goto     00000000 
   B8:  EndIf
   C0:  If  *Var[0]  &  00000020 
   D0:  	Set  *Var[0]  *Array[5] 
   E0:  	Goto     00000000 
   EC:  EndIf
   F4:  If  *Var[0]  &  00000002 
  104:  	Set  *Var[0]  *Array[1] 
  114:  	Goto     00000000 
  120:  EndIf
  128:  If  *Var[0]  &  00000001 
  138:  	Set  *Var[0]  *Array[0] 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  If  *Var[0]  &  00000100 
  16C:  	Set  *Var[0]  *Array[8] 
  17C:  	Goto     00000000 
  188:  EndIf
  190:  If  *Var[0]  &  00000004 
  1A0:  	Set  *Var[0]  *Array[2] 
  1B0:  	Goto     00000000 
  1BC:  EndIf
  1C4:  If  *Var[0]  &  00000080 
  1D4:  	Set  *Var[0]  *Array[7] 
  1E4:  	Goto     00000000 
  1F0:  EndIf
  1F8:  If  *Var[0]  &  00000040 
  208:  	Set  *Var[0]  *Array[6] 
  218:  	Goto     00000000 
  224:  EndIf
  22C:  Goto     00000001 
  238:  Label    00000000 
  244:  Call     UseCamPreset 	( 00000008 )
  254:  Call     CamTargetActor ( *Var[0] )
  264:  Call     SetCamZoom  	( 0000012C )
  274:  Call     SetCamOffsetZ 	( FFFFFFF6 )
  284:  Call     MoveCamOver 	( 0000001E )
  294:  Wait     0000001E 
  2A0:  Call     UseIdleAnimation 	( *Var[0] .False )
  2B4:  Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
  2CC:  If  *Var[1]  ==  00000000 
  2DC:  	Call     SetAnimation 	( *Var[0] 00000001 004C0009 )
  2F4:  	Call     SayMessage  	( 001100CF *Var[0] 00000001 004C0014 004C0002 ) % Master Huff N. Puff! I wish to pummel Mario, too!  ...
  314:  Else
  31C:  	Call     SayMessage  	( 001100CF *Var[0] 00000001 004C0015 004C0003 ) % Master Huff N. Puff! I wish to pummel Mario, too!  ...
  33C:  EndIf
  344:  Call     UseIdleAnimation 	( *Var[0] .True )
  358:  Wait     00000014 
  364:  Label    00000001 
  370:  Call     UseCamPreset 	( 00000008 )
  380:  Call     CamTargetActor ( .Actor:Self )
  390:  Call     SetCamZoom  	( 000000B4 )
  3A0:  Call     SetCamOffsetZ 	( FFFFFFF6 )
  3B0:  Call     MoveCamOver 	( 0000001E )
  3C0:  Wait     0000001E 
  3CC:  Call     UseIdleAnimation 	( .Actor:Self .False )
  3E0:  Call     SetAnimation 	( .Actor:Self 00000002 007C002D )
  3F8:  Call     SetAnimation 	( .Actor:Self 00000003 007C002E )
  410:  Call     SayMessage  	( 001100D0 .Actor:Self 00000001 007C002C 007C0001 ) % Yes, take him!
  430:  Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  448:  Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  460:  Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  Call     UseCamPreset 	( 00000002 )
  484:  Return
  48C:  End

#new:Script $Script_ChargeThunder_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     UseCamPreset 	( 00000008 )
   1C:  Call     CamTargetActor ( .Actor:Self )
   2C:  Call     SetCamZoom  	( 000000B4 )
   3C:  Call     SetCamOffsetZ 	( FFFFFFF6 )
   4C:  Call     MoveCamOver 	( 0000001E )
   5C:  Wait     0000001E 
   68:  Call     UseIdleAnimation 	( .Actor:Self .False )
   7C:  Call     SetAnimation 	( .Actor:Self 00000002 007C002D )
   94:  Call     SetAnimation 	( .Actor:Self 00000003 007C002E )
   AC:  Call     SayMessage  	( 001100D1 .Actor:Self 00000001 007C002C 007C0001 ) % You asked for it... Now you'll witness the full po ...
   CC:  Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
   E4:  Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
   FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  110:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  128:  If  *Var[0]  &  00000010 
  138:  	Set  *Var[0]  *Array[4] 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  If  *Var[0]  &  00000200 
  16C:  	Set  *Var[0]  *Array[9] 
  17C:  	Goto     00000000 
  188:  EndIf
  190:  If  *Var[0]  &  00000008 
  1A0:  	Set  *Var[0]  *Array[3] 
  1B0:  	Goto     00000000 
  1BC:  EndIf
  1C4:  If  *Var[0]  &  00000020 
  1D4:  	Set  *Var[0]  *Array[5] 
  1E4:  	Goto     00000000 
  1F0:  EndIf
  1F8:  If  *Var[0]  &  00000002 
  208:  	Set  *Var[0]  *Array[1] 
  218:  	Goto     00000000 
  224:  EndIf
  22C:  If  *Var[0]  &  00000001 
  23C:  	Set  *Var[0]  *Array[0] 
  24C:  	Goto     00000000 
  258:  EndIf
  260:  If  *Var[0]  &  00000100 
  270:  	Set  *Var[0]  *Array[8] 
  280:  	Goto     00000000 
  28C:  EndIf
  294:  If  *Var[0]  &  00000004 
  2A4:  	Set  *Var[0]  *Array[2] 
  2B4:  	Goto     00000000 
  2C0:  EndIf
  2C8:  If  *Var[0]  &  00000080 
  2D8:  	Set  *Var[0]  *Array[7] 
  2E8:  	Goto     00000000 
  2F4:  EndIf
  2FC:  If  *Var[0]  &  00000040 
  30C:  	Set  *Var[0]  *Array[6] 
  31C:  	Goto     00000000 
  328:  EndIf
  330:  Goto     00000001 
  33C:  Label    00000000 
  348:  Call     CamTargetActor ( *Var[0] )
  358:  Call     SetCamZoom  	( 0000012C )
  368:  Call     SetCamOffsetZ 	( FFFFFFF6 )
  378:  Call     MoveCamOver 	( 0000001E )
  388:  Wait     0000001E 
  394:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  3B0:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  3CC:  If  *Var[1]  <  *Var[4] 
  3DC:  	SetF  *Var[7]  *Fixed[0.0] 
  3EC:  	Loop     0000000A 
  3F8:  		AddF  *Var[7]  *Fixed[18.0] 
  408:  		Call     SetActorAngle 	( *Var[0] *Var[7] )
  41C:  		Wait     00000001 
  428:  	EndLoop
  430:  EndIf
  438:  Call     UseIdleAnimation 	( *Var[0] .False )
  44C:  Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
  464:  If  *Var[1]  ==  00000000 
  474:  	Call     SetAnimation 	( *Var[0] 00000001 004C0009 )
  48C:  	Call     SayMessage  	( 001100D2 *Var[0] 00000001 004C0014 004C0002 ) % Master Huff N. Puff! Leave him to me!!
  4AC:  Else
  4B4:  	Call     SayMessage  	( 001100D2 *Var[0] 00000001 004C0015 004C0003 ) % Master Huff N. Puff! Leave him to me!!
  4D4:  EndIf
  4DC:  Call     UseIdleAnimation 	( *Var[0] .True )
  4F0:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  50C:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  528:  If  *Var[1]  <  *Var[4] 
  538:  	SetF  *Var[7]  *Fixed[180.0] 
  548:  	Loop     0000000A 
  554:  		SubF  *Var[7]  *Fixed[18.0] 
  564:  		Call     SetActorAngle 	( *Var[0] *Var[7] )
  578:  		Wait     00000001 
  584:  	EndLoop
  58C:  EndIf
  594:  Label    00000001 
  5A0:  Call     UseCamPreset 	( 00000002 )
  5B0:  Return
  5B8:  End

#new:Script $Script_8021C7AC_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     UseCamPreset 	( 00000008 )
   1C:  Call     CamTargetActor ( .Actor:Self )
   2C:  Call     SetCamZoom  	( 000000B4 )
   3C:  Call     SetCamOffsetZ 	( FFFFFFF6 )
   4C:  Call     MoveCamOver 	( 0000001E )
   5C:  Wait     0000001E 
   68:  Call     UseIdleAnimation 	( .Actor:Self .False )
   7C:  Call     SetAnimation 	( .Actor:Self 00000002 007C0018 )
   94:  Call     SetAnimation 	( .Actor:Self 00000003 007C0019 )
   AC:  Call     SayMessage  	( 001100D3 .Actor:Self 00000001 007C0017 007C0017 ) % Gaaah ha ha ha ha!!!! How do you like that!?!
   CC:  Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
   E4:  Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
   FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  110:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  128:  If  *Var[0]  &  00000010 
  138:  	Set  *Var[0]  *Array[4] 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  If  *Var[0]  &  00000200 
  16C:  	Set  *Var[0]  *Array[9] 
  17C:  	Goto     00000000 
  188:  EndIf
  190:  If  *Var[0]  &  00000008 
  1A0:  	Set  *Var[0]  *Array[3] 
  1B0:  	Goto     00000000 
  1BC:  EndIf
  1C4:  If  *Var[0]  &  00000020 
  1D4:  	Set  *Var[0]  *Array[5] 
  1E4:  	Goto     00000000 
  1F0:  EndIf
  1F8:  If  *Var[0]  &  00000002 
  208:  	Set  *Var[0]  *Array[1] 
  218:  	Goto     00000000 
  224:  EndIf
  22C:  If  *Var[0]  &  00000001 
  23C:  	Set  *Var[0]  *Array[0] 
  24C:  	Goto     00000000 
  258:  EndIf
  260:  If  *Var[0]  &  00000100 
  270:  	Set  *Var[0]  *Array[8] 
  280:  	Goto     00000000 
  28C:  EndIf
  294:  If  *Var[0]  &  00000004 
  2A4:  	Set  *Var[0]  *Array[2] 
  2B4:  	Goto     00000000 
  2C0:  EndIf
  2C8:  If  *Var[0]  &  00000080 
  2D8:  	Set  *Var[0]  *Array[7] 
  2E8:  	Goto     00000000 
  2F4:  EndIf
  2FC:  If  *Var[0]  &  00000040 
  30C:  	Set  *Var[0]  *Array[6] 
  31C:  	Goto     00000000 
  328:  EndIf
  330:  Goto     00000001 
  33C:  Label    00000000 
  348:  Call     CamTargetActor ( *Var[0] )
  358:  Call     SetCamZoom  	( 0000012C )
  368:  Call     SetCamOffsetZ 	( FFFFFFF6 )
  378:  Call     MoveCamOver 	( 0000001E )
  388:  Wait     0000001E 
  394:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  3B0:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  3CC:  If  *Var[1]  <  *Var[4] 
  3DC:  	SetF  *Var[7]  *Fixed[0.0] 
  3EC:  	Loop     0000000A 
  3F8:  		AddF  *Var[7]  *Fixed[18.0] 
  408:  		Call     SetActorAngle 	( *Var[0] *Var[7] )
  41C:  		Wait     00000001 
  428:  	EndLoop
  430:  EndIf
  438:  Call     UseIdleAnimation 	( *Var[0] .False )
  44C:  Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
  464:  If  *Var[1]  ==  00000000 
  474:  	Call     SayMessage  	( 001100D4 *Var[0] 00000001 004C0014 004C0002 ) % Whoa!! Master Huff N. Puff, you are truly the migh ...
  494:  Else
  49C:  	Call     SayMessage  	( 001100D4 *Var[0] 00000001 004C0015 004C0003 ) % Whoa!! Master Huff N. Puff, you are truly the migh ...
  4BC:  EndIf
  4C4:  Call     UseIdleAnimation 	( *Var[0] .True )
  4D8:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  4F4:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  510:  If  *Var[1]  <  *Var[4] 
  520:  	SetF  *Var[7]  *Fixed[180.0] 
  530:  	Loop     0000000A 
  53C:  		SubF  *Var[7]  *Fixed[18.0] 
  54C:  		Call     SetActorAngle 	( *Var[0] *Var[7] )
  560:  		Wait     00000001 
  56C:  	EndLoop
  574:  EndIf
  57C:  Label    00000001 
  588:  Call     UseCamPreset 	( 00000002 )
  598:  Return
  5A0:  End

#new:Script $Script_8021CD54_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     UseCamPreset 	( 00000008 )
   1C:  Call     CamTargetActor ( .Actor:Self )
   2C:  Call     SetCamZoom  	( 000000B4 )
   3C:  Call     SetCamOffsetZ 	( FFFFFFF6 )
   4C:  Call     MoveCamOver 	( 0000001E )
   5C:  Wait     0000001E 
   68:  Call     UseIdleAnimation 	( .Actor:Self .False )
   7C:  Call     SetAnimation 	( .Actor:Self 00000002 007C0024 )
   94:  Call     SetAnimation 	( .Actor:Self 00000003 007C0025 )
   AC:  Call     SayMessage  	( 001100D5 .Actor:Self 00000001 007C0023 007C0023 ) % We seem to be in trouble. Hmm... I guess I'd bette ...
   CC:  Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
   E4:  Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
   FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  110:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  128:  If  *Var[0]  &  00000010 
  138:  	Set  *Var[0]  *Array[4] 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  If  *Var[0]  &  00000200 
  16C:  	Set  *Var[0]  *Array[9] 
  17C:  	Goto     00000000 
  188:  EndIf
  190:  If  *Var[0]  &  00000008 
  1A0:  	Set  *Var[0]  *Array[3] 
  1B0:  	Goto     00000000 
  1BC:  EndIf
  1C4:  If  *Var[0]  &  00000020 
  1D4:  	Set  *Var[0]  *Array[5] 
  1E4:  	Goto     00000000 
  1F0:  EndIf
  1F8:  If  *Var[0]  &  00000002 
  208:  	Set  *Var[0]  *Array[1] 
  218:  	Goto     00000000 
  224:  EndIf
  22C:  If  *Var[0]  &  00000001 
  23C:  	Set  *Var[0]  *Array[0] 
  24C:  	Goto     00000000 
  258:  EndIf
  260:  If  *Var[0]  &  00000100 
  270:  	Set  *Var[0]  *Array[8] 
  280:  	Goto     00000000 
  28C:  EndIf
  294:  If  *Var[0]  &  00000004 
  2A4:  	Set  *Var[0]  *Array[2] 
  2B4:  	Goto     00000000 
  2C0:  EndIf
  2C8:  If  *Var[0]  &  00000080 
  2D8:  	Set  *Var[0]  *Array[7] 
  2E8:  	Goto     00000000 
  2F4:  EndIf
  2FC:  If  *Var[0]  &  00000040 
  30C:  	Set  *Var[0]  *Array[6] 
  31C:  	Goto     00000000 
  328:  EndIf
  330:  Goto     00000001 
  33C:  Label    00000000 
  348:  Call     CamTargetActor ( *Var[0] )
  358:  Call     SetCamZoom  	( 0000012C )
  368:  Call     SetCamOffsetZ 	( FFFFFFF6 )
  378:  Call     MoveCamOver 	( 0000001E )
  388:  Wait     0000001E 
  394:  Call     UseIdleAnimation 	( *Var[0] .False )
  3A8:  Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
  3C0:  If  *Var[1]  ==  00000000 
  3D0:  	Call     SayMessage  	( 001100D6 *Var[0] 00000001 004C0014 004C0002 ) % Will you be all right, Master?
  3F0:  Else
  3F8:  	Call     SayMessage  	( 001100D6 *Var[0] 00000001 004C0015 004C0003 ) % Will you be all right, Master?
  418:  EndIf
  420:  Call     UseIdleAnimation 	( *Var[0] .True )
  434:  Label    00000001 
  440:  Call     UseCamPreset 	( 00000008 )
  450:  Call     CamTargetActor ( .Actor:Self )
  460:  Call     SetCamZoom  	( 000000B4 )
  470:  Call     SetCamOffsetZ 	( FFFFFFF6 )
  480:  Call     MoveCamOver 	( 0000001E )
  490:  Wait     0000001E 
  49C:  Call     UseIdleAnimation 	( .Actor:Self .False )
  4B0:  Call     SetAnimation 	( .Actor:Self 00000002 007C0024 )
  4C8:  Call     SetAnimation 	( .Actor:Self 00000003 007C0025 )
  4E0:  Call     SayMessage  	( 001100D7 .Actor:Self 00000001 007C0023 007C0023 ) % We're not finished yet!!! Here I come!!!!
  500:  Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  518:  Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  530:  Call     UseIdleAnimation 	( .Actor:Self .True )
  544:  Call     UseCamPreset 	( 00000002 )
  554:  Return
  55C:  End

#new:Script $Script_TakeTurn_8021D2B8_19
    0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	CaseOR  ==  00000004 
   30:  	CaseOR  ==  00000008 
   3C:  	CaseOR  ==  0000000B 
   48:  	EndCaseGroup
   50:  	Default
   58:  		Call     GetActorHP  	( .Actor:Self *Var[0] )
   6C:  		If  *Var[0]  <=  00000005 
   7C:  			Call     SetActorVar 	( .Actor:Self 00000001 0000000C )
   94:  		EndIf
   9C:  EndSwitch
   A4:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   BC:  Switch  *Var[0] 
   C8:  	Case  ==  00000003 
   D4:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
   EC:  		If  *Var[0]  !&  00000020 
   FC:  			Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  114:  			ConstOR  *Var[0] 00000020 
  124:  			Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  13C:  			ExecWait $Script_ChargeThunder_19 
  148:  		EndIf
  150:  EndSwitch
  158:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  170:  If  *Var[0]  !=  00000000 
  180:  	Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  198:  	If  *Var[0]  !&  00000010 
  1A8:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  1C0:  		ConstOR  *Var[0] 00000010 
  1D0:  		Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  1E8:  		ExecWait $Script_8021BD58_19 
  1F4:  	EndIf
  1FC:  	ExecWait $Script_TuffPuffSwarm_19 
  208:  EndIf
  210:  Call     GetPlayerHP 	( *Var[0] )
  220:  If  *Var[0]  ==  00000000 
  230:  	Return
  238:  EndIf
  240:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  258:  Switch  *Var[0] 
  264:  	Case  ==  0000000C 
  270:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  288:  		If  *Var[0]  !&  00000080 
  298:  			Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2B0:  			ConstOR  *Var[0] 00000080 
  2C0:  			Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2D8:  			ExecWait $Script_8021CD54_19 
  2E4:  		EndIf
  2EC:  EndSwitch
  2F4:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  30C:  Switch  *Var[0] 
  318:  	Case  ==  00000000 
  324:  		ExecWait $Script_HealOrSlam_19 
  330:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  348:  	Case  ==  00000001 
  354:  		ExecWait $Script_HurricaneBreath_19 
  360:  		Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  378:  	Case  ==  00000002 
  384:  		ExecWait $Script_HealOrSlam_19 
  390:  		Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
  3A8:  	Case  ==  00000003 
  3B4:  		ExecWait $Script_80220950_19 
  3C0:  		Call     SetActorVar 	( .Actor:Self 00000001 00000004 )
  3D8:  	Case  ==  00000004 
  3E4:  		ExecWait $Script_Thunderstorm_19 
  3F0:  		Call     SetActorVar 	( .Actor:Self 00000001 00000005 )
  408:  	Case  ==  00000005 
  414:  		ExecWait $Script_HealOrSlam_19 
  420:  		Call     SetActorVar 	( .Actor:Self 00000001 00000006 )
  438:  	Case  ==  00000006 
  444:  		ExecWait $Script_HurricaneBreath_19 
  450:  		Call     SetActorVar 	( .Actor:Self 00000001 00000007 )
  468:  	Case  ==  00000007 
  474:  		ExecWait $Script_80221338_19 
  480:  		Call     SetActorVar 	( .Actor:Self 00000001 00000008 )
  498:  	Case  ==  00000008 
  4A4:  		ExecWait $Script_HighBodySlam_19 
  4B0:  		Call     SetActorVar 	( .Actor:Self 00000001 00000009 )
  4C8:  	Case  ==  00000009 
  4D4:  		ExecWait $Script_HealOrSlam_19 
  4E0:  		Call     SetActorVar 	( .Actor:Self 00000001 0000000A )
  4F8:  	Case  ==  0000000A 
  504:  		ExecWait $Script_80220950_19 
  510:  		Call     SetActorVar 	( .Actor:Self 00000001 0000000B )
  528:  	Case  ==  0000000B 
  534:  		ExecWait $Script_Thunderstorm_19 
  540:  		Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  558:  	Case  ==  0000000C 
  564:  		ExecWait $Script_80222528_19 
  570:  EndSwitch
  578:  Return
  580:  End

#new:Script $Script_NextTurn_8021D840_19
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:PlayerBegin
   28:  	Case  ==  .Phase:EnemyBegin
   34:  	Case  ==  .Phase:EnemyEnd
   40:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
   58:  		If  *Var[0]  &  00000008 
   68:  			If  *Var[0]  !&  00000040 
   78:  				Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
   90:  				ConstOR  *Var[0] 00000040 
   A0:  				Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
   B8:  				ExecWait $Script_8021C7AC_19 
   C4:  			EndIf
   CC:  		EndIf
   D4:  EndSwitch
   DC:  Return
   E4:  End

#new:Script $Script_BodySlam_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     UseCamPreset 	( 0000003F )
   38:  Call     AddCamZoom  	( FFFFFF38 )
   48:  Call     SetCamOffsetZ 	( FFFFFFE2 )
   58:  Call     CamTargetActor ( .Actor:Self )
   68:  Call     SetGoalToTarget 	( .Actor:Self )
   78:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
   90:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
   A8:  SetF  *Var[2]  *Fixed[62.5] 
   B8:  SetF  *Var[3]  *Fixed[47.5] 
   C8:  MulF  *Var[2]  *Var[0] 
   D8:  MulF  *Var[3]  *Var[1] 
   E8:  DivF  *Var[2]  *Fixed[100.0] 
   F8:  DivF  *Var[3]  *Fixed[100.0] 
  108:  Call     AddToGoalPos 	( .Actor:Self *Var[2] *Var[3] 00000000 )
  124:  Call     AddToGoalPos 	( .Actor:Self 00000000 00000014 00000000 )
  140:  Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  15C:  Wait     0000000A 
  168:  Call     PlaySoundAtActor 	( .Actor:Self 000003E7 )
  17C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A0:  Switch  *Var[0] 
  1AC:  	CaseOR  ==  00000006 
  1B8:  	CaseOR  ==  00000005 
  1C4:  		Call     UseCamPreset 	( 00000001 )
  1D4:  		Call     SetAnimation 	( .Actor:Self 00000001 007C000B )
  1EC:  		Call     SetAnimation 	( .Actor:Self 00000002 007C000C )
  204:  		Call     SetAnimation 	( .Actor:Self 00000003 007C000D )
  21C:  		Call     SetGoalToTarget 	( .Actor:Self )
  22C:  		Call     GetGoalPos  	( .Actor:Self *Var[5] *Var[6] *Var[7] )
  248:  		Call     SetGoalToPos 	( .Actor:Self *Var[5] *Var[3] *Var[7] )
  264:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  278:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
  298:  		Thread
  2A0:  			Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.80078125] )
  2BC:  		EndThread
  2C4:  		If  *Var[0]  ==  00000005 
  2D4:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2F8:  		EndIf
  300:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  318:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  330:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  348:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  35C:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFB0 00000000 00000000 )
  378:  		Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000000 00000000 )
  398:  		Thread
  3A0:  			Call     ShakeCam    	( 00000001 00000000 00000008 *Fixed[0.60058594] )
  3BC:  		EndThread
  3C4:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  3E0:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
  400:  		Thread
  408:  			Call     ShakeCam    	( 00000001 00000000 00000006 *Fixed[0.40039062] )
  424:  		EndThread
  42C:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 00000000 00000000 )
  448:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  468:  		Thread
  470:  			Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[0.20019531] )
  48C:  		EndThread
  494:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFEC 00000000 00000000 )
  4B0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  4D0:  		Wait     0000001E 
  4DC:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
  4F4:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  50C:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  524:  		Call     UseCamPreset 	( 00000002 )
  534:  		Call     SetGoalToHome 	( .Actor:Self )
  544:  		Call     MoveToGoal  	( .Actor:Self 00000050 FFFFFFEC .Easing:SinOut )
  560:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  574:  		Return
  57C:  	EndCaseGroup
  584:  EndSwitch
  58C:  Call     SetAnimation 	( .Actor:Self 00000001 007C000B )
  5A4:  Call     SetAnimation 	( .Actor:Self 00000002 007C000C )
  5BC:  Call     SetAnimation 	( .Actor:Self 00000003 007C000D )
  5D4:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  5E8:  Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[3] 00000005 )
  614:  Call     AddToGoalPos 	( .Actor:Self 00000000 FFFFFFE2 00000000 )
  630:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
  650:  Call     80269EAC ( 00000018 )
  660:  Wait     00000002 
  66C:  Call     SetGoalToTarget 	( .Actor:Self )
  67C:  Call     GetActorHP  	( .Actor:Self *Var[0] )
  690:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
  6A4:  Mul  *Var[0]  00000064 
  6B4:  Div  *Var[0]  *Var[1] 
  6C4:  Switch  *Var[0] 
  6D0:  	Case  <=  00000014 
  6DC:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
  704:  	Case  <=  00000028 
  710:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
  738:  	Case  <=  0000003C 
  744:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
  76C:  	Case  <=  00000050 
  778:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
  7A0:  	Default
  7A8:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
  7D0:  EndSwitch
  7D8:  Switch  *Var[0] 
  7E4:  	CaseOR  ==  00000000 
  7F0:  	CaseOR  ==  00000002 
  7FC:  		Thread
  804:  			Call     ShakeCam    	( 00000001 00000000 00000014 *Fixed[1.0] )
  820:  		EndThread
  828:  		Call     UseCamPreset 	( 00000002 )
  838:  		Call     GetBattleFlags ( *Var[0] )
  848:  		If  *Var[0]  !&  80000000 
  858:  			Call     GetStatusFlags ( .Actor:Player *Var[0] )
  86C:  			If  *Var[0]  !&  00100000 
  87C:  				Thread
  884:  					Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  8A0:  					Add  *Var[1]  0000000A 
  8B0:  					Wait     00000037 
  8BC:  					Call     PlayEffect  	( {FX:YellowCloudPuff} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  900:  				EndThread
  908:  			EndIf
  910:  		EndIf
  918:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  934:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  950:  		Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
  96C:  		Call     80279728 ( FFFFFF81 00000014 *Fixed[4.0] )
  984:  		Wait     00000014 
  990:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
  9A8:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  9C0:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  9D8:  		Call     SetGoalToHome 	( .Actor:Self )
  9E8:  		Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  A04:  	EndCaseGroup
  A0C:  EndSwitch
  A14:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A28:  Return
  A30:  End

#new:Script $Script_8021E364_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     SetOwnerID  	( *Var[0] )
   1C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   30:  Call     GetActorPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
   4C:  Call     GetActorPos 	( .Actor:Enemy0 *Var[5] *Var[6] *Var[7] )
   68:  Add  *Var[5]  FFFFFFF3 
   78:  Add  *Var[6]  00000000 
   88:  Add  *Var[7]  00000000 
   98:  Call     $Function_80218620_19 ( *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Var[6] *Var[7] )
   C0:  Thread
   C8:  	Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   E0:  	Wait     0000000A 
   EC:  	Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  104:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  11C:  	If  *Var[0]  ==  00000000 
  12C:  		Call     SetAnimation 	( .Actor:Self 00000001 004C0012 )
  144:  	Else
  14C:  		Call     SetAnimation 	( .Actor:Self 00000001 004C0013 )
  164:  	EndIf
  16C:  EndThread
  174:  Wait     0000000F 
  180:  Thread
  188:  	Wait     00000023 
  194:  	Call     MakeLerp    	( 000000FF 00000000 0000000A 00000000 )
  1B0:  	Label    0000000A 
  1BC:  	Call     UpdateLerp  	( )
  1C8:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  1E0:  	Wait     00000001 
  1EC:  	If  *Var[1]  ==  00000001 
  1FC:  		Goto     0000000A 
  208:  	EndIf
  210:  	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  228:  EndThread
  230:  Switch  *Var[1] 
  23C:  	Case  ==  00000000 
  248:  		Call     LoadPath    	( 00000028 $End[0] 00000003 00000001 )
  264:  	Case  ==  00000001 
  270:  		Call     LoadPath    	( 00000028 $End[24] 00000003 00000001 )
  28C:  	Case  ==  00000002 
  298:  		Call     LoadPath    	( 00000028 $End[48] 00000003 00000001 )
  2B4:  	Case  ==  00000003 
  2C0:  		Call     LoadPath    	( 00000028 $End[6C] 00000003 00000001 )
  2DC:  	Case  ==  00000004 
  2E8:  		Call     LoadPath    	( 00000028 $End[90] 00000003 00000001 )
  304:  	Case  ==  00000005 
  310:  		Call     LoadPath    	( 00000028 $End[B4] 00000003 00000001 )
  32C:  	Case  ==  00000006 
  338:  		Call     LoadPath    	( 00000028 $End[D8] 00000003 00000001 )
  354:  	Case  ==  00000007 
  360:  		Call     LoadPath    	( 00000028 $End[FC] 00000003 00000001 )
  37C:  	Case  ==  00000008 
  388:  		Call     LoadPath    	( 00000028 $End[120] 00000003 00000001 )
  3A4:  	Case  ==  00000009 
  3B0:  		Call     LoadPath    	( 00000028 $End[144] 00000003 00000001 )
  3CC:  EndSwitch
  3D4:  Label    00000000 
  3E0:  Call     GetNextPathPos ( )
  3EC:  Call     SetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  408:  Wait     00000001 
  414:  If  *Var[0]  ==  00000001 
  424:  	Goto     00000000 
  430:  EndIf
  438:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[A] )
  44C:  Mul  *Var[A]  00000001 
  45C:  Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
  474:  Add  *Var[0]  *Var[A] 
  484:  If  *Var[0]  >  00000064 
  494:  	Set  *Var[0]  00000064 
  4A4:  EndIf
  4AC:  Call     SetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
  4C4:  Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[0] )
  4DC:  Add  *Var[0]  *Var[A] 
  4EC:  If  *Var[0]  >  00000064 
  4FC:  	Set  *Var[0]  00000064 
  50C:  EndIf
  514:  Call     SetActorVar 	( .Actor:Enemy0 00000007 *Var[0] )
  52C:  ExecWait $Script_80219CC0_19 
  538:  Wait     0000000A 
  544:  Call     RemoveActor 	( .Actor:Self )
  554:  Return
  55C:  End

#new:Script $Script_HealOrSlam_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[9] )
   24:  If  *Var[9]  ==  00000000 
   34:  	ExecWait $Script_BodySlam_19 
   40:  	Return
   48:  EndIf
   50:  Set  *Var[A]  00000000 
   60:  If  *Var[9]  &  00000001 
   70:  	Call     GetActorVar 	( *Array[0] 00000005 *Var[B] )
   88:  	Add  *Var[A]  *Var[B] 
   98:  EndIf
   A0:  If  *Var[9]  &  00000002 
   B0:  	Call     GetActorVar 	( *Array[1] 00000005 *Var[B] )
   C8:  	Add  *Var[A]  *Var[B] 
   D8:  EndIf
   E0:  If  *Var[9]  &  00000004 
   F0:  	Call     GetActorVar 	( *Array[2] 00000005 *Var[B] )
  108:  	Add  *Var[A]  *Var[B] 
  118:  EndIf
  120:  If  *Var[9]  &  00000008 
  130:  	Call     GetActorVar 	( *Array[3] 00000005 *Var[B] )
  148:  	Add  *Var[A]  *Var[B] 
  158:  EndIf
  160:  If  *Var[9]  &  00000010 
  170:  	Call     GetActorVar 	( *Array[4] 00000005 *Var[B] )
  188:  	Add  *Var[A]  *Var[B] 
  198:  EndIf
  1A0:  If  *Var[9]  &  00000020 
  1B0:  	Call     GetActorVar 	( *Array[5] 00000005 *Var[B] )
  1C8:  	Add  *Var[A]  *Var[B] 
  1D8:  EndIf
  1E0:  If  *Var[9]  &  00000040 
  1F0:  	Call     GetActorVar 	( *Array[6] 00000005 *Var[B] )
  208:  	Add  *Var[A]  *Var[B] 
  218:  EndIf
  220:  If  *Var[9]  &  00000080 
  230:  	Call     GetActorVar 	( *Array[7] 00000005 *Var[B] )
  248:  	Add  *Var[A]  *Var[B] 
  258:  EndIf
  260:  If  *Var[9]  &  00000100 
  270:  	Call     GetActorVar 	( *Array[8] 00000005 *Var[B] )
  288:  	Add  *Var[A]  *Var[B] 
  298:  EndIf
  2A0:  If  *Var[9]  &  00000200 
  2B0:  	Call     GetActorVar 	( *Array[9] 00000005 *Var[B] )
  2C8:  	Add  *Var[A]  *Var[B] 
  2D8:  EndIf
  2E0:  Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2F8:  If  *Var[0]  &  00000001 
  308:  	If  *Var[A]  <=  00000002 
  318:  		Call     RandInt     	( 00000064 *Var[B] )
  32C:  		If  *Var[B]  <  00000032 
  33C:  			ExecWait $Script_BodySlam_19 
  348:  			Return
  350:  		EndIf
  358:  	EndIf
  360:  EndIf
  368:  Call     UseIdleAnimation 	( .Actor:Self .False )
  37C:  Call     PlaySoundAtActor 	( .Actor:Self 000003B0 )
  390:  Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
  3A8:  Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
  3C0:  Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
  3D8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F4:  Add  *Var[0]  FFFFFFF3 
  404:  Add  *Var[1]  00000000 
  414:  Add  *Var[2]  00000000 
  424:  Call     $Function_80218774_19 ( 00000000 *Var[0] *Var[1] *Var[2] *Fixed[180.0] *Fixed[-1.0] *Fixed[1.2001953] 00000000 *Var[8] )
  454:  Call     $Function_80218000_19 ( 00000050 000000DC )
  468:  Thread
  470:  	Call     ShakeCam    	( 00000001 00000000 0000006E *Fixed[0.30078125] )
  48C:  EndThread
  494:  Wait     00000014 
  4A0:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
  4B4:  Set  *Var[1]  00000000 
  4C4:  If  *Var[9]  &  00000010 
  4D4:  	Set  *Var[0]  *Array[4] 
  4E4:  	Exec     $Script_8021E364_19 *Var[7] 
  4F4:  	Add  *Var[1]  00000001 
  504:  	Wait     00000005 
  510:  EndIf
  518:  If  *Var[9]  &  00000200 
  528:  	Set  *Var[0]  *Array[9] 
  538:  	Exec     $Script_8021E364_19 *Var[7] 
  548:  	Add  *Var[1]  00000001 
  558:  	Wait     00000005 
  564:  EndIf
  56C:  If  *Var[9]  &  00000008 
  57C:  	Set  *Var[0]  *Array[3] 
  58C:  	Exec     $Script_8021E364_19 *Var[7] 
  59C:  	Add  *Var[1]  00000001 
  5AC:  	Wait     00000005 
  5B8:  EndIf
  5C0:  If  *Var[9]  &  00000020 
  5D0:  	Set  *Var[0]  *Array[5] 
  5E0:  	Exec     $Script_8021E364_19 *Var[7] 
  5F0:  	Add  *Var[1]  00000001 
  600:  	Wait     00000005 
  60C:  EndIf
  614:  If  *Var[9]  &  00000002 
  624:  	Set  *Var[0]  *Array[1] 
  634:  	Exec     $Script_8021E364_19 *Var[7] 
  644:  	Add  *Var[1]  00000001 
  654:  	Wait     00000005 
  660:  EndIf
  668:  If  *Var[9]  &  00000001 
  678:  	Set  *Var[0]  *Array[0] 
  688:  	Exec     $Script_8021E364_19 *Var[7] 
  698:  	Add  *Var[1]  00000001 
  6A8:  	Wait     00000005 
  6B4:  EndIf
  6BC:  If  *Var[9]  &  00000100 
  6CC:  	Set  *Var[0]  *Array[8] 
  6DC:  	Exec     $Script_8021E364_19 *Var[7] 
  6EC:  	Add  *Var[1]  00000001 
  6FC:  	Wait     00000005 
  708:  EndIf
  710:  If  *Var[9]  &  00000004 
  720:  	Set  *Var[0]  *Array[2] 
  730:  	Exec     $Script_8021E364_19 *Var[7] 
  740:  	Add  *Var[1]  00000001 
  750:  	Wait     00000005 
  75C:  EndIf
  764:  If  *Var[9]  &  00000080 
  774:  	Set  *Var[0]  *Array[7] 
  784:  	Exec     $Script_8021E364_19 *Var[7] 
  794:  	Add  *Var[1]  00000001 
  7A4:  	Wait     00000005 
  7B0:  EndIf
  7B8:  If  *Var[9]  &  00000040 
  7C8:  	Set  *Var[0]  *Array[6] 
  7D8:  	Exec     $Script_8021E364_19 *Var[7] 
  7E8:  	Add  *Var[1]  00000001 
  7F8:  	Wait     00000005 
  804:  EndIf
  80C:  Label    00000000 
  818:  DoesScriptExist *Var[7] *Var[0] 
  828:  Wait     00000001 
  834:  If  *Var[0]  ==  00000001 
  844:  	Goto     00000000 
  850:  EndIf
  858:  Call     RemoveEffect 	( *Var[8] )
  868:  Call     802D62B8 ( 000003B0 )
  878:  Call     802D62B8 ( 000003E6 )
  888:  Call     SetAnimation 	( .Actor:Self 00000001 007C0017 )
  8A0:  Call     SetAnimation 	( .Actor:Self 00000002 007C0018 )
  8B8:  Call     SetAnimation 	( .Actor:Self 00000003 007C0019 )
  8D0:  Thread
  8D8:  	Wait     00000005 
  8E4:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  8F8:  	Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  90C:  EndThread
  914:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  930:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  948:  Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  98C:  Add  *Var[0]  00000014 
  99C:  Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9E0:  Call     GetActorHP  	( .Actor:Self *Var[B] )
  9F4:  Add  *Var[B]  *Var[A] 
  A04:  Call     SetEnemyHP  	( .Actor:Self *Var[B] )
  A18:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  A30:  Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  A48:  ConstOR  *Var[0] 00000001 
  A58:  Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  A70:  Wait     0000001E 
  A7C:  Call     UseCamPreset 	( 00000002 )
  A8C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AA0:  Return
  AA8:  End

#new:Script $Script_HurricaneBreath_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
   40:  Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
   58:  Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
   70:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   8C:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
   A4:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
   BC:  MulF  *Var[3]  *Fixed[-13.0] 
   CC:  MulF  *Var[4]  *Fixed[0.0] 
   DC:  DivF  *Var[3]  *Fixed[100.0] 
   EC:  DivF  *Var[4]  *Fixed[100.0] 
   FC:  Add  *Var[0]  *Var[3] 
  10C:  Add  *Var[1]  *Var[4] 
  11C:  Call     PlayEffect  	( 0000006E 00000001 *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[-1.0] *Fixed[1.5] 00000064 00000000 00000000 00000000 00000000 00000000 )
  160:  Call     $Function_80218000_19 ( 00000050 00000096 )
  174:  Thread
  17C:  	Call     ShakeCam    	( 00000001 00000000 0000004B *Fixed[0.30078125] )
  198:  EndThread
  1A0:  Thread
  1A8:  	Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  1C0:  	Set  *Var[3]  *Var[2] 
  1D0:  	Add  *Var[3]  00000019 
  1E0:  	Call     MakeLerp    	( *Var[2] *Var[3] 0000005A 0000000B )
  1FC:  	Label    00000000 
  208:  	Call     UpdateLerp  	( )
  214:  	Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  22C:  	Wait     00000001 
  238:  	If  *Var[1]  ==  00000001 
  248:  		Goto     00000000 
  254:  	EndIf
  25C:  EndThread
  264:  Thread
  26C:  	Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  284:  	Set  *Var[3]  *Var[2] 
  294:  	Add  *Var[3]  00000019 
  2A4:  	Call     MakeLerp    	( *Var[2] *Var[3] 0000005A 0000000B )
  2C0:  	Label    00000001 
  2CC:  	Call     UpdateLerp  	( )
  2D8:  	Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
  2F0:  	Wait     00000001 
  2FC:  	If  *Var[1]  ==  00000001 
  30C:  		Goto     00000001 
  318:  	EndIf
  320:  EndThread
  328:  Call     PlaySoundAtActor 	( .Actor:Self 000003B0 )
  33C:  Thread
  344:  	Wait     0000000F 
  350:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
  364:  EndThread
  36C:  Call     UseCamPreset 	( 00000013 )
  37C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  398:  Sub  *Var[0]  00000014 
  3A8:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  3C0:  Call     SetCamZoom  	( 0000012C )
  3D0:  Call     SetCamOffsetZ 	( 00000014 )
  3E0:  Call     MoveCamOver 	( 000000B4 )
  3F0:  Wait     0000005A 
  3FC:  Call     802D62B8 ( 000003B0 )
  40C:  Call     SetAnimation 	( .Actor:Self 00000001 007C001D )
  424:  Call     SetAnimation 	( .Actor:Self 00000002 007C001D )
  43C:  Call     SetAnimation 	( .Actor:Self 00000003 007C001E )
  454:  Wait     0000003C 
  460:  Call     SetAnimation 	( .Actor:Self 00000001 007C0020 )
  478:  Call     SetAnimation 	( .Actor:Self 00000002 007C0021 )
  490:  Call     SetAnimation 	( .Actor:Self 00000003 007C0022 )
  4A8:  Call     PlaySoundAtActor 	( .Actor:Self 0000035D )
  4BC:  Call     UseCamPreset 	( 00000002 )
  4CC:  Call     MoveCamOver 	( 0000000F )
  4DC:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  500:  Set  *Var[A]  *Var[0] 
  510:  Switch  *Var[0] 
  51C:  	CaseOR  ==  00000006 
  528:  	CaseOR  ==  00000005 
  534:  		Thread
  53C:  			Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  554:  			Set  *Var[3]  *Var[2] 
  564:  			Sub  *Var[3]  00000019 
  574:  			Call     MakeLerp    	( *Var[2] *Var[3] 00000028 00000002 )
  590:  			Label    00000002 
  59C:  			Call     UpdateLerp  	( )
  5A8:  			Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  5C0:  			Wait     00000001 
  5CC:  			If  *Var[1]  ==  00000001 
  5DC:  				Goto     00000002 
  5E8:  			EndIf
  5F0:  		EndThread
  5F8:  		Thread
  600:  			Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  618:  			Set  *Var[3]  *Var[2] 
  628:  			Sub  *Var[3]  00000019 
  638:  			Call     MakeLerp    	( *Var[2] *Var[3] 00000028 00000002 )
  654:  			Label    00000003 
  660:  			Call     UpdateLerp  	( )
  66C:  			Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
  684:  			Wait     00000001 
  690:  			If  *Var[1]  ==  00000001 
  6A0:  				Goto     00000003 
  6AC:  			EndIf
  6B4:  		EndThread
  6BC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6D8:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  6F0:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
  708:  		MulF  *Var[3]  *Fixed[-20.0] 
  718:  		MulF  *Var[4]  *Fixed[-20.0] 
  728:  		DivF  *Var[3]  *Fixed[100.0] 
  738:  		DivF  *Var[4]  *Fixed[100.0] 
  748:  		Add  *Var[0]  *Var[3] 
  758:  		Add  *Var[1]  *Var[4] 
  768:  		Call     PlayEffect  	( {FX:HuffPuffBreath} *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 00000028 00000000 00000000 00000000 00000000 00000000 )
  7AC:  		Call     $Function_80218000_19 ( 00000050 0000003C )
  7C0:  		Thread
  7C8:  			Call     ShakeCam    	( 00000001 00000000 0000001E *Fixed[0.30078125] )
  7E4:  		EndThread
  7EC:  		Loop     0000000A 
  7F8:  			Call     RandInt     	( 00000096 *Var[3] )
  80C:  			Call     RandInt     	( 00000064 *Var[4] )
  820:  			Add  *Var[3]  00000032 
  830:  			SetF  *Var[4]  *Fixed[5.0] 
  840:  			Call     RandInt     	( 00000004 *Var[5] )
  854:  			AddF  *Var[4]  *Var[5] 
  864:  			DivF  *Var[4]  *Fixed[10.0] 
  874:  			SetF  *Var[5]  *Fixed[100.0] 
  884:  			Call     RandInt     	( 00000028 *Var[6] )
  898:  			AddF  *Var[5]  *Var[6] 
  8A8:  			DivF  *Var[5]  *Fixed[10.0] 
  8B8:  			Call     PlayEffect  	( {FX:MovingCloud} 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
  8FC:  			Call     RandInt     	( 00000005 *Var[0] )
  910:  			Add  *Var[0]  00000005 
  920:  			Wait     *Var[0] 
  92C:  		EndLoop
  934:  		Wait     00000014 
  940:  		Call     802D62B8 ( 0000035D )
  950:  		If  *Var[A]  ==  00000005 
  960:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  984:  		EndIf
  98C:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  9A4:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  9BC:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  9D4:  		Wait     00000014 
  9E0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  9F4:  		Return
  9FC:  	EndCaseGroup
  A04:  EndSwitch
  A0C:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  A20:  If  *Var[0]  !&  00100000 
  A30:  	Call     ShowMessageBox ( 00000031 000000B4 )
  A44:  	Call     802694A4 ( 00000001 )
  A54:  	Call     LoadActionCommand 	( 00000005 )
  A64:  	Call     802A9000 ( 00000000 )
  A74:  	Call     802691C8 ( 00000005 00000014 00000028 0000003C 00000050 00000064 )
  A98:  	Wait     0000000A 
  AA4:  	Call     SetBattleFlagBits 	( 00004000 .False )
  AB8:  	Call     802A91E0 ( 00000000 000000C8 00000003 )
  AD0:  	Thread
  AD8:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  AF0:  		Set  *Var[3]  *Var[2] 
  B00:  		Sub  *Var[3]  00000019 
  B10:  		Call     MakeLerp    	( *Var[2] *Var[3] 000000C8 00000002 )
  B2C:  		Label    00000004 
  B38:  		Call     UpdateLerp  	( )
  B44:  		Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  B5C:  		Wait     00000001 
  B68:  		If  *Var[1]  ==  00000001 
  B78:  			Goto     00000004 
  B84:  		EndIf
  B8C:  	EndThread
  B94:  	Thread
  B9C:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  BB4:  		Set  *Var[3]  *Var[2] 
  BC4:  		Sub  *Var[3]  00000019 
  BD4:  		Call     MakeLerp    	( *Var[2] *Var[3] 000000C8 00000002 )
  BF0:  		Label    00000005 
  BFC:  		Call     UpdateLerp  	( )
  C08:  		Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
  C20:  		Wait     00000001 
  C2C:  		If  *Var[1]  ==  00000001 
  C3C:  			Goto     00000005 
  C48:  		EndIf
  C50:  	EndThread
  C58:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C74:  	Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  C8C:  	Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
  CA4:  	MulF  *Var[3]  *Fixed[-20.0] 
  CB4:  	MulF  *Var[4]  *Fixed[-20.0] 
  CC4:  	DivF  *Var[3]  *Fixed[100.0] 
  CD4:  	DivF  *Var[4]  *Fixed[100.0] 
  CE4:  	Add  *Var[0]  *Var[3] 
  CF4:  	Add  *Var[1]  *Var[4] 
  D04:  	Call     PlayEffect  	( {FX:HuffPuffBreath} *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 )
  D48:  	Call     $Function_80218000_19 ( 00000064 0000015E )
  D5C:  	Thread
  D64:  		Call     ShakeCam    	( 00000001 00000000 000000AF *Fixed[0.30078125] )
  D80:  	EndThread
  D88:  	Thread
  D90:  		Loop     00000019 
  D9C:  			Call     RandInt     	( 00000096 *Var[3] )
  DB0:  			Call     RandInt     	( 00000064 *Var[4] )
  DC4:  			Add  *Var[3]  00000032 
  DD4:  			SetF  *Var[4]  *Fixed[5.0] 
  DE4:  			Call     RandInt     	( 00000004 *Var[5] )
  DF8:  			AddF  *Var[4]  *Var[5] 
  E08:  			DivF  *Var[4]  *Fixed[10.0] 
  E18:  			SetF  *Var[5]  *Fixed[100.0] 
  E28:  			Call     RandInt     	( 00000028 *Var[6] )
  E3C:  			AddF  *Var[5]  *Var[6] 
  E4C:  			DivF  *Var[5]  *Fixed[10.0] 
  E5C:  			Call     PlayEffect  	( {FX:MovingCloud} 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
  EA0:  			Call     RandInt     	( 00000005 *Var[0] )
  EB4:  			Add  *Var[0]  00000005 
  EC4:  			Wait     *Var[0] 
  ED0:  		EndLoop
  ED8:  	EndThread
  EE0:  	Call     MakeLerp    	( 00000000 00001C20 000000C8 0000000B )
  EFC:  	Label    0000000A 
  F08:  	Call     UpdateLerp  	( )
  F14:  	Call     SetActorAngle 	( .Actor:Player *Var[0] )
  F28:  	Wait     00000001 
  F34:  	If  *Var[1]  ==  00000001 
  F44:  		Goto     0000000A 
  F50:  	EndIf
  F58:  	Call     802695A8 ( *Var[1] )
  F68:  Else
  F70:  	Thread
  F78:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
  F90:  		Set  *Var[3]  *Var[2] 
  FA0:  		Sub  *Var[3]  00000019 
  FB0:  		Call     MakeLerp    	( *Var[2] *Var[3] 00000064 00000002 )
  FCC:  		Label    00000006 
  FD8:  		Call     UpdateLerp  	( )
  FE4:  		Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  FFC:  		Wait     00000001 
 1008:  		If  *Var[1]  ==  00000001 
 1018:  			Goto     00000006 
 1024:  		EndIf
 102C:  	EndThread
 1034:  	Thread
 103C:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
 1054:  		Set  *Var[3]  *Var[2] 
 1064:  		Sub  *Var[3]  00000019 
 1074:  		Call     MakeLerp    	( *Var[2] *Var[3] 00000064 00000002 )
 1090:  		Label    00000007 
 109C:  		Call     UpdateLerp  	( )
 10A8:  		Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
 10C0:  		Wait     00000001 
 10CC:  		If  *Var[1]  ==  00000001 
 10DC:  			Goto     00000007 
 10E8:  		EndIf
 10F0:  	EndThread
 10F8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1114:  	Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
 112C:  	Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
 1144:  	MulF  *Var[3]  *Fixed[-20.0] 
 1154:  	MulF  *Var[4]  *Fixed[-20.0] 
 1164:  	DivF  *Var[3]  *Fixed[100.0] 
 1174:  	DivF  *Var[4]  *Fixed[100.0] 
 1184:  	Add  *Var[0]  *Var[3] 
 1194:  	Add  *Var[1]  *Var[4] 
 11A4:  	Call     PlayEffect  	( {FX:HuffPuffBreath} *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 00000064 00000000 00000000 00000000 00000000 00000000 )
 11E8:  	Call     $Function_80218000_19 ( 00000064 000000C8 )
 11FC:  	Thread
 1204:  		Call     ShakeCam    	( 00000001 00000000 00000064 *Fixed[0.30078125] )
 1220:  	EndThread
 1228:  	Thread
 1230:  		Loop     0000000F 
 123C:  			Call     RandInt     	( 00000096 *Var[3] )
 1250:  			Call     RandInt     	( 00000064 *Var[4] )
 1264:  			Add  *Var[3]  00000032 
 1274:  			SetF  *Var[4]  *Fixed[5.0] 
 1284:  			Call     RandInt     	( 00000004 *Var[5] )
 1298:  			AddF  *Var[4]  *Var[5] 
 12A8:  			DivF  *Var[4]  *Fixed[10.0] 
 12B8:  			SetF  *Var[5]  *Fixed[100.0] 
 12C8:  			Call     RandInt     	( 00000028 *Var[6] )
 12DC:  			AddF  *Var[5]  *Var[6] 
 12EC:  			DivF  *Var[5]  *Fixed[10.0] 
 12FC:  			Call     PlayEffect  	( {FX:MovingCloud} 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
 1340:  			Call     RandInt     	( 00000005 *Var[0] )
 1354:  			Add  *Var[0]  00000005 
 1364:  			Wait     *Var[0] 
 1370:  		EndLoop
 1378:  	EndThread
 1380:  	Wait     0000006E 
 138C:  	Set  *Var[1]  00000000 
 139C:  EndIf
 13A4:  Call     802D62B8 ( 0000035D )
 13B4:  Wait     00000002 
 13C0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
 13D4:  Call     SetGoalToTarget 	( .Actor:Self )
 13E4:  Switch  *Var[1] 
 13F0:  	Case  ==  00000000 
 13FC:  		Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000007 00000020 )
 1424:  	Case  ==  00000001 
 1430:  		Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000006 00000020 )
 1458:  	Case  ==  00000002 
 1464:  		Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
 148C:  	Case  ==  00000003 
 1498:  		Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000004 00000020 )
 14C0:  	Case  ==  00000004 
 14CC:  		Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
 14F4:  	Default
 14FC:  		Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000020 )
 1524:  EndSwitch
 152C:  Switch  *Var[0] 
 1538:  	CaseOR  ==  00000000 
 1544:  	CaseOR  ==  00000002 
 1550:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
 1568:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
 1580:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
 1598:  		Wait     00000014 
 15A4:  	EndCaseGroup
 15AC:  EndSwitch
 15B4:  Call     UseIdleAnimation 	( .Actor:Self .True )
 15C8:  Return
 15D0:  End

#new:Script $Script_80220950_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Exec     $Script_80219EF4_19 *Var[A] 
   38:  Call     SetActorVar 	( .Actor:Self 00000004 *Var[A] )
   50:  Call     UseCamPreset 	( 00000013 )
   60:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   7C:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   94:  Call     SetCamZoom  	( 00000190 )
   A4:  Call     SetCamOffsetZ 	( 00000005 )
   B4:  Call     MoveCamOver 	( 0000003C )
   C4:  Call     SetAnimation 	( .Actor:Self 00000001 007C0011 )
   DC:  Call     SetAnimation 	( .Actor:Self 00000002 007C0012 )
   F4:  Call     SetAnimation 	( .Actor:Self 00000003 007C0013 )
  10C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219A04_19 )
  124:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_80219A10_19 )
  13C:  Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_80219A1C_19 )
  154:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .True )
  170:  Call     PlaySoundAtActor 	( .Actor:Self 0000035C )
  184:  Call     $Function_80218000_19 ( 00000046 00000078 )
  198:  Thread
  1A0:  	Call     ShakeCam    	( 00000001 00000000 0000003C *Fixed[0.30078125] )
  1BC:  EndThread
  1C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E0:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  1F8:  DivF  *Var[3]  *Fixed[100.0] 
  208:  Call     $Function_80218924_19 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  224:  Call     SetActorVar 	( .Actor:Self 00000005 *Var[0] )
  23C:  Wait     0000003C 
  248:  Call     UseCamPreset 	( 00000002 )
  258:  Call     MoveCamOver 	( 0000001E )
  268:  Wait     0000001E 
  274:  Call     UseIdleAnimation 	( .Actor:Self .True )
  288:  Return
  290:  End

#new:Script $Script_Thunderstorm_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     UseCamPreset 	( 00000013 )
   38:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   54:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   6C:  Call     SetCamZoom  	( 00000190 )
   7C:  Call     SetCamOffsetZ 	( 00000005 )
   8C:  Call     MoveCamOver 	( 0000003C )
   9C:  Call     $Function_80218000_19 ( 00000046 00000064 )
   B0:  Thread
   B8:  	Call     ShakeCam    	( 00000001 00000000 00000064 *Fixed[0.30078125] )
   D4:  EndThread
   DC:  Call     $Function_802188A8_19 ( )
   E8:  Call     MakeLerp    	( 00000000 000000C8 0000003C 00000000 )
  104:  Label    00000000 
  110:  Call     UpdateLerp  	( )
  11C:  Call     $Function_802188EC_19 ( *Var[0] )
  12C:  Wait     00000001 
  138:  If  *Var[1]  ==  00000001 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  Wait     00000014 
  168:  Call     UseCamPreset 	( 00000002 )
  178:  Call     MoveCamOver 	( 0000000A )
  188:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[A] )
  1A0:  Kill     *Var[A] 
  1AC:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  1C8:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  1E0:  Call     RemoveEffect 	( *Var[0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198F0_19 )
  208:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021994C_19 )
  220:  Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_802199A8_19 )
  238:  Call     SetAnimation 	( .Actor:Self 00000001 007C000E )
  250:  Call     SetAnimation 	( .Actor:Self 00000002 007C000F )
  268:  Call     SetAnimation 	( .Actor:Self 00000003 007C0010 )
  280:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .False )
  29C:  Thread
  2A4:  	Wait     00000014 
  2B0:  	Call     MakeLerp    	( 000000C8 00000000 0000001E 00000000 )
  2CC:  	Label    00000001 
  2D8:  	Call     UpdateLerp  	( )
  2E4:  	Call     $Function_802188EC_19 ( *Var[0] )
  2F4:  	Wait     00000001 
  300:  	If  *Var[1]  ==  00000001 
  310:  		Goto     00000001 
  31C:  	EndIf
  324:  EndThread
  32C:  Call     802D62B8 ( 0000035C )
  33C:  Call     PlaySoundAtActor 	( .Actor:Self 000003D3 )
  350:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  Sub  *Var[2]  0000000A 
  37C:  Set  *Var[3]  *Var[0] 
  38C:  Sub  *Var[3]  0000001E 
  39C:  Call     PlayEffect  	( {FX:Lightning} *Var[0] *Var[1] *Var[2] *Var[3] 00000001 *Var[2] *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 )
  3E0:  Wait     00000005 
  3EC:  Call     $Function_80218000_19 ( 00000100 0000001E )
  400:  Thread
  408:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[5.0] )
  424:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[3.0] )
  440:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.0] )
  45C:  EndThread
  464:  SetF  *Var[6]  *Fixed[0.0] 
  474:  Loop     0000000A 
  480:  	Set  *Var[4]  *Var[3] 
  490:  	Set  *Var[5]  *Var[2] 
  4A0:  	AddF  *Var[6]  *Fixed[36.0] 
  4B0:  	Call     AddVectorPolar ( *Var[4] *Var[5] *Fixed[300.0] *Var[6] )
  4CC:  	Call     PlayEffect  	( {FX:Lightning} *Var[3] 00000001 *Var[2] *Var[4] 00000001 *Var[5] *Fixed[4.0] 0000001E 00000000 00000000 00000000 00000000 )
  510:  EndLoop
  518:  Wait     0000000A 
  524:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  548:  Switch  *Var[0] 
  554:  	CaseOR  ==  00000006 
  560:  	CaseOR  ==  00000005 
  56C:  		If  *Var[0]  ==  00000005 
  57C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5A0:  		EndIf
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  5C0:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  5D8:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  5F0:  		Wait     00000014 
  5FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Wait     00000002 
  634:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  648:  Call     SetGoalToTarget 	( .Actor:Self )
  658:  Call     DamageTarget 	( .Actor:Self *Var[0] 18000800 00000000 00000000 0000000C 00000020 )
  680:  Switch  *Var[0] 
  68C:  	CaseOR  ==  00000000 
  698:  	CaseOR  ==  00000002 
  6A4:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  6B8:  		If  *Var[0]  >  00000000 
  6C8:  			Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  6E0:  			ConstOR  *Var[0] 00000008 
  6F0:  			Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  708:  		EndIf
  710:  		Wait     00000014 
  71C:  	EndCaseGroup
  724:  EndSwitch
  72C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  740:  Return
  748:  End

#new:Script $Script_80221338_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Exec     $Script_80219EF4_19 *Var[A] 
   38:  Call     SetActorVar 	( .Actor:Self 00000004 *Var[A] )
   50:  Call     UseCamPreset 	( 00000013 )
   60:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   7C:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   94:  Call     SetCamZoom  	( 00000190 )
   A4:  Call     SetCamOffsetZ 	( 00000005 )
   B4:  Call     MoveCamOver 	( 0000003C )
   C4:  Call     SetAnimation 	( .Actor:Self 00000001 007C0011 )
   DC:  Call     SetAnimation 	( .Actor:Self 00000002 007C0012 )
   F4:  Call     SetAnimation 	( .Actor:Self 00000003 007C0013 )
  10C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219A04_19 )
  124:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_80219A10_19 )
  13C:  Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_80219A1C_19 )
  154:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .True )
  170:  Call     PlaySoundAtActor 	( .Actor:Self 0000035C )
  184:  Call     $Function_80218000_19 ( 00000046 00000078 )
  198:  Thread
  1A0:  	Call     ShakeCam    	( 00000001 00000000 0000003C *Fixed[0.30078125] )
  1BC:  EndThread
  1C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E0:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
  1F8:  DivF  *Var[3]  *Fixed[100.0] 
  208:  Call     $Function_80218924_19 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  224:  Call     SetActorVar 	( .Actor:Self 00000005 *Var[0] )
  23C:  Wait     0000003C 
  248:  Call     UseCamPreset 	( 00000002 )
  258:  Call     MoveCamOver 	( 0000001E )
  268:  Wait     0000001E 
  274:  Call     UseIdleAnimation 	( .Actor:Self .True )
  288:  Return
  290:  Return
  298:  End

#new:Script $Script_HighBodySlam_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     UseCamPreset 	( 0000003F )
   38:  Call     AddCamZoom  	( FFFFFF9C )
   48:  Call     SetCamOffsetZ 	( 00000032 )
   58:  Call     CamTargetActor ( .Actor:Self )
   68:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   80:  Call     $Function_80218000_19 ( 00000046 00000050 )
   94:  Thread
   9C:  	Call     ShakeCam    	( 00000001 00000000 00000028 *Fixed[0.30078125] )
   B8:  EndThread
   C0:  Thread
   C8:  	Call     $Function_802188A8_19 ( )
   D4:  	Call     MakeLerp    	( 00000000 000000C8 00000028 00000000 )
   F0:  	Label    00000000 
   FC:  	Call     UpdateLerp  	( )
  108:  	Call     $Function_802188EC_19 ( *Var[0] )
  118:  	Wait     00000001 
  124:  	If  *Var[1]  ==  00000001 
  134:  		Goto     00000000 
  140:  	EndIf
  148:  EndThread
  150:  Thread
  158:  	Loop     00000028 
  164:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  180:  		Call     GetActorVar 	( .Actor:Self 00000005 *Var[A] )
  198:  		Call     $Function_802189FC_19 ( *Var[A] *Var[0] *Var[1] *Var[2] )
  1B4:  		Wait     00000001 
  1C0:  	EndLoop
  1C8:  EndThread
  1D0:  Call     SetGoalToTarget 	( .Actor:Self )
  1E0:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
  1F8:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  210:  SetF  *Var[2]  *Fixed[72.5] 
  220:  SetF  *Var[3]  *Fixed[67.5] 
  230:  MulF  *Var[2]  *Var[0] 
  240:  MulF  *Var[3]  *Var[1] 
  250:  DivF  *Var[2]  *Fixed[100.0] 
  260:  DivF  *Var[3]  *Fixed[100.0] 
  270:  Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[3] 00000000 )
  28C:  Call     AddToGoalPos 	( .Actor:Self 00000014 00000028 00000000 )
  2A8:  Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  2C4:  Wait     0000001E 
  2D0:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[A] )
  2E8:  Kill     *Var[A] 
  2F4:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  310:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  328:  Call     RemoveEffect 	( *Var[0] )
  338:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198F0_19 )
  350:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021994C_19 )
  368:  Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_802199A8_19 )
  380:  Call     SetAnimation 	( .Actor:Self 00000001 007C000E )
  398:  Call     SetAnimation 	( .Actor:Self 00000002 007C000F )
  3B0:  Call     SetAnimation 	( .Actor:Self 00000003 007C0010 )
  3C8:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .False )
  3E4:  Thread
  3EC:  	Wait     00000014 
  3F8:  	Call     MakeLerp    	( 000000C8 00000000 0000001E 00000000 )
  414:  	Label    00000001 
  420:  	Call     UpdateLerp  	( )
  42C:  	Call     $Function_802188EC_19 ( *Var[0] )
  43C:  	Wait     00000001 
  448:  	If  *Var[1]  ==  00000001 
  458:  		Goto     00000001 
  464:  	EndIf
  46C:  EndThread
  474:  Call     802D62B8 ( 0000035C )
  484:  Call     PlaySoundAtActor 	( .Actor:Self 0000035B )
  498:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  4BC:  Switch  *Var[0] 
  4C8:  	Case  ==  00000005 
  4D4:  		Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  4F0:  		Sub  *Var[C]  0000000A 
  500:  		Call     SetGoalToTarget 	( .Actor:Self )
  510:  		Call     GetGoalPos  	( .Actor:Self *Var[D] *Var[E] *Var[F] )
  52C:  		Sub  *Var[D]  00000064 
  53C:  		Call     PlayEffect  	( {FX:Lightning} *Var[A] *Var[B] *Var[C] *Var[D] 00000000 *Var[F] *Fixed[1.5] 00000014 00000000 00000000 00000000 00000000 )
  580:  		Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5A4:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  5BC:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  5D4:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  5EC:  		Wait     00000014 
  5F8:  		Call     UseCamPreset 	( 00000002 )
  608:  		Call     SetGoalToHome 	( .Actor:Self )
  618:  		Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  634:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  648:  		Return
  650:  	Case  ==  00000006 
  65C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  678:  		Sub  *Var[2]  0000000A 
  688:  		Call     SetGoalToTarget 	( .Actor:Self )
  698:  		Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
  6B4:  		Sub  *Var[3]  00000004 
  6C4:  		Add  *Var[4]  0000000A 
  6D4:  		Add  *Var[5]  00000001 
  6E4:  		Thread
  6EC:  			Call     GetActorVar 	( .Actor:Self 00000006 *Var[6] )
  704:  			SetF  *Var[7]  *Fixed[0.72558594] 
  714:  			SetF  *Var[8]  *Fixed[0.2421875] 
  724:  			MulF  *Var[7]  *Var[6] 
  734:  			MulF  *Var[8]  *Var[6] 
  744:  			SubF  *Var[0]  *Var[7] 
  754:  			SetF  *Var[9]  *Var[8] 
  764:  			MulF  *Var[9]  00000003 
  774:  			AddF  *Var[9]  *Var[0] 
  784:  			Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  7C8:  			Wait     00000003 
  7D4:  			SetF  *Var[9]  *Var[8] 
  7E4:  			MulF  *Var[9]  00000001 
  7F4:  			AddF  *Var[9]  *Var[0] 
  804:  			Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  848:  			Wait     00000003 
  854:  			SetF  *Var[9]  *Var[8] 
  864:  			MulF  *Var[9]  00000004 
  874:  			AddF  *Var[9]  *Var[0] 
  884:  			Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  8C8:  			Wait     00000003 
  8D4:  			SetF  *Var[9]  *Var[8] 
  8E4:  			MulF  *Var[9]  00000002 
  8F4:  			AddF  *Var[9]  *Var[0] 
  904:  			Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  948:  			Wait     00000003 
  954:  			SetF  *Var[9]  *Var[8] 
  964:  			MulF  *Var[9]  00000005 
  974:  			AddF  *Var[9]  *Var[0] 
  984:  			Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  9C8:  		EndThread
  9D0:  		Wait     00000002 
  9DC:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
  9F4:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
  A0C:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
  A24:  		Wait     00000014 
  A30:  		Call     UseCamPreset 	( 00000002 )
  A40:  		Call     SetGoalToHome 	( .Actor:Self )
  A50:  		Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  A6C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  A80:  		Return
  A88:  EndSwitch
  A90:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AAC:  Sub  *Var[2]  0000000A 
  ABC:  Call     SetGoalToTarget 	( .Actor:Self )
  ACC:  Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
  AE8:  Sub  *Var[3]  00000004 
  AF8:  Add  *Var[4]  0000000A 
  B08:  Add  *Var[5]  00000001 
  B18:  Thread
  B20:  	Call     GetActorVar 	( .Actor:Self 00000006 *Var[6] )
  B38:  	SetF  *Var[7]  *Fixed[0.72558594] 
  B48:  	SetF  *Var[8]  *Fixed[0.2421875] 
  B58:  	MulF  *Var[7]  *Var[6] 
  B68:  	MulF  *Var[8]  *Var[6] 
  B78:  	SubF  *Var[0]  *Var[7] 
  B88:  	SetF  *Var[9]  *Var[8] 
  B98:  	MulF  *Var[9]  00000003 
  BA8:  	AddF  *Var[9]  *Var[0] 
  BB8:  	Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  BFC:  	Wait     00000003 
  C08:  	SetF  *Var[9]  *Var[8] 
  C18:  	MulF  *Var[9]  00000001 
  C28:  	AddF  *Var[9]  *Var[0] 
  C38:  	Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  C7C:  	Wait     00000003 
  C88:  	SetF  *Var[9]  *Var[8] 
  C98:  	MulF  *Var[9]  00000004 
  CA8:  	AddF  *Var[9]  *Var[0] 
  CB8:  	Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  CFC:  	Wait     00000003 
  D08:  	SetF  *Var[9]  *Var[8] 
  D18:  	MulF  *Var[9]  00000002 
  D28:  	AddF  *Var[9]  *Var[0] 
  D38:  	Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  D7C:  	Wait     00000003 
  D88:  	SetF  *Var[9]  *Var[8] 
  D98:  	MulF  *Var[9]  00000005 
  DA8:  	AddF  *Var[9]  *Var[0] 
  DB8:  	Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
  DFC:  EndThread
  E04:  Wait     00000002 
  E10:  Wait     00000002 
  E1C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  E30:  Call     SetGoalToTarget 	( .Actor:Self )
  E40:  Call     DamageTarget 	( .Actor:Self *Var[0] 18000020 00000000 00000000 0000000A 00000020 )
  E68:  Switch  *Var[0] 
  E74:  	CaseOR  ==  00000000 
  E80:  	CaseOR  ==  00000002 
  E8C:  		Call     UseCamPreset 	( 00000002 )
  E9C:  		Wait     0000001E 
  EA8:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
  EC0:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
  ED8:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
  EF0:  		Call     SetGoalToHome 	( .Actor:Self )
  F00:  		Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
  F1C:  	EndCaseGroup
  F24:  EndSwitch
  F2C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F40:  Return
  F48:  End

#new:Script $Script_80222528_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   34:  Call     UseCamPreset 	( 00000013 )
   44:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   78:  Call     SetCamZoom  	( 00000190 )
   88:  Call     SetCamOffsetZ 	( 00000005 )
   98:  Call     MoveCamOver 	( 0000001E )
   A8:  Wait     0000001E 
   B4:  Call     PlaySoundAtActor 	( .Actor:Self 000003B3 )
   C8:  Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
   E0:  Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
   F8:  Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
  110:  Wait     00000008 
  11C:  Call     SetAnimation 	( .Actor:Self 00000001 007C001D )
  134:  Call     SetAnimation 	( .Actor:Self 00000002 007C001E )
  14C:  Call     SetAnimation 	( .Actor:Self 00000003 007C001F )
  164:  Call     PlaySoundAtActor 	( .Actor:Self 000020B6 )
  178:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
  190:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
  1A8:  Set  *Var[F]  00000000 
  1B8:  Loop     00000014 
  1C4:  	Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.3007812] 0000000A 00000000 00000000 )
  1EC:  	Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.7001953] 0000000A 00000000 00000000 )
  214:  	MulF  *Var[2]  *Var[0] 
  224:  	MulF  *Var[3]  *Var[1] 
  234:  	Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
  24C:  	Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
  264:  	Add  *Var[F]  00000001 
  274:  	Wait     00000001 
  280:  EndLoop
  288:  Call     PlaySoundAtActor 	( .Actor:Self 000020B6 )
  29C:  Loop     00000014 
  2A8:  	Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
  2D0:  	Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
  2F8:  	MulF  *Var[2]  *Var[0] 
  308:  	MulF  *Var[3]  *Var[1] 
  318:  	Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
  330:  	Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
  348:  	Add  *Var[F]  00000001 
  358:  	Wait     00000001 
  364:  EndLoop
  36C:  Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
  384:  Call     SetActorVar 	( .Actor:Self 00000007 *Var[1] )
  39C:  Set  *Var[9]  00000000 
  3AC:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  3C4:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  3E0:  Add  *Var[B]  00000096 
  3F0:  If  *Var[0]  &  00000010 
  400:  	Call     UseIdleAnimation 	( *Array[4] .False )
  414:  	Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
  42C:  	If  *Var[1]  ==  00000000 
  43C:  		Call     SetAnimation 	( *Array[4] 00000001 004C0009 )
  454:  	Else
  45C:  		Call     SetAnimation 	( *Array[4] 00000001 004C000B )
  474:  	EndIf
  47C:  	Thread
  484:  		Mod  *Var[9]  00000002 
  494:  		If  *Var[9]  ==  00000000 
  4A4:  			Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
  4B8:  		Else
  4C0:  			Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
  4D4:  		EndIf
  4DC:  		Call     GetActorPos 	( *Array[4] *Var[D] *Var[E] *Var[F] )
  4F8:  		Call     SetGoalToPos 	( *Array[4] *Var[A] *Var[B] *Var[F] )
  514:  		Call     MoveToGoal  	( *Array[4] 00000014 0000000A .Easing:QuadraticIn )
  530:  		Set  *Var[D]  *Var[A] 
  540:  		Set  *Var[E]  *Var[C] 
  550:  		Set  *Var[F]  00000004 
  560:  		Mul  *Var[F]  00000024 
  570:  		Add  *Var[F]  FFFFFFA6 
  580:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
  59C:  		Call     SetActorPos 	( *Array[4] *Var[D] *Var[B] *Var[E] )
  5B8:  	EndThread
  5C0:  	Add  *Var[9]  00000001 
  5D0:  	Wait     00000008 
  5DC:  EndIf
  5E4:  If  *Var[0]  &  00000200 
  5F4:  	Call     UseIdleAnimation 	( *Array[9] .False )
  608:  	Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
  620:  	If  *Var[1]  ==  00000000 
  630:  		Call     SetAnimation 	( *Array[9] 00000001 004C0009 )
  648:  	Else
  650:  		Call     SetAnimation 	( *Array[9] 00000001 004C000B )
  668:  	EndIf
  670:  	Thread
  678:  		Mod  *Var[9]  00000002 
  688:  		If  *Var[9]  ==  00000000 
  698:  			Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
  6AC:  		Else
  6B4:  			Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
  6C8:  		EndIf
  6D0:  		Call     GetActorPos 	( *Array[9] *Var[D] *Var[E] *Var[F] )
  6EC:  		Call     SetGoalToPos 	( *Array[9] *Var[A] *Var[B] *Var[F] )
  708:  		Call     MoveToGoal  	( *Array[9] 00000014 0000000A .Easing:QuadraticIn )
  724:  		Set  *Var[D]  *Var[A] 
  734:  		Set  *Var[E]  *Var[C] 
  744:  		Set  *Var[F]  00000009 
  754:  		Mul  *Var[F]  00000024 
  764:  		Add  *Var[F]  FFFFFFA6 
  774:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
  790:  		Call     SetActorPos 	( *Array[9] *Var[D] *Var[B] *Var[E] )
  7AC:  	EndThread
  7B4:  	Add  *Var[9]  00000001 
  7C4:  	Wait     00000008 
  7D0:  EndIf
  7D8:  If  *Var[0]  &  00000008 
  7E8:  	Call     UseIdleAnimation 	( *Array[3] .False )
  7FC:  	Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
  814:  	If  *Var[1]  ==  00000000 
  824:  		Call     SetAnimation 	( *Array[3] 00000001 004C0009 )
  83C:  	Else
  844:  		Call     SetAnimation 	( *Array[3] 00000001 004C000B )
  85C:  	EndIf
  864:  	Thread
  86C:  		Mod  *Var[9]  00000002 
  87C:  		If  *Var[9]  ==  00000000 
  88C:  			Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
  8A0:  		Else
  8A8:  			Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
  8BC:  		EndIf
  8C4:  		Call     GetActorPos 	( *Array[3] *Var[D] *Var[E] *Var[F] )
  8E0:  		Call     SetGoalToPos 	( *Array[3] *Var[A] *Var[B] *Var[F] )
  8FC:  		Call     MoveToGoal  	( *Array[3] 00000014 0000000A .Easing:QuadraticIn )
  918:  		Set  *Var[D]  *Var[A] 
  928:  		Set  *Var[E]  *Var[C] 
  938:  		Set  *Var[F]  00000003 
  948:  		Mul  *Var[F]  00000024 
  958:  		Add  *Var[F]  FFFFFFA6 
  968:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
  984:  		Call     SetActorPos 	( *Array[3] *Var[D] *Var[B] *Var[E] )
  9A0:  	EndThread
  9A8:  	Add  *Var[9]  00000001 
  9B8:  	Wait     00000008 
  9C4:  EndIf
  9CC:  If  *Var[0]  &  00000020 
  9DC:  	Call     UseIdleAnimation 	( *Array[5] .False )
  9F0:  	Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
  A08:  	If  *Var[1]  ==  00000000 
  A18:  		Call     SetAnimation 	( *Array[5] 00000001 004C0009 )
  A30:  	Else
  A38:  		Call     SetAnimation 	( *Array[5] 00000001 004C000B )
  A50:  	EndIf
  A58:  	Thread
  A60:  		Mod  *Var[9]  00000002 
  A70:  		If  *Var[9]  ==  00000000 
  A80:  			Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
  A94:  		Else
  A9C:  			Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
  AB0:  		EndIf
  AB8:  		Call     GetActorPos 	( *Array[5] *Var[D] *Var[E] *Var[F] )
  AD4:  		Call     SetGoalToPos 	( *Array[5] *Var[A] *Var[B] *Var[F] )
  AF0:  		Call     MoveToGoal  	( *Array[5] 00000014 0000000A .Easing:QuadraticIn )
  B0C:  		Set  *Var[D]  *Var[A] 
  B1C:  		Set  *Var[E]  *Var[C] 
  B2C:  		Set  *Var[F]  00000005 
  B3C:  		Mul  *Var[F]  00000024 
  B4C:  		Add  *Var[F]  FFFFFFA6 
  B5C:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
  B78:  		Call     SetActorPos 	( *Array[5] *Var[D] *Var[B] *Var[E] )
  B94:  	EndThread
  B9C:  	Add  *Var[9]  00000001 
  BAC:  	Wait     00000008 
  BB8:  EndIf
  BC0:  If  *Var[0]  &  00000002 
  BD0:  	Call     UseIdleAnimation 	( *Array[1] .False )
  BE4:  	Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
  BFC:  	If  *Var[1]  ==  00000000 
  C0C:  		Call     SetAnimation 	( *Array[1] 00000001 004C0009 )
  C24:  	Else
  C2C:  		Call     SetAnimation 	( *Array[1] 00000001 004C000B )
  C44:  	EndIf
  C4C:  	Thread
  C54:  		Mod  *Var[9]  00000002 
  C64:  		If  *Var[9]  ==  00000000 
  C74:  			Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
  C88:  		Else
  C90:  			Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
  CA4:  		EndIf
  CAC:  		Call     GetActorPos 	( *Array[1] *Var[D] *Var[E] *Var[F] )
  CC8:  		Call     SetGoalToPos 	( *Array[1] *Var[A] *Var[B] *Var[F] )
  CE4:  		Call     MoveToGoal  	( *Array[1] 00000014 0000000A .Easing:QuadraticIn )
  D00:  		Set  *Var[D]  *Var[A] 
  D10:  		Set  *Var[E]  *Var[C] 
  D20:  		Set  *Var[F]  00000001 
  D30:  		Mul  *Var[F]  00000024 
  D40:  		Add  *Var[F]  FFFFFFA6 
  D50:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
  D6C:  		Call     SetActorPos 	( *Array[1] *Var[D] *Var[B] *Var[E] )
  D88:  	EndThread
  D90:  	Add  *Var[9]  00000001 
  DA0:  	Wait     00000008 
  DAC:  EndIf
  DB4:  If  *Var[0]  &  00000001 
  DC4:  	Call     UseIdleAnimation 	( *Array[0] .False )
  DD8:  	Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
  DF0:  	If  *Var[1]  ==  00000000 
  E00:  		Call     SetAnimation 	( *Array[0] 00000001 004C0009 )
  E18:  	Else
  E20:  		Call     SetAnimation 	( *Array[0] 00000001 004C000B )
  E38:  	EndIf
  E40:  	Thread
  E48:  		Mod  *Var[9]  00000002 
  E58:  		If  *Var[9]  ==  00000000 
  E68:  			Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
  E7C:  		Else
  E84:  			Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
  E98:  		EndIf
  EA0:  		Call     GetActorPos 	( *Array[0] *Var[D] *Var[E] *Var[F] )
  EBC:  		Call     SetGoalToPos 	( *Array[0] *Var[A] *Var[B] *Var[F] )
  ED8:  		Call     MoveToGoal  	( *Array[0] 00000014 0000000A .Easing:QuadraticIn )
  EF4:  		Set  *Var[D]  *Var[A] 
  F04:  		Set  *Var[E]  *Var[C] 
  F14:  		Set  *Var[F]  00000000 
  F24:  		Mul  *Var[F]  00000024 
  F34:  		Add  *Var[F]  FFFFFFA6 
  F44:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
  F60:  		Call     SetActorPos 	( *Array[0] *Var[D] *Var[B] *Var[E] )
  F7C:  	EndThread
  F84:  	Add  *Var[9]  00000001 
  F94:  	Wait     00000008 
  FA0:  EndIf
  FA8:  If  *Var[0]  &  00000100 
  FB8:  	Call     UseIdleAnimation 	( *Array[8] .False )
  FCC:  	Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
  FE4:  	If  *Var[1]  ==  00000000 
  FF4:  		Call     SetAnimation 	( *Array[8] 00000001 004C0009 )
 100C:  	Else
 1014:  		Call     SetAnimation 	( *Array[8] 00000001 004C000B )
 102C:  	EndIf
 1034:  	Thread
 103C:  		Mod  *Var[9]  00000002 
 104C:  		If  *Var[9]  ==  00000000 
 105C:  			Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
 1070:  		Else
 1078:  			Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
 108C:  		EndIf
 1094:  		Call     GetActorPos 	( *Array[8] *Var[D] *Var[E] *Var[F] )
 10B0:  		Call     SetGoalToPos 	( *Array[8] *Var[A] *Var[B] *Var[F] )
 10CC:  		Call     MoveToGoal  	( *Array[8] 00000014 0000000A .Easing:QuadraticIn )
 10E8:  		Set  *Var[D]  *Var[A] 
 10F8:  		Set  *Var[E]  *Var[C] 
 1108:  		Set  *Var[F]  00000008 
 1118:  		Mul  *Var[F]  00000024 
 1128:  		Add  *Var[F]  FFFFFFA6 
 1138:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
 1154:  		Call     SetActorPos 	( *Array[8] *Var[D] *Var[B] *Var[E] )
 1170:  	EndThread
 1178:  	Add  *Var[9]  00000001 
 1188:  	Wait     00000008 
 1194:  EndIf
 119C:  If  *Var[0]  &  00000004 
 11AC:  	Call     UseIdleAnimation 	( *Array[2] .False )
 11C0:  	Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 11D8:  	If  *Var[1]  ==  00000000 
 11E8:  		Call     SetAnimation 	( *Array[2] 00000001 004C0009 )
 1200:  	Else
 1208:  		Call     SetAnimation 	( *Array[2] 00000001 004C000B )
 1220:  	EndIf
 1228:  	Thread
 1230:  		Mod  *Var[9]  00000002 
 1240:  		If  *Var[9]  ==  00000000 
 1250:  			Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
 1264:  		Else
 126C:  			Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
 1280:  		EndIf
 1288:  		Call     GetActorPos 	( *Array[2] *Var[D] *Var[E] *Var[F] )
 12A4:  		Call     SetGoalToPos 	( *Array[2] *Var[A] *Var[B] *Var[F] )
 12C0:  		Call     MoveToGoal  	( *Array[2] 00000014 0000000A .Easing:QuadraticIn )
 12DC:  		Set  *Var[D]  *Var[A] 
 12EC:  		Set  *Var[E]  *Var[C] 
 12FC:  		Set  *Var[F]  00000002 
 130C:  		Mul  *Var[F]  00000024 
 131C:  		Add  *Var[F]  FFFFFFA6 
 132C:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
 1348:  		Call     SetActorPos 	( *Array[2] *Var[D] *Var[B] *Var[E] )
 1364:  	EndThread
 136C:  	Add  *Var[9]  00000001 
 137C:  	Wait     00000008 
 1388:  EndIf
 1390:  If  *Var[0]  &  00000080 
 13A0:  	Call     UseIdleAnimation 	( *Array[7] .False )
 13B4:  	Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 13CC:  	If  *Var[1]  ==  00000000 
 13DC:  		Call     SetAnimation 	( *Array[7] 00000001 004C0009 )
 13F4:  	Else
 13FC:  		Call     SetAnimation 	( *Array[7] 00000001 004C000B )
 1414:  	EndIf
 141C:  	Thread
 1424:  		Mod  *Var[9]  00000002 
 1434:  		If  *Var[9]  ==  00000000 
 1444:  			Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
 1458:  		Else
 1460:  			Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
 1474:  		EndIf
 147C:  		Call     GetActorPos 	( *Array[7] *Var[D] *Var[E] *Var[F] )
 1498:  		Call     SetGoalToPos 	( *Array[7] *Var[A] *Var[B] *Var[F] )
 14B4:  		Call     MoveToGoal  	( *Array[7] 00000014 0000000A .Easing:QuadraticIn )
 14D0:  		Set  *Var[D]  *Var[A] 
 14E0:  		Set  *Var[E]  *Var[C] 
 14F0:  		Set  *Var[F]  00000007 
 1500:  		Mul  *Var[F]  00000024 
 1510:  		Add  *Var[F]  FFFFFFA6 
 1520:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
 153C:  		Call     SetActorPos 	( *Array[7] *Var[D] *Var[B] *Var[E] )
 1558:  	EndThread
 1560:  	Add  *Var[9]  00000001 
 1570:  	Wait     00000008 
 157C:  EndIf
 1584:  If  *Var[0]  &  00000040 
 1594:  	Call     UseIdleAnimation 	( *Array[6] .False )
 15A8:  	Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 15C0:  	If  *Var[1]  ==  00000000 
 15D0:  		Call     SetAnimation 	( *Array[6] 00000001 004C0009 )
 15E8:  	Else
 15F0:  		Call     SetAnimation 	( *Array[6] 00000001 004C000B )
 1608:  	EndIf
 1610:  	Thread
 1618:  		Mod  *Var[9]  00000002 
 1628:  		If  *Var[9]  ==  00000000 
 1638:  			Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
 164C:  		Else
 1654:  			Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
 1668:  		EndIf
 1670:  		Call     GetActorPos 	( *Array[6] *Var[D] *Var[E] *Var[F] )
 168C:  		Call     SetGoalToPos 	( *Array[6] *Var[A] *Var[B] *Var[F] )
 16A8:  		Call     MoveToGoal  	( *Array[6] 00000014 0000000A .Easing:QuadraticIn )
 16C4:  		Set  *Var[D]  *Var[A] 
 16D4:  		Set  *Var[E]  *Var[C] 
 16E4:  		Set  *Var[F]  00000006 
 16F4:  		Mul  *Var[F]  00000024 
 1704:  		Add  *Var[F]  FFFFFFA6 
 1714:  		Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
 1730:  		Call     SetActorPos 	( *Array[6] *Var[D] *Var[B] *Var[E] )
 174C:  	EndThread
 1754:  	Add  *Var[9]  00000001 
 1764:  	Wait     00000008 
 1770:  EndIf
 1778:  Wait     00000014 
 1784:  Call     UseCamPreset 	( 00000002 )
 1794:  Call     MoveCamOver 	( 0000001E )
 17A4:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
 17C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 0000000A .Easing:QuadraticIn )
 17DC:  Wait     0000004B 
 17E8:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 1800:  If  *Var[0]  &  00000001 
 1810:  	Thread
 1818:  		Call     GetActorPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
 1834:  		Call     GetActorVar 	( *Array[0] 00000000 *Var[4] )
 184C:  		If  *Var[4]  ==  00000000 
 185C:  			Set  *Var[2]  0000000A 
 186C:  		Else
 1874:  			Set  *Var[2]  0000000E 
 1884:  		EndIf
 188C:  		Call     8026F740 ( *Array[0] 00000001 00000000 00000000 )
 18A8:  		Call     SetGoalToPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
 18C4:  		Call     MoveToGoal  	( *Array[0] 00000014 00000000 .Easing:CubicIn )
 18E0:  		Call     8026F838 ( *Array[0] 00000001 )
 18F4:  	EndThread
 18FC:  EndIf
 1904:  If  *Var[0]  &  00000002 
 1914:  	Thread
 191C:  		Call     GetActorPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
 1938:  		Call     GetActorVar 	( *Array[1] 00000000 *Var[4] )
 1950:  		If  *Var[4]  ==  00000000 
 1960:  			Set  *Var[2]  0000000A 
 1970:  		Else
 1978:  			Set  *Var[2]  0000000E 
 1988:  		EndIf
 1990:  		Call     8026F740 ( *Array[1] 00000001 00000000 00000000 )
 19AC:  		Call     SetGoalToPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
 19C8:  		Call     MoveToGoal  	( *Array[1] 00000014 00000000 .Easing:CubicIn )
 19E4:  		Call     8026F838 ( *Array[1] 00000001 )
 19F8:  	EndThread
 1A00:  EndIf
 1A08:  If  *Var[0]  &  00000004 
 1A18:  	Thread
 1A20:  		Call     GetActorPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
 1A3C:  		Call     GetActorVar 	( *Array[2] 00000000 *Var[4] )
 1A54:  		If  *Var[4]  ==  00000000 
 1A64:  			Set  *Var[2]  0000000A 
 1A74:  		Else
 1A7C:  			Set  *Var[2]  0000000E 
 1A8C:  		EndIf
 1A94:  		Call     8026F740 ( *Array[2] 00000001 00000000 00000000 )
 1AB0:  		Call     SetGoalToPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
 1ACC:  		Call     MoveToGoal  	( *Array[2] 00000014 00000000 .Easing:CubicIn )
 1AE8:  		Call     8026F838 ( *Array[2] 00000001 )
 1AFC:  	EndThread
 1B04:  EndIf
 1B0C:  If  *Var[0]  &  00000008 
 1B1C:  	Thread
 1B24:  		Call     GetActorPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
 1B40:  		Call     GetActorVar 	( *Array[3] 00000000 *Var[4] )
 1B58:  		If  *Var[4]  ==  00000000 
 1B68:  			Set  *Var[2]  0000000A 
 1B78:  		Else
 1B80:  			Set  *Var[2]  0000000E 
 1B90:  		EndIf
 1B98:  		Call     8026F740 ( *Array[3] 00000001 00000000 00000000 )
 1BB4:  		Call     SetGoalToPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
 1BD0:  		Call     MoveToGoal  	( *Array[3] 00000014 00000000 .Easing:CubicIn )
 1BEC:  		Call     8026F838 ( *Array[3] 00000001 )
 1C00:  	EndThread
 1C08:  EndIf
 1C10:  If  *Var[0]  &  00000010 
 1C20:  	Thread
 1C28:  		Call     GetActorPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
 1C44:  		Call     GetActorVar 	( *Array[4] 00000000 *Var[4] )
 1C5C:  		If  *Var[4]  ==  00000000 
 1C6C:  			Set  *Var[2]  0000000A 
 1C7C:  		Else
 1C84:  			Set  *Var[2]  0000000E 
 1C94:  		EndIf
 1C9C:  		Call     8026F740 ( *Array[4] 00000001 00000000 00000000 )
 1CB8:  		Call     SetGoalToPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
 1CD4:  		Call     MoveToGoal  	( *Array[4] 00000014 00000000 .Easing:CubicIn )
 1CF0:  		Call     8026F838 ( *Array[4] 00000001 )
 1D04:  	EndThread
 1D0C:  EndIf
 1D14:  If  *Var[0]  &  00000020 
 1D24:  	Thread
 1D2C:  		Call     GetActorPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
 1D48:  		Call     GetActorVar 	( *Array[5] 00000000 *Var[4] )
 1D60:  		If  *Var[4]  ==  00000000 
 1D70:  			Set  *Var[2]  0000000A 
 1D80:  		Else
 1D88:  			Set  *Var[2]  0000000E 
 1D98:  		EndIf
 1DA0:  		Call     8026F740 ( *Array[5] 00000001 00000000 00000000 )
 1DBC:  		Call     SetGoalToPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
 1DD8:  		Call     MoveToGoal  	( *Array[5] 00000014 00000000 .Easing:CubicIn )
 1DF4:  		Call     8026F838 ( *Array[5] 00000001 )
 1E08:  	EndThread
 1E10:  EndIf
 1E18:  If  *Var[0]  &  00000040 
 1E28:  	Thread
 1E30:  		Call     GetActorPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
 1E4C:  		Call     GetActorVar 	( *Array[6] 00000000 *Var[4] )
 1E64:  		If  *Var[4]  ==  00000000 
 1E74:  			Set  *Var[2]  0000000A 
 1E84:  		Else
 1E8C:  			Set  *Var[2]  0000000E 
 1E9C:  		EndIf
 1EA4:  		Call     8026F740 ( *Array[6] 00000001 00000000 00000000 )
 1EC0:  		Call     SetGoalToPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
 1EDC:  		Call     MoveToGoal  	( *Array[6] 00000014 00000000 .Easing:CubicIn )
 1EF8:  		Call     8026F838 ( *Array[6] 00000001 )
 1F0C:  	EndThread
 1F14:  EndIf
 1F1C:  If  *Var[0]  &  00000080 
 1F2C:  	Thread
 1F34:  		Call     GetActorPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
 1F50:  		Call     GetActorVar 	( *Array[7] 00000000 *Var[4] )
 1F68:  		If  *Var[4]  ==  00000000 
 1F78:  			Set  *Var[2]  0000000A 
 1F88:  		Else
 1F90:  			Set  *Var[2]  0000000E 
 1FA0:  		EndIf
 1FA8:  		Call     8026F740 ( *Array[7] 00000001 00000000 00000000 )
 1FC4:  		Call     SetGoalToPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
 1FE0:  		Call     MoveToGoal  	( *Array[7] 00000014 00000000 .Easing:CubicIn )
 1FFC:  		Call     8026F838 ( *Array[7] 00000001 )
 2010:  	EndThread
 2018:  EndIf
 2020:  If  *Var[0]  &  00000100 
 2030:  	Thread
 2038:  		Call     GetActorPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
 2054:  		Call     GetActorVar 	( *Array[8] 00000000 *Var[4] )
 206C:  		If  *Var[4]  ==  00000000 
 207C:  			Set  *Var[2]  0000000A 
 208C:  		Else
 2094:  			Set  *Var[2]  0000000E 
 20A4:  		EndIf
 20AC:  		Call     8026F740 ( *Array[8] 00000001 00000000 00000000 )
 20C8:  		Call     SetGoalToPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
 20E4:  		Call     MoveToGoal  	( *Array[8] 00000014 00000000 .Easing:CubicIn )
 2100:  		Call     8026F838 ( *Array[8] 00000001 )
 2114:  	EndThread
 211C:  EndIf
 2124:  If  *Var[0]  &  00000200 
 2134:  	Thread
 213C:  		Call     GetActorPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
 2158:  		Call     GetActorVar 	( *Array[9] 00000000 *Var[4] )
 2170:  		If  *Var[4]  ==  00000000 
 2180:  			Set  *Var[2]  0000000A 
 2190:  		Else
 2198:  			Set  *Var[2]  0000000E 
 21A8:  		EndIf
 21B0:  		Call     8026F740 ( *Array[9] 00000001 00000000 00000000 )
 21CC:  		Call     SetGoalToPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
 21E8:  		Call     MoveToGoal  	( *Array[9] 00000014 00000000 .Easing:CubicIn )
 2204:  		Call     8026F838 ( *Array[9] 00000001 )
 2218:  	EndThread
 2220:  EndIf
 2228:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
 2244:  Thread
 224C:  	Wait     00000003 
 2258:  	Call     PlaySoundAtActor 	( .Actor:Self 000020E9 )
 226C:  EndThread
 2274:  Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
 2290:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
 22A8:  Mul  *Var[4]  0000005F 
 22B8:  Div  *Var[4]  000000C8 
 22C8:  Call     SetGoalToPos 	( .Actor:Self *Var[1] *Var[4] *Var[3] )
 22E4:  Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CubicIn )
 2300:  Call     8026F838 ( FFFFFF81 00000001 )
 2314:  Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
 2328:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2344:  Call     PlayEffect  	( {FX:ShockWave:Clouds} *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2388:  Thread
 2390:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[1] *Var[4] *Var[3] 0000003C 00000008 00000000 0000001E 00000000 00000000 00000000 00000000 00000000 )
 23D4:  	Wait     00000002 
 23E0:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[1] *Var[4] *Var[3] 0000003C 00000008 00000021 0000001E 00000000 00000000 00000000 00000000 00000000 )
 2424:  	Wait     00000002 
 2430:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[1] *Var[4] *Var[3] 0000003C 00000008 00000042 0000001E 00000000 00000000 00000000 00000000 00000000 )
 2474:  EndThread
 247C:  Thread
 2484:  	Call     ShakeCam    	( 00000001 00000000 00000014 *Fixed[1.0] )
 24A0:  EndThread
 24A8:  Thread
 24B0:  	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
 24C8:  	Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
 24E0:  	Set  *Var[F]  00000000 
 24F0:  	Call     PlaySoundAtActor 	( .Actor:Self 000020B7 )
 2504:  	Loop     00000014 
 2510:  		Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 2538:  		Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 2560:  		MulF  *Var[2]  *Var[0] 
 2570:  		MulF  *Var[3]  *Var[1] 
 2580:  		Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
 2598:  		Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
 25B0:  		Add  *Var[F]  00000001 
 25C0:  		Wait     00000001 
 25CC:  	EndLoop
 25D4:  	Call     PlaySoundAtActor 	( .Actor:Self 000020B7 )
 25E8:  	Loop     00000014 
 25F4:  		Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 261C:  		Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 2644:  		MulF  *Var[2]  *Var[0] 
 2654:  		MulF  *Var[3]  *Var[1] 
 2664:  		Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
 267C:  		Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
 2694:  		Add  *Var[F]  00000001 
 26A4:  		Wait     00000001 
 26B0:  	EndLoop
 26B8:  	Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
 26D0:  	Call     SetActorVar 	( .Actor:Self 00000007 *Var[1] )
 26E8:  EndThread
 26F0:  Thread
 26F8:  	Loop     00000028 
 2704:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2720:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[3] )
 2738:  		Mul  *Var[3]  0000005F 
 2748:  		Div  *Var[3]  000000C8 
 2758:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
 2774:  		Wait     00000001 
 2780:  	EndLoop
 2788:  EndThread
 2790:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 27A8:  If  *Var[0]  &  00000001 
 27B8:  	Thread
 27C0:  		Call     GetActorVar 	( *Array[0] 00000003 *Var[0] )
 27D8:  		Call     GetActorVar 	( *Array[0] 00000004 *Var[1] )
 27F0:  		Set  *Var[F]  00000000 
 2800:  		Loop     00000014 
 280C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 2834:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 285C:  			MulF  *Var[2]  *Var[0] 
 286C:  			MulF  *Var[3]  *Var[1] 
 287C:  			Call     SetActorVar 	( *Array[0] 00000003 *Var[2] )
 2894:  			Call     SetActorVar 	( *Array[0] 00000004 *Var[3] )
 28AC:  			Add  *Var[F]  00000001 
 28BC:  			Wait     00000001 
 28C8:  		EndLoop
 28D0:  		Loop     00000014 
 28DC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 2904:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 292C:  			MulF  *Var[2]  *Var[0] 
 293C:  			MulF  *Var[3]  *Var[1] 
 294C:  			Call     SetActorVar 	( *Array[0] 00000003 *Var[2] )
 2964:  			Call     SetActorVar 	( *Array[0] 00000004 *Var[3] )
 297C:  			Add  *Var[F]  00000001 
 298C:  			Wait     00000001 
 2998:  		EndLoop
 29A0:  		Call     SetActorVar 	( *Array[0] 00000003 *Var[0] )
 29B8:  		Call     SetActorVar 	( *Array[0] 00000004 *Var[1] )
 29D0:  	EndThread
 29D8:  	Thread
 29E0:  		Loop     00000028 
 29EC:  			Call     GetActorPos 	( *Array[0] *Var[0] *Var[1] *Var[2] )
 2A08:  			Call     GetActorVar 	( *Array[0] 00000004 *Var[3] )
 2A20:  			Call     GetActorVar 	( *Array[0] 00000000 *Var[4] )
 2A38:  			If  *Var[4]  ==  00000000 
 2A48:  				Mul  *Var[3]  00000014 
 2A58:  			Else
 2A60:  				Mul  *Var[3]  0000001C 
 2A70:  			EndIf
 2A78:  			Div  *Var[3]  000000C8 
 2A88:  			Call     SetActorPos 	( *Array[0] *Var[0] *Var[3] *Var[2] )
 2AA4:  			Wait     00000001 
 2AB0:  		EndLoop
 2AB8:  	EndThread
 2AC0:  EndIf
 2AC8:  If  *Var[0]  &  00000002 
 2AD8:  	Thread
 2AE0:  		Call     GetActorVar 	( *Array[1] 00000003 *Var[0] )
 2AF8:  		Call     GetActorVar 	( *Array[1] 00000004 *Var[1] )
 2B10:  		Set  *Var[F]  00000000 
 2B20:  		Loop     00000014 
 2B2C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 2B54:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 2B7C:  			MulF  *Var[2]  *Var[0] 
 2B8C:  			MulF  *Var[3]  *Var[1] 
 2B9C:  			Call     SetActorVar 	( *Array[1] 00000003 *Var[2] )
 2BB4:  			Call     SetActorVar 	( *Array[1] 00000004 *Var[3] )
 2BCC:  			Add  *Var[F]  00000001 
 2BDC:  			Wait     00000001 
 2BE8:  		EndLoop
 2BF0:  		Loop     00000014 
 2BFC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 2C24:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 2C4C:  			MulF  *Var[2]  *Var[0] 
 2C5C:  			MulF  *Var[3]  *Var[1] 
 2C6C:  			Call     SetActorVar 	( *Array[1] 00000003 *Var[2] )
 2C84:  			Call     SetActorVar 	( *Array[1] 00000004 *Var[3] )
 2C9C:  			Add  *Var[F]  00000001 
 2CAC:  			Wait     00000001 
 2CB8:  		EndLoop
 2CC0:  		Call     SetActorVar 	( *Array[1] 00000003 *Var[0] )
 2CD8:  		Call     SetActorVar 	( *Array[1] 00000004 *Var[1] )
 2CF0:  	EndThread
 2CF8:  	Thread
 2D00:  		Loop     00000028 
 2D0C:  			Call     GetActorPos 	( *Array[1] *Var[0] *Var[1] *Var[2] )
 2D28:  			Call     GetActorVar 	( *Array[1] 00000004 *Var[3] )
 2D40:  			Call     GetActorVar 	( *Array[1] 00000000 *Var[4] )
 2D58:  			If  *Var[4]  ==  00000000 
 2D68:  				Mul  *Var[3]  00000014 
 2D78:  			Else
 2D80:  				Mul  *Var[3]  0000001C 
 2D90:  			EndIf
 2D98:  			Div  *Var[3]  000000C8 
 2DA8:  			Call     SetActorPos 	( *Array[1] *Var[0] *Var[3] *Var[2] )
 2DC4:  			Wait     00000001 
 2DD0:  		EndLoop
 2DD8:  	EndThread
 2DE0:  EndIf
 2DE8:  If  *Var[0]  &  00000004 
 2DF8:  	Thread
 2E00:  		Call     GetActorVar 	( *Array[2] 00000003 *Var[0] )
 2E18:  		Call     GetActorVar 	( *Array[2] 00000004 *Var[1] )
 2E30:  		Set  *Var[F]  00000000 
 2E40:  		Loop     00000014 
 2E4C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 2E74:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 2E9C:  			MulF  *Var[2]  *Var[0] 
 2EAC:  			MulF  *Var[3]  *Var[1] 
 2EBC:  			Call     SetActorVar 	( *Array[2] 00000003 *Var[2] )
 2ED4:  			Call     SetActorVar 	( *Array[2] 00000004 *Var[3] )
 2EEC:  			Add  *Var[F]  00000001 
 2EFC:  			Wait     00000001 
 2F08:  		EndLoop
 2F10:  		Loop     00000014 
 2F1C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 2F44:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 2F6C:  			MulF  *Var[2]  *Var[0] 
 2F7C:  			MulF  *Var[3]  *Var[1] 
 2F8C:  			Call     SetActorVar 	( *Array[2] 00000003 *Var[2] )
 2FA4:  			Call     SetActorVar 	( *Array[2] 00000004 *Var[3] )
 2FBC:  			Add  *Var[F]  00000001 
 2FCC:  			Wait     00000001 
 2FD8:  		EndLoop
 2FE0:  		Call     SetActorVar 	( *Array[2] 00000003 *Var[0] )
 2FF8:  		Call     SetActorVar 	( *Array[2] 00000004 *Var[1] )
 3010:  	EndThread
 3018:  	Thread
 3020:  		Loop     00000028 
 302C:  			Call     GetActorPos 	( *Array[2] *Var[0] *Var[1] *Var[2] )
 3048:  			Call     GetActorVar 	( *Array[2] 00000004 *Var[3] )
 3060:  			Call     GetActorVar 	( *Array[2] 00000000 *Var[4] )
 3078:  			If  *Var[4]  ==  00000000 
 3088:  				Mul  *Var[3]  00000014 
 3098:  			Else
 30A0:  				Mul  *Var[3]  0000001C 
 30B0:  			EndIf
 30B8:  			Div  *Var[3]  000000C8 
 30C8:  			Call     SetActorPos 	( *Array[2] *Var[0] *Var[3] *Var[2] )
 30E4:  			Wait     00000001 
 30F0:  		EndLoop
 30F8:  	EndThread
 3100:  EndIf
 3108:  If  *Var[0]  &  00000008 
 3118:  	Thread
 3120:  		Call     GetActorVar 	( *Array[3] 00000003 *Var[0] )
 3138:  		Call     GetActorVar 	( *Array[3] 00000004 *Var[1] )
 3150:  		Set  *Var[F]  00000000 
 3160:  		Loop     00000014 
 316C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 3194:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 31BC:  			MulF  *Var[2]  *Var[0] 
 31CC:  			MulF  *Var[3]  *Var[1] 
 31DC:  			Call     SetActorVar 	( *Array[3] 00000003 *Var[2] )
 31F4:  			Call     SetActorVar 	( *Array[3] 00000004 *Var[3] )
 320C:  			Add  *Var[F]  00000001 
 321C:  			Wait     00000001 
 3228:  		EndLoop
 3230:  		Loop     00000014 
 323C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 3264:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 328C:  			MulF  *Var[2]  *Var[0] 
 329C:  			MulF  *Var[3]  *Var[1] 
 32AC:  			Call     SetActorVar 	( *Array[3] 00000003 *Var[2] )
 32C4:  			Call     SetActorVar 	( *Array[3] 00000004 *Var[3] )
 32DC:  			Add  *Var[F]  00000001 
 32EC:  			Wait     00000001 
 32F8:  		EndLoop
 3300:  		Call     SetActorVar 	( *Array[3] 00000003 *Var[0] )
 3318:  		Call     SetActorVar 	( *Array[3] 00000004 *Var[1] )
 3330:  	EndThread
 3338:  	Thread
 3340:  		Loop     00000028 
 334C:  			Call     GetActorPos 	( *Array[3] *Var[0] *Var[1] *Var[2] )
 3368:  			Call     GetActorVar 	( *Array[3] 00000004 *Var[3] )
 3380:  			Call     GetActorVar 	( *Array[3] 00000000 *Var[4] )
 3398:  			If  *Var[4]  ==  00000000 
 33A8:  				Mul  *Var[3]  00000014 
 33B8:  			Else
 33C0:  				Mul  *Var[3]  0000001C 
 33D0:  			EndIf
 33D8:  			Div  *Var[3]  000000C8 
 33E8:  			Call     SetActorPos 	( *Array[3] *Var[0] *Var[3] *Var[2] )
 3404:  			Wait     00000001 
 3410:  		EndLoop
 3418:  	EndThread
 3420:  EndIf
 3428:  If  *Var[0]  &  00000010 
 3438:  	Thread
 3440:  		Call     GetActorVar 	( *Array[4] 00000003 *Var[0] )
 3458:  		Call     GetActorVar 	( *Array[4] 00000004 *Var[1] )
 3470:  		Set  *Var[F]  00000000 
 3480:  		Loop     00000014 
 348C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 34B4:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 34DC:  			MulF  *Var[2]  *Var[0] 
 34EC:  			MulF  *Var[3]  *Var[1] 
 34FC:  			Call     SetActorVar 	( *Array[4] 00000003 *Var[2] )
 3514:  			Call     SetActorVar 	( *Array[4] 00000004 *Var[3] )
 352C:  			Add  *Var[F]  00000001 
 353C:  			Wait     00000001 
 3548:  		EndLoop
 3550:  		Loop     00000014 
 355C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 3584:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 35AC:  			MulF  *Var[2]  *Var[0] 
 35BC:  			MulF  *Var[3]  *Var[1] 
 35CC:  			Call     SetActorVar 	( *Array[4] 00000003 *Var[2] )
 35E4:  			Call     SetActorVar 	( *Array[4] 00000004 *Var[3] )
 35FC:  			Add  *Var[F]  00000001 
 360C:  			Wait     00000001 
 3618:  		EndLoop
 3620:  		Call     SetActorVar 	( *Array[4] 00000003 *Var[0] )
 3638:  		Call     SetActorVar 	( *Array[4] 00000004 *Var[1] )
 3650:  	EndThread
 3658:  	Thread
 3660:  		Loop     00000028 
 366C:  			Call     GetActorPos 	( *Array[4] *Var[0] *Var[1] *Var[2] )
 3688:  			Call     GetActorVar 	( *Array[4] 00000004 *Var[3] )
 36A0:  			Call     GetActorVar 	( *Array[4] 00000000 *Var[4] )
 36B8:  			If  *Var[4]  ==  00000000 
 36C8:  				Mul  *Var[3]  00000014 
 36D8:  			Else
 36E0:  				Mul  *Var[3]  0000001C 
 36F0:  			EndIf
 36F8:  			Div  *Var[3]  000000C8 
 3708:  			Call     SetActorPos 	( *Array[4] *Var[0] *Var[3] *Var[2] )
 3724:  			Wait     00000001 
 3730:  		EndLoop
 3738:  	EndThread
 3740:  EndIf
 3748:  If  *Var[0]  &  00000020 
 3758:  	Thread
 3760:  		Call     GetActorVar 	( *Array[5] 00000003 *Var[0] )
 3778:  		Call     GetActorVar 	( *Array[5] 00000004 *Var[1] )
 3790:  		Set  *Var[F]  00000000 
 37A0:  		Loop     00000014 
 37AC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 37D4:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 37FC:  			MulF  *Var[2]  *Var[0] 
 380C:  			MulF  *Var[3]  *Var[1] 
 381C:  			Call     SetActorVar 	( *Array[5] 00000003 *Var[2] )
 3834:  			Call     SetActorVar 	( *Array[5] 00000004 *Var[3] )
 384C:  			Add  *Var[F]  00000001 
 385C:  			Wait     00000001 
 3868:  		EndLoop
 3870:  		Loop     00000014 
 387C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 38A4:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 38CC:  			MulF  *Var[2]  *Var[0] 
 38DC:  			MulF  *Var[3]  *Var[1] 
 38EC:  			Call     SetActorVar 	( *Array[5] 00000003 *Var[2] )
 3904:  			Call     SetActorVar 	( *Array[5] 00000004 *Var[3] )
 391C:  			Add  *Var[F]  00000001 
 392C:  			Wait     00000001 
 3938:  		EndLoop
 3940:  		Call     SetActorVar 	( *Array[5] 00000003 *Var[0] )
 3958:  		Call     SetActorVar 	( *Array[5] 00000004 *Var[1] )
 3970:  	EndThread
 3978:  	Thread
 3980:  		Loop     00000028 
 398C:  			Call     GetActorPos 	( *Array[5] *Var[0] *Var[1] *Var[2] )
 39A8:  			Call     GetActorVar 	( *Array[5] 00000004 *Var[3] )
 39C0:  			Call     GetActorVar 	( *Array[5] 00000000 *Var[4] )
 39D8:  			If  *Var[4]  ==  00000000 
 39E8:  				Mul  *Var[3]  00000014 
 39F8:  			Else
 3A00:  				Mul  *Var[3]  0000001C 
 3A10:  			EndIf
 3A18:  			Div  *Var[3]  000000C8 
 3A28:  			Call     SetActorPos 	( *Array[5] *Var[0] *Var[3] *Var[2] )
 3A44:  			Wait     00000001 
 3A50:  		EndLoop
 3A58:  	EndThread
 3A60:  EndIf
 3A68:  If  *Var[0]  &  00000040 
 3A78:  	Thread
 3A80:  		Call     GetActorVar 	( *Array[6] 00000003 *Var[0] )
 3A98:  		Call     GetActorVar 	( *Array[6] 00000004 *Var[1] )
 3AB0:  		Set  *Var[F]  00000000 
 3AC0:  		Loop     00000014 
 3ACC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 3AF4:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 3B1C:  			MulF  *Var[2]  *Var[0] 
 3B2C:  			MulF  *Var[3]  *Var[1] 
 3B3C:  			Call     SetActorVar 	( *Array[6] 00000003 *Var[2] )
 3B54:  			Call     SetActorVar 	( *Array[6] 00000004 *Var[3] )
 3B6C:  			Add  *Var[F]  00000001 
 3B7C:  			Wait     00000001 
 3B88:  		EndLoop
 3B90:  		Loop     00000014 
 3B9C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 3BC4:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 3BEC:  			MulF  *Var[2]  *Var[0] 
 3BFC:  			MulF  *Var[3]  *Var[1] 
 3C0C:  			Call     SetActorVar 	( *Array[6] 00000003 *Var[2] )
 3C24:  			Call     SetActorVar 	( *Array[6] 00000004 *Var[3] )
 3C3C:  			Add  *Var[F]  00000001 
 3C4C:  			Wait     00000001 
 3C58:  		EndLoop
 3C60:  		Call     SetActorVar 	( *Array[6] 00000003 *Var[0] )
 3C78:  		Call     SetActorVar 	( *Array[6] 00000004 *Var[1] )
 3C90:  	EndThread
 3C98:  	Thread
 3CA0:  		Loop     00000028 
 3CAC:  			Call     GetActorPos 	( *Array[6] *Var[0] *Var[1] *Var[2] )
 3CC8:  			Call     GetActorVar 	( *Array[6] 00000004 *Var[3] )
 3CE0:  			Call     GetActorVar 	( *Array[6] 00000000 *Var[4] )
 3CF8:  			If  *Var[4]  ==  00000000 
 3D08:  				Mul  *Var[3]  00000014 
 3D18:  			Else
 3D20:  				Mul  *Var[3]  0000001C 
 3D30:  			EndIf
 3D38:  			Div  *Var[3]  000000C8 
 3D48:  			Call     SetActorPos 	( *Array[6] *Var[0] *Var[3] *Var[2] )
 3D64:  			Wait     00000001 
 3D70:  		EndLoop
 3D78:  	EndThread
 3D80:  EndIf
 3D88:  If  *Var[0]  &  00000080 
 3D98:  	Thread
 3DA0:  		Call     GetActorVar 	( *Array[7] 00000003 *Var[0] )
 3DB8:  		Call     GetActorVar 	( *Array[7] 00000004 *Var[1] )
 3DD0:  		Set  *Var[F]  00000000 
 3DE0:  		Loop     00000014 
 3DEC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 3E14:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 3E3C:  			MulF  *Var[2]  *Var[0] 
 3E4C:  			MulF  *Var[3]  *Var[1] 
 3E5C:  			Call     SetActorVar 	( *Array[7] 00000003 *Var[2] )
 3E74:  			Call     SetActorVar 	( *Array[7] 00000004 *Var[3] )
 3E8C:  			Add  *Var[F]  00000001 
 3E9C:  			Wait     00000001 
 3EA8:  		EndLoop
 3EB0:  		Loop     00000014 
 3EBC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 3EE4:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 3F0C:  			MulF  *Var[2]  *Var[0] 
 3F1C:  			MulF  *Var[3]  *Var[1] 
 3F2C:  			Call     SetActorVar 	( *Array[7] 00000003 *Var[2] )
 3F44:  			Call     SetActorVar 	( *Array[7] 00000004 *Var[3] )
 3F5C:  			Add  *Var[F]  00000001 
 3F6C:  			Wait     00000001 
 3F78:  		EndLoop
 3F80:  		Call     SetActorVar 	( *Array[7] 00000003 *Var[0] )
 3F98:  		Call     SetActorVar 	( *Array[7] 00000004 *Var[1] )
 3FB0:  	EndThread
 3FB8:  	Thread
 3FC0:  		Loop     00000028 
 3FCC:  			Call     GetActorPos 	( *Array[7] *Var[0] *Var[1] *Var[2] )
 3FE8:  			Call     GetActorVar 	( *Array[7] 00000004 *Var[3] )
 4000:  			Call     GetActorVar 	( *Array[7] 00000000 *Var[4] )
 4018:  			If  *Var[4]  ==  00000000 
 4028:  				Mul  *Var[3]  00000014 
 4038:  			Else
 4040:  				Mul  *Var[3]  0000001C 
 4050:  			EndIf
 4058:  			Div  *Var[3]  000000C8 
 4068:  			Call     SetActorPos 	( *Array[7] *Var[0] *Var[3] *Var[2] )
 4084:  			Wait     00000001 
 4090:  		EndLoop
 4098:  	EndThread
 40A0:  EndIf
 40A8:  If  *Var[0]  &  00000100 
 40B8:  	Thread
 40C0:  		Call     GetActorVar 	( *Array[8] 00000003 *Var[0] )
 40D8:  		Call     GetActorVar 	( *Array[8] 00000004 *Var[1] )
 40F0:  		Set  *Var[F]  00000000 
 4100:  		Loop     00000014 
 410C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 4134:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 415C:  			MulF  *Var[2]  *Var[0] 
 416C:  			MulF  *Var[3]  *Var[1] 
 417C:  			Call     SetActorVar 	( *Array[8] 00000003 *Var[2] )
 4194:  			Call     SetActorVar 	( *Array[8] 00000004 *Var[3] )
 41AC:  			Add  *Var[F]  00000001 
 41BC:  			Wait     00000001 
 41C8:  		EndLoop
 41D0:  		Loop     00000014 
 41DC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 4204:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 422C:  			MulF  *Var[2]  *Var[0] 
 423C:  			MulF  *Var[3]  *Var[1] 
 424C:  			Call     SetActorVar 	( *Array[8] 00000003 *Var[2] )
 4264:  			Call     SetActorVar 	( *Array[8] 00000004 *Var[3] )
 427C:  			Add  *Var[F]  00000001 
 428C:  			Wait     00000001 
 4298:  		EndLoop
 42A0:  		Call     SetActorVar 	( *Array[8] 00000003 *Var[0] )
 42B8:  		Call     SetActorVar 	( *Array[8] 00000004 *Var[1] )
 42D0:  	EndThread
 42D8:  	Thread
 42E0:  		Loop     00000028 
 42EC:  			Call     GetActorPos 	( *Array[8] *Var[0] *Var[1] *Var[2] )
 4308:  			Call     GetActorVar 	( *Array[8] 00000004 *Var[3] )
 4320:  			Call     GetActorVar 	( *Array[8] 00000000 *Var[4] )
 4338:  			If  *Var[4]  ==  00000000 
 4348:  				Mul  *Var[3]  00000014 
 4358:  			Else
 4360:  				Mul  *Var[3]  0000001C 
 4370:  			EndIf
 4378:  			Div  *Var[3]  000000C8 
 4388:  			Call     SetActorPos 	( *Array[8] *Var[0] *Var[3] *Var[2] )
 43A4:  			Wait     00000001 
 43B0:  		EndLoop
 43B8:  	EndThread
 43C0:  EndIf
 43C8:  If  *Var[0]  &  00000200 
 43D8:  	Thread
 43E0:  		Call     GetActorVar 	( *Array[9] 00000003 *Var[0] )
 43F8:  		Call     GetActorVar 	( *Array[9] 00000004 *Var[1] )
 4410:  		Set  *Var[F]  00000000 
 4420:  		Loop     00000014 
 442C:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
 4454:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
 447C:  			MulF  *Var[2]  *Var[0] 
 448C:  			MulF  *Var[3]  *Var[1] 
 449C:  			Call     SetActorVar 	( *Array[9] 00000003 *Var[2] )
 44B4:  			Call     SetActorVar 	( *Array[9] 00000004 *Var[3] )
 44CC:  			Add  *Var[F]  00000001 
 44DC:  			Wait     00000001 
 44E8:  		EndLoop
 44F0:  		Loop     00000014 
 44FC:  			Call     $Function_80218114_19 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
 4524:  			Call     $Function_80218114_19 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
 454C:  			MulF  *Var[2]  *Var[0] 
 455C:  			MulF  *Var[3]  *Var[1] 
 456C:  			Call     SetActorVar 	( *Array[9] 00000003 *Var[2] )
 4584:  			Call     SetActorVar 	( *Array[9] 00000004 *Var[3] )
 459C:  			Add  *Var[F]  00000001 
 45AC:  			Wait     00000001 
 45B8:  		EndLoop
 45C0:  		Call     SetActorVar 	( *Array[9] 00000003 *Var[0] )
 45D8:  		Call     SetActorVar 	( *Array[9] 00000004 *Var[1] )
 45F0:  	EndThread
 45F8:  	Thread
 4600:  		Loop     00000028 
 460C:  			Call     GetActorPos 	( *Array[9] *Var[0] *Var[1] *Var[2] )
 4628:  			Call     GetActorVar 	( *Array[9] 00000004 *Var[3] )
 4640:  			Call     GetActorVar 	( *Array[9] 00000000 *Var[4] )
 4658:  			If  *Var[4]  ==  00000000 
 4668:  				Mul  *Var[3]  00000014 
 4678:  			Else
 4680:  				Mul  *Var[3]  0000001C 
 4690:  			EndIf
 4698:  			Div  *Var[3]  000000C8 
 46A8:  			Call     SetActorPos 	( *Array[9] *Var[0] *Var[3] *Var[2] )
 46C4:  			Wait     00000001 
 46D0:  		EndLoop
 46D8:  	EndThread
 46E0:  EndIf
 46E8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
 470C:  Set  *Var[A]  *Var[0] 
 471C:  Switch  *Var[0] 
 4728:  	CaseOR  ==  00000006 
 4734:  	CaseOR  ==  00000005 
 4740:  		Wait     00000064 
 474C:  		If  *Var[A]  ==  00000005 
 475C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 4780:  		EndIf
 4788:  		Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
 47A0:  		Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
 47B8:  		Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
 47D0:  		Wait     00000014 
 47DC:  		Set  *Var[A]  00000000 
 47EC:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 4804:  		If  *Var[0]  &  00000010 
 4814:  			Thread
 481C:  				Mod  *Var[A]  00000002 
 482C:  				If  *Var[A]  ==  00000000 
 483C:  					Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
 4850:  				Else
 4858:  					Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
 486C:  				EndIf
 4874:  				Call     SetGoalToHome 	( *Array[4] )
 4884:  				Call     MoveToGoal  	( *Array[4] 00000014 FFFFFFF6 .Easing:SinOut )
 48A0:  			EndThread
 48A8:  			Add  *Var[A]  00000001 
 48B8:  			Wait     00000008 
 48C4:  		EndIf
 48CC:  		If  *Var[0]  &  00000200 
 48DC:  			Thread
 48E4:  				Mod  *Var[A]  00000002 
 48F4:  				If  *Var[A]  ==  00000000 
 4904:  					Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
 4918:  				Else
 4920:  					Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
 4934:  				EndIf
 493C:  				Call     SetGoalToHome 	( *Array[9] )
 494C:  				Call     MoveToGoal  	( *Array[9] 00000014 FFFFFFF6 .Easing:SinOut )
 4968:  			EndThread
 4970:  			Add  *Var[A]  00000001 
 4980:  			Wait     00000008 
 498C:  		EndIf
 4994:  		If  *Var[0]  &  00000008 
 49A4:  			Thread
 49AC:  				Mod  *Var[A]  00000002 
 49BC:  				If  *Var[A]  ==  00000000 
 49CC:  					Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
 49E0:  				Else
 49E8:  					Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
 49FC:  				EndIf
 4A04:  				Call     SetGoalToHome 	( *Array[3] )
 4A14:  				Call     MoveToGoal  	( *Array[3] 00000014 FFFFFFF6 .Easing:SinOut )
 4A30:  			EndThread
 4A38:  			Add  *Var[A]  00000001 
 4A48:  			Wait     00000008 
 4A54:  		EndIf
 4A5C:  		If  *Var[0]  &  00000020 
 4A6C:  			Thread
 4A74:  				Mod  *Var[A]  00000002 
 4A84:  				If  *Var[A]  ==  00000000 
 4A94:  					Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
 4AA8:  				Else
 4AB0:  					Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
 4AC4:  				EndIf
 4ACC:  				Call     SetGoalToHome 	( *Array[5] )
 4ADC:  				Call     MoveToGoal  	( *Array[5] 00000014 FFFFFFF6 .Easing:SinOut )
 4AF8:  			EndThread
 4B00:  			Add  *Var[A]  00000001 
 4B10:  			Wait     00000008 
 4B1C:  		EndIf
 4B24:  		If  *Var[0]  &  00000002 
 4B34:  			Thread
 4B3C:  				Mod  *Var[A]  00000002 
 4B4C:  				If  *Var[A]  ==  00000000 
 4B5C:  					Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
 4B70:  				Else
 4B78:  					Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
 4B8C:  				EndIf
 4B94:  				Call     SetGoalToHome 	( *Array[1] )
 4BA4:  				Call     MoveToGoal  	( *Array[1] 00000014 FFFFFFF6 .Easing:SinOut )
 4BC0:  			EndThread
 4BC8:  			Add  *Var[A]  00000001 
 4BD8:  			Wait     00000008 
 4BE4:  		EndIf
 4BEC:  		If  *Var[0]  &  00000001 
 4BFC:  			Thread
 4C04:  				Mod  *Var[A]  00000002 
 4C14:  				If  *Var[A]  ==  00000000 
 4C24:  					Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
 4C38:  				Else
 4C40:  					Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
 4C54:  				EndIf
 4C5C:  				Call     SetGoalToHome 	( *Array[0] )
 4C6C:  				Call     MoveToGoal  	( *Array[0] 00000014 FFFFFFF6 .Easing:SinOut )
 4C88:  			EndThread
 4C90:  			Add  *Var[A]  00000001 
 4CA0:  			Wait     00000008 
 4CAC:  		EndIf
 4CB4:  		If  *Var[0]  &  00000100 
 4CC4:  			Thread
 4CCC:  				Mod  *Var[A]  00000002 
 4CDC:  				If  *Var[A]  ==  00000000 
 4CEC:  					Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
 4D00:  				Else
 4D08:  					Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
 4D1C:  				EndIf
 4D24:  				Call     SetGoalToHome 	( *Array[8] )
 4D34:  				Call     MoveToGoal  	( *Array[8] 00000014 FFFFFFF6 .Easing:SinOut )
 4D50:  			EndThread
 4D58:  			Add  *Var[A]  00000001 
 4D68:  			Wait     00000008 
 4D74:  		EndIf
 4D7C:  		If  *Var[0]  &  00000004 
 4D8C:  			Thread
 4D94:  				Mod  *Var[A]  00000002 
 4DA4:  				If  *Var[A]  ==  00000000 
 4DB4:  					Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
 4DC8:  				Else
 4DD0:  					Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
 4DE4:  				EndIf
 4DEC:  				Call     SetGoalToHome 	( *Array[2] )
 4DFC:  				Call     MoveToGoal  	( *Array[2] 00000014 FFFFFFF6 .Easing:SinOut )
 4E18:  			EndThread
 4E20:  			Add  *Var[A]  00000001 
 4E30:  			Wait     00000008 
 4E3C:  		EndIf
 4E44:  		If  *Var[0]  &  00000080 
 4E54:  			Thread
 4E5C:  				Mod  *Var[A]  00000002 
 4E6C:  				If  *Var[A]  ==  00000000 
 4E7C:  					Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
 4E90:  				Else
 4E98:  					Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
 4EAC:  				EndIf
 4EB4:  				Call     SetGoalToHome 	( *Array[7] )
 4EC4:  				Call     MoveToGoal  	( *Array[7] 00000014 FFFFFFF6 .Easing:SinOut )
 4EE0:  			EndThread
 4EE8:  			Add  *Var[A]  00000001 
 4EF8:  			Wait     00000008 
 4F04:  		EndIf
 4F0C:  		If  *Var[0]  &  00000040 
 4F1C:  			Thread
 4F24:  				Mod  *Var[A]  00000002 
 4F34:  				If  *Var[A]  ==  00000000 
 4F44:  					Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
 4F58:  				Else
 4F60:  					Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
 4F74:  				EndIf
 4F7C:  				Call     SetGoalToHome 	( *Array[6] )
 4F8C:  				Call     MoveToGoal  	( *Array[6] 00000014 FFFFFFF6 .Easing:SinOut )
 4FA8:  			EndThread
 4FB0:  			Add  *Var[A]  00000001 
 4FC0:  			Wait     00000008 
 4FCC:  		EndIf
 4FD4:  		Call     SetGoalToHome 	( .Actor:Self )
 4FE4:  		Call     MoveToGoal  	( .Actor:Self 00000014 FFFFFFF6 .Easing:SinOut )
 5000:  		Wait     0000000F 
 500C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
 5020:  		Return
 5028:  	EndCaseGroup
 5030:  EndSwitch
 5038:  Set  *Var[A]  00000005 
 5048:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 5060:  If  *Var[0]  &  00000001 
 5070:  	Add  *Var[A]  00000001 
 5080:  EndIf
 5088:  If  *Var[0]  &  00000002 
 5098:  	Add  *Var[A]  00000001 
 50A8:  EndIf
 50B0:  If  *Var[0]  &  00000004 
 50C0:  	Add  *Var[A]  00000001 
 50D0:  EndIf
 50D8:  If  *Var[0]  &  00000008 
 50E8:  	Add  *Var[A]  00000001 
 50F8:  EndIf
 5100:  If  *Var[0]  &  00000010 
 5110:  	Add  *Var[A]  00000001 
 5120:  EndIf
 5128:  If  *Var[0]  &  00000020 
 5138:  	Add  *Var[A]  00000001 
 5148:  EndIf
 5150:  If  *Var[0]  &  00000040 
 5160:  	Add  *Var[A]  00000001 
 5170:  EndIf
 5178:  If  *Var[0]  &  00000080 
 5188:  	Add  *Var[A]  00000001 
 5198:  EndIf
 51A0:  If  *Var[0]  &  00000100 
 51B0:  	Add  *Var[A]  00000001 
 51C0:  EndIf
 51C8:  If  *Var[0]  &  00000200 
 51D8:  	Add  *Var[A]  00000001 
 51E8:  EndIf
 51F0:  Wait     00000002 
 51FC:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
 5210:  Call     SetGoalToTarget 	( .Actor:Self )
 5220:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000800 00000000 00000000 *Var[A] 00000020 )
 5248:  Switch  *Var[0] 
 5254:  	CaseOR  ==  00000000 
 5260:  	CaseOR  ==  00000002 
 526C:  		Wait     00000032 
 5278:  		Set  *Var[A]  00000000 
 5288:  		Call     SetGoalToHome 	( .Actor:Self )
 5298:  		Call     MoveToGoal  	( .Actor:Self 00000014 FFFFFFF6 .Easing:SinOut )
 52B4:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 52CC:  		If  *Var[0]  &  00000010 
 52DC:  			Thread
 52E4:  				Mod  *Var[A]  00000002 
 52F4:  				If  *Var[A]  ==  00000000 
 5304:  					Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
 5318:  				Else
 5320:  					Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
 5334:  				EndIf
 533C:  				Call     SetGoalToHome 	( *Array[4] )
 534C:  				Call     MoveToGoal  	( *Array[4] 00000014 FFFFFFF6 .Easing:SinOut )
 5368:  			EndThread
 5370:  			Add  *Var[A]  00000001 
 5380:  			Wait     00000008 
 538C:  		EndIf
 5394:  		If  *Var[0]  &  00000200 
 53A4:  			Thread
 53AC:  				Mod  *Var[A]  00000002 
 53BC:  				If  *Var[A]  ==  00000000 
 53CC:  					Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
 53E0:  				Else
 53E8:  					Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
 53FC:  				EndIf
 5404:  				Call     SetGoalToHome 	( *Array[9] )
 5414:  				Call     MoveToGoal  	( *Array[9] 00000014 FFFFFFF6 .Easing:SinOut )
 5430:  			EndThread
 5438:  			Add  *Var[A]  00000001 
 5448:  			Wait     00000008 
 5454:  		EndIf
 545C:  		If  *Var[0]  &  00000008 
 546C:  			Thread
 5474:  				Mod  *Var[A]  00000002 
 5484:  				If  *Var[A]  ==  00000000 
 5494:  					Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
 54A8:  				Else
 54B0:  					Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
 54C4:  				EndIf
 54CC:  				Call     SetGoalToHome 	( *Array[3] )
 54DC:  				Call     MoveToGoal  	( *Array[3] 00000014 FFFFFFF6 .Easing:SinOut )
 54F8:  			EndThread
 5500:  			Add  *Var[A]  00000001 
 5510:  			Wait     00000008 
 551C:  		EndIf
 5524:  		If  *Var[0]  &  00000020 
 5534:  			Thread
 553C:  				Mod  *Var[A]  00000002 
 554C:  				If  *Var[A]  ==  00000000 
 555C:  					Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
 5570:  				Else
 5578:  					Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
 558C:  				EndIf
 5594:  				Call     SetGoalToHome 	( *Array[5] )
 55A4:  				Call     MoveToGoal  	( *Array[5] 00000014 FFFFFFF6 .Easing:SinOut )
 55C0:  			EndThread
 55C8:  			Add  *Var[A]  00000001 
 55D8:  			Wait     00000008 
 55E4:  		EndIf
 55EC:  		If  *Var[0]  &  00000002 
 55FC:  			Thread
 5604:  				Mod  *Var[A]  00000002 
 5614:  				If  *Var[A]  ==  00000000 
 5624:  					Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
 5638:  				Else
 5640:  					Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
 5654:  				EndIf
 565C:  				Call     SetGoalToHome 	( *Array[1] )
 566C:  				Call     MoveToGoal  	( *Array[1] 00000014 FFFFFFF6 .Easing:SinOut )
 5688:  			EndThread
 5690:  			Add  *Var[A]  00000001 
 56A0:  			Wait     00000008 
 56AC:  		EndIf
 56B4:  		If  *Var[0]  &  00000001 
 56C4:  			Thread
 56CC:  				Mod  *Var[A]  00000002 
 56DC:  				If  *Var[A]  ==  00000000 
 56EC:  					Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
 5700:  				Else
 5708:  					Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
 571C:  				EndIf
 5724:  				Call     SetGoalToHome 	( *Array[0] )
 5734:  				Call     MoveToGoal  	( *Array[0] 00000014 FFFFFFF6 .Easing:SinOut )
 5750:  			EndThread
 5758:  			Add  *Var[A]  00000001 
 5768:  			Wait     00000008 
 5774:  		EndIf
 577C:  		If  *Var[0]  &  00000100 
 578C:  			Thread
 5794:  				Mod  *Var[A]  00000002 
 57A4:  				If  *Var[A]  ==  00000000 
 57B4:  					Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
 57C8:  				Else
 57D0:  					Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
 57E4:  				EndIf
 57EC:  				Call     SetGoalToHome 	( *Array[8] )
 57FC:  				Call     MoveToGoal  	( *Array[8] 00000014 FFFFFFF6 .Easing:SinOut )
 5818:  			EndThread
 5820:  			Add  *Var[A]  00000001 
 5830:  			Wait     00000008 
 583C:  		EndIf
 5844:  		If  *Var[0]  &  00000004 
 5854:  			Thread
 585C:  				Mod  *Var[A]  00000002 
 586C:  				If  *Var[A]  ==  00000000 
 587C:  					Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
 5890:  				Else
 5898:  					Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
 58AC:  				EndIf
 58B4:  				Call     SetGoalToHome 	( *Array[2] )
 58C4:  				Call     MoveToGoal  	( *Array[2] 00000014 FFFFFFF6 .Easing:SinOut )
 58E0:  			EndThread
 58E8:  			Add  *Var[A]  00000001 
 58F8:  			Wait     00000008 
 5904:  		EndIf
 590C:  		If  *Var[0]  &  00000080 
 591C:  			Thread
 5924:  				Mod  *Var[A]  00000002 
 5934:  				If  *Var[A]  ==  00000000 
 5944:  					Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
 5958:  				Else
 5960:  					Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
 5974:  				EndIf
 597C:  				Call     SetGoalToHome 	( *Array[7] )
 598C:  				Call     MoveToGoal  	( *Array[7] 00000014 FFFFFFF6 .Easing:SinOut )
 59A8:  			EndThread
 59B0:  			Add  *Var[A]  00000001 
 59C0:  			Wait     00000008 
 59CC:  		EndIf
 59D4:  		If  *Var[0]  &  00000040 
 59E4:  			Thread
 59EC:  				Mod  *Var[A]  00000002 
 59FC:  				If  *Var[A]  ==  00000000 
 5A0C:  					Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
 5A20:  				Else
 5A28:  					Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
 5A3C:  				EndIf
 5A44:  				Call     SetGoalToHome 	( *Array[6] )
 5A54:  				Call     MoveToGoal  	( *Array[6] 00000014 FFFFFFF6 .Easing:SinOut )
 5A70:  			EndThread
 5A78:  			Add  *Var[A]  00000001 
 5A88:  			Wait     00000008 
 5A94:  		EndIf
 5A9C:  		Wait     00000014 
 5AA8:  	EndCaseGroup
 5AB0:  EndSwitch
 5AB8:  Call     UseIdleAnimation 	( .Actor:Self .True )
 5ACC:  Return
 5AD4:  End

#new:Script $Script_80228004_19
    0:  If  *Var[3]  ==  00000000 
   10:  	Set  *Flag[00]  00000001 
   20:  EndIf
   28:  Set  *Var[A]  *Var[1] 
   38:  Set  *Var[B]  *Var[2] 
   48:  Div  *Var[B]  00000002 
   58:  Add  *Var[B]  00000001 
   68:  Call     SetOwnerID  	( *Var[1] )
   78:  Call     RandInt     	( 000003E8 *Var[0] )
   8C:  If  *Var[0]  <  000001F4 
   9C:  	Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   B4:  Else
   BC:  	Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
   D4:  EndIf
   DC:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   F8:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  114:  Call     GetDist2D   	( *Var[D] *Var[0] *Var[2] *Var[3] *Var[5] )
  134:  Call     $Function_80218AA0_19 ( *Var[E] *Var[0] *Var[2] *Var[3] *Var[5] )
  154:  Set  *Var[F]  00000000 
  164:  Loop     
  170:  	Call     PlaySoundAtActor 	( .Actor:Self 000003DB )
  184:  	Set  *Var[F]  00000000 
  194:  	Set  *Var[C]  *Var[B] 
  1A4:  	Add  *Var[C]  *Var[B] 
  1B4:  	Set  *Var[9]  *Var[C] 
  1C4:  	Loop     *Var[C] 
  1D0:  		Call     $Function_80218B60_19 ( 00000005 *Fixed[100.0] *Fixed[40.0] *Var[F] *Var[9] *Var[0] )
  1F4:  		MulF  *Var[0]  *Var[D] 
  204:  		DivF  *Var[0]  *Fixed[100.0] 
  214:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
  230:  		Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  24C:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Var[0] *Var[E] )
  268:  		Call     SetActorPos 	( .Actor:Self *Var[1] *Var[5] *Var[3] )
  284:  		Add  *Var[F]  00000001 
  294:  		Wait     00000001 
  2A0:  	EndLoop
  2A8:  	Wait     00000005 
  2B4:  	If  *Flag[00]  ==  00000001 
  2C4:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  2DC:  		ConstOR  *Var[0] 00000004 
  2EC:  		Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
  304:  	EndIf
  30C:  	Set  *Var[F]  00000000 
  31C:  	Set  *Var[C]  *Var[B] 
  32C:  	Loop     *Var[C] 
  338:  		Call     $Function_80218B60_19 ( 00000006 *Fixed[40.0] *Fixed[100.0] *Var[F] *Var[B] *Var[0] )
  35C:  		MulF  *Var[0]  *Var[D] 
  36C:  		DivF  *Var[0]  *Fixed[100.0] 
  37C:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
  398:  		Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  3B4:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Var[0] *Var[E] )
  3D0:  		Call     SetActorPos 	( .Actor:Self *Var[1] *Var[5] *Var[3] )
  3EC:  		Add  *Var[F]  00000001 
  3FC:  		Wait     00000001 
  408:  	EndLoop
  410:  	Wait     0000000A 
  41C:  EndLoop
  424:  Return
  42C:  End

#new:Script $Script_TuffPuffSwarm_19
    0:  UseArray $TuffPuffIDs_19 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   34:  Call     SetGoalToTarget 	( .Actor:Self )
   44:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   5C:  If  *Var[0]  &  00000010 
   6C:  	Thread
   74:  		Call     GetActorPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
   90:  		Add  *Var[2]  0000000F 
   A0:  		Call     SetGoalToPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
   BC:  		Call     MoveToGoal  	( *Array[4] 00000014 00000000 .Easing:Linear )
   D8:  		Wait     00000003 
   E4:  	EndThread
   EC:  EndIf
   F4:  If  *Var[0]  &  00000200 
  104:  	Thread
  10C:  		Call     GetActorPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
  128:  		Add  *Var[2]  0000000F 
  138:  		Call     SetGoalToPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
  154:  		Call     MoveToGoal  	( *Array[9] 00000014 00000000 .Easing:Linear )
  170:  		Wait     00000003 
  17C:  	EndThread
  184:  EndIf
  18C:  If  *Var[0]  &  00000008 
  19C:  	Thread
  1A4:  		Call     GetActorPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
  1C0:  		Add  *Var[2]  0000000F 
  1D0:  		Call     SetGoalToPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
  1EC:  		Call     MoveToGoal  	( *Array[3] 00000014 00000000 .Easing:Linear )
  208:  		Wait     00000003 
  214:  	EndThread
  21C:  EndIf
  224:  If  *Var[0]  &  00000020 
  234:  	Thread
  23C:  		Call     GetActorPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
  258:  		Add  *Var[2]  0000000F 
  268:  		Call     SetGoalToPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
  284:  		Call     MoveToGoal  	( *Array[5] 00000014 00000000 .Easing:Linear )
  2A0:  		Wait     00000003 
  2AC:  	EndThread
  2B4:  EndIf
  2BC:  If  *Var[0]  &  00000002 
  2CC:  	Thread
  2D4:  		Call     GetActorPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
  2F0:  		Add  *Var[2]  0000000F 
  300:  		Call     SetGoalToPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
  31C:  		Call     MoveToGoal  	( *Array[1] 00000014 00000000 .Easing:Linear )
  338:  		Wait     00000003 
  344:  	EndThread
  34C:  EndIf
  354:  If  *Var[0]  &  00000001 
  364:  	Thread
  36C:  		Call     GetActorPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
  388:  		Add  *Var[2]  0000000F 
  398:  		Call     SetGoalToPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
  3B4:  		Call     MoveToGoal  	( *Array[0] 00000014 00000000 .Easing:Linear )
  3D0:  		Wait     00000003 
  3DC:  	EndThread
  3E4:  EndIf
  3EC:  If  *Var[0]  &  00000100 
  3FC:  	Thread
  404:  		Call     GetActorPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
  420:  		Add  *Var[2]  0000000F 
  430:  		Call     SetGoalToPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
  44C:  		Call     MoveToGoal  	( *Array[8] 00000014 00000000 .Easing:Linear )
  468:  		Wait     00000003 
  474:  	EndThread
  47C:  EndIf
  484:  If  *Var[0]  &  00000004 
  494:  	Thread
  49C:  		Call     GetActorPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
  4B8:  		Add  *Var[2]  0000000F 
  4C8:  		Call     SetGoalToPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
  4E4:  		Call     MoveToGoal  	( *Array[2] 00000014 00000000 .Easing:Linear )
  500:  		Wait     00000003 
  50C:  	EndThread
  514:  EndIf
  51C:  If  *Var[0]  &  00000080 
  52C:  	Thread
  534:  		Call     GetActorPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
  550:  		Add  *Var[2]  0000000F 
  560:  		Call     SetGoalToPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
  57C:  		Call     MoveToGoal  	( *Array[7] 00000014 00000000 .Easing:Linear )
  598:  		Wait     00000003 
  5A4:  	EndThread
  5AC:  EndIf
  5B4:  If  *Var[0]  &  00000040 
  5C4:  	Thread
  5CC:  		Call     GetActorPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
  5E8:  		Add  *Var[2]  0000000F 
  5F8:  		Call     SetGoalToPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
  614:  		Call     MoveToGoal  	( *Array[6] 00000014 00000000 .Easing:Linear )
  630:  		Wait     00000003 
  63C:  	EndThread
  644:  EndIf
  64C:  Wait     00000014 
  658:  Set  *Var[A]  00000000 
  668:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  680:  If  *Var[0]  &  00000001 
  690:  	Add  *Var[A]  00000001 
  6A0:  EndIf
  6A8:  If  *Var[0]  &  00000002 
  6B8:  	Add  *Var[A]  00000001 
  6C8:  EndIf
  6D0:  If  *Var[0]  &  00000004 
  6E0:  	Add  *Var[A]  00000001 
  6F0:  EndIf
  6F8:  If  *Var[0]  &  00000008 
  708:  	Add  *Var[A]  00000001 
  718:  EndIf
  720:  If  *Var[0]  &  00000010 
  730:  	Add  *Var[A]  00000001 
  740:  EndIf
  748:  If  *Var[0]  &  00000020 
  758:  	Add  *Var[A]  00000001 
  768:  EndIf
  770:  If  *Var[0]  &  00000040 
  780:  	Add  *Var[A]  00000001 
  790:  EndIf
  798:  If  *Var[0]  &  00000080 
  7A8:  	Add  *Var[A]  00000001 
  7B8:  EndIf
  7C0:  If  *Var[0]  &  00000100 
  7D0:  	Add  *Var[A]  00000001 
  7E0:  EndIf
  7E8:  If  *Var[0]  &  00000200 
  7F8:  	Add  *Var[A]  00000001 
  808:  EndIf
  810:  SetF  *Var[B]  *Fixed[360.0] 
  820:  DivF  *Var[B]  *Var[A] 
  830:  Thread
  838:  	Wait     0000000A 
  844:  	Call     UseCamPreset 	( 00000013 )
  854:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  870:  	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  888:  	Call     SetCamZoom  	( 0000012C )
  898:  	Call     SetCamOffsetZ 	( 00000023 )
  8A8:  	Call     MoveCamOver 	( 0000003C )
  8B8:  EndThread
  8C0:  Set  *Var[A]  00000000 
  8D0:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  8E8:  If  *Var[0]  &  00000010 
  8F8:  	Call     UseIdleAnimation 	( *Array[4] .False )
  90C:  	Call     SetSpriteAlpha ( *Array[4] 00000001 000000FE )
  924:  	Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
  93C:  	If  *Var[1]  ==  00000000 
  94C:  		Call     SetAnimation 	( *Array[4] 00000001 004C0009 )
  964:  	Else
  96C:  		Call     SetAnimation 	( *Array[4] 00000001 004C000B )
  984:  	EndIf
  98C:  	Thread
  994:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
  9B0:  		MulF  *Var[B]  *Var[A] 
  9C0:  		AddF  *Var[B]  *Fixed[100.0] 
  9D0:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
  9EC:  		Call     RandInt     	( 00000014 *Var[4] )
  A00:  		Sub  *Var[4]  0000000A 
  A10:  		Add  *Var[4]  00000013 
  A20:  		Add  *Var[2]  *Var[4] 
  A30:  		Mod  *Var[A]  00000002 
  A40:  		If  *Var[A]  ==  00000000 
  A50:  			Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
  A64:  		Else
  A6C:  			Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
  A80:  		EndIf
  A88:  		Call     SetGoalToPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
  AA4:  		Call     MoveToGoal  	( *Array[4] 0000001E FFFFFFF6 .Easing:SinOut )
  AC0:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
  ADC:  		If  *Var[1]  <  *Var[4] 
  AEC:  			Call     SetActorAngle 	( *Array[4] 000000B4 )
  B00:  		EndIf
  B08:  	EndThread
  B10:  	Add  *Var[A]  00000001 
  B20:  	Wait     00000004 
  B2C:  EndIf
  B34:  If  *Var[0]  &  00000200 
  B44:  	Call     UseIdleAnimation 	( *Array[9] .False )
  B58:  	Call     SetSpriteAlpha ( *Array[9] 00000001 000000FE )
  B70:  	Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
  B88:  	If  *Var[1]  ==  00000000 
  B98:  		Call     SetAnimation 	( *Array[9] 00000001 004C0009 )
  BB0:  	Else
  BB8:  		Call     SetAnimation 	( *Array[9] 00000001 004C000B )
  BD0:  	EndIf
  BD8:  	Thread
  BE0:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
  BFC:  		MulF  *Var[B]  *Var[A] 
  C0C:  		AddF  *Var[B]  *Fixed[100.0] 
  C1C:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
  C38:  		Call     RandInt     	( 00000014 *Var[4] )
  C4C:  		Sub  *Var[4]  0000000A 
  C5C:  		Add  *Var[4]  00000013 
  C6C:  		Add  *Var[2]  *Var[4] 
  C7C:  		Mod  *Var[A]  00000002 
  C8C:  		If  *Var[A]  ==  00000000 
  C9C:  			Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
  CB0:  		Else
  CB8:  			Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
  CCC:  		EndIf
  CD4:  		Call     SetGoalToPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
  CF0:  		Call     MoveToGoal  	( *Array[9] 0000001E FFFFFFF6 .Easing:SinOut )
  D0C:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
  D28:  		If  *Var[1]  <  *Var[4] 
  D38:  			Call     SetActorAngle 	( *Array[9] 000000B4 )
  D4C:  		EndIf
  D54:  	EndThread
  D5C:  	Add  *Var[A]  00000001 
  D6C:  	Wait     00000004 
  D78:  EndIf
  D80:  If  *Var[0]  &  00000008 
  D90:  	Call     UseIdleAnimation 	( *Array[3] .False )
  DA4:  	Call     SetSpriteAlpha ( *Array[3] 00000001 000000FE )
  DBC:  	Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
  DD4:  	If  *Var[1]  ==  00000000 
  DE4:  		Call     SetAnimation 	( *Array[3] 00000001 004C0009 )
  DFC:  	Else
  E04:  		Call     SetAnimation 	( *Array[3] 00000001 004C000B )
  E1C:  	EndIf
  E24:  	Thread
  E2C:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
  E48:  		MulF  *Var[B]  *Var[A] 
  E58:  		AddF  *Var[B]  *Fixed[100.0] 
  E68:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
  E84:  		Call     RandInt     	( 00000014 *Var[4] )
  E98:  		Sub  *Var[4]  0000000A 
  EA8:  		Add  *Var[4]  00000013 
  EB8:  		Add  *Var[2]  *Var[4] 
  EC8:  		Mod  *Var[A]  00000002 
  ED8:  		If  *Var[A]  ==  00000000 
  EE8:  			Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
  EFC:  		Else
  F04:  			Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
  F18:  		EndIf
  F20:  		Call     SetGoalToPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
  F3C:  		Call     MoveToGoal  	( *Array[3] 0000001E FFFFFFF6 .Easing:SinOut )
  F58:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
  F74:  		If  *Var[1]  <  *Var[4] 
  F84:  			Call     SetActorAngle 	( *Array[3] 000000B4 )
  F98:  		EndIf
  FA0:  	EndThread
  FA8:  	Add  *Var[A]  00000001 
  FB8:  	Wait     00000004 
  FC4:  EndIf
  FCC:  If  *Var[0]  &  00000020 
  FDC:  	Call     UseIdleAnimation 	( *Array[5] .False )
  FF0:  	Call     SetSpriteAlpha ( *Array[5] 00000001 000000FE )
 1008:  	Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
 1020:  	If  *Var[1]  ==  00000000 
 1030:  		Call     SetAnimation 	( *Array[5] 00000001 004C0009 )
 1048:  	Else
 1050:  		Call     SetAnimation 	( *Array[5] 00000001 004C000B )
 1068:  	EndIf
 1070:  	Thread
 1078:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
 1094:  		MulF  *Var[B]  *Var[A] 
 10A4:  		AddF  *Var[B]  *Fixed[100.0] 
 10B4:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
 10D0:  		Call     RandInt     	( 00000014 *Var[4] )
 10E4:  		Sub  *Var[4]  0000000A 
 10F4:  		Add  *Var[4]  00000013 
 1104:  		Add  *Var[2]  *Var[4] 
 1114:  		Mod  *Var[A]  00000002 
 1124:  		If  *Var[A]  ==  00000000 
 1134:  			Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
 1148:  		Else
 1150:  			Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
 1164:  		EndIf
 116C:  		Call     SetGoalToPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
 1188:  		Call     MoveToGoal  	( *Array[5] 0000001E FFFFFFF6 .Easing:SinOut )
 11A4:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
 11C0:  		If  *Var[1]  <  *Var[4] 
 11D0:  			Call     SetActorAngle 	( *Array[5] 000000B4 )
 11E4:  		EndIf
 11EC:  	EndThread
 11F4:  	Add  *Var[A]  00000001 
 1204:  	Wait     00000004 
 1210:  EndIf
 1218:  If  *Var[0]  &  00000002 
 1228:  	Call     UseIdleAnimation 	( *Array[1] .False )
 123C:  	Call     SetSpriteAlpha ( *Array[1] 00000001 000000FE )
 1254:  	Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
 126C:  	If  *Var[1]  ==  00000000 
 127C:  		Call     SetAnimation 	( *Array[1] 00000001 004C0009 )
 1294:  	Else
 129C:  		Call     SetAnimation 	( *Array[1] 00000001 004C000B )
 12B4:  	EndIf
 12BC:  	Thread
 12C4:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
 12E0:  		MulF  *Var[B]  *Var[A] 
 12F0:  		AddF  *Var[B]  *Fixed[100.0] 
 1300:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
 131C:  		Call     RandInt     	( 00000014 *Var[4] )
 1330:  		Sub  *Var[4]  0000000A 
 1340:  		Add  *Var[4]  00000013 
 1350:  		Add  *Var[2]  *Var[4] 
 1360:  		Mod  *Var[A]  00000002 
 1370:  		If  *Var[A]  ==  00000000 
 1380:  			Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
 1394:  		Else
 139C:  			Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
 13B0:  		EndIf
 13B8:  		Call     SetGoalToPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
 13D4:  		Call     MoveToGoal  	( *Array[1] 0000001E FFFFFFF6 .Easing:SinOut )
 13F0:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
 140C:  		If  *Var[1]  <  *Var[4] 
 141C:  			Call     SetActorAngle 	( *Array[1] 000000B4 )
 1430:  		EndIf
 1438:  	EndThread
 1440:  	Add  *Var[A]  00000001 
 1450:  	Wait     00000004 
 145C:  EndIf
 1464:  If  *Var[0]  &  00000001 
 1474:  	Call     UseIdleAnimation 	( *Array[0] .False )
 1488:  	Call     SetSpriteAlpha ( *Array[0] 00000001 000000FE )
 14A0:  	Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
 14B8:  	If  *Var[1]  ==  00000000 
 14C8:  		Call     SetAnimation 	( *Array[0] 00000001 004C0009 )
 14E0:  	Else
 14E8:  		Call     SetAnimation 	( *Array[0] 00000001 004C000B )
 1500:  	EndIf
 1508:  	Thread
 1510:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
 152C:  		MulF  *Var[B]  *Var[A] 
 153C:  		AddF  *Var[B]  *Fixed[100.0] 
 154C:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
 1568:  		Call     RandInt     	( 00000014 *Var[4] )
 157C:  		Sub  *Var[4]  0000000A 
 158C:  		Add  *Var[4]  00000013 
 159C:  		Add  *Var[2]  *Var[4] 
 15AC:  		Mod  *Var[A]  00000002 
 15BC:  		If  *Var[A]  ==  00000000 
 15CC:  			Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
 15E0:  		Else
 15E8:  			Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
 15FC:  		EndIf
 1604:  		Call     SetGoalToPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
 1620:  		Call     MoveToGoal  	( *Array[0] 0000001E FFFFFFF6 .Easing:SinOut )
 163C:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
 1658:  		If  *Var[1]  <  *Var[4] 
 1668:  			Call     SetActorAngle 	( *Array[0] 000000B4 )
 167C:  		EndIf
 1684:  	EndThread
 168C:  	Add  *Var[A]  00000001 
 169C:  	Wait     00000004 
 16A8:  EndIf
 16B0:  If  *Var[0]  &  00000100 
 16C0:  	Call     UseIdleAnimation 	( *Array[8] .False )
 16D4:  	Call     SetSpriteAlpha ( *Array[8] 00000001 000000FE )
 16EC:  	Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
 1704:  	If  *Var[1]  ==  00000000 
 1714:  		Call     SetAnimation 	( *Array[8] 00000001 004C0009 )
 172C:  	Else
 1734:  		Call     SetAnimation 	( *Array[8] 00000001 004C000B )
 174C:  	EndIf
 1754:  	Thread
 175C:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
 1778:  		MulF  *Var[B]  *Var[A] 
 1788:  		AddF  *Var[B]  *Fixed[100.0] 
 1798:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
 17B4:  		Call     RandInt     	( 00000014 *Var[4] )
 17C8:  		Sub  *Var[4]  0000000A 
 17D8:  		Add  *Var[4]  00000013 
 17E8:  		Add  *Var[2]  *Var[4] 
 17F8:  		Mod  *Var[A]  00000002 
 1808:  		If  *Var[A]  ==  00000000 
 1818:  			Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
 182C:  		Else
 1834:  			Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
 1848:  		EndIf
 1850:  		Call     SetGoalToPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
 186C:  		Call     MoveToGoal  	( *Array[8] 0000001E FFFFFFF6 .Easing:SinOut )
 1888:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
 18A4:  		If  *Var[1]  <  *Var[4] 
 18B4:  			Call     SetActorAngle 	( *Array[8] 000000B4 )
 18C8:  		EndIf
 18D0:  	EndThread
 18D8:  	Add  *Var[A]  00000001 
 18E8:  	Wait     00000004 
 18F4:  EndIf
 18FC:  If  *Var[0]  &  00000004 
 190C:  	Call     UseIdleAnimation 	( *Array[2] .False )
 1920:  	Call     SetSpriteAlpha ( *Array[2] 00000001 000000FE )
 1938:  	Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 1950:  	If  *Var[1]  ==  00000000 
 1960:  		Call     SetAnimation 	( *Array[2] 00000001 004C0009 )
 1978:  	Else
 1980:  		Call     SetAnimation 	( *Array[2] 00000001 004C000B )
 1998:  	EndIf
 19A0:  	Thread
 19A8:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
 19C4:  		MulF  *Var[B]  *Var[A] 
 19D4:  		AddF  *Var[B]  *Fixed[100.0] 
 19E4:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
 1A00:  		Call     RandInt     	( 00000014 *Var[4] )
 1A14:  		Sub  *Var[4]  0000000A 
 1A24:  		Add  *Var[4]  00000013 
 1A34:  		Add  *Var[2]  *Var[4] 
 1A44:  		Mod  *Var[A]  00000002 
 1A54:  		If  *Var[A]  ==  00000000 
 1A64:  			Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
 1A78:  		Else
 1A80:  			Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
 1A94:  		EndIf
 1A9C:  		Call     SetGoalToPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
 1AB8:  		Call     MoveToGoal  	( *Array[2] 0000001E FFFFFFF6 .Easing:SinOut )
 1AD4:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
 1AF0:  		If  *Var[1]  <  *Var[4] 
 1B00:  			Call     SetActorAngle 	( *Array[2] 000000B4 )
 1B14:  		EndIf
 1B1C:  	EndThread
 1B24:  	Add  *Var[A]  00000001 
 1B34:  	Wait     00000004 
 1B40:  EndIf
 1B48:  If  *Var[0]  &  00000080 
 1B58:  	Call     UseIdleAnimation 	( *Array[7] .False )
 1B6C:  	Call     SetSpriteAlpha ( *Array[7] 00000001 000000FE )
 1B84:  	Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 1B9C:  	If  *Var[1]  ==  00000000 
 1BAC:  		Call     SetAnimation 	( *Array[7] 00000001 004C0009 )
 1BC4:  	Else
 1BCC:  		Call     SetAnimation 	( *Array[7] 00000001 004C000B )
 1BE4:  	EndIf
 1BEC:  	Thread
 1BF4:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
 1C10:  		MulF  *Var[B]  *Var[A] 
 1C20:  		AddF  *Var[B]  *Fixed[100.0] 
 1C30:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
 1C4C:  		Call     RandInt     	( 00000014 *Var[4] )
 1C60:  		Sub  *Var[4]  0000000A 
 1C70:  		Add  *Var[4]  00000013 
 1C80:  		Add  *Var[2]  *Var[4] 
 1C90:  		Mod  *Var[A]  00000002 
 1CA0:  		If  *Var[A]  ==  00000000 
 1CB0:  			Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
 1CC4:  		Else
 1CCC:  			Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
 1CE0:  		EndIf
 1CE8:  		Call     SetGoalToPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
 1D04:  		Call     MoveToGoal  	( *Array[7] 0000001E FFFFFFF6 .Easing:SinOut )
 1D20:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
 1D3C:  		If  *Var[1]  <  *Var[4] 
 1D4C:  			Call     SetActorAngle 	( *Array[7] 000000B4 )
 1D60:  		EndIf
 1D68:  	EndThread
 1D70:  	Add  *Var[A]  00000001 
 1D80:  	Wait     00000004 
 1D8C:  EndIf
 1D94:  If  *Var[0]  &  00000040 
 1DA4:  	Call     UseIdleAnimation 	( *Array[6] .False )
 1DB8:  	Call     SetSpriteAlpha ( *Array[6] 00000001 000000FE )
 1DD0:  	Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 1DE8:  	If  *Var[1]  ==  00000000 
 1DF8:  		Call     SetAnimation 	( *Array[6] 00000001 004C0009 )
 1E10:  	Else
 1E18:  		Call     SetAnimation 	( *Array[6] 00000001 004C000B )
 1E30:  	EndIf
 1E38:  	Thread
 1E40:  		Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
 1E5C:  		MulF  *Var[B]  *Var[A] 
 1E6C:  		AddF  *Var[B]  *Fixed[100.0] 
 1E7C:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
 1E98:  		Call     RandInt     	( 00000014 *Var[4] )
 1EAC:  		Sub  *Var[4]  0000000A 
 1EBC:  		Add  *Var[4]  00000013 
 1ECC:  		Add  *Var[2]  *Var[4] 
 1EDC:  		Mod  *Var[A]  00000002 
 1EEC:  		If  *Var[A]  ==  00000000 
 1EFC:  			Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
 1F10:  		Else
 1F18:  			Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
 1F2C:  		EndIf
 1F34:  		Call     SetGoalToPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
 1F50:  		Call     MoveToGoal  	( *Array[6] 0000001E FFFFFFF6 .Easing:SinOut )
 1F6C:  		Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
 1F88:  		If  *Var[1]  <  *Var[4] 
 1F98:  			Call     SetActorAngle 	( *Array[6] 000000B4 )
 1FAC:  		EndIf
 1FB4:  	EndThread
 1FBC:  	Add  *Var[A]  00000001 
 1FCC:  	Wait     00000004 
 1FD8:  EndIf
 1FE0:  Wait     0000001E 
 1FEC:  Call     UseCamPreset 	( 00000001 )
 1FFC:  Set  *Var[9]  00000000 
 200C:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 2024:  If  *Var[0]  &  00000001 
 2034:  	Add  *Var[9]  00000001 
 2044:  EndIf
 204C:  If  *Var[0]  &  00000002 
 205C:  	Add  *Var[9]  00000001 
 206C:  EndIf
 2074:  If  *Var[0]  &  00000004 
 2084:  	Add  *Var[9]  00000001 
 2094:  EndIf
 209C:  If  *Var[0]  &  00000008 
 20AC:  	Add  *Var[9]  00000001 
 20BC:  EndIf
 20C4:  If  *Var[0]  &  00000010 
 20D4:  	Add  *Var[9]  00000001 
 20E4:  EndIf
 20EC:  If  *Var[0]  &  00000020 
 20FC:  	Add  *Var[9]  00000001 
 210C:  EndIf
 2114:  If  *Var[0]  &  00000040 
 2124:  	Add  *Var[9]  00000001 
 2134:  EndIf
 213C:  If  *Var[0]  &  00000080 
 214C:  	Add  *Var[9]  00000001 
 215C:  EndIf
 2164:  If  *Var[0]  &  00000100 
 2174:  	Add  *Var[9]  00000001 
 2184:  EndIf
 218C:  If  *Var[0]  &  00000200 
 219C:  	Add  *Var[9]  00000001 
 21AC:  EndIf
 21B4:  Set  *Var[A]  0000001E 
 21C4:  Sub  *Var[A]  *Var[9] 
 21D4:  Set  *Var[3]  00000000 
 21E4:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 21FC:  If  *Var[0]  &  00000001 
 220C:  	Set  *Var[1]  *Array[0] 
 221C:  	Set  *Var[2]  *Var[A] 
 222C:  	Exec     $Script_80228004_19 *Array[A] 
 223C:  	Add  *Var[3]  00000001 
 224C:  EndIf
 2254:  If  *Var[0]  &  00000002 
 2264:  	Set  *Var[1]  *Array[1] 
 2274:  	Set  *Var[2]  *Var[A] 
 2284:  	Exec     $Script_80228004_19 *Array[B] 
 2294:  	Add  *Var[3]  00000001 
 22A4:  EndIf
 22AC:  If  *Var[0]  &  00000004 
 22BC:  	Set  *Var[1]  *Array[2] 
 22CC:  	Set  *Var[2]  *Var[A] 
 22DC:  	Exec     $Script_80228004_19 *Array[C] 
 22EC:  	Add  *Var[3]  00000001 
 22FC:  EndIf
 2304:  If  *Var[0]  &  00000008 
 2314:  	Set  *Var[1]  *Array[3] 
 2324:  	Set  *Var[2]  *Var[A] 
 2334:  	Exec     $Script_80228004_19 *Array[D] 
 2344:  	Add  *Var[3]  00000001 
 2354:  EndIf
 235C:  If  *Var[0]  &  00000010 
 236C:  	Set  *Var[1]  *Array[4] 
 237C:  	Set  *Var[2]  *Var[A] 
 238C:  	Exec     $Script_80228004_19 *Array[E] 
 239C:  	Add  *Var[3]  00000001 
 23AC:  EndIf
 23B4:  If  *Var[0]  &  00000020 
 23C4:  	Set  *Var[1]  *Array[5] 
 23D4:  	Set  *Var[2]  *Var[A] 
 23E4:  	Exec     $Script_80228004_19 *Array[F] 
 23F4:  	Add  *Var[3]  00000001 
 2404:  EndIf
 240C:  If  *Var[0]  &  00000040 
 241C:  	Set  *Var[1]  *Array[6] 
 242C:  	Set  *Var[2]  *Var[A] 
 243C:  	Exec     $Script_80228004_19 *Array[10] 
 244C:  	Add  *Var[3]  00000001 
 245C:  EndIf
 2464:  If  *Var[0]  &  00000080 
 2474:  	Set  *Var[1]  *Array[7] 
 2484:  	Set  *Var[2]  *Var[A] 
 2494:  	Exec     $Script_80228004_19 *Array[11] 
 24A4:  	Add  *Var[3]  00000001 
 24B4:  EndIf
 24BC:  If  *Var[0]  &  00000100 
 24CC:  	Set  *Var[1]  *Array[8] 
 24DC:  	Set  *Var[2]  *Var[A] 
 24EC:  	Exec     $Script_80228004_19 *Array[12] 
 24FC:  	Add  *Var[3]  00000001 
 250C:  EndIf
 2514:  If  *Var[0]  &  00000200 
 2524:  	Set  *Var[1]  *Array[9] 
 2534:  	Set  *Var[2]  *Var[A] 
 2544:  	Exec     $Script_80228004_19 *Array[13] 
 2554:  	Add  *Var[3]  00000001 
 2564:  EndIf
 256C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
 2590:  Switch  *Var[0] 
 259C:  	CaseOR  ==  00000006 
 25A8:  	CaseOR  ==  00000005 
 25B4:  		Set  *Var[A]  *Var[0] 
 25C4:  		Label    00000000 
 25D0:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 25E8:  		If  *Var[0]  !&  00000004 
 25F8:  			Wait     00000001 
 2604:  			Goto     00000000 
 2610:  		EndIf
 2618:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 2630:  		ConstAND *Var[0] FFFFFFFB 
 2640:  		Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 2658:  		Call     UseCamPreset 	( 00000002 )
 2668:  		Call     MoveCamOver 	( 00000014 )
 2678:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 2690:  		If  *Var[0]  &  00000001 
 26A0:  			Kill     *Array[A] 
 26AC:  			Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
 26C4:  			If  *Var[1]  ==  00000000 
 26D4:  				Call     SetAnimation 	( *Array[0] 00000001 004C0012 )
 26EC:  			Else
 26F4:  				Call     SetAnimation 	( *Array[0] 00000001 004C0013 )
 270C:  			EndIf
 2714:  			Thread
 271C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 2738:  				Call     GetActorPos 	( *Array[0] *Var[3] *Var[4] *Var[5] )
 2754:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 2774:  				DivF  *Var[6]  *Fixed[2.0] 
 2784:  				AddF  *Var[6]  *Fixed[90.0] 
 2794:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 27B0:  				Call     SetActorJumpscale 	( *Array[0] *Fixed[1.0] )
 27C4:  				Call     SetGoalToPos 	( *Array[0] *Var[0] *Var[1] *Var[2] )
 27E0:  				Call     JumpToGoal  	( *Array[0] 00000014 00000000 00000000 00000000 )
 2800:  			EndThread
 2808:  		EndIf
 2810:  		If  *Var[0]  &  00000002 
 2820:  			Kill     *Array[B] 
 282C:  			Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
 2844:  			If  *Var[1]  ==  00000000 
 2854:  				Call     SetAnimation 	( *Array[1] 00000001 004C0012 )
 286C:  			Else
 2874:  				Call     SetAnimation 	( *Array[1] 00000001 004C0013 )
 288C:  			EndIf
 2894:  			Thread
 289C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 28B8:  				Call     GetActorPos 	( *Array[1] *Var[3] *Var[4] *Var[5] )
 28D4:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 28F4:  				DivF  *Var[6]  *Fixed[2.0] 
 2904:  				AddF  *Var[6]  *Fixed[90.0] 
 2914:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 2930:  				Call     SetActorJumpscale 	( *Array[1] *Fixed[1.0] )
 2944:  				Call     SetGoalToPos 	( *Array[1] *Var[0] *Var[1] *Var[2] )
 2960:  				Call     JumpToGoal  	( *Array[1] 00000014 00000000 00000000 00000000 )
 2980:  			EndThread
 2988:  		EndIf
 2990:  		If  *Var[0]  &  00000004 
 29A0:  			Kill     *Array[C] 
 29AC:  			Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 29C4:  			If  *Var[1]  ==  00000000 
 29D4:  				Call     SetAnimation 	( *Array[2] 00000001 004C0012 )
 29EC:  			Else
 29F4:  				Call     SetAnimation 	( *Array[2] 00000001 004C0013 )
 2A0C:  			EndIf
 2A14:  			Thread
 2A1C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 2A38:  				Call     GetActorPos 	( *Array[2] *Var[3] *Var[4] *Var[5] )
 2A54:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 2A74:  				DivF  *Var[6]  *Fixed[2.0] 
 2A84:  				AddF  *Var[6]  *Fixed[90.0] 
 2A94:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 2AB0:  				Call     SetActorJumpscale 	( *Array[2] *Fixed[1.0] )
 2AC4:  				Call     SetGoalToPos 	( *Array[2] *Var[0] *Var[1] *Var[2] )
 2AE0:  				Call     JumpToGoal  	( *Array[2] 00000014 00000000 00000000 00000000 )
 2B00:  			EndThread
 2B08:  		EndIf
 2B10:  		If  *Var[0]  &  00000008 
 2B20:  			Kill     *Array[D] 
 2B2C:  			Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
 2B44:  			If  *Var[1]  ==  00000000 
 2B54:  				Call     SetAnimation 	( *Array[3] 00000001 004C0012 )
 2B6C:  			Else
 2B74:  				Call     SetAnimation 	( *Array[3] 00000001 004C0013 )
 2B8C:  			EndIf
 2B94:  			Thread
 2B9C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 2BB8:  				Call     GetActorPos 	( *Array[3] *Var[3] *Var[4] *Var[5] )
 2BD4:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 2BF4:  				DivF  *Var[6]  *Fixed[2.0] 
 2C04:  				AddF  *Var[6]  *Fixed[90.0] 
 2C14:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 2C30:  				Call     SetActorJumpscale 	( *Array[3] *Fixed[1.0] )
 2C44:  				Call     SetGoalToPos 	( *Array[3] *Var[0] *Var[1] *Var[2] )
 2C60:  				Call     JumpToGoal  	( *Array[3] 00000014 00000000 00000000 00000000 )
 2C80:  			EndThread
 2C88:  		EndIf
 2C90:  		If  *Var[0]  &  00000010 
 2CA0:  			Kill     *Array[E] 
 2CAC:  			Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
 2CC4:  			If  *Var[1]  ==  00000000 
 2CD4:  				Call     SetAnimation 	( *Array[4] 00000001 004C0012 )
 2CEC:  			Else
 2CF4:  				Call     SetAnimation 	( *Array[4] 00000001 004C0013 )
 2D0C:  			EndIf
 2D14:  			Thread
 2D1C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 2D38:  				Call     GetActorPos 	( *Array[4] *Var[3] *Var[4] *Var[5] )
 2D54:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 2D74:  				DivF  *Var[6]  *Fixed[2.0] 
 2D84:  				AddF  *Var[6]  *Fixed[90.0] 
 2D94:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 2DB0:  				Call     SetActorJumpscale 	( *Array[4] *Fixed[1.0] )
 2DC4:  				Call     SetGoalToPos 	( *Array[4] *Var[0] *Var[1] *Var[2] )
 2DE0:  				Call     JumpToGoal  	( *Array[4] 00000014 00000000 00000000 00000000 )
 2E00:  			EndThread
 2E08:  		EndIf
 2E10:  		If  *Var[0]  &  00000020 
 2E20:  			Kill     *Array[F] 
 2E2C:  			Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
 2E44:  			If  *Var[1]  ==  00000000 
 2E54:  				Call     SetAnimation 	( *Array[5] 00000001 004C0012 )
 2E6C:  			Else
 2E74:  				Call     SetAnimation 	( *Array[5] 00000001 004C0013 )
 2E8C:  			EndIf
 2E94:  			Thread
 2E9C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 2EB8:  				Call     GetActorPos 	( *Array[5] *Var[3] *Var[4] *Var[5] )
 2ED4:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 2EF4:  				DivF  *Var[6]  *Fixed[2.0] 
 2F04:  				AddF  *Var[6]  *Fixed[90.0] 
 2F14:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 2F30:  				Call     SetActorJumpscale 	( *Array[5] *Fixed[1.0] )
 2F44:  				Call     SetGoalToPos 	( *Array[5] *Var[0] *Var[1] *Var[2] )
 2F60:  				Call     JumpToGoal  	( *Array[5] 00000014 00000000 00000000 00000000 )
 2F80:  			EndThread
 2F88:  		EndIf
 2F90:  		If  *Var[0]  &  00000040 
 2FA0:  			Kill     *Array[10] 
 2FAC:  			Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 2FC4:  			If  *Var[1]  ==  00000000 
 2FD4:  				Call     SetAnimation 	( *Array[6] 00000001 004C0012 )
 2FEC:  			Else
 2FF4:  				Call     SetAnimation 	( *Array[6] 00000001 004C0013 )
 300C:  			EndIf
 3014:  			Thread
 301C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 3038:  				Call     GetActorPos 	( *Array[6] *Var[3] *Var[4] *Var[5] )
 3054:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 3074:  				DivF  *Var[6]  *Fixed[2.0] 
 3084:  				AddF  *Var[6]  *Fixed[90.0] 
 3094:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 30B0:  				Call     SetActorJumpscale 	( *Array[6] *Fixed[1.0] )
 30C4:  				Call     SetGoalToPos 	( *Array[6] *Var[0] *Var[1] *Var[2] )
 30E0:  				Call     JumpToGoal  	( *Array[6] 00000014 00000000 00000000 00000000 )
 3100:  			EndThread
 3108:  		EndIf
 3110:  		If  *Var[0]  &  00000080 
 3120:  			Kill     *Array[11] 
 312C:  			Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 3144:  			If  *Var[1]  ==  00000000 
 3154:  				Call     SetAnimation 	( *Array[7] 00000001 004C0012 )
 316C:  			Else
 3174:  				Call     SetAnimation 	( *Array[7] 00000001 004C0013 )
 318C:  			EndIf
 3194:  			Thread
 319C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 31B8:  				Call     GetActorPos 	( *Array[7] *Var[3] *Var[4] *Var[5] )
 31D4:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 31F4:  				DivF  *Var[6]  *Fixed[2.0] 
 3204:  				AddF  *Var[6]  *Fixed[90.0] 
 3214:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 3230:  				Call     SetActorJumpscale 	( *Array[7] *Fixed[1.0] )
 3244:  				Call     SetGoalToPos 	( *Array[7] *Var[0] *Var[1] *Var[2] )
 3260:  				Call     JumpToGoal  	( *Array[7] 00000014 00000000 00000000 00000000 )
 3280:  			EndThread
 3288:  		EndIf
 3290:  		If  *Var[0]  &  00000100 
 32A0:  			Kill     *Array[12] 
 32AC:  			Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
 32C4:  			If  *Var[1]  ==  00000000 
 32D4:  				Call     SetAnimation 	( *Array[8] 00000001 004C0012 )
 32EC:  			Else
 32F4:  				Call     SetAnimation 	( *Array[8] 00000001 004C0013 )
 330C:  			EndIf
 3314:  			Thread
 331C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 3338:  				Call     GetActorPos 	( *Array[8] *Var[3] *Var[4] *Var[5] )
 3354:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 3374:  				DivF  *Var[6]  *Fixed[2.0] 
 3384:  				AddF  *Var[6]  *Fixed[90.0] 
 3394:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 33B0:  				Call     SetActorJumpscale 	( *Array[8] *Fixed[1.0] )
 33C4:  				Call     SetGoalToPos 	( *Array[8] *Var[0] *Var[1] *Var[2] )
 33E0:  				Call     JumpToGoal  	( *Array[8] 00000014 00000000 00000000 00000000 )
 3400:  			EndThread
 3408:  		EndIf
 3410:  		If  *Var[0]  &  00000200 
 3420:  			Kill     *Array[13] 
 342C:  			Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
 3444:  			If  *Var[1]  ==  00000000 
 3454:  				Call     SetAnimation 	( *Array[9] 00000001 004C0012 )
 346C:  			Else
 3474:  				Call     SetAnimation 	( *Array[9] 00000001 004C0013 )
 348C:  			EndIf
 3494:  			Thread
 349C:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 34B8:  				Call     GetActorPos 	( *Array[9] *Var[3] *Var[4] *Var[5] )
 34D4:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 34F4:  				DivF  *Var[6]  *Fixed[2.0] 
 3504:  				AddF  *Var[6]  *Fixed[90.0] 
 3514:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 3530:  				Call     SetActorJumpscale 	( *Array[9] *Fixed[1.0] )
 3544:  				Call     SetGoalToPos 	( *Array[9] *Var[0] *Var[1] *Var[2] )
 3560:  				Call     JumpToGoal  	( *Array[9] 00000014 00000000 00000000 00000000 )
 3580:  			EndThread
 3588:  		EndIf
 3590:  		Wait     0000000F 
 359C:  		If  *Var[A]  ==  00000005 
 35AC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 35D0:  		EndIf
 35D8:  		Wait     00000014 
 35E4:  		Set  *Var[A]  00000000 
 35F4:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 360C:  		If  *Var[0]  &  00000010 
 361C:  			Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
 3634:  			If  *Var[1]  ==  00000000 
 3644:  				Call     SetAnimation 	( *Array[4] 00000001 004C0006 )
 365C:  			Else
 3664:  				Call     SetAnimation 	( *Array[4] 00000001 004C0007 )
 367C:  			EndIf
 3684:  			Thread
 368C:  				Call     SetActorVar 	( *Array[4] 00000002 00000000 )
 36A4:  				Mod  *Var[A]  00000002 
 36B4:  				If  *Var[A]  ==  00000000 
 36C4:  					Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
 36D8:  				Else
 36E0:  					Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
 36F4:  				EndIf
 36FC:  				Call     SetGoalToHome 	( *Array[4] )
 370C:  				Call     MoveToGoal  	( *Array[4] 0000001E 0000000A .Easing:SinOut )
 3728:  				Call     SetSpriteAlpha ( *Array[4] 00000001 000000FF )
 3740:  				Call     SetActorAngle 	( *Array[4] 00000000 )
 3754:  				Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
 376C:  				If  *Var[1]  ==  00000000 
 377C:  					Call     SetAnimation 	( *Array[4] 00000001 004C0002 )
 3794:  				Else
 379C:  					Call     SetAnimation 	( *Array[4] 00000001 004C0003 )
 37B4:  				EndIf
 37BC:  			EndThread
 37C4:  			Add  *Var[A]  00000001 
 37D4:  			Wait     00000004 
 37E0:  		EndIf
 37E8:  		If  *Var[0]  &  00000200 
 37F8:  			Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
 3810:  			If  *Var[1]  ==  00000000 
 3820:  				Call     SetAnimation 	( *Array[9] 00000001 004C0006 )
 3838:  			Else
 3840:  				Call     SetAnimation 	( *Array[9] 00000001 004C0007 )
 3858:  			EndIf
 3860:  			Thread
 3868:  				Call     SetActorVar 	( *Array[9] 00000002 00000000 )
 3880:  				Mod  *Var[A]  00000002 
 3890:  				If  *Var[A]  ==  00000000 
 38A0:  					Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
 38B4:  				Else
 38BC:  					Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
 38D0:  				EndIf
 38D8:  				Call     SetGoalToHome 	( *Array[9] )
 38E8:  				Call     MoveToGoal  	( *Array[9] 0000001E 0000000A .Easing:SinOut )
 3904:  				Call     SetSpriteAlpha ( *Array[9] 00000001 000000FF )
 391C:  				Call     SetActorAngle 	( *Array[9] 00000000 )
 3930:  				Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
 3948:  				If  *Var[1]  ==  00000000 
 3958:  					Call     SetAnimation 	( *Array[9] 00000001 004C0002 )
 3970:  				Else
 3978:  					Call     SetAnimation 	( *Array[9] 00000001 004C0003 )
 3990:  				EndIf
 3998:  			EndThread
 39A0:  			Add  *Var[A]  00000001 
 39B0:  			Wait     00000004 
 39BC:  		EndIf
 39C4:  		If  *Var[0]  &  00000008 
 39D4:  			Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
 39EC:  			If  *Var[1]  ==  00000000 
 39FC:  				Call     SetAnimation 	( *Array[3] 00000001 004C0006 )
 3A14:  			Else
 3A1C:  				Call     SetAnimation 	( *Array[3] 00000001 004C0007 )
 3A34:  			EndIf
 3A3C:  			Thread
 3A44:  				Call     SetActorVar 	( *Array[3] 00000002 00000000 )
 3A5C:  				Mod  *Var[A]  00000002 
 3A6C:  				If  *Var[A]  ==  00000000 
 3A7C:  					Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
 3A90:  				Else
 3A98:  					Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
 3AAC:  				EndIf
 3AB4:  				Call     SetGoalToHome 	( *Array[3] )
 3AC4:  				Call     MoveToGoal  	( *Array[3] 0000001E 0000000A .Easing:SinOut )
 3AE0:  				Call     SetSpriteAlpha ( *Array[3] 00000001 000000FF )
 3AF8:  				Call     SetActorAngle 	( *Array[3] 00000000 )
 3B0C:  				Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
 3B24:  				If  *Var[1]  ==  00000000 
 3B34:  					Call     SetAnimation 	( *Array[3] 00000001 004C0002 )
 3B4C:  				Else
 3B54:  					Call     SetAnimation 	( *Array[3] 00000001 004C0003 )
 3B6C:  				EndIf
 3B74:  			EndThread
 3B7C:  			Add  *Var[A]  00000001 
 3B8C:  			Wait     00000004 
 3B98:  		EndIf
 3BA0:  		If  *Var[0]  &  00000020 
 3BB0:  			Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
 3BC8:  			If  *Var[1]  ==  00000000 
 3BD8:  				Call     SetAnimation 	( *Array[5] 00000001 004C0006 )
 3BF0:  			Else
 3BF8:  				Call     SetAnimation 	( *Array[5] 00000001 004C0007 )
 3C10:  			EndIf
 3C18:  			Thread
 3C20:  				Call     SetActorVar 	( *Array[5] 00000002 00000000 )
 3C38:  				Mod  *Var[A]  00000002 
 3C48:  				If  *Var[A]  ==  00000000 
 3C58:  					Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
 3C6C:  				Else
 3C74:  					Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
 3C88:  				EndIf
 3C90:  				Call     SetGoalToHome 	( *Array[5] )
 3CA0:  				Call     MoveToGoal  	( *Array[5] 0000001E 0000000A .Easing:SinOut )
 3CBC:  				Call     SetSpriteAlpha ( *Array[5] 00000001 000000FF )
 3CD4:  				Call     SetActorAngle 	( *Array[5] 00000000 )
 3CE8:  				Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
 3D00:  				If  *Var[1]  ==  00000000 
 3D10:  					Call     SetAnimation 	( *Array[5] 00000001 004C0002 )
 3D28:  				Else
 3D30:  					Call     SetAnimation 	( *Array[5] 00000001 004C0003 )
 3D48:  				EndIf
 3D50:  			EndThread
 3D58:  			Add  *Var[A]  00000001 
 3D68:  			Wait     00000004 
 3D74:  		EndIf
 3D7C:  		If  *Var[0]  &  00000002 
 3D8C:  			Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
 3DA4:  			If  *Var[1]  ==  00000000 
 3DB4:  				Call     SetAnimation 	( *Array[1] 00000001 004C0006 )
 3DCC:  			Else
 3DD4:  				Call     SetAnimation 	( *Array[1] 00000001 004C0007 )
 3DEC:  			EndIf
 3DF4:  			Thread
 3DFC:  				Call     SetActorVar 	( *Array[1] 00000002 00000000 )
 3E14:  				Mod  *Var[A]  00000002 
 3E24:  				If  *Var[A]  ==  00000000 
 3E34:  					Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
 3E48:  				Else
 3E50:  					Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
 3E64:  				EndIf
 3E6C:  				Call     SetGoalToHome 	( *Array[1] )
 3E7C:  				Call     MoveToGoal  	( *Array[1] 0000001E 0000000A .Easing:SinOut )
 3E98:  				Call     SetSpriteAlpha ( *Array[1] 00000001 000000FF )
 3EB0:  				Call     SetActorAngle 	( *Array[1] 00000000 )
 3EC4:  				Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
 3EDC:  				If  *Var[1]  ==  00000000 
 3EEC:  					Call     SetAnimation 	( *Array[1] 00000001 004C0002 )
 3F04:  				Else
 3F0C:  					Call     SetAnimation 	( *Array[1] 00000001 004C0003 )
 3F24:  				EndIf
 3F2C:  			EndThread
 3F34:  			Add  *Var[A]  00000001 
 3F44:  			Wait     00000004 
 3F50:  		EndIf
 3F58:  		If  *Var[0]  &  00000001 
 3F68:  			Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
 3F80:  			If  *Var[1]  ==  00000000 
 3F90:  				Call     SetAnimation 	( *Array[0] 00000001 004C0006 )
 3FA8:  			Else
 3FB0:  				Call     SetAnimation 	( *Array[0] 00000001 004C0007 )
 3FC8:  			EndIf
 3FD0:  			Thread
 3FD8:  				Call     SetActorVar 	( *Array[0] 00000002 00000000 )
 3FF0:  				Mod  *Var[A]  00000002 
 4000:  				If  *Var[A]  ==  00000000 
 4010:  					Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
 4024:  				Else
 402C:  					Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
 4040:  				EndIf
 4048:  				Call     SetGoalToHome 	( *Array[0] )
 4058:  				Call     MoveToGoal  	( *Array[0] 0000001E 0000000A .Easing:SinOut )
 4074:  				Call     SetSpriteAlpha ( *Array[0] 00000001 000000FF )
 408C:  				Call     SetActorAngle 	( *Array[0] 00000000 )
 40A0:  				Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
 40B8:  				If  *Var[1]  ==  00000000 
 40C8:  					Call     SetAnimation 	( *Array[0] 00000001 004C0002 )
 40E0:  				Else
 40E8:  					Call     SetAnimation 	( *Array[0] 00000001 004C0003 )
 4100:  				EndIf
 4108:  			EndThread
 4110:  			Add  *Var[A]  00000001 
 4120:  			Wait     00000004 
 412C:  		EndIf
 4134:  		If  *Var[0]  &  00000100 
 4144:  			Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
 415C:  			If  *Var[1]  ==  00000000 
 416C:  				Call     SetAnimation 	( *Array[8] 00000001 004C0006 )
 4184:  			Else
 418C:  				Call     SetAnimation 	( *Array[8] 00000001 004C0007 )
 41A4:  			EndIf
 41AC:  			Thread
 41B4:  				Call     SetActorVar 	( *Array[8] 00000002 00000000 )
 41CC:  				Mod  *Var[A]  00000002 
 41DC:  				If  *Var[A]  ==  00000000 
 41EC:  					Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
 4200:  				Else
 4208:  					Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
 421C:  				EndIf
 4224:  				Call     SetGoalToHome 	( *Array[8] )
 4234:  				Call     MoveToGoal  	( *Array[8] 0000001E 0000000A .Easing:SinOut )
 4250:  				Call     SetSpriteAlpha ( *Array[8] 00000001 000000FF )
 4268:  				Call     SetActorAngle 	( *Array[8] 00000000 )
 427C:  				Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
 4294:  				If  *Var[1]  ==  00000000 
 42A4:  					Call     SetAnimation 	( *Array[8] 00000001 004C0002 )
 42BC:  				Else
 42C4:  					Call     SetAnimation 	( *Array[8] 00000001 004C0003 )
 42DC:  				EndIf
 42E4:  			EndThread
 42EC:  			Add  *Var[A]  00000001 
 42FC:  			Wait     00000004 
 4308:  		EndIf
 4310:  		If  *Var[0]  &  00000004 
 4320:  			Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 4338:  			If  *Var[1]  ==  00000000 
 4348:  				Call     SetAnimation 	( *Array[2] 00000001 004C0006 )
 4360:  			Else
 4368:  				Call     SetAnimation 	( *Array[2] 00000001 004C0007 )
 4380:  			EndIf
 4388:  			Thread
 4390:  				Call     SetActorVar 	( *Array[2] 00000002 00000000 )
 43A8:  				Mod  *Var[A]  00000002 
 43B8:  				If  *Var[A]  ==  00000000 
 43C8:  					Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
 43DC:  				Else
 43E4:  					Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
 43F8:  				EndIf
 4400:  				Call     SetGoalToHome 	( *Array[2] )
 4410:  				Call     MoveToGoal  	( *Array[2] 0000001E 0000000A .Easing:SinOut )
 442C:  				Call     SetSpriteAlpha ( *Array[2] 00000001 000000FF )
 4444:  				Call     SetActorAngle 	( *Array[2] 00000000 )
 4458:  				Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 4470:  				If  *Var[1]  ==  00000000 
 4480:  					Call     SetAnimation 	( *Array[2] 00000001 004C0002 )
 4498:  				Else
 44A0:  					Call     SetAnimation 	( *Array[2] 00000001 004C0003 )
 44B8:  				EndIf
 44C0:  			EndThread
 44C8:  			Add  *Var[A]  00000001 
 44D8:  			Wait     00000004 
 44E4:  		EndIf
 44EC:  		If  *Var[0]  &  00000080 
 44FC:  			Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 4514:  			If  *Var[1]  ==  00000000 
 4524:  				Call     SetAnimation 	( *Array[7] 00000001 004C0006 )
 453C:  			Else
 4544:  				Call     SetAnimation 	( *Array[7] 00000001 004C0007 )
 455C:  			EndIf
 4564:  			Thread
 456C:  				Call     SetActorVar 	( *Array[7] 00000002 00000000 )
 4584:  				Mod  *Var[A]  00000002 
 4594:  				If  *Var[A]  ==  00000000 
 45A4:  					Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
 45B8:  				Else
 45C0:  					Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
 45D4:  				EndIf
 45DC:  				Call     SetGoalToHome 	( *Array[7] )
 45EC:  				Call     MoveToGoal  	( *Array[7] 0000001E 0000000A .Easing:SinOut )
 4608:  				Call     SetSpriteAlpha ( *Array[7] 00000001 000000FF )
 4620:  				Call     SetActorAngle 	( *Array[7] 00000000 )
 4634:  				Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 464C:  				If  *Var[1]  ==  00000000 
 465C:  					Call     SetAnimation 	( *Array[7] 00000001 004C0002 )
 4674:  				Else
 467C:  					Call     SetAnimation 	( *Array[7] 00000001 004C0003 )
 4694:  				EndIf
 469C:  			EndThread
 46A4:  			Add  *Var[A]  00000001 
 46B4:  			Wait     00000004 
 46C0:  		EndIf
 46C8:  		If  *Var[0]  &  00000040 
 46D8:  			Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 46F0:  			If  *Var[1]  ==  00000000 
 4700:  				Call     SetAnimation 	( *Array[6] 00000001 004C0006 )
 4718:  			Else
 4720:  				Call     SetAnimation 	( *Array[6] 00000001 004C0007 )
 4738:  			EndIf
 4740:  			Thread
 4748:  				Call     SetActorVar 	( *Array[6] 00000002 00000000 )
 4760:  				Mod  *Var[A]  00000002 
 4770:  				If  *Var[A]  ==  00000000 
 4780:  					Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
 4794:  				Else
 479C:  					Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
 47B0:  				EndIf
 47B8:  				Call     SetGoalToHome 	( *Array[6] )
 47C8:  				Call     MoveToGoal  	( *Array[6] 0000001E 0000000A .Easing:SinOut )
 47E4:  				Call     SetSpriteAlpha ( *Array[6] 00000001 000000FF )
 47FC:  				Call     SetActorAngle 	( *Array[6] 00000000 )
 4810:  				Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 4828:  				If  *Var[1]  ==  00000000 
 4838:  					Call     SetAnimation 	( *Array[6] 00000001 004C0002 )
 4850:  				Else
 4858:  					Call     SetAnimation 	( *Array[6] 00000001 004C0003 )
 4870:  				EndIf
 4878:  			EndThread
 4880:  			Add  *Var[A]  00000001 
 4890:  			Wait     00000004 
 489C:  		EndIf
 48A4:  		Wait     00000032 
 48B0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
 48C4:  		Return
 48CC:  	EndCaseGroup
 48D4:  EndSwitch
 48DC:  Call     GetStatusFlags ( .Actor:Player *Var[1] )
 48F0:  If  *Var[1]  &  00100000 
 4900:  	Wait     0000000A 
 490C:  	Set  *Var[3]  00000000 
 491C:  	Loop     
 4928:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 4940:  		If  *Var[0]  &  00000004 
 4950:  			Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 4968:  			ConstAND *Var[0] FFFFFFFB 
 4978:  			Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 4990:  			Wait     00000002 
 499C:  			Call     SetTargetActor ( .Actor:Self .Actor:Player )
 49B0:  			Call     SetGoalToTarget 	( .Actor:Self )
 49C0:  			Call     DamageTarget 	( .Actor:Self *Var[A] 18000000 00000000 00000000 00000001 00000040 )
 49E8:  			Add  *Var[3]  00000001 
 49F8:  		EndIf
 4A00:  		If  *Var[3]  >  00000001 
 4A10:  			BreakLoop
 4A18:  		EndIf
 4A20:  		Wait     00000001 
 4A2C:  	EndLoop
 4A34:  Else
 4A3C:  	Call     ShowMessageBox ( 00000031 000000B4 )
 4A50:  	Call     802694A4 ( 00000001 )
 4A60:  	Call     LoadActionCommand 	( 00000006 )
 4A70:  	Call     802A9000 ( )
 4A7C:  	Call     802691C8 ( 00000001 00000019 00000000 00000000 00000000 00000000 )
 4AA0:  	Wait     0000000A 
 4AAC:  	Call     SetBattleFlagBits 	( 00004000 .False )
 4AC0:  	Call     802A9110 ( 00000000 00007FFF 00000003 )
 4AD8:  	Set  *Var[B]  *Var[A] 
 4AE8:  	Div  *Var[B]  00000002 
 4AF8:  	Wait     *Var[B] 
 4B04:  	Set  *Var[D]  00000000 
 4B14:  	Loop     
 4B20:  		Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 4B38:  		If  *Var[0]  &  00000004 
 4B48:  			Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 4B60:  			ConstAND *Var[0] FFFFFFFB 
 4B70:  			Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
 4B88:  			Wait     00000002 
 4B94:  			Call     SetTargetActor ( .Actor:Self .Actor:Player )
 4BA8:  			Call     SetGoalToTarget 	( .Actor:Self )
 4BB8:  			Call     DamageTarget 	( .Actor:Self *Var[A] 1A000000 00000000 00000000 00000002 00000040 )
 4BE0:  			Add  *Var[D]  00000001 
 4BF0:  		EndIf
 4BF8:  		Call     802694F8 ( *Var[0] )
 4C08:  		If  *Var[0]  ==  00000001 
 4C18:  			BreakLoop
 4C20:  		EndIf
 4C28:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
 4C3C:  		If  *Var[0]  ==  00000000 
 4C4C:  			If  *Var[D]  >  00000001 
 4C5C:  				Call     80269470 ( )
 4C68:  				BreakLoop
 4C70:  			EndIf
 4C78:  		EndIf
 4C80:  		Call     GetPlayerHP 	( *Var[0] )
 4C90:  		If  *Var[0]  ==  00000000 
 4CA0:  			Call     80269470 ( )
 4CAC:  			BreakLoop
 4CB4:  		EndIf
 4CBC:  		If  *Var[D]  >=  00000014 
 4CCC:  			Call     80269470 ( )
 4CD8:  			BreakLoop
 4CE0:  		EndIf
 4CE8:  		Wait     00000001 
 4CF4:  	EndLoop
 4CFC:  	Call     80269470 ( )
 4D08:  EndIf
 4D10:  Switch  *Var[A] 
 4D1C:  	CaseOR  ==  00000000 
 4D28:  	CaseOR  ==  00000001 
 4D34:  	CaseOR  ==  00000002 
 4D40:  		Call     UseCamPreset 	( 00000002 )
 4D50:  		Call     MoveCamOver 	( 00000014 )
 4D60:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 4D78:  		If  *Var[0]  &  00000001 
 4D88:  			Kill     *Array[A] 
 4D94:  			Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
 4DAC:  			If  *Var[1]  ==  00000000 
 4DBC:  				Call     SetAnimation 	( *Array[0] 00000001 004C0012 )
 4DD4:  			Else
 4DDC:  				Call     SetAnimation 	( *Array[0] 00000001 004C0013 )
 4DF4:  			EndIf
 4DFC:  			Thread
 4E04:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 4E20:  				Call     GetActorPos 	( *Array[0] *Var[3] *Var[4] *Var[5] )
 4E3C:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 4E5C:  				DivF  *Var[6]  *Fixed[2.0] 
 4E6C:  				AddF  *Var[6]  *Fixed[90.0] 
 4E7C:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 4E98:  				Call     SetActorJumpscale 	( *Array[0] *Fixed[1.0] )
 4EAC:  				Call     SetGoalToPos 	( *Array[0] *Var[0] *Var[1] *Var[2] )
 4EC8:  				Call     JumpToGoal  	( *Array[0] 00000014 00000000 00000000 00000000 )
 4EE8:  			EndThread
 4EF0:  		EndIf
 4EF8:  		If  *Var[0]  &  00000002 
 4F08:  			Kill     *Array[B] 
 4F14:  			Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
 4F2C:  			If  *Var[1]  ==  00000000 
 4F3C:  				Call     SetAnimation 	( *Array[1] 00000001 004C0012 )
 4F54:  			Else
 4F5C:  				Call     SetAnimation 	( *Array[1] 00000001 004C0013 )
 4F74:  			EndIf
 4F7C:  			Thread
 4F84:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 4FA0:  				Call     GetActorPos 	( *Array[1] *Var[3] *Var[4] *Var[5] )
 4FBC:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 4FDC:  				DivF  *Var[6]  *Fixed[2.0] 
 4FEC:  				AddF  *Var[6]  *Fixed[90.0] 
 4FFC:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5018:  				Call     SetActorJumpscale 	( *Array[1] *Fixed[1.0] )
 502C:  				Call     SetGoalToPos 	( *Array[1] *Var[0] *Var[1] *Var[2] )
 5048:  				Call     JumpToGoal  	( *Array[1] 00000014 00000000 00000000 00000000 )
 5068:  			EndThread
 5070:  		EndIf
 5078:  		If  *Var[0]  &  00000004 
 5088:  			Kill     *Array[C] 
 5094:  			Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 50AC:  			If  *Var[1]  ==  00000000 
 50BC:  				Call     SetAnimation 	( *Array[2] 00000001 004C0012 )
 50D4:  			Else
 50DC:  				Call     SetAnimation 	( *Array[2] 00000001 004C0013 )
 50F4:  			EndIf
 50FC:  			Thread
 5104:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 5120:  				Call     GetActorPos 	( *Array[2] *Var[3] *Var[4] *Var[5] )
 513C:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 515C:  				DivF  *Var[6]  *Fixed[2.0] 
 516C:  				AddF  *Var[6]  *Fixed[90.0] 
 517C:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5198:  				Call     SetActorJumpscale 	( *Array[2] *Fixed[1.0] )
 51AC:  				Call     SetGoalToPos 	( *Array[2] *Var[0] *Var[1] *Var[2] )
 51C8:  				Call     JumpToGoal  	( *Array[2] 00000014 00000000 00000000 00000000 )
 51E8:  			EndThread
 51F0:  		EndIf
 51F8:  		If  *Var[0]  &  00000008 
 5208:  			Kill     *Array[D] 
 5214:  			Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
 522C:  			If  *Var[1]  ==  00000000 
 523C:  				Call     SetAnimation 	( *Array[3] 00000001 004C0012 )
 5254:  			Else
 525C:  				Call     SetAnimation 	( *Array[3] 00000001 004C0013 )
 5274:  			EndIf
 527C:  			Thread
 5284:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 52A0:  				Call     GetActorPos 	( *Array[3] *Var[3] *Var[4] *Var[5] )
 52BC:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 52DC:  				DivF  *Var[6]  *Fixed[2.0] 
 52EC:  				AddF  *Var[6]  *Fixed[90.0] 
 52FC:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5318:  				Call     SetActorJumpscale 	( *Array[3] *Fixed[1.0] )
 532C:  				Call     SetGoalToPos 	( *Array[3] *Var[0] *Var[1] *Var[2] )
 5348:  				Call     JumpToGoal  	( *Array[3] 00000014 00000000 00000000 00000000 )
 5368:  			EndThread
 5370:  		EndIf
 5378:  		If  *Var[0]  &  00000010 
 5388:  			Kill     *Array[E] 
 5394:  			Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
 53AC:  			If  *Var[1]  ==  00000000 
 53BC:  				Call     SetAnimation 	( *Array[4] 00000001 004C0012 )
 53D4:  			Else
 53DC:  				Call     SetAnimation 	( *Array[4] 00000001 004C0013 )
 53F4:  			EndIf
 53FC:  			Thread
 5404:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 5420:  				Call     GetActorPos 	( *Array[4] *Var[3] *Var[4] *Var[5] )
 543C:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 545C:  				DivF  *Var[6]  *Fixed[2.0] 
 546C:  				AddF  *Var[6]  *Fixed[90.0] 
 547C:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5498:  				Call     SetActorJumpscale 	( *Array[4] *Fixed[1.0] )
 54AC:  				Call     SetGoalToPos 	( *Array[4] *Var[0] *Var[1] *Var[2] )
 54C8:  				Call     JumpToGoal  	( *Array[4] 00000014 00000000 00000000 00000000 )
 54E8:  			EndThread
 54F0:  		EndIf
 54F8:  		If  *Var[0]  &  00000020 
 5508:  			Kill     *Array[F] 
 5514:  			Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
 552C:  			If  *Var[1]  ==  00000000 
 553C:  				Call     SetAnimation 	( *Array[5] 00000001 004C0012 )
 5554:  			Else
 555C:  				Call     SetAnimation 	( *Array[5] 00000001 004C0013 )
 5574:  			EndIf
 557C:  			Thread
 5584:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 55A0:  				Call     GetActorPos 	( *Array[5] *Var[3] *Var[4] *Var[5] )
 55BC:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 55DC:  				DivF  *Var[6]  *Fixed[2.0] 
 55EC:  				AddF  *Var[6]  *Fixed[90.0] 
 55FC:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5618:  				Call     SetActorJumpscale 	( *Array[5] *Fixed[1.0] )
 562C:  				Call     SetGoalToPos 	( *Array[5] *Var[0] *Var[1] *Var[2] )
 5648:  				Call     JumpToGoal  	( *Array[5] 00000014 00000000 00000000 00000000 )
 5668:  			EndThread
 5670:  		EndIf
 5678:  		If  *Var[0]  &  00000040 
 5688:  			Kill     *Array[10] 
 5694:  			Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 56AC:  			If  *Var[1]  ==  00000000 
 56BC:  				Call     SetAnimation 	( *Array[6] 00000001 004C0012 )
 56D4:  			Else
 56DC:  				Call     SetAnimation 	( *Array[6] 00000001 004C0013 )
 56F4:  			EndIf
 56FC:  			Thread
 5704:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 5720:  				Call     GetActorPos 	( *Array[6] *Var[3] *Var[4] *Var[5] )
 573C:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 575C:  				DivF  *Var[6]  *Fixed[2.0] 
 576C:  				AddF  *Var[6]  *Fixed[90.0] 
 577C:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5798:  				Call     SetActorJumpscale 	( *Array[6] *Fixed[1.0] )
 57AC:  				Call     SetGoalToPos 	( *Array[6] *Var[0] *Var[1] *Var[2] )
 57C8:  				Call     JumpToGoal  	( *Array[6] 00000014 00000000 00000000 00000000 )
 57E8:  			EndThread
 57F0:  		EndIf
 57F8:  		If  *Var[0]  &  00000080 
 5808:  			Kill     *Array[11] 
 5814:  			Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 582C:  			If  *Var[1]  ==  00000000 
 583C:  				Call     SetAnimation 	( *Array[7] 00000001 004C0012 )
 5854:  			Else
 585C:  				Call     SetAnimation 	( *Array[7] 00000001 004C0013 )
 5874:  			EndIf
 587C:  			Thread
 5884:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 58A0:  				Call     GetActorPos 	( *Array[7] *Var[3] *Var[4] *Var[5] )
 58BC:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 58DC:  				DivF  *Var[6]  *Fixed[2.0] 
 58EC:  				AddF  *Var[6]  *Fixed[90.0] 
 58FC:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5918:  				Call     SetActorJumpscale 	( *Array[7] *Fixed[1.0] )
 592C:  				Call     SetGoalToPos 	( *Array[7] *Var[0] *Var[1] *Var[2] )
 5948:  				Call     JumpToGoal  	( *Array[7] 00000014 00000000 00000000 00000000 )
 5968:  			EndThread
 5970:  		EndIf
 5978:  		If  *Var[0]  &  00000100 
 5988:  			Kill     *Array[12] 
 5994:  			Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
 59AC:  			If  *Var[1]  ==  00000000 
 59BC:  				Call     SetAnimation 	( *Array[8] 00000001 004C0012 )
 59D4:  			Else
 59DC:  				Call     SetAnimation 	( *Array[8] 00000001 004C0013 )
 59F4:  			EndIf
 59FC:  			Thread
 5A04:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 5A20:  				Call     GetActorPos 	( *Array[8] *Var[3] *Var[4] *Var[5] )
 5A3C:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 5A5C:  				DivF  *Var[6]  *Fixed[2.0] 
 5A6C:  				AddF  *Var[6]  *Fixed[90.0] 
 5A7C:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5A98:  				Call     SetActorJumpscale 	( *Array[8] *Fixed[1.0] )
 5AAC:  				Call     SetGoalToPos 	( *Array[8] *Var[0] *Var[1] *Var[2] )
 5AC8:  				Call     JumpToGoal  	( *Array[8] 00000014 00000000 00000000 00000000 )
 5AE8:  			EndThread
 5AF0:  		EndIf
 5AF8:  		If  *Var[0]  &  00000200 
 5B08:  			Kill     *Array[13] 
 5B14:  			Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
 5B2C:  			If  *Var[1]  ==  00000000 
 5B3C:  				Call     SetAnimation 	( *Array[9] 00000001 004C0012 )
 5B54:  			Else
 5B5C:  				Call     SetAnimation 	( *Array[9] 00000001 004C0013 )
 5B74:  			EndIf
 5B7C:  			Thread
 5B84:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 5BA0:  				Call     GetActorPos 	( *Array[9] *Var[3] *Var[4] *Var[5] )
 5BBC:  				Call     $Function_80218AA0_19 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
 5BDC:  				DivF  *Var[6]  *Fixed[2.0] 
 5BEC:  				AddF  *Var[6]  *Fixed[90.0] 
 5BFC:  				Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
 5C18:  				Call     SetActorJumpscale 	( *Array[9] *Fixed[1.0] )
 5C2C:  				Call     SetGoalToPos 	( *Array[9] *Var[0] *Var[1] *Var[2] )
 5C48:  				Call     JumpToGoal  	( *Array[9] 00000014 00000000 00000000 00000000 )
 5C68:  			EndThread
 5C70:  		EndIf
 5C78:  		Call     GetPlayerHP 	( *Var[0] )
 5C88:  		If  *Var[0]  !=  00000000 
 5C98:  			Call     UseIdleAnimation 	( .Actor:Player .False )
 5CAC:  			Wait     00000001 
 5CB8:  			Call     GetStatusFlags ( .Actor:Player *Var[0] )
 5CCC:  			If  *Var[0]  !&  00100000 
 5CDC:  				Thread
 5CE4:  					Set  *Var[0]  00000000 
 5CF4:  					Loop     00000014 
 5D00:  						Add  *Var[0]  00000036 
 5D10:  						Mod  *Var[0]  00000168 
 5D20:  						Call     SetActorAngle 	( .Actor:Player *Var[0] )
 5D34:  						Wait     00000001 
 5D40:  					EndLoop
 5D48:  					Call     SetActorAngle 	( .Actor:Player 00000000 )
 5D5C:  				EndThread
 5D64:  				Call     SetJumpAnimations 	( .Actor:Player 00000000 00010007 00010007 00010009 )
 5D84:  				Call     SetActorJumpscale 	( .Actor:Player *Fixed[1.5] )
 5D98:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 5DB4:  				Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
 5DD0:  				Call     80273444 ( 00000014 00000000 00000001 )
 5DE8:  			Else
 5DF0:  				Wait     00000014 
 5DFC:  			EndIf
 5E04:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 5E18:  		Else
 5E20:  			Wait     00000014 
 5E2C:  		EndIf
 5E34:  		Wait     0000000F 
 5E40:  		Set  *Var[A]  00000000 
 5E50:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
 5E68:  		If  *Var[0]  &  00000010 
 5E78:  			Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
 5E90:  			If  *Var[1]  ==  00000000 
 5EA0:  				Call     SetAnimation 	( *Array[4] 00000001 004C0006 )
 5EB8:  			Else
 5EC0:  				Call     SetAnimation 	( *Array[4] 00000001 004C0007 )
 5ED8:  			EndIf
 5EE0:  			Thread
 5EE8:  				Call     SetActorVar 	( *Array[4] 00000002 00000000 )
 5F00:  				Mod  *Var[A]  00000002 
 5F10:  				If  *Var[A]  ==  00000000 
 5F20:  					Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
 5F34:  				Else
 5F3C:  					Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
 5F50:  				EndIf
 5F58:  				Call     SetGoalToHome 	( *Array[4] )
 5F68:  				Call     MoveToGoal  	( *Array[4] 0000001E 0000000A .Easing:SinOut )
 5F84:  				Call     SetSpriteAlpha ( *Array[4] 00000001 000000FF )
 5F9C:  				Call     SetActorAngle 	( *Array[4] 00000000 )
 5FB0:  				Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
 5FC8:  				If  *Var[1]  ==  00000000 
 5FD8:  					Call     SetAnimation 	( *Array[4] 00000001 004C0002 )
 5FF0:  				Else
 5FF8:  					Call     SetAnimation 	( *Array[4] 00000001 004C0003 )
 6010:  				EndIf
 6018:  			EndThread
 6020:  			Add  *Var[A]  00000001 
 6030:  			Wait     00000004 
 603C:  		EndIf
 6044:  		If  *Var[0]  &  00000200 
 6054:  			Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
 606C:  			If  *Var[1]  ==  00000000 
 607C:  				Call     SetAnimation 	( *Array[9] 00000001 004C0006 )
 6094:  			Else
 609C:  				Call     SetAnimation 	( *Array[9] 00000001 004C0007 )
 60B4:  			EndIf
 60BC:  			Thread
 60C4:  				Call     SetActorVar 	( *Array[9] 00000002 00000000 )
 60DC:  				Mod  *Var[A]  00000002 
 60EC:  				If  *Var[A]  ==  00000000 
 60FC:  					Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
 6110:  				Else
 6118:  					Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
 612C:  				EndIf
 6134:  				Call     SetGoalToHome 	( *Array[9] )
 6144:  				Call     MoveToGoal  	( *Array[9] 0000001E 0000000A .Easing:SinOut )
 6160:  				Call     SetSpriteAlpha ( *Array[9] 00000001 000000FF )
 6178:  				Call     SetActorAngle 	( *Array[9] 00000000 )
 618C:  				Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
 61A4:  				If  *Var[1]  ==  00000000 
 61B4:  					Call     SetAnimation 	( *Array[9] 00000001 004C0002 )
 61CC:  				Else
 61D4:  					Call     SetAnimation 	( *Array[9] 00000001 004C0003 )
 61EC:  				EndIf
 61F4:  			EndThread
 61FC:  			Add  *Var[A]  00000001 
 620C:  			Wait     00000004 
 6218:  		EndIf
 6220:  		If  *Var[0]  &  00000008 
 6230:  			Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
 6248:  			If  *Var[1]  ==  00000000 
 6258:  				Call     SetAnimation 	( *Array[3] 00000001 004C0006 )
 6270:  			Else
 6278:  				Call     SetAnimation 	( *Array[3] 00000001 004C0007 )
 6290:  			EndIf
 6298:  			Thread
 62A0:  				Call     SetActorVar 	( *Array[3] 00000002 00000000 )
 62B8:  				Mod  *Var[A]  00000002 
 62C8:  				If  *Var[A]  ==  00000000 
 62D8:  					Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
 62EC:  				Else
 62F4:  					Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
 6308:  				EndIf
 6310:  				Call     SetGoalToHome 	( *Array[3] )
 6320:  				Call     MoveToGoal  	( *Array[3] 0000001E 0000000A .Easing:SinOut )
 633C:  				Call     SetSpriteAlpha ( *Array[3] 00000001 000000FF )
 6354:  				Call     SetActorAngle 	( *Array[3] 00000000 )
 6368:  				Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
 6380:  				If  *Var[1]  ==  00000000 
 6390:  					Call     SetAnimation 	( *Array[3] 00000001 004C0002 )
 63A8:  				Else
 63B0:  					Call     SetAnimation 	( *Array[3] 00000001 004C0003 )
 63C8:  				EndIf
 63D0:  			EndThread
 63D8:  			Add  *Var[A]  00000001 
 63E8:  			Wait     00000004 
 63F4:  		EndIf
 63FC:  		If  *Var[0]  &  00000020 
 640C:  			Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
 6424:  			If  *Var[1]  ==  00000000 
 6434:  				Call     SetAnimation 	( *Array[5] 00000001 004C0006 )
 644C:  			Else
 6454:  				Call     SetAnimation 	( *Array[5] 00000001 004C0007 )
 646C:  			EndIf
 6474:  			Thread
 647C:  				Call     SetActorVar 	( *Array[5] 00000002 00000000 )
 6494:  				Mod  *Var[A]  00000002 
 64A4:  				If  *Var[A]  ==  00000000 
 64B4:  					Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
 64C8:  				Else
 64D0:  					Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
 64E4:  				EndIf
 64EC:  				Call     SetGoalToHome 	( *Array[5] )
 64FC:  				Call     MoveToGoal  	( *Array[5] 0000001E 0000000A .Easing:SinOut )
 6518:  				Call     SetSpriteAlpha ( *Array[5] 00000001 000000FF )
 6530:  				Call     SetActorAngle 	( *Array[5] 00000000 )
 6544:  				Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
 655C:  				If  *Var[1]  ==  00000000 
 656C:  					Call     SetAnimation 	( *Array[5] 00000001 004C0002 )
 6584:  				Else
 658C:  					Call     SetAnimation 	( *Array[5] 00000001 004C0003 )
 65A4:  				EndIf
 65AC:  			EndThread
 65B4:  			Add  *Var[A]  00000001 
 65C4:  			Wait     00000004 
 65D0:  		EndIf
 65D8:  		If  *Var[0]  &  00000002 
 65E8:  			Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
 6600:  			If  *Var[1]  ==  00000000 
 6610:  				Call     SetAnimation 	( *Array[1] 00000001 004C0006 )
 6628:  			Else
 6630:  				Call     SetAnimation 	( *Array[1] 00000001 004C0007 )
 6648:  			EndIf
 6650:  			Thread
 6658:  				Call     SetActorVar 	( *Array[1] 00000002 00000000 )
 6670:  				Mod  *Var[A]  00000002 
 6680:  				If  *Var[A]  ==  00000000 
 6690:  					Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
 66A4:  				Else
 66AC:  					Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
 66C0:  				EndIf
 66C8:  				Call     SetGoalToHome 	( *Array[1] )
 66D8:  				Call     MoveToGoal  	( *Array[1] 0000001E 0000000A .Easing:SinOut )
 66F4:  				Call     SetSpriteAlpha ( *Array[1] 00000001 000000FF )
 670C:  				Call     SetActorAngle 	( *Array[1] 00000000 )
 6720:  				Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
 6738:  				If  *Var[1]  ==  00000000 
 6748:  					Call     SetAnimation 	( *Array[1] 00000001 004C0002 )
 6760:  				Else
 6768:  					Call     SetAnimation 	( *Array[1] 00000001 004C0003 )
 6780:  				EndIf
 6788:  			EndThread
 6790:  			Add  *Var[A]  00000001 
 67A0:  			Wait     00000004 
 67AC:  		EndIf
 67B4:  		If  *Var[0]  &  00000001 
 67C4:  			Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
 67DC:  			If  *Var[1]  ==  00000000 
 67EC:  				Call     SetAnimation 	( *Array[0] 00000001 004C0006 )
 6804:  			Else
 680C:  				Call     SetAnimation 	( *Array[0] 00000001 004C0007 )
 6824:  			EndIf
 682C:  			Thread
 6834:  				Call     SetActorVar 	( *Array[0] 00000002 00000000 )
 684C:  				Mod  *Var[A]  00000002 
 685C:  				If  *Var[A]  ==  00000000 
 686C:  					Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
 6880:  				Else
 6888:  					Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
 689C:  				EndIf
 68A4:  				Call     SetGoalToHome 	( *Array[0] )
 68B4:  				Call     MoveToGoal  	( *Array[0] 0000001E 0000000A .Easing:SinOut )
 68D0:  				Call     SetSpriteAlpha ( *Array[0] 00000001 000000FF )
 68E8:  				Call     SetActorAngle 	( *Array[0] 00000000 )
 68FC:  				Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
 6914:  				If  *Var[1]  ==  00000000 
 6924:  					Call     SetAnimation 	( *Array[0] 00000001 004C0002 )
 693C:  				Else
 6944:  					Call     SetAnimation 	( *Array[0] 00000001 004C0003 )
 695C:  				EndIf
 6964:  			EndThread
 696C:  			Add  *Var[A]  00000001 
 697C:  			Wait     00000004 
 6988:  		EndIf
 6990:  		If  *Var[0]  &  00000100 
 69A0:  			Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
 69B8:  			If  *Var[1]  ==  00000000 
 69C8:  				Call     SetAnimation 	( *Array[8] 00000001 004C0006 )
 69E0:  			Else
 69E8:  				Call     SetAnimation 	( *Array[8] 00000001 004C0007 )
 6A00:  			EndIf
 6A08:  			Thread
 6A10:  				Call     SetActorVar 	( *Array[8] 00000002 00000000 )
 6A28:  				Mod  *Var[A]  00000002 
 6A38:  				If  *Var[A]  ==  00000000 
 6A48:  					Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
 6A5C:  				Else
 6A64:  					Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
 6A78:  				EndIf
 6A80:  				Call     SetGoalToHome 	( *Array[8] )
 6A90:  				Call     MoveToGoal  	( *Array[8] 0000001E 0000000A .Easing:SinOut )
 6AAC:  				Call     SetSpriteAlpha ( *Array[8] 00000001 000000FF )
 6AC4:  				Call     SetActorAngle 	( *Array[8] 00000000 )
 6AD8:  				Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
 6AF0:  				If  *Var[1]  ==  00000000 
 6B00:  					Call     SetAnimation 	( *Array[8] 00000001 004C0002 )
 6B18:  				Else
 6B20:  					Call     SetAnimation 	( *Array[8] 00000001 004C0003 )
 6B38:  				EndIf
 6B40:  			EndThread
 6B48:  			Add  *Var[A]  00000001 
 6B58:  			Wait     00000004 
 6B64:  		EndIf
 6B6C:  		If  *Var[0]  &  00000004 
 6B7C:  			Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 6B94:  			If  *Var[1]  ==  00000000 
 6BA4:  				Call     SetAnimation 	( *Array[2] 00000001 004C0006 )
 6BBC:  			Else
 6BC4:  				Call     SetAnimation 	( *Array[2] 00000001 004C0007 )
 6BDC:  			EndIf
 6BE4:  			Thread
 6BEC:  				Call     SetActorVar 	( *Array[2] 00000002 00000000 )
 6C04:  				Mod  *Var[A]  00000002 
 6C14:  				If  *Var[A]  ==  00000000 
 6C24:  					Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
 6C38:  				Else
 6C40:  					Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
 6C54:  				EndIf
 6C5C:  				Call     SetGoalToHome 	( *Array[2] )
 6C6C:  				Call     MoveToGoal  	( *Array[2] 0000001E 0000000A .Easing:SinOut )
 6C88:  				Call     SetSpriteAlpha ( *Array[2] 00000001 000000FF )
 6CA0:  				Call     SetActorAngle 	( *Array[2] 00000000 )
 6CB4:  				Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
 6CCC:  				If  *Var[1]  ==  00000000 
 6CDC:  					Call     SetAnimation 	( *Array[2] 00000001 004C0002 )
 6CF4:  				Else
 6CFC:  					Call     SetAnimation 	( *Array[2] 00000001 004C0003 )
 6D14:  				EndIf
 6D1C:  			EndThread
 6D24:  			Add  *Var[A]  00000001 
 6D34:  			Wait     00000004 
 6D40:  		EndIf
 6D48:  		If  *Var[0]  &  00000080 
 6D58:  			Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 6D70:  			If  *Var[1]  ==  00000000 
 6D80:  				Call     SetAnimation 	( *Array[7] 00000001 004C0006 )
 6D98:  			Else
 6DA0:  				Call     SetAnimation 	( *Array[7] 00000001 004C0007 )
 6DB8:  			EndIf
 6DC0:  			Thread
 6DC8:  				Call     SetActorVar 	( *Array[7] 00000002 00000000 )
 6DE0:  				Mod  *Var[A]  00000002 
 6DF0:  				If  *Var[A]  ==  00000000 
 6E00:  					Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
 6E14:  				Else
 6E1C:  					Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
 6E30:  				EndIf
 6E38:  				Call     SetGoalToHome 	( *Array[7] )
 6E48:  				Call     MoveToGoal  	( *Array[7] 0000001E 0000000A .Easing:SinOut )
 6E64:  				Call     SetSpriteAlpha ( *Array[7] 00000001 000000FF )
 6E7C:  				Call     SetActorAngle 	( *Array[7] 00000000 )
 6E90:  				Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
 6EA8:  				If  *Var[1]  ==  00000000 
 6EB8:  					Call     SetAnimation 	( *Array[7] 00000001 004C0002 )
 6ED0:  				Else
 6ED8:  					Call     SetAnimation 	( *Array[7] 00000001 004C0003 )
 6EF0:  				EndIf
 6EF8:  			EndThread
 6F00:  			Add  *Var[A]  00000001 
 6F10:  			Wait     00000004 
 6F1C:  		EndIf
 6F24:  		If  *Var[0]  &  00000040 
 6F34:  			Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 6F4C:  			If  *Var[1]  ==  00000000 
 6F5C:  				Call     SetAnimation 	( *Array[6] 00000001 004C0006 )
 6F74:  			Else
 6F7C:  				Call     SetAnimation 	( *Array[6] 00000001 004C0007 )
 6F94:  			EndIf
 6F9C:  			Thread
 6FA4:  				Call     SetActorVar 	( *Array[6] 00000002 00000000 )
 6FBC:  				Mod  *Var[A]  00000002 
 6FCC:  				If  *Var[A]  ==  00000000 
 6FDC:  					Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
 6FF0:  				Else
 6FF8:  					Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
 700C:  				EndIf
 7014:  				Call     SetGoalToHome 	( *Array[6] )
 7024:  				Call     MoveToGoal  	( *Array[6] 0000001E 0000000A .Easing:SinOut )
 7040:  				Call     SetSpriteAlpha ( *Array[6] 00000001 000000FF )
 7058:  				Call     SetActorAngle 	( *Array[6] 00000000 )
 706C:  				Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
 7084:  				If  *Var[1]  ==  00000000 
 7094:  					Call     SetAnimation 	( *Array[6] 00000001 004C0002 )
 70AC:  				Else
 70B4:  					Call     SetAnimation 	( *Array[6] 00000001 004C0003 )
 70CC:  				EndIf
 70D4:  			EndThread
 70DC:  			Add  *Var[A]  00000001 
 70EC:  			Wait     00000004 
 70F8:  		EndIf
 7100:  		Wait     00000032 
 710C:  	EndCaseGroup
 7114:  EndSwitch
 711C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 7130:  Return
 7138:  End

#new:IdleAnimations $IdleAnimations_8022F580_19
.Status:Normal    004C0002
.Status:Stone     004C0000
.Status:Sleep     004C0002
.Status:Poison    004C0002
.Status:Stop      004C0000
.Status:Static    004C0002
.Status:Paralyze  004C0002
.Status:Paralyze  004C0000
.Status:Dizzy     004C0002
.Status:Dizzy     004C0002
.Status:Fear      004C0002
.Status:End

#new:IdleAnimations $IdleAnimations_8022F5DC_19
.Status:Normal    004C0003
.Status:Stone     004C0001
.Status:Sleep     004C0003
.Status:Poison    004C0003
.Status:Stop      004C0001
.Status:Static    004C0003
.Status:Paralyze  004C0003
.Status:Paralyze  004C0001
.Status:Dizzy     004C0003
.Status:Dizzy     004C0003
.Status:Fear      004C0003
.Status:End

#new:DefenseTable $DefenseTable_8022F638_19
.Element:Normal 00000000
.Element:Shock  00000063
.Element:Mystery00000000
.Element:Jump   00000000
.Element:Hammer 00000000
.Element:End

#new:StatusTable $StatusTable_8022F664_19
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022F710_19
00020022 01000000 000000FF $IdleAnimations_8022F580_19 $DefenseTable_8022F638_19 00000000 00000000 00000000 00000000 
80800023 02003200 00CE00FF 00000000 $DefenseTable_8022F638_19 00000000 00000000 00000000 00000000 

#new:Actor $TuffPuff_19
% stats
[Index]        BBb 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00208200 
[StatusTable] $StatusTable_8022F664_19 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8022F710_19 
[Script]      $Script_Init_8022F780_19 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b   0`b % dx dy
[StatusIcon]   10`b  10`b % dx dy

#new:Script $Script_Init_8022F780_19
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802305E8_19 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022FA10_19 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022FE2C_19 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022FA00_19 )
   50:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   68:  If  *Var[0]  ==  00000000 
   78:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   94:  	Call     8027D4C8 ( FFFFFF81 00000002 FFFFFFFF FFFFFFF7 )
   B0:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 00000009 )
   CC:  	Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFFF FFFFFFD7 )
   E8:  	Call     8027D810 ( FFFFFF81 00000014 00000019 )
  100:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022F580_19 )
  118:  	Call     SetAnimation 	( .Actor:Self 00000001 004C0002 )
  130:  	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  148:  Else
  150:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFF8 FFFFFFF3 )
  16C:  	Call     8027D4C8 ( FFFFFF81 00000002 FFFFFFF8 FFFFFFF3 )
  188:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000001 0000000E )
  1A4:  	Call     SetTargetOffset 	( .Actor:Self 00000002 00000001 FFFFFFDC )
  1C0:  	Call     8027D810 ( FFFFFF81 0000001C 00000023 )
  1D8:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022F5DC_19 )
  1F0:  	Call     SetAnimation 	( .Actor:Self 00000001 004C0003 )
  208:  	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  220:  EndIf
  228:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  240:  Call     SetActorVar 	( .Actor:Self 00000003 00000064 )
  258:  Call     SetActorVar 	( .Actor:Self 00000004 00000064 )
  270:  Return
  278:  End

#new:Script $Script_NextTurn_8022FA00_19
    0:  Return
    8:  End

#new:Script $Script_Idle_8022FA10_19
    0:  Set  *Var[F]  00000000 
   10:  Loop     
   1C:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[A] )
   34:  	Switch  *Var[A] 
   40:  		Case  ==  00000000 
   4C:  			Call     $Function_80218C40_19 ( *Var[F] *Var[0] *Fixed[0.9707031] *Fixed[1.0302734] 0000000F 00000000 00000000 )
   74:  			Call     $Function_80218C40_19 ( *Var[F] *Var[1] *Fixed[1.0302734] *Fixed[0.9707031] 0000000F 00000000 00000000 )
   9C:  			Add  *Var[F]  00000001 
   AC:  		Case  ==  00000001 
   B8:  			Call     $Function_80218C40_19 ( *Var[F] *Var[0] *Fixed[0.9501953] *Fixed[1.0507812] 0000000F 00000000 00000000 )
   E0:  			Call     $Function_80218C40_19 ( *Var[F] *Var[1] *Fixed[1.0507812] *Fixed[0.9501953] 0000000F 00000000 00000000 )
  108:  			Add  *Var[F]  00000003 
  118:  		Case  ==  00000002 
  124:  			Call     $Function_80218C40_19 ( *Var[F] *Var[0] *Fixed[0.9003906] *Fixed[1.1005859] 0000000F 00000000 00000000 )
  14C:  			Call     $Function_80218C40_19 ( *Var[F] *Var[1] *Fixed[1.1005859] *Fixed[0.9003906] 0000000F 00000000 00000000 )
  174:  			Add  *Var[F]  00000005 
  184:  	EndSwitch
  18C:  	Call     GetActorVar 	( .Actor:Self 00000003 *Var[2] )
  1A4:  	Call     GetActorVar 	( .Actor:Self 00000004 *Var[3] )
  1BC:  	DivF  *Var[2]  *Fixed[100.0] 
  1CC:  	DivF  *Var[3]  *Fixed[100.0] 
  1DC:  	MulF  *Var[1]  *Var[2] 
  1EC:  	MulF  *Var[0]  *Var[3] 
  1FC:  	Call     SetActorScale 	( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
  218:  	If  *Var[F]  >=  0000001E 
  228:  		Set  *Var[F]  00000000 
  238:  	EndIf
  240:  	Wait     00000001 
  24C:  EndLoop
  254:  Return
  25C:  End

#new:Script $Script_8022FC74_19
    0:  Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
   14:  If  *Var[0]  ==  00000000 
   24:  	Return
   2C:  EndIf
   34:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   4C:  Call     GetActorVar 	( .Actor:Enemy0 00000002 *Var[1] )
   64:  Switch  *Var[0] 
   70:  	Case  ==  00000000 
   7C:  		ConstAND *Var[1] FFFFFFFE 
   8C:  	Case  ==  00000001 
   98:  		ConstAND *Var[1] FFFFFFFD 
   A8:  	Case  ==  00000002 
   B4:  		ConstAND *Var[1] FFFFFFFB 
   C4:  	Case  ==  00000003 
   D0:  		ConstAND *Var[1] FFFFFFF7 
   E0:  	Case  ==  00000004 
   EC:  		ConstAND *Var[1] FFFFFFEF 
   FC:  	Case  ==  00000005 
  108:  		ConstAND *Var[1] FFFFFFDF 
  118:  	Case  ==  00000006 
  124:  		ConstAND *Var[1] FFFFFFBF 
  134:  	Case  ==  00000007 
  140:  		ConstAND *Var[1] FFFFFF7F 
  150:  	Case  ==  00000008 
  15C:  		ConstAND *Var[1] FFFFFEFF 
  16C:  	Case  ==  00000009 
  178:  		ConstAND *Var[1] FFFFFDFF 
  188:  EndSwitch
  190:  Call     SetActorVar 	( .Actor:Enemy0 00000002 *Var[1] )
  1A8:  Return
  1B0:  End

#new:Script $Script_HandleEvent_8022FE2C_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	Case  ==  .Event:HitCombo
   40:  		SetConst  *Var[0]  00000001 
   50:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
   68:  		If  *Var[1]  ==  00000000 
   78:  			SetConst  *Var[1]  004C000C 
   88:  		Else
   90:  			SetConst  *Var[1]  004C000D 
   A0:  		EndIf
   A8:  		ExecWait DoNormalHit 
   B4:  	Case  ==  .Event:Hit
   C0:  		SetConst  *Var[0]  00000001 
   D0:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
   E8:  		If  *Var[1]  ==  00000000 
   F8:  			SetConst  *Var[1]  004C000C 
  108:  		Else
  110:  			SetConst  *Var[1]  004C000D 
  120:  		EndIf
  128:  		ExecWait DoNormalHit 
  134:  	Case  ==  .Event:BurnHit
  140:  		Set  *Var[0]  00000001 
  150:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  168:  		If  *Var[1]  ==  00000000 
  178:  			SetConst  *Var[1]  004C000E 
  188:  		Else
  190:  			SetConst  *Var[1]  004C0010 
  1A0:  		EndIf
  1A8:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[2] )
  1C0:  		If  *Var[2]  ==  00000000 
  1D0:  			SetConst  *Var[2]  004C000F 
  1E0:  		Else
  1E8:  			SetConst  *Var[2]  004C0011 
  1F8:  		EndIf
  200:  		ExecWait DoBurnHit 
  20C:  	Case  ==  .Event:BurnDeath
  218:  		Set  *Var[0]  00000001 
  228:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  240:  		If  *Var[1]  ==  00000000 
  250:  			SetConst  *Var[1]  004C000E 
  260:  		Else
  268:  			SetConst  *Var[1]  004C0010 
  278:  		EndIf
  280:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[2] )
  298:  		If  *Var[2]  ==  00000000 
  2A8:  			SetConst  *Var[2]  004C000F 
  2B8:  		Else
  2C0:  			SetConst  *Var[2]  004C0011 
  2D0:  		EndIf
  2D8:  		ExecWait DoBurnHit 
  2E4:  		ExecWait $Script_8022FC74_19 
  2F0:  		SetConst  *Var[0]  00000001 
  300:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  318:  		If  *Var[1]  ==  00000000 
  328:  			SetConst  *Var[1]  004C000F 
  338:  		Else
  340:  			SetConst  *Var[1]  004C0011 
  350:  		EndIf
  358:  		ExecWait DoDeath 
  364:  		Return
  36C:  	Case  ==  00000017
  378:  		SetConst  *Var[0]  00000001 
  388:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  3A0:  		If  *Var[1]  ==  00000000 
  3B0:  			SetConst  *Var[1]  004C0002 
  3C0:  		Else
  3C8:  			SetConst  *Var[1]  004C0003 
  3D8:  		EndIf
  3E0:  		ExecWait DoImmune 
  3EC:  	Case  ==  .Event:Immune
  3F8:  		SetConst  *Var[0]  00000001 
  408:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  420:  		If  *Var[1]  ==  00000000 
  430:  			SetConst  *Var[1]  004C0002 
  440:  		Else
  448:  			SetConst  *Var[1]  004C0003 
  458:  		EndIf
  460:  		ExecWait DoImmune 
  46C:  	Case  ==  .Event:Death
  478:  		SetConst  *Var[0]  00000001 
  488:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  4A0:  		If  *Var[1]  ==  00000000 
  4B0:  			SetConst  *Var[1]  004C000C 
  4C0:  		Else
  4C8:  			SetConst  *Var[1]  004C000D 
  4D8:  		EndIf
  4E0:  		ExecWait DoNormalHit 
  4EC:  		ExecWait $Script_8022FC74_19 
  4F8:  		SetConst  *Var[0]  00000001 
  508:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  520:  		If  *Var[1]  ==  00000000 
  530:  			SetConst  *Var[1]  004C000C 
  540:  		Else
  548:  			SetConst  *Var[1]  004C000D 
  558:  		EndIf
  560:  		ExecWait DoDeath 
  56C:  		Return
  574:  	Case  ==  .Event:RecoverStatus
  580:  		SetConst  *Var[0]  00000001 
  590:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  5A8:  		If  *Var[1]  ==  00000000 
  5B8:  			SetConst  *Var[1]  004C0002 
  5C8:  		Else
  5D0:  			SetConst  *Var[1]  004C0003 
  5E0:  		EndIf
  5E8:  		ExecWait DoRecover 
  5F4:  	Case  ==  .Event:BeginAirLift
  600:  		SetConst  *Var[0]  00000001 
  610:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  628:  		If  *Var[1]  ==  00000000 
  638:  			SetConst  *Var[1]  004C0006 
  648:  		Else
  650:  			SetConst  *Var[1]  004C0007 
  660:  		EndIf
  668:  		ExecWait DoAirLift 
  674:  	Case  ==  .Event:BlowAway
  680:  		ExecWait $Script_8022FC74_19 
  68C:  		SetConst  *Var[0]  00000001 
  69C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  6B4:  		If  *Var[1]  ==  00000000 
  6C4:  			SetConst  *Var[1]  004C000C 
  6D4:  		Else
  6DC:  			SetConst  *Var[1]  004C000D 
  6EC:  		EndIf
  6F4:  		ExecWait DoBlowAway 
  700:  		Return
  708:  	Case  ==  .Event:AirLiftFailed
  714:  		SetConst  *Var[0]  00000001 
  724:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  73C:  		If  *Var[1]  ==  00000000 
  74C:  			SetConst  *Var[1]  004C0002 
  75C:  		Else
  764:  			SetConst  *Var[1]  004C0003 
  774:  		EndIf
  77C:  		ExecWait DoImmune 
  788:  	Default
  790:  EndSwitch
  798:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7AC:  Return
  7B4:  End

#new:Script $Script_TakeTurn_802305E8_19
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
   3C:  Call     UseIdleAnimation 	( .Actor:Self .True )
   50:  Return
   58:  End

