% Automatically dumped from section 1B

#new:Actor $1B_ElectroBlooper
% stats
[Index]        C8b 
[Level]        50`b 
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021C664_1B 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8021C7BC_1B 
[Script]      $Script_Init_8021C82C_1B 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         95`b 105`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b  40`b % dx dy
[StatusIcon]   25`b  85`b % dx dy

#new:Function $Function_80218200_1B
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_802182EC_1B
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o48
   10:  SW        RA, 14 (SP)
   14:  JAL       8011D82C
   18:  ADDIU     A0, R0, 1
   1C:  DADDU     A0, R0, R0
   20:  DADDU     A1, A0, R0
   24:  DADDU     A2, A0, R0
   28:  DADDU     A3, A0, R0
   2C:  LAW       V0, 801512F0
   34:  ADDIU     V1, R0, 1
   38:  JAL       8011BE5C
   3C:  SB        V1, 0 (V0)
   40:  ADDIU     V0, R0, 14
   44:  SW        V0, 70 (S0)
        .o48
   48:  DADDU     A0, R0, R0
   4C:  DADDU     A1, A0, R0
   50:  DADDU     A2, A0, R0
   54:  LW        V1, 70 (S0)
   58:  ADDIU     V0, R0, 14
   5C:  SUBU      V0, V0, V1
   60:  SLL       A3, V0, 2
   64:  ADDU      A3, A3, V0
   68:  SLL       A3, A3, 1
   6C:  JAL       8011BE5C
   70:  ANDI      A3, A3, FE
   74:  LW        V0, 70 (S0)
   78:  ADDIU     V0, V0, FFFF
   7C:  SW        V0, 70 (S0)
   80:  SLTIU     V0, V0, 1
   84:  LW        RA, 14 (SP)
   88:  LW        S0, 10 (SP)
   8C:  SLL       V0, V0, 1
   90:  JR        RA
   94:  ADDIU     SP, SP, 18

#new:Function $Function_80218384_1B
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o1C
   10:  SW        RA, 14 (SP)
   14:  ADDIU     V0, R0, 14
   18:  SW        V0, 70 (S0)
        .o1C
   1C:  DADDU     A0, R0, R0
   20:  DADDU     A1, A0, R0
   24:  LW        V0, 70 (S0)
   28:  DADDU     A2, A0, R0
   2C:  SLL       A3, V0, 2
   30:  ADDU      A3, A3, V0
   34:  SLL       A3, A3, 1
   38:  JAL       8011BE5C
   3C:  ANDI      A3, A3, FE
   40:  LW        V0, 70 (S0)
   44:  ADDIU     V0, V0, FFFF
   48:  BEQ       V0, R0, .o58
   4C:  SW        V0, 70 (S0)
   50:  BEQ       R0, R0, .o70
   54:  DADDU     V0, R0, R0
        .o58
   58:  DADDU     A0, R0, R0
   5C:  DADDU     A1, A0, R0
   60:  DADDU     A2, A0, R0
   64:  JAL       8011BE5C
   68:  DADDU     A3, A0, R0
   6C:  ADDIU     V0, R0, 2
        .o70
   70:  LW        RA, 14 (SP)
   74:  LW        S0, 10 (SP)
   78:  JR        RA
   7C:  ADDIU     SP, SP, 18

#new:Function $Function_80218404_1B
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  DADDU     A0, S1, R0
   40:  JAL       {Func:GetVariable}
   44:  DADDU     S2, V0, R0
   48:  LW        A1, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  MTC1      V0, F24
   54:  NOP
   58:  CVT.S.W   F24, F24
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     A0, S1, R0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  MTC1      V0, F22
   70:  NOP
   74:  CVT.S.W   F22, F22
   78:  JAL       {Func:GetVariable}
   7C:  DADDU     A0, S1, R0
   80:  LW        A1, 0 (S0)
   84:  MTC1      V0, F20
   88:  NOP
   8C:  CVT.S.W   F20, F20
   90:  JAL       {Func:GetFloatVariable}
   94:  DADDU     A0, S1, R0
   98:  LW        V0, C (S2)
   9C:  SWC1      F24, 4 (V0)
   A0:  LW        V0, C (S2)
   A4:  SWC1      F22, 8 (V0)
   A8:  LW        V0, C (S2)
   AC:  SWC1      F20, C (V0)
   B0:  LW        V1, C (S2)
   B4:  SWC1      F0, 38 (V1)
   B8:  LW        RA, 1C (SP)
   BC:  LW        S2, 18 (SP)
   C0:  LW        S1, 14 (SP)
   C4:  LW        S0, 10 (SP)
   C8:  LDC1      F24, 30 (SP)
   CC:  LDC1      F22, 28 (SP)
   D0:  LDC1      F20, 20 (SP)
   D4:  ADDIU     V0, R0, 2
   D8:  JR        RA
   DC:  ADDIU     SP, SP, 38

#new:Function $Function_802184E4_1B
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S0, 18 (SP)
   14:  SDC1      F28, 48 (SP)
   18:  SDC1      F26, 40 (SP)
   1C:  SDC1      F24, 38 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       {Func:GetVariable}
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  MTC1      V0, F28
   44:  NOP
   48:  CVT.S.W   F28, F28
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     A0, S1, R0
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  MTC1      V0, F26
   60:  NOP
   64:  CVT.S.W   F26, F26
   68:  JAL       {Func:GetVariable}
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  ADDIU     S0, S0, 4
   78:  JAL       {Func:GetVariable}
   7C:  DADDU     A0, S1, R0
   80:  LW        A1, 0 (S0)
   84:  ADDIU     S0, S0, 4
   88:  MTC1      V0, F20
   8C:  NOP
   90:  CVT.S.W   F20, F20
   94:  JAL       {Func:GetVariable}
   98:  DADDU     A0, S1, R0
   9C:  LW        A1, 0 (S0)
   A0:  MTC1      V0, F22
   A4:  NOP
   A8:  CVT.S.W   F22, F22
   AC:  JAL       {Func:GetVariable}
   B0:  DADDU     A0, S1, R0
   B4:  LIF       F0, 40.0
   BC:  MTC1      V0, F24
   C0:  NOP
   C4:  CVT.S.W   F24, F24
   C8:  ADD.S     F0, F22, F0
   CC:  MOV.S     F12, F28
   D0:  MFC1      A2, F20
   D4:  MFC1      A3, F0
   D8:  JAL       80029C80
   DC:  MOV.S     F14, F26
   E0:  LIF       F2, 10.0
   E8:  DADDU     A0, R0, R0
   EC:  SUB.S     F20, F20, F2
   F0:  LIF       F2, 60.0
   F8:  LIF       F4, 2.5
  100:  ADD.S     F22, F22, F2
  104:  LIF       F2, 20.0
  10C:  ADDIU     V0, R0, 28
  110:  SW        V0, 14 (SP)
  114:  SWC1      F4, 10 (SP)
  118:  ADD.S     F24, F24, F2
  11C:  MFC1      A1, F20
  120:  MFC1      A2, F22
  124:  MFC1      A3, F24
  128:  JAL       80071B10
  12C:  MOV.S     F20, F0
  130:  LW        V1, C (V0)
  134:  SWC1      F20, 38 (V1)
  138:  LW        V1, C (V0)
  13C:  ADDIU     A0, R0, 2
  140:  SW        A0, 18 (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 1C (V1)
  14C:  LW        V1, C (V0)
  150:  SW        A0, 20 (V1)
  154:  LW        V1, C (V0)
  158:  ADDIU     A0, R0, 50
  15C:  SW        A0, 28 (V1)
  160:  LW        V1, C (V0)
  164:  SW        A0, 2C (V1)
  168:  LW        V1, C (V0)
  16C:  SW        A0, 30 (V1)
  170:  LW        RA, 20 (SP)
  174:  LW        S1, 1C (SP)
  178:  LW        S0, 18 (SP)
  17C:  LDC1      F28, 48 (SP)
  180:  LDC1      F26, 40 (SP)
  184:  LDC1      F24, 38 (SP)
  188:  LDC1      F22, 30 (SP)
  18C:  LDC1      F20, 28 (SP)
  190:  ADDIU     V0, R0, 2
  194:  JR        RA
  198:  ADDIU     SP, SP, 50

#new:Script $Script_8021C070_1B
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
   30:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   4C:  If  *Var[B]  >  00000014 
   5C:  	Sub  *Var[B]  00000014 
   6C:  Else
   74:  	Set  *Var[B]  00000000 
   84:  EndIf
   8C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
   A0:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   BC:  Call     80279BEC ( FFFFFF81 00000008 )
   D0:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
   EC:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  100:  Set  *Var[7]  *Var[4] 
  110:  Add  *Var[7]  *Var[4] 
  120:  Add  *Var[7]  *Var[0] 
  130:  MulF  *Var[7]  *Fixed[0.33007812] 
  140:  Set  *Var[8]  *Var[5] 
  150:  Add  *Var[8]  *Var[5] 
  160:  Add  *Var[8]  *Var[1] 
  170:  MulF  *Var[8]  *Fixed[0.33007812] 
  180:  Set  *Var[9]  *Var[6] 
  190:  Add  *Var[9]  *Var[6] 
  1A0:  Add  *Var[9]  *Var[2] 
  1B0:  MulF  *Var[9]  *Fixed[0.33007812] 
  1C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  1D4:  Call     SetGoalToPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  1F0:  Call     MoveToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  20C:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  224:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
  23C:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  258:  Sub  *Var[B]  00000014 
  268:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  284:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
  298:  Call     80279BEC ( FFFFFF81 00000008 )
  2AC:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  2C0:  Set  *Var[7]  *Var[0] 
  2D0:  Add  *Var[7]  *Var[0] 
  2E0:  Add  *Var[7]  *Var[4] 
  2F0:  MulF  *Var[7]  *Fixed[0.33007812] 
  300:  Set  *Var[8]  *Var[1] 
  310:  Add  *Var[8]  *Var[1] 
  320:  Add  *Var[8]  *Var[5] 
  330:  MulF  *Var[8]  *Fixed[0.33007812] 
  340:  Set  *Var[9]  *Var[2] 
  350:  Add  *Var[9]  *Var[2] 
  360:  Add  *Var[9]  *Var[6] 
  370:  MulF  *Var[9]  *Fixed[0.33007812] 
  380:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  394:  Call     SetGoalToPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  3B0:  Call     MoveToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  3CC:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  3E4:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
  3FC:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  418:  Sub  *Var[B]  00000014 
  428:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  444:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
  458:  Call     80279BEC ( FFFFFF81 00000008 )
  46C:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  480:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  494:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B0:  Call     MoveToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
  4CC:  Return
  4D4:  End

#new:Script $Script_8021C54C_1B
    0:  Call     SetGoalToHome 	( .Actor:Self )
   10:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   2C:  Set  *Var[3]  0000000C 
   3C:  ExecWait $Script_8021C070_1B 
   48:  Return
   50:  End

#new:IdleAnimations $IdleAnimations_8021C5A4_1B
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End

#new:IdleAnimations $IdleAnimations_8021C5E0_1B
.Status:Normal    0050000C
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    0050000C
.Status:End

#new:IdleAnimations $IdleAnimations_8021C61C_1B
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End

#new:DefenseTable $DefenseTable_8021C658_1B
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021C664_1B
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     80`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_8021C710_1B
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      25`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     70`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021C7BC_1B
00020000 01000000 005000FF $IdleAnimations_8021C5A4_1B $DefenseTable_8021C658_1B 00000000 00000000 00000000 00000000 
00800000 02001400 003C00FF 00000000 $DefenseTable_8021C658_1B 00000000 00000000 00DB0000 00000000 

#new:Script $Script_Init_8021C82C_1B
    0:  Call     ForceHomePos 	( .Actor:Self 0000005A 0000002D FFFFFFF6 )
   1C:  Call     HPBarToHome 	( .Actor:Self )
   2C:  Call     SetActorScale 	( .Actor:Self *Fixed[1.25] *Fixed[1.25] *Fixed[1.0] )
   48:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   60:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   78:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   90:  Exec     $Script_UpdateElectictyPosition_1B 
   9C:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D40C_1B )
   B0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021CAB0_1B )
   C4:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021CEE8_1B )
   D8:  Return
   E0:  End

#new:Script $Script_UpdateElectictyPosition_1B
    0:  Label    00000000 
    C:  Call     ActorExists 	( .Actor:Self *Var[0] )
   20:  If  *Var[0]  ==  00000000 
   30:  	Return
   38:  EndIf
   40:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   58:  If  *Var[0]  !=  00000001 
   68:  	Goto     00000063 
   74:  EndIf
   7C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   94:  If  *Var[0]  ==  00000000 
   A4:  	Goto     00000063 
   B0:  EndIf
   B8:  Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   D4:  Call     GetStatusFlags ( .Actor:Self *Var[4] )
   E8:  If  *Var[4]  !&  00080000 
   F8:  	Add  *Var[2]  0000002D 
  108:  	SetF  *Var[4]  *Fixed[1.6005859] 
  118:  Else
  120:  	Add  *Var[2]  00000012 
  130:  	SetF  *Var[4]  *Fixed[0.640625] 
  140:  EndIf
  148:  Call     $Function_80218404_1B ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] )
  168:  Label    00000063 
  174:  Wait     00000001 
  180:  Goto     00000000 
  18C:  Return
  194:  End

#new:Script $Script_Idle_8021CAB0_1B
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   20:  If  *Var[A]  &  00351000 
   30:  	Wait     00000001 
   3C:  	Goto     00000000 
   48:  EndIf
   50:  Call     80269F2C ( FFFFFF81 )
   60:  Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
   7C:  Add  *Var[1]  00000000 
   8C:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
   A8:  If  *Var[4]  >=  *Var[1] 
   B8:  	Goto     0000000B 
   C4:  EndIf
   CC:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C5E0_1B )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
   FC:  Wait     00000009 
  108:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
  120:  Call     8026B5D8 ( FFFFFF81 *Fixed[1.0] )
  134:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  148:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  164:  Call     8027BBB8 ( FFFFFF81 00000000 00000000 0000000B )
  180:  Label    0000000B 
  18C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1A0:  If  *Var[A]  &  00351000 
  1B0:  	Wait     00000001 
  1BC:  	Goto     00000000 
  1C8:  EndIf
  1D0:  Call     80269F2C ( FFFFFF81 )
  1E0:  Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  1FC:  Add  *Var[1]  0000000A 
  20C:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  228:  If  *Var[4]  >=  *Var[1] 
  238:  	Goto     0000000C 
  244:  EndIf
  24C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C5E0_1B )
  264:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  27C:  Wait     00000009 
  288:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
  2A0:  Call     8026B5D8 ( FFFFFF81 *Fixed[1.0] )
  2B4:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  2C8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  2E4:  Call     8027BBB8 ( FFFFFF81 00000000 00000000 0000000B )
  300:  Wait     00000003 
  30C:  Label    0000000C 
  318:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  32C:  If  *Var[A]  &  00351000 
  33C:  	Wait     00000001 
  348:  	Goto     00000000 
  354:  EndIf
  35C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C61C_1B )
  374:  Call     80269F2C ( FFFFFF81 )
  384:  Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  3A0:  Add  *Var[1]  FFFFFFF6 
  3B0:  Call     8026B5D8 ( FFFFFF81 *Fixed[0.80078125] )
  3C4:  Call     8026B6D0 ( FFFFFF81 *Fixed[0.30078125] )
  3D8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  3F4:  Call     8027BBB8 ( FFFFFF81 00000000 00000001 0000000B )
  410:  Wait     00000001 
  41C:  Goto     00000000 
  428:  Return
  430:  End

#new:Script $Script_HandleEvent_8021CEE8_1B
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00500004 
   80:  		ExecWait DoNormalHit 
   8C:  		ExecWait $Script_8021EE44_1B 
   98:  	EndCaseGroup
   A0:  	Case  ==  .Event:Death
   AC:  		SetConst  *Var[0]  00000001 
   BC:  		SetConst  *Var[1]  00500004 
   CC:  		ExecWait DoNormalHit 
   D8:  		ExecWait $Script_8021EE44_1B 
   E4:  		SetConst  *Var[1]  00500004 
   F4:  		ExecWait $Script_8021D3E0_1B 
  100:  		Return
  108:  	Case  ==  .Event:BurnHit
  114:  		Set  *Var[0]  00000001 
  124:  		Set  *Var[1]  00500005 
  134:  		Set  *Var[2]  00500006 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_8021EE44_1B 
  15C:  	Case  ==  .Event:BurnDeath
  168:  		Set  *Var[0]  00000001 
  178:  		Set  *Var[1]  00500005 
  188:  		Set  *Var[2]  00500006 
  198:  		ExecWait DoBurnHit 
  1A4:  		ExecWait $Script_8021EE44_1B 
  1B0:  		SetConst  *Var[1]  00500006 
  1C0:  		ExecWait $Script_8021D3E0_1B 
  1CC:  		Return
  1D4:  	Case  ==  .Event:MultibounceHit
  1E0:  		SetConst  *Var[0]  00000001 
  1F0:  		SetConst  *Var[1]  00500004 
  200:  		ExecWait 8029B998 
  20C:  		ExecWait $Script_8021EE44_1B 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  00500004 
  244:  		ExecWait 8029B998 
  250:  		ExecWait $Script_8021EE44_1B 
  25C:  		SetConst  *Var[0]  00000001 
  26C:  		SetConst  *Var[1]  00500004 
  27C:  		ExecWait $Script_8021D3E0_1B 
  288:  		Return
  290:  	CaseOR  ==  00000017
  29C:  	CaseOR  ==  .Event:Immune
  2A8:  	CaseOR  ==  .Event:AirLiftFailed
  2B4:  	CaseOR  ==  0000001D
  2C0:  	CaseOR  ==  0000001E
  2CC:  		SetConst  *Var[0]  00000001 
  2DC:  		SetConst  *Var[1]  00500000 
  2EC:  		ExecWait DoImmune 
  2F8:  	EndCaseGroup
  300:  	CaseOR  ==  .Event:StarBeam
  30C:  	CaseOR  ==  00000014
  318:  		ExecWait $Script_8021EE44_1B 
  324:  		SetConst  *Var[0]  00000001 
  334:  		SetConst  *Var[1]  00500004 
  344:  		ExecWait DoNormalHit 
  350:  	EndCaseGroup
  358:  	Case  ==  .Event:ShockHit
  364:  		SetConst  *Var[0]  00000001 
  374:  		SetConst  *Var[1]  00500004 
  384:  		ExecWait DoShockHit 
  390:  		SetConst  *Var[0]  00000001 
  3A0:  		SetConst  *Var[1]  00500004 
  3B0:  		ExecWait 8029BD70 
  3BC:  		ExecWait $Script_8021C54C_1B 
  3C8:  	Case  ==  .Event:ShockDeath
  3D4:  		SetConst  *Var[0]  00000001 
  3E4:  		SetConst  *Var[1]  00500004 
  3F4:  		ExecWait DoShockHit 
  400:  		SetConst  *Var[0]  00000001 
  410:  		SetConst  *Var[1]  00500004 
  420:  		ExecWait 8029BD70 
  42C:  		SetConst  *Var[0]  00000001 
  43C:  		SetConst  *Var[1]  00500004 
  44C:  		ExecWait $Script_8021D3E0_1B 
  458:  		Return
  460:  	Case  ==  .Event:EndFirstStrike
  46C:  		ExecWait $Script_8021C54C_1B 
  478:  	Case  ==  .Event:RecoverStatus
  484:  		SetConst  *Var[0]  00000001 
  494:  		SetConst  *Var[1]  00500000 
  4A4:  		ExecWait DoRecover 
  4B0:  	Default
  4B8:  EndSwitch
  4C0:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  4D4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4E8:  Return
  4F0:  End

#new:Script $Script_8021D3E0_1B
    0:  SetConst  *Var[0]  00000001 
   10:  ExecWait DoDeath 
   1C:  Return
   24:  End

#new:Script $Script_TakeTurn_8021D40C_1B
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   40:  	ExecWait $Script_ElectroTackle_1B 
   4C:  	Return
   54:  EndIf
   5C:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   74:  If  *Var[0]  ==  00000001 
   84:  	ExecWait $Script_Electrify_1B 
   90:  	Return
   98:  Else
   A0:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
   B4:  	If  *Var[0]  !&  00080000 
   C4:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   DC:  		Call     RandInt     	( 00000064 *Var[0] )
   F0:  		If  *Var[0]  <  00000032 
  100:  			ExecWait $Script_Tackle_ElectroBlooper_1B 
  10C:  		Else
  114:  			ExecWait $Script_SprayInk_ElectroBlooper_1B 
  120:  		EndIf
  128:  	Else
  130:  		ExecWait $Script_Tackle_ElectroBlooper_1B 
  13C:  	EndIf
  144:  EndIf
  14C:  Return
  154:  End

#new:Script $Script_Electrify_1B
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   44:  Add  *Var[1]  00000041 
   54:  Call     UseCamPreset 	( 00000013 )
   64:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   7C:  Call     SetCamZoom  	( 00000140 )
   8C:  Call     MoveCamOver 	( 00000032 )
   9C:  Wait     00000014 
   A8:  Call     $Function_802182EC_1B ( )
   B4:  Call     $Function_80218200_1B ( 00000046 00000050 )
   C8:  Thread
   D0:  	Call     ShakeCam    	( 00000001 00000000 00000028 *Fixed[0.30078125] )
   EC:  EndThread
   F4:  Call     SetAnimation 	( .Actor:Self 00000001 00500009 )
  10C:  Wait     0000000A 
  118:  Call     SetAnimation 	( .Actor:Self 00000001 0050000A )
  130:  Wait     0000000A 
  13C:  Call     SetAnimation 	( .Actor:Self 00000001 0050000B )
  154:  Wait     0000000A 
  160:  ExecWait $Script_8021EC88_1B 
  16C:  Wait     00000014 
  178:  Call     UseCamPreset 	( 00000002 )
  188:  Call     MoveCamOver 	( 0000001E )
  198:  Call     $Function_80218384_1B ( )
  1A4:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  1B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  1CC:  Return
  1D4:  Return
  1DC:  End

#new:Script $Script_Tackle_ElectroBlooper_1B
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   50:  If  *Var[0]  !&  00080000 
   60:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   7C:  	Add  *Var[1]  00000070 
   8C:  	Call     UseCamPreset 	( 00000013 )
   9C:  	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   B4:  	Call     SetCamZoom  	( 000001F4 )
   C4:  	Call     MoveCamOver 	( 00000082 )
   D4:  Else
   DC:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   F8:  	Add  *Var[1]  00000052 
  108:  	Call     UseCamPreset 	( 00000013 )
  118:  	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  130:  	Call     SetCamZoom  	( 00000181 )
  140:  	Call     MoveCamOver 	( 00000082 )
  150:  EndIf
  158:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  174:  Set  *Var[1]  00000064 
  184:  Set  *Var[3]  0000000F 
  194:  ExecWait $Script_8021C070_1B 
  1A0:  Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
  1B4:  Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
  1D8:  Switch  *Var[F] 
  1E4:  	CaseOR  ==  00000006 
  1F0:  	CaseOR  ==  00000005 
  1FC:  		Thread
  204:  			Set  *Var[0]  00000000 
  214:  			Loop     00000024 
  220:  				Add  *Var[0]  0000001E 
  230:  				Call     SetActorAngle 	( .Actor:Self *Var[0] )
  244:  				Wait     00000001 
  250:  			EndLoop
  258:  			Call     SetActorAngle 	( .Actor:Self 00000000 )
  26C:  		EndThread
  274:  		Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  28C:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  2A8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  2BC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D8:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  2F8:  		Call     UseCamPreset 	( 00000002 )
  308:  		Call     MoveCamOver 	( 00000014 )
  318:  		If  *Var[F]  ==  00000005 
  328:  			Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  34C:  		EndIf
  354:  		Add  *Var[0]  0000001E 
  364:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  3A0:  		Add  *Var[0]  00000014 
  3B0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3CC:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  3EC:  		ExecWait $Script_8021C54C_1B 
  3F8:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  40C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  420:  		Return
  428:  	EndCaseGroup
  430:  EndSwitch
  438:  Thread
  440:  	Set  *Var[0]  00000000 
  450:  	Loop     00000010 
  45C:  		Add  *Var[0]  0000001E 
  46C:  		Call     SetActorAngle 	( .Actor:Self *Var[0] )
  480:  		Wait     00000001 
  48C:  	EndLoop
  494:  	Call     SetActorAngle 	( .Actor:Self 00000000 )
  4A8:  EndThread
  4B0:  Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  4C8:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  4DC:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4F8:  Add  *Var[1]  0000001E 
  508:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  524:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  544:  Wait     00000002 
  550:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
  578:  Call     UseCamPreset 	( 00000002 )
  588:  Call     MoveCamOver 	( 00000014 )
  598:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  5AC:  If  *Var[0]  &  00100000 
  5BC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
  5D4:  Else
  5DC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  5F4:  EndIf
  5FC:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  618:  Add  *Var[0]  0000001E 
  628:  Sub  *Var[1]  0000000F 
  638:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  64C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  668:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  688:  ExecWait $Script_8021C54C_1B 
  694:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6A8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6BC:  Return
  6C4:  End

#new:Script $Script_ElectroTackle_1B
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   50:  If  *Var[0]  !&  00080000 
   60:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   7C:  	Add  *Var[1]  00000070 
   8C:  	Call     UseCamPreset 	( 00000013 )
   9C:  	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   B4:  	Call     SetCamZoom  	( 000001F4 )
   C4:  	Call     MoveCamOver 	( 00000082 )
   D4:  Else
   DC:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   F8:  	Add  *Var[1]  00000052 
  108:  	Call     UseCamPreset 	( 00000013 )
  118:  	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  130:  	Call     SetCamZoom  	( 00000181 )
  140:  	Call     MoveCamOver 	( 00000082 )
  150:  EndIf
  158:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  174:  Set  *Var[1]  00000064 
  184:  Set  *Var[3]  0000000F 
  194:  ExecWait $Script_8021C070_1B 
  1A0:  Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000020 00000000 00000001 00000010 )
  1C4:  Switch  *Var[F] 
  1D0:  	CaseOR  ==  00000006 
  1DC:  	CaseOR  ==  00000005 
  1E8:  		Thread
  1F0:  			Set  *Var[0]  00000000 
  200:  			Loop     00000024 
  20C:  				Add  *Var[0]  0000001E 
  21C:  				Call     SetActorAngle 	( .Actor:Self *Var[0] )
  230:  				Wait     00000001 
  23C:  			EndLoop
  244:  			Call     SetActorAngle 	( .Actor:Self 00000000 )
  258:  		EndThread
  260:  		Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  278:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  294:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  2A8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C4:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  2E4:  		Call     UseCamPreset 	( 00000002 )
  2F4:  		Call     MoveCamOver 	( 00000014 )
  304:  		If  *Var[F]  ==  00000005 
  314:  			Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  338:  		EndIf
  340:  		Add  *Var[0]  0000001E 
  350:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  38C:  		Add  *Var[0]  00000014 
  39C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  3D8:  		ExecWait $Script_8021C54C_1B 
  3E4:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  3F8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  40C:  		Return
  414:  	EndCaseGroup
  41C:  EndSwitch
  424:  Thread
  42C:  	Set  *Var[0]  00000000 
  43C:  	Loop     00000010 
  448:  		Add  *Var[0]  0000001E 
  458:  		Call     SetActorAngle 	( .Actor:Self *Var[0] )
  46C:  		Wait     00000001 
  478:  	EndLoop
  480:  	Call     SetActorAngle 	( .Actor:Self 00000000 )
  494:  EndThread
  49C:  Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
  4B4:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  4C8:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4E4:  Add  *Var[1]  0000001E 
  4F4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  510:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  530:  Wait     00000002 
  53C:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000020 00000008 00000000 00000006 00000020 )
  564:  If  *Var[F]  !=  00000007 
  574:  	ExecWait $Script_8021EE44_1B 
  580:  EndIf
  588:  Call     UseCamPreset 	( 00000002 )
  598:  Call     MoveCamOver 	( 00000014 )
  5A8:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  5BC:  If  *Var[0]  &  00100000 
  5CC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
  5E4:  Else
  5EC:  	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  604:  EndIf
  60C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  628:  Add  *Var[0]  0000001E 
  638:  Sub  *Var[1]  0000000F 
  648:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  65C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  678:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  698:  ExecWait $Script_8021C54C_1B 
  6A4:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6CC:  Return
  6D4:  End

#new:Script $Script_SprayInk_ElectroBlooper_1B
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   68:  Add  *Var[0]  00000055 
   78:  Add  *Var[1]  0000002D 
   88:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
   A0:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
   B8:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   D4:  If  *Var[B]  >  0000001E 
   E4:  	Sub  *Var[B]  0000001E 
   F4:  Else
   FC:  	Set  *Var[B]  00000000 
  10C:  EndIf
  114:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
  128:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  144:  Call     80279BEC ( FFFFFF81 00000008 )
  158:  Thread
  160:  	Call     UseCamPreset 	( 00000013 )
  170:  	Sub  *Var[0]  0000001E 
  180:  	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  198:  	Call     SetCamZoom  	( 0000015E )
  1A8:  	Call     MoveCamOver 	( 00000050 )
  1B8:  EndThread
  1C0:  Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  1DC:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  1F0:  Set  *Var[7]  *Var[4] 
  200:  Add  *Var[7]  *Var[0] 
  210:  MulF  *Var[7]  *Fixed[0.5] 
  220:  Set  *Var[8]  *Var[5] 
  230:  Add  *Var[8]  *Var[1] 
  240:  MulF  *Var[8]  *Fixed[0.5] 
  250:  Set  *Var[9]  *Var[6] 
  260:  Add  *Var[9]  *Var[2] 
  270:  MulF  *Var[9]  *Fixed[0.5] 
  280:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  294:  Call     SetGoalToPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
  2B0:  Call     MoveToGoal  	( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
  2CC:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  2E4:  Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
  2FC:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  318:  Sub  *Var[B]  00000014 
  328:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  344:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
  358:  Call     80279BEC ( FFFFFF81 00000008 )
  36C:  Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
  380:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
  394:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B0:  Call     MoveToGoal  	( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
  3CC:  Call     SetAnimation 	( .Actor:Self 00000001 00500003 )
  3E4:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  400:  Sub  *Var[B]  0000001E 
  410:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.20019531] )
  424:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
  438:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  454:  Call     MoveToGoal  	( .Actor:Self 00000010 00000000 .Easing:Linear )
  470:  Call     UseCamPreset 	( 00000002 )
  480:  Call     MoveCamOver 	( 0000000A )
  490:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000028 00000000 )
  4AC:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD8 )
  4C8:  Call     PlaySoundAtActor 	( .Actor:Self 000003DE )
  4DC:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  4F8:  Add  *Var[3]  00000001 
  508:  Sub  *Var[4]  0000001C 
  518:  Sub  *Var[5]  00000003 
  528:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  544:  Call     $Function_802184E4_1B ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] )
  568:  Call     CheckPlayerHit ( .Actor:Self *Var[F] 10000000 00000000 00000001 00000010 )
  58C:  Switch  *Var[F] 
  598:  	CaseOR  ==  00000006 
  5A4:  	CaseOR  ==  00000005 
  5B0:  		Wait     0000000A 
  5BC:  		If  *Var[F]  ==  00000005 
  5CC:  			Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
  5F0:  		EndIf
  5F8:  		Wait     0000001E 
  604:  		Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  61C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  638:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  654:  		ExecWait $Script_8021C54C_1B 
  660:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  674:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  688:  		Return
  690:  	EndCaseGroup
  698:  EndSwitch
  6A0:  Wait     0000000A 
  6AC:  Call     SetGoalToTarget 	( .Actor:Self )
  6BC:  Call     80269EAC ( 0000001A )
  6CC:  Call     DamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 00000004 00000020 )
  6F4:  Wait     0000001E 
  700:  Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
  718:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  734:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  750:  ExecWait $Script_8021C54C_1B 
  75C:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  770:  Call     UseIdleAnimation 	( .Actor:Self .True )
  784:  Return
  78C:  End

#new:Script $Script_8021EC88_1B
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  !=  00000000 
   28:  	Return
   30:  EndIf
   38:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   50:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   6C:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   80:  If  *Var[3]  !&  00080000 
   90:  	Add  *Var[1]  0000002D 
   A0:  	SetF  *Var[3]  *Fixed[1.6005859] 
   B0:  Else
   B8:  	Add  *Var[1]  00000012 
   C8:  	SetF  *Var[3]  *Fixed[0.640625] 
   D8:  EndIf
   E0:  Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Var[3] FFFFFFFF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  124:  Call     SetActorVar 	( .Actor:Self 00000001 *Var[F] )
  13C:  Call     PlaySoundAtActor 	( .Actor:Self 0000035C )
  150:  Call     SetSpriteEventFlags 	( .Actor:Self 00000002 00400080 )
  168:  Call     8026ED20 ( FFFFFF81 00000001 00000001 )
  180:  Call     8026EA7C ( FFFFFF81 00000001 00000004 )
  198:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021C710_1B )
  1AC:  Return
  1B4:  End

#new:Script $Script_8021EE44_1B
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  !=  00000001 
   28:  	Return
   30:  EndIf
   38:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   80:  If  *Var[0]  !=  00000000 
   90:  	Call     RemoveEffect 	( *Var[0] )
   A0:  	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   B8:  EndIf
   C0:  Call     SetSpriteEventFlags 	( .Actor:Self 00000002 00000000 )
   D8:  Call     8026ED20 ( FFFFFF81 00000001 00000000 )
   F0:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021C664_1B )
  104:  Return
  10C:  End

