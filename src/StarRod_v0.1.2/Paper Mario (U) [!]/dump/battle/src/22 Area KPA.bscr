% Script File: 22 Area KPA.bscr
% Decoded from: 684A30 to 69F200 (22 Area KPA)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 802180CC to 802180D0 (00684AFC to 00684B00)
00000000 

#new:Function $Function_802180D0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_8021819C
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

PADDING: 802181F4 to 80218200 (00684C24 to 00684C30)
00000000 00000000 00000000 

#new:Function $Function_80218200
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

#new:Function $Function_80218358
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A1, S4, R0
   44:  DADDU     S3, V0, R0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       {Func:GetFloatVariable}
   5C:  DADDU     A0, S2, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S2, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S2, R0
   80:  JAL       {Func:GetVariable}
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S2, R0
   94:  JAL       {Func:GetVariable}
   98:  DADDU     S1, V0, R0
   9C:  DADDU     A0, S2, R0
   A0:  LW        A1, 0 (S0)
   A4:  JAL       {Func:GetFloatVariable}
   A8:  DADDU     S0, V0, R0
   AC:  LIF       F2, 180.0
   B4:  LIO       AT, 40490FD8
   BC:  MTC1      AT, F4
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  DADDU     A0, S2, R0
   F4:  DADDU     S3, S1, R0
   F8:  DADDU     A1, S4, R0
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A2, S1, R0
        .o104
  104:  LIO       AT, 40490FD8
  10C:  MTC1      AT, F0
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       {Func:CosRad}
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  DADDU     A0, S2, R0
  150:  MFC1      A2, F2
  154:  JAL       {Func:SetFloatVariable}
  158:  DADDU     A1, S5, R0
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  ADDIU     V0, R0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48

#new:Function $Function_802184E8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_80218514
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_802185E0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218638
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 802186FC to 80218700 (0068512C to 00685130)
00000000 

#new:Function $Function_80218700
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S1, 1C (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        A0, 148 (S2)
   1C:  JAL       {Func:GetActor}
   20:  DADDU     S0, A1, R0
   24:  BEQ       S0, R0, .oDC
   28:  DADDU     S1, V0, R0
   2C:  LWC1      F2, 18 (S1)
   30:  LWC1      F0, 144 (S1)
   34:  SUB.S     F2, F2, F0
   38:  MUL.S     F2, F2, F2
   3C:  NOP
   40:  LWC1      F6, 1C (S1)
   44:  LWC1      F0, 148 (S1)
   48:  SUB.S     F6, F6, F0
   4C:  MUL.S     F6, F6, F6
   50:  NOP
   54:  LWC1      F4, 14C (S1)
   58:  LWC1      F0, 20 (S1)
   5C:  SUB.S     F0, F0, F4
   60:  MUL.S     F0, F0, F0
   64:  NOP
   68:  ADD.S     F2, F2, F6
   6C:  ADD.S     F12, F2, F0
   70:  SQRT.S    F4, F12
   74:  C.EQ.S    F4, F4
   78:  NOP
   7C:  BC1T      .o90
   80:  NOP
   84:  JAL       80061EF0
   88:  NOP
   8C:  MOV.S     F4, F0
        .o90
   90:  LWC1      F0, 4C (S1)
   94:  LIF       F2, 0.5
   9C:  DIV.S     F0, F4, F0
   A0:  MUL.S     F0, F0, F2
   A4:  NOP
   A8:  LIF       F2, 1.0
   B0:  NOP
   B4:  ADD.S     F0, F0, F2
   B8:  TRUNC.W.S F8, F0
   BC:  SWC1      F8, 70 (S2)
   C0:  LWC1      F0, 14C (S1)
   C4:  ADDIU     A0, R0, 359
   C8:  SWC1      F0, 10 (SP)
   CC:  LW        A2, 144 (S1)
   D0:  LW        A3, 148 (S1)
   D4:  JAL       80149D5C
   D8:  DADDU     A1, R0, R0
        .oDC
   DC:  LW        V0, 70 (S2)
   E0:  DADDU     V1, V0, R0
   E4:  ADDIU     V0, V0, FFFF
   E8:  BGTZ      V1, .o114
   EC:  SW        V0, 70 (S2)
   F0:  LWC1      F0, 14C (S1)
   F4:  ADDIU     A0, R0, 759
   F8:  SWC1      F0, 10 (SP)
   FC:  LW        A2, 144 (S1)
  100:  LW        A3, 148 (S1)
  104:  JAL       80149D5C
  108:  DADDU     A1, R0, R0
  10C:  BEQ       R0, R0, .o118
  110:  ADDIU     V0, R0, 2
        .o114
  114:  DADDU     V0, R0, R0
        .o118
  118:  LW        RA, 24 (SP)
  11C:  LW        S2, 20 (SP)
  120:  LW        S1, 1C (SP)
  124:  LW        S0, 18 (SP)
  128:  JR        RA
  12C:  ADDIU     SP, SP, 28

#new:IdleAnimations $IdleAnimations_80218830
.Status:Normal    00550004
.Status:Stone     00550000
.Status:Sleep     0055002A
.Status:Poison    00550004
.Status:Stop      00550000
.Status:Static    00550004
.Status:Paralyze  00550000
.Status:Dizzy     00550026
.Status:Fear      00550026
.Status:End

#new:IdleAnimations $IdleAnimations_8021887C
.Status:Normal    00550005
.Status:Stone     00550001
.Status:Sleep     0055002B
.Status:Poison    00550005
.Status:Stop      00550001
.Status:Static    00550005
.Status:Paralyze  00550001
.Status:Dizzy     00550027
.Status:Fear      00550027
.Status:End

#new:IdleAnimations $IdleAnimations_802188C8
.Status:Normal    00550006
.Status:Stone     00550002
.Status:Sleep     0055002C
.Status:Poison    00550006
.Status:Stop      00550002
.Status:Static    00550006
.Status:Paralyze  00550002
.Status:Dizzy     00550028
.Status:Fear      00550028
.Status:End

#new:IdleAnimations $IdleAnimations_80218914
.Status:Normal    00550007
.Status:Stone     00550003
.Status:Sleep     0055002D
.Status:Poison    00550007
.Status:Stop      00550003
.Status:Static    00550007
.Status:Paralyze  00550003
.Status:Dizzy     00550029
.Status:Fear      00550029
.Status:End

#new:DefenseTable $DefenseTable_80218960
.Element:Normal 00000004
.Element:End

#new:DefenseTable $DefenseTable_8021896C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80218978
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80218A24
00800000 01000000 FD1500FF $IdleAnimations_8021887C $DefenseTable_80218960 00001010 00000000 00F80000 00000000 

#new:Actor $BonyBeetle
% stats
[Index]        46b 
[Level]        25`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218978 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80218A24 
[Script]      $Script_Init_80218A70 
% move effectiveness
[Escape]       50`b 
[Item]         60`b 
[AirLift]      70`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         27`b  27`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_80218A70
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Call     8027D75C ( FFFFFF81 *Var[1] )
   2C:  If  *Var[0]  ==  00000001 
   3C:  	If  *Var[1]  ==  00000001 
   4C:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
   64:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
   7C:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
   98:  		Call     SetAnimation 	( .Actor:Self 00000001 00550005 )
   B0:  	Else
   B8:  		Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   D0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
   E8:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  104:  		Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
  11C:  	EndIf
  124:  Else
  12C:  	Call     RandInt     	( 000003E8 *Var[0] )
  140:  	If  *Var[0]  <  000001F4 
  150:  		Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  168:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
  180:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  19C:  		Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
  1B4:  	Else
  1BC:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  1D4:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
  1EC:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  208:  		Call     SetAnimation 	( .Actor:Self 00000001 00550005 )
  220:  	EndIf
  228:  EndIf
  230:  EndIf
  238:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
  254:  Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
  270:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  288:  Call     BindIdle    	( .Actor:Self $Script_Idle_80218D6C )
  29C:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80218D7C )
  2B0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80219110 )
  2C4:  Call     HPBarToHome 	( .Actor:Self )
  2D4:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  2EC:  Return
  2F4:  End

#new:Script $Script_Idle_80218D6C
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80218D7C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   40:  Switch  *Var[0] 
   4C:  	Case  ==  00000000 
   58:  		ExecWait $Script_802191FC 
   64:  	Case  ==  00000001 
   70:  		ExecWait $Script_8021A060 
   7C:  	Case  ==  00000002 
   88:  		ExecWait $Script_8021BA6C 
   94:  	Case  ==  00000003 
   A0:  		ExecWait $Script_8021C234 
   AC:  EndSwitch
   B4:  Call     ActorExists 	( .Actor:Self *Var[0] )
   C8:  If  *Var[0]  ==  00000001 
   D8:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   F0:  	If  *Var[0]  ==  00000001 
  100:  		ExecWait $Script_80218EE8 
  10C:  		Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  124:  	EndIf
  12C:  EndIf
  134:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  148:  Call     UseIdleAnimation 	( .Actor:Self .True )
  15C:  Return
  164:  End

#new:Script $Script_80218EE8
    0:  Call     GetLastDamage 	( .Actor:Self *Var[0] )
   14:  If  *Var[0]  <=  00000000 
   24:  	Return
   2C:  EndIf
   34:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   48:  If  *Var[0]  &  0035D000 
   58:  	Return
   60:  EndIf
   68:  Label    00000000 
   74:  Call     GetBattleFlags ( *Var[A] )
   84:  If  *Var[A]  &  00000100 
   94:  	Wait     00000001 
   A0:  	Goto     00000000 
   AC:  EndIf
   B4:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   CC:  Switch  *Var[0] 
   D8:  	Case  ==  00000000 
   E4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020CE )
   F8:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  110:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  12C:  		Call     SetAnimation 	( .Actor:Self 00000001 0055002E )
  144:  		Wait     00000019 
  150:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
  168:  	Case  ==  00000001 
  174:  		Call     PlaySoundAtActor 	( .Actor:Self 000020CF )
  188:  		Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  1A0:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  1BC:  		Call     SetAnimation 	( .Actor:Self 00000001 0055002F )
  1D4:  		Wait     00000019 
  1E0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
  1F8:  	Case  ==  00000002 
  204:  	Case  ==  00000003 
  210:  EndSwitch
  218:  Return
  220:  End

#new:Script $Script_TakeTurn_80219110
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  		ExecWait $Script_Tackle 
   3C:  	Case  ==  00000001 
   48:  		ExecWait $Script_Tackle_Spikes 
   54:  	Case  ==  00000002 
   60:  		ExecWait $Script_FlipOver 
   6C:  	Case  ==  00000003 
   78:  		ExecWait $Script_FlipOver_Spikes 
   84:  EndSwitch
   8C:  Return
   94:  End

#new:IntTable $IntTable_802191AC
00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015 
00000011 0000000D 00000007 00000000 00000004 00000006 00000007 00000006 
00000004 00000000 00000002 00000000 

#new:Script $Script_802191FC
    0:  Call     GetEventType 	( .Actor:Self *Var[0] )
   14:  Switch  *Var[0] 
   20:  	CaseOR  ==  .Event:HitCombo
   2C:  	CaseOR  ==  .Event:Hit
   38:  		SetConst  *Var[0]  00000001 
   48:  		SetConst  *Var[1]  00550018 
   58:  		ExecWait DoNormalHit 
   64:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   7C:  	EndCaseGroup
   84:  	Case  ==  .Event:BurnHit
   90:  		SetConst  *Var[0]  00000001 
   A0:  		SetConst  *Var[1]  0055001E 
   B0:  		SetConst  *Var[2]  0055001F 
   C0:  		ExecWait DoBurnHit 
   CC:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   E4:  	Case  ==  .Event:BurnDeath
   F0:  		SetConst  *Var[0]  00000001 
  100:  		SetConst  *Var[1]  0055001E 
  110:  		SetConst  *Var[2]  0055001F 
  120:  		ExecWait DoBurnHit 
  12C:  		SetConst  *Var[0]  00000001 
  13C:  		SetConst  *Var[1]  0055001F 
  14C:  		ExecWait DoDeath 
  158:  		Return
  160:  	Case  ==  .Event:MultibounceHit
  16C:  		SetConst  *Var[0]  00000001 
  17C:  		SetConst  *Var[1]  00550018 
  18C:  		ExecWait 8029B998 
  198:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  1B0:  	Case  ==  .Event:MultibounceDeath
  1BC:  		SetConst  *Var[0]  00000001 
  1CC:  		SetConst  *Var[1]  00550018 
  1DC:  		ExecWait 8029B998 
  1E8:  		SetConst  *Var[0]  00000001 
  1F8:  		SetConst  *Var[1]  00550018 
  208:  		ExecWait DoDeath 
  214:  		Return
  21C:  	Case  ==  .Event:FlipTrigger
  228:  		Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
  240:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
  25C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
  278:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  290:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
  2A8:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802188C8 )
  2C0:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  2DC:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2F4:  		Call     SetAnimation 	( .Actor:Self 00000001 00550008 )
  30C:  		UseIntBuffer $IntTable_802191AC 
  318:  		Loop     00000014 
  324:  			Get1Int  *Var[0] 
  330:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  34C:  			Wait     00000001 
  358:  		EndLoop
  360:  		Wait     00000014 
  36C:  	Case  ==  .Event:ShockHit
  378:  		SetConst  *Var[0]  00000001 
  388:  		SetConst  *Var[1]  00550018 
  398:  		ExecWait DoShockHit 
  3A4:  		SetConst  *Var[0]  00000001 
  3B4:  		SetConst  *Var[1]  00550018 
  3C4:  		ExecWait 8029BD70 
  3D0:  		SetConst  *Var[0]  00000001 
  3E0:  		SetConst  *Var[1]  0055000E 
  3F0:  		ExecWait DoReturnHome 
  3FC:  	CaseOR  ==  00000017
  408:  	CaseOR  ==  .Event:Immune
  414:  	CaseOR  ==  .Event:AirLiftFailed
  420:  		SetConst  *Var[0]  00000001 
  430:  		SetConst  *Var[1]  00550010 
  440:  		ExecWait DoImmune 
  44C:  		Wait     00000014 
  458:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  46C:  		If  *Var[0]  !&  0035D000 
  47C:  			Call     SetAnimation 	( .Actor:Self 00000001 00550012 )
  494:  			Wait     0000000A 
  4A0:  		EndIf
  4A8:  	EndCaseGroup
  4B0:  	Case  ==  .Event:ShockDeath
  4BC:  		SetConst  *Var[0]  00000001 
  4CC:  		SetConst  *Var[1]  00550018 
  4DC:  		ExecWait DoShockHit 
  4E8:  		SetConst  *Var[0]  00000001 
  4F8:  		SetConst  *Var[1]  00550018 
  508:  		ExecWait DoDeath 
  514:  		Return
  51C:  	Case  ==  .Event:Death
  528:  		SetConst  *Var[0]  00000001 
  538:  		SetConst  *Var[1]  00550018 
  548:  		ExecWait DoNormalHit 
  554:  		Wait     0000000A 
  560:  		SetConst  *Var[0]  00000001 
  570:  		SetConst  *Var[1]  00550018 
  580:  		ExecWait DoDeath 
  58C:  		Return
  594:  	Case  ==  .Event:RecoverStatus
  5A0:  		SetConst  *Var[0]  00000001 
  5B0:  		SetConst  *Var[1]  00550004 
  5C0:  		ExecWait DoRecover 
  5CC:  	Case  ==  .Event:ScareAway
  5D8:  		SetConst  *Var[0]  00000001 
  5E8:  		SetConst  *Var[1]  0055000E 
  5F8:  		SetConst  *Var[2]  00550018 
  608:  		ExecWait DoScareAway 
  614:  		Return
  61C:  	Case  ==  .Event:BeginAirLift
  628:  		SetConst  *Var[0]  00000001 
  638:  		SetConst  *Var[1]  0055000E 
  648:  		ExecWait DoAirLift 
  654:  	Case  ==  .Event:BlowAway
  660:  		SetConst  *Var[0]  00000001 
  670:  		SetConst  *Var[1]  00550018 
  680:  		ExecWait DoBlowAway 
  68C:  		Return
  694:  	Default
  69C:  EndSwitch
  6A4:  Return
  6AC:  End

#new:Script $Script_Tackle
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 0000003F )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   94:  	Call     SetAnimation 	( .Actor:Self 00000001 00550016 )
   AC:  	Goto     00000064 
   B8:  EndIf
   C0:  Call     UseCamPreset 	( 0000003F )
   D0:  Call     CamTargetActor ( .Actor:Self )
   E0:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   F8:  Call     SetAnimation 	( .Actor:Self 00000001 00550010 )
  110:  Wait     0000000A 
  11C:  Thread
  124:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  184:  	Wait     0000000A 
  190:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1D4:  	Wait     00000005 
  1E0:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  224:  EndThread
  22C:  Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  240:  Call     SetAnimation 	( .Actor:Self 00000001 00550016 )
  258:  Wait     0000000F 
  264:  Label    00000064 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  284:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  2A0:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
  2C4:  Switch  *Var[0] 
  2D0:  	CaseOR  ==  00000006 
  2DC:  	CaseOR  ==  00000005 
  2E8:  		Set  *Var[A]  *Var[0] 
  2F8:  		Call     SetGoalToTarget 	( .Actor:Self )
  308:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  324:  		Sub  *Var[0]  00000028 
  334:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  350:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  364:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  37C:  		If  *Var[A]  ==  00000005 
  38C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3B0:  		EndIf
  3B8:  		Wait     00000014 
  3C4:  		Call     SetAnimation 	( .Actor:Self 00000001 00550012 )
  3DC:  		Wait     0000000F 
  3E8:  		Call     UseCamPreset 	( 00000002 )
  3F8:  		Call     8026F6EC ( FFFFFF81 )
  408:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  41C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  438:  		Call     SetAnimation 	( .Actor:Self 00000001 0055000E )
  450:  		Call     SetGoalToHome 	( .Actor:Self )
  460:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  474:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  48C:  		Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
  4A4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  4BC:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  4D0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4E4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  4F8:  		Return
  500:  	EndCaseGroup
  508:  EndSwitch
  510:  Call     SetGoalToTarget 	( .Actor:Self )
  520:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  534:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  54C:  Call     8026F6EC ( FFFFFF81 )
  55C:  Wait     00000002 
  568:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
  590:  Switch  *Var[0] 
  59C:  	CaseOR  ==  00000000 
  5A8:  	CaseOR  ==  00000002 
  5B4:  		Call     UseCamPreset 	( 00000002 )
  5C4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5E0:  		Add  *Var[0]  00000028 
  5F0:  		Set  *Var[1]  00000000 
  600:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  614:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  630:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  650:  		Add  *Var[0]  0000001E 
  660:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  67C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  69C:  		Add  *Var[0]  00000014 
  6AC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6C8:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  6E8:  		Wait     0000000F 
  6F4:  		Call     SetAnimation 	( .Actor:Self 00000001 00550012 )
  70C:  		Wait     00000005 
  718:  		Call     8027D7F0 ( )
  724:  		SetConst  *Var[0]  00000001 
  734:  		SetConst  *Var[1]  0055000E 
  744:  		ExecWait DoReturnHome 
  750:  		Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
  768:  	EndCaseGroup
  770:  EndSwitch
  778:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  78C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7A0:  Return
  7A8:  End

#new:Script $Script_8021A060
    0:  Call     GetEventType 	( .Actor:Self *Var[0] )
   14:  Switch  *Var[0] 
   20:  	CaseOR  ==  .Event:HitCombo
   2C:  	CaseOR  ==  .Event:Hit
   38:  		SetConst  *Var[0]  00000001 
   48:  		SetConst  *Var[1]  00550019 
   58:  		ExecWait DoNormalHit 
   64:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   7C:  	EndCaseGroup
   84:  	Case  ==  .Event:BurnHit
   90:  		SetConst  *Var[0]  00000001 
   A0:  		SetConst  *Var[1]  00550020 
   B0:  		SetConst  *Var[2]  00550021 
   C0:  		ExecWait DoBurnHit 
   CC:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   E4:  	Case  ==  .Event:BurnDeath
   F0:  		SetConst  *Var[0]  00000001 
  100:  		SetConst  *Var[1]  00550020 
  110:  		SetConst  *Var[2]  00550021 
  120:  		ExecWait DoBurnHit 
  12C:  		SetConst  *Var[0]  00000001 
  13C:  		SetConst  *Var[1]  00550021 
  14C:  		ExecWait DoDeath 
  158:  		Return
  160:  	Case  ==  .Event:MultibounceHit
  16C:  		SetConst  *Var[0]  00000001 
  17C:  		SetConst  *Var[1]  00550019 
  18C:  		ExecWait 8029B998 
  198:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  1B0:  	Case  ==  .Event:MultibounceDeath
  1BC:  		SetConst  *Var[0]  00000001 
  1CC:  		SetConst  *Var[1]  00550019 
  1DC:  		ExecWait 8029B998 
  1E8:  		SetConst  *Var[0]  00000001 
  1F8:  		SetConst  *Var[1]  00550019 
  208:  		ExecWait DoDeath 
  214:  		Return
  21C:  	Case  ==  .Event:FlipTrigger
  228:  		Call     SetActorVar 	( .Actor:Self 00000008 00000003 )
  240:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
  25C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
  278:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  290:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
  2A8:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218914 )
  2C0:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  2DC:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2F4:  		Call     SetAnimation 	( .Actor:Self 00000001 00550009 )
  30C:  		UseIntBuffer $IntTable_802191AC 
  318:  		Loop     00000014 
  324:  			Get1Int  *Var[0] 
  330:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  34C:  			Wait     00000001 
  358:  		EndLoop
  360:  		Wait     00000014 
  36C:  	Case  ==  .Event:ShockHit
  378:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  394:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00550019 
  3D0:  		ExecWait DoShockHit 
  3DC:  		SetConst  *Var[0]  00000001 
  3EC:  		SetConst  *Var[1]  00550019 
  3FC:  		ExecWait 8029BD70 
  408:  		SetConst  *Var[0]  00000001 
  418:  		SetConst  *Var[1]  0055000F 
  428:  		ExecWait DoReturnHome 
  434:  	CaseOR  ==  00000017
  440:  	CaseOR  ==  .Event:Immune
  44C:  		SetConst  *Var[0]  00000001 
  45C:  		SetConst  *Var[1]  00550011 
  46C:  		ExecWait DoImmune 
  478:  		Wait     00000014 
  484:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  498:  		If  *Var[0]  !&  0035D000 
  4A8:  			Call     SetAnimation 	( .Actor:Self 00000001 00550013 )
  4C0:  		EndIf
  4C8:  		Wait     0000000A 
  4D4:  	EndCaseGroup
  4DC:  	Case  ==  .Event:SpikeTaunt
  4E8:  		Wait     0000000A 
  4F4:  		Set  *Flag[00]  00000000 
  504:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  520:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  534:  		If  *Var[3]  &  00080000 
  544:  			Add  *Var[0]  FFFFFFFD 
  554:  			Add  *Var[1]  0000000A 
  564:  			Set  *Flag[00]  00000001 
  574:  		EndIf
  57C:  		If  *Var[3]  &  00040000 
  58C:  			Add  *Var[0]  00000000 
  59C:  			Add  *Var[1]  0000001A 
  5AC:  			Set  *Flag[00]  00000001 
  5BC:  		EndIf
  5C4:  		If  *Flag[00]  ==  00000000 
  5D4:  			Add  *Var[0]  FFFFFFF8 
  5E4:  			Add  *Var[1]  0000001A 
  5F4:  		EndIf
  5FC:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  640:  		Wait     00000014 
  64C:  	Case  ==  .Event:ShockDeath
  658:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  674:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  690:  		SetConst  *Var[0]  00000001 
  6A0:  		SetConst  *Var[1]  00550019 
  6B0:  		ExecWait DoShockHit 
  6BC:  		SetConst  *Var[0]  00000001 
  6CC:  		SetConst  *Var[1]  00550019 
  6DC:  		ExecWait DoDeath 
  6E8:  		Return
  6F0:  	Case  ==  .Event:Death
  6FC:  		SetConst  *Var[0]  00000001 
  70C:  		SetConst  *Var[1]  00550019 
  71C:  		ExecWait DoNormalHit 
  728:  		Wait     0000000A 
  734:  		SetConst  *Var[0]  00000001 
  744:  		SetConst  *Var[1]  00550019 
  754:  		ExecWait DoDeath 
  760:  		Return
  768:  	Case  ==  .Event:RecoverStatus
  774:  		SetConst  *Var[0]  00000001 
  784:  		SetConst  *Var[1]  00550005 
  794:  		ExecWait DoRecover 
  7A0:  	Case  ==  .Event:ScareAway
  7AC:  		SetConst  *Var[0]  00000001 
  7BC:  		SetConst  *Var[1]  0055000F 
  7CC:  		SetConst  *Var[2]  00550019 
  7DC:  		ExecWait DoScareAway 
  7E8:  		Return
  7F0:  	Default
  7F8:  EndSwitch
  800:  Return
  808:  End

#new:Script $Script_Tackle_Spikes
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 0000003F )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   94:  	Call     SetAnimation 	( .Actor:Self 00000001 00550017 )
   AC:  	Wait     0000000A 
   B8:  	Goto     00000064 
   C4:  EndIf
   CC:  Call     UseCamPreset 	( 0000003F )
   DC:  Call     CamTargetActor ( .Actor:Self )
   EC:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  104:  Call     SetAnimation 	( .Actor:Self 00000001 00550011 )
  11C:  Wait     0000000A 
  128:  Thread
  130:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  14C:  	Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  190:  	Wait     0000000A 
  19C:  	Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 00000006 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Wait     00000005 
  1EC:  	Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 00000008 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  230:  	Wait     00000005 
  23C:  	Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 0000000A 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  280:  	Wait     00000005 
  28C:  	Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 0000000C 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  2D0:  EndThread
  2D8:  Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  2EC:  Call     SetAnimation 	( .Actor:Self 00000001 00550017 )
  304:  Wait     0000000F 
  310:  Label    00000064 
  31C:  Thread
  324:  	Loop     00000014 
  330:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  34C:  		Call     PlayEffect  	( {FX:Steam:TinyPuff} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  		Wait     00000001 
  39C:  	EndLoop
  3A4:  EndThread
  3AC:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  3C0:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  3DC:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000005 00000010 )
  400:  Switch  *Var[0] 
  40C:  	CaseOR  ==  00000006 
  418:  	CaseOR  ==  00000005 
  424:  		Set  *Var[A]  *Var[0] 
  434:  		Call     SetGoalToTarget 	( .Actor:Self )
  444:  		Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  460:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] )
  474:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  48C:  		Call     UseCamPreset 	( 00000001 )
  49C:  		Thread
  4A4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  4C0:  			Set  *Var[0]  00000000 
  4D0:  			Loop     0000000A 
  4DC:  				Add  *Var[0]  00000012 
  4EC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  508:  				Wait     00000001 
  514:  			EndLoop
  51C:  		EndThread
  524:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  538:  		Call     SetGoalToTarget 	( .Actor:Self )
  548:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  564:  		Sub  *Var[0]  00000014 
  574:  		Set  *Var[1]  00000000 
  584:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5A0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  5C0:  		If  *Var[A]  ==  00000005 
  5D0:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  5F4:  		EndIf
  5FC:  		Thread
  604:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  620:  			Set  *Var[0]  000000B4 
  630:  			Loop     0000000F 
  63C:  				Add  *Var[0]  0000000C 
  64C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  668:  				Wait     00000001 
  674:  			EndLoop
  67C:  		EndThread
  684:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  698:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B4:  		Sub  *Var[0]  00000032 
  6C4:  		Set  *Var[1]  00000000 
  6D4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6F0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  710:  		Thread
  718:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  734:  			Set  *Var[0]  00000000 
  744:  			Loop     0000000A 
  750:  				Add  *Var[0]  00000012 
  760:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  77C:  				Wait     00000001 
  788:  			EndLoop
  790:  		EndThread
  798:  		Sub  *Var[0]  00000028 
  7A8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C4:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  7E4:  		Thread
  7EC:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  808:  			Set  *Var[0]  000000B4 
  818:  			Loop     00000005 
  824:  				Add  *Var[0]  00000012 
  834:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  850:  				Wait     00000001 
  85C:  			EndLoop
  864:  		EndThread
  86C:  		Sub  *Var[0]  0000001E 
  87C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  898:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  8B8:  		Wait     00000005 
  8C4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  8E0:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  8FC:  		Call     8026F6EC ( FFFFFF81 )
  90C:  		Call     UseCamPreset 	( 00000002 )
  91C:  		Call     8027D7F0 ( )
  928:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  93C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  958:  		SetConst  *Var[0]  00000001 
  968:  		SetConst  *Var[1]  0055000F 
  978:  		ExecWait DoReturnHome 
  984:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  99C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  9B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  9C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  9D8:  		Return
  9E0:  	EndCaseGroup
  9E8:  EndSwitch
  9F0:  Call     SetGoalToTarget 	( .Actor:Self )
  A00:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  A1C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] )
  A30:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A48:  Thread
  A50:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  A6C:  	Set  *Var[0]  00000000 
  A7C:  	Loop     0000000A 
  A88:  		Add  *Var[0]  00000012 
  A98:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  AB4:  		Wait     00000001 
  AC0:  	EndLoop
  AC8:  EndThread
  AD0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  AE4:  Call     SetGoalToTarget 	( .Actor:Self )
  AF4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B14:  Call     8026F6EC ( FFFFFF81 )
  B24:  Wait     00000002 
  B30:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000005 00000020 )
  B58:  Switch  *Var[0] 
  B64:  	CaseOR  ==  00000000 
  B70:  	CaseOR  ==  00000002 
  B7C:  		Call     UseCamPreset 	( 00000002 )
  B8C:  		Thread
  B94:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  BB0:  			Set  *Var[0]  000000B4 
  BC0:  			Loop     0000000F 
  BCC:  				Add  *Var[0]  0000000C 
  BDC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  BF8:  				Wait     00000001 
  C04:  			EndLoop
  C0C:  		EndThread
  C14:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  C28:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C44:  		Sub  *Var[0]  00000032 
  C54:  		Set  *Var[1]  00000000 
  C64:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C80:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  CA0:  		Thread
  CA8:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  CC4:  			Set  *Var[0]  00000000 
  CD4:  			Loop     0000000A 
  CE0:  				Add  *Var[0]  00000012 
  CF0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  D0C:  				Wait     00000001 
  D18:  			EndLoop
  D20:  		EndThread
  D28:  		Sub  *Var[0]  00000028 
  D38:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D54:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  D74:  		Thread
  D7C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  D98:  			Set  *Var[0]  000000B4 
  DA8:  			Loop     00000005 
  DB4:  				Add  *Var[0]  00000012 
  DC4:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  DE0:  				Wait     00000001 
  DEC:  			EndLoop
  DF4:  		EndThread
  DFC:  		Sub  *Var[0]  0000001E 
  E0C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E28:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  E48:  		Wait     00000005 
  E54:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  E70:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  E8C:  		Call     SetAnimation 	( .Actor:Self 00000001 00550013 )
  EA4:  		Wait     00000005 
  EB0:  		Call     8027D7F0 ( )
  EBC:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  ED0:  		SetConst  *Var[0]  00000001 
  EE0:  		SetConst  *Var[1]  0055000F 
  EF0:  		ExecWait DoReturnHome 
  EFC:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  F10:  	EndCaseGroup
  F18:  EndSwitch
  F20:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  F34:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F48:  Return
  F50:  End

% Origin: HEURISTIC
#new:Script $Script_8021B7C8
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
   28:  Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
   40:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
   58:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802188C8 )
   70:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
   88:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
   A4:  Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
   C0:  Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
   DC:  Call     SetAnimation 	( .Actor:Self 00000001 00550006 )
   F4:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  108:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  Sub  *Var[1]  00000018 
  134:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  150:  Set  *Var[1]  00000000 
  160:  Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  190:  Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  1C0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1DC:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  1FC:  Call     8026F6EC ( FFFFFF81 )
  20C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  228:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  248:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  284:  Call     HPBarToHome 	( .Actor:Self )
  294:  Return
  29C:  End

#new:Script $Script_8021BA6C
    0:  Call     GetEventType 	( .Actor:Self *Var[0] )
   14:  Switch  *Var[0] 
   20:  	CaseOR  ==  .Event:HitCombo
   2C:  	CaseOR  ==  .Event:Hit
   38:  		SetConst  *Var[0]  00000001 
   48:  		SetConst  *Var[1]  0055001A 
   58:  		ExecWait DoNormalHit 
   64:  	EndCaseGroup
   6C:  	Case  ==  .Event:BurnHit
   78:  		SetConst  *Var[0]  00000001 
   88:  		SetConst  *Var[1]  00550022 
   98:  		SetConst  *Var[2]  00550023 
   A8:  		ExecWait DoBurnHit 
   B4:  	Case  ==  .Event:BurnDeath
   C0:  		SetConst  *Var[0]  00000001 
   D0:  		SetConst  *Var[1]  00550022 
   E0:  		SetConst  *Var[2]  00550023 
   F0:  		ExecWait DoBurnHit 
   FC:  		SetConst  *Var[0]  00000001 
  10C:  		SetConst  *Var[1]  00550023 
  11C:  		ExecWait DoDeath 
  128:  		Return
  130:  	Case  ==  .Event:MultibounceHit
  13C:  		SetConst  *Var[0]  00000001 
  14C:  		SetConst  *Var[1]  0055001A 
  15C:  		ExecWait 8029B998 
  168:  	Case  ==  .Event:MultibounceDeath
  174:  		SetConst  *Var[0]  00000001 
  184:  		SetConst  *Var[1]  0055001A 
  194:  		ExecWait 8029B998 
  1A0:  		SetConst  *Var[0]  00000001 
  1B0:  		SetConst  *Var[1]  0055001A 
  1C0:  		ExecWait DoDeath 
  1CC:  		Return
  1D4:  	Case  ==  .Event:FlipTrigger
  1E0:  		Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
  1F8:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
  214:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
  230:  		Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
  24C:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  264:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
  27C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802188C8 )
  294:  		Call     SetAnimation 	( .Actor:Self 00000001 0055001A )
  2AC:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2C4:  		UseIntBuffer $IntTable_802191AC 
  2D0:  		Loop     00000014 
  2DC:  			Get1Int  *Var[0] 
  2E8:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  304:  			Wait     00000001 
  310:  		EndLoop
  318:  		Wait     00000014 
  324:  	CaseOR  ==  .Event:ScareAway
  330:  	CaseOR  ==  00000017
  33C:  	CaseOR  ==  .Event:Immune
  348:  	CaseOR  ==  .Event:AirLiftFailed
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  00550006 
  374:  		ExecWait DoImmune 
  380:  	EndCaseGroup
  388:  	Case  ==  .Event:ShockDeath
  394:  		SetConst  *Var[0]  00000001 
  3A4:  		SetConst  *Var[1]  0055001A 
  3B4:  		ExecWait DoShockHit 
  3C0:  		SetConst  *Var[0]  00000001 
  3D0:  		SetConst  *Var[1]  0055001A 
  3E0:  		ExecWait DoDeath 
  3EC:  		Return
  3F4:  	Case  ==  .Event:Death
  400:  		SetConst  *Var[0]  00000001 
  410:  		SetConst  *Var[1]  0055001A 
  420:  		ExecWait DoNormalHit 
  42C:  		Wait     0000000A 
  438:  		SetConst  *Var[0]  00000001 
  448:  		SetConst  *Var[1]  0055001A 
  458:  		ExecWait DoDeath 
  464:  		Return
  46C:  	Case  ==  .Event:RecoverStatus
  478:  		SetConst  *Var[0]  00000001 
  488:  		SetConst  *Var[1]  00550006 
  498:  		ExecWait DoRecover 
  4A4:  	Case  ==  .Event:BeginAirLift
  4B0:  		SetConst  *Var[0]  00000001 
  4C0:  		SetConst  *Var[1]  00550006 
  4D0:  		ExecWait DoAirLift 
  4DC:  	Case  ==  .Event:BlowAway
  4E8:  		SetConst  *Var[0]  00000001 
  4F8:  		SetConst  *Var[1]  0055001A 
  508:  		ExecWait DoBlowAway 
  514:  EndSwitch
  51C:  Return
  524:  End

#new:Script $Script_FlipOver
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   54:  Sub  *Var[0]  00000001 
   64:  If  *Var[0]  >  00000000 
   74:  	Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   8C:  	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   A8:  	Call     SetAnimation 	( .Actor:Self 00000001 0055001C )
   C0:  	Wait     00000014 
   CC:  	Call     SetAnimation 	( .Actor:Self 00000001 00550006 )
   E4:  	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   FC:  Else
  104:  	Call     UseCamPreset 	( 0000000F )
  114:  	Call     SetCamZoom  	( 0000015E )
  124:  	Call     SetCamOffsetZ 	( 00000014 )
  134:  	Call     CamTargetActor ( .Actor:Self )
  144:  	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  160:  	Call     SetAnimation 	( .Actor:Self 00000001 0055001C )
  178:  	Wait     00000014 
  184:  	Call     SetAnimation 	( .Actor:Self 00000001 00550006 )
  19C:  	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  1B4:  	Call     SetAnimation 	( .Actor:Self 00000001 0055000A )
  1CC:  	Wait     00000014 
  1D8:  	Call     SetActorAngle 	( .Actor:Self 00000000 )
  1EC:  	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  204:  	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80218960 )
  21C:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
  234:  	Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  24C:  EndIf
  254:  Call     UseCamPreset 	( 00000002 )
  264:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  278:  Call     UseIdleAnimation 	( .Actor:Self .True )
  28C:  Return
  294:  End

#new:Script $Script_8021C234
    0:  Call     GetEventType 	( .Actor:Self *Var[0] )
   14:  Switch  *Var[0] 
   20:  	CaseOR  ==  .Event:HitCombo
   2C:  	CaseOR  ==  .Event:Hit
   38:  		SetConst  *Var[0]  00000001 
   48:  		SetConst  *Var[1]  0055001B 
   58:  		ExecWait DoNormalHit 
   64:  	EndCaseGroup
   6C:  	Case  ==  .Event:BurnHit
   78:  		SetConst  *Var[0]  00000001 
   88:  		SetConst  *Var[1]  00550024 
   98:  		SetConst  *Var[2]  00550025 
   A8:  		ExecWait DoBurnHit 
   B4:  	Case  ==  .Event:BurnDeath
   C0:  		SetConst  *Var[0]  00000001 
   D0:  		SetConst  *Var[1]  00550024 
   E0:  		SetConst  *Var[2]  00550025 
   F0:  		ExecWait DoBurnHit 
   FC:  		SetConst  *Var[0]  00000001 
  10C:  		SetConst  *Var[1]  00550025 
  11C:  		ExecWait DoDeath 
  128:  		Return
  130:  	Case  ==  .Event:MultibounceHit
  13C:  		SetConst  *Var[0]  00000001 
  14C:  		SetConst  *Var[1]  0055001B 
  15C:  		ExecWait 8029B998 
  168:  	Case  ==  .Event:MultibounceDeath
  174:  		SetConst  *Var[0]  00000001 
  184:  		SetConst  *Var[1]  0055001B 
  194:  		ExecWait 8029B998 
  1A0:  		SetConst  *Var[0]  00000001 
  1B0:  		SetConst  *Var[1]  0055001B 
  1C0:  		ExecWait DoDeath 
  1CC:  		Return
  1D4:  	Case  ==  .Event:FlipTrigger
  1E0:  		Call     SetActorVar 	( .Actor:Self 00000008 00000003 )
  1F8:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
  214:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
  230:  		Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
  24C:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  264:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
  27C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218914 )
  294:  		Call     SetAnimation 	( .Actor:Self 00000001 0055001B )
  2AC:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2C4:  		UseIntBuffer $IntTable_802191AC 
  2D0:  		Loop     00000014 
  2DC:  			Get1Int  *Var[0] 
  2E8:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  304:  			Wait     00000001 
  310:  		EndLoop
  318:  		Wait     00000014 
  324:  	CaseOR  ==  .Event:ScareAway
  330:  	CaseOR  ==  00000017
  33C:  	CaseOR  ==  .Event:Immune
  348:  	CaseOR  ==  .Event:AirLiftFailed
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  00550007 
  374:  		ExecWait DoImmune 
  380:  	EndCaseGroup
  388:  	Case  ==  .Event:ShockDeath
  394:  		SetConst  *Var[0]  00000001 
  3A4:  		SetConst  *Var[1]  0055001B 
  3B4:  		ExecWait DoShockHit 
  3C0:  		SetConst  *Var[0]  00000001 
  3D0:  		SetConst  *Var[1]  0055001B 
  3E0:  		ExecWait DoDeath 
  3EC:  		Return
  3F4:  	Case  ==  .Event:Death
  400:  		SetConst  *Var[0]  00000001 
  410:  		SetConst  *Var[1]  0055001B 
  420:  		ExecWait DoNormalHit 
  42C:  		Wait     0000000A 
  438:  		SetConst  *Var[0]  00000001 
  448:  		SetConst  *Var[1]  0055001B 
  458:  		ExecWait DoDeath 
  464:  		Return
  46C:  	Case  ==  .Event:RecoverStatus
  478:  		SetConst  *Var[0]  00000001 
  488:  		SetConst  *Var[1]  00550007 
  498:  		ExecWait DoRecover 
  4A4:  	Case  ==  .Event:BeginAirLift
  4B0:  		SetConst  *Var[0]  00000001 
  4C0:  		SetConst  *Var[1]  00550007 
  4D0:  		ExecWait DoAirLift 
  4DC:  	Case  ==  .Event:BlowAway
  4E8:  		SetConst  *Var[0]  00000001 
  4F8:  		SetConst  *Var[1]  0055001B 
  508:  		ExecWait DoBlowAway 
  514:  		Return
  51C:  EndSwitch
  524:  Return
  52C:  End

#new:Script $Script_FlipOver_Spikes
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   54:  Sub  *Var[0]  00000001 
   64:  If  *Var[0]  >  00000000 
   74:  	Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   8C:  	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   A8:  	Call     SetAnimation 	( .Actor:Self 00000001 0055001D )
   C0:  	Wait     00000014 
   CC:  	Call     SetAnimation 	( .Actor:Self 00000001 00550007 )
   E4:  	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   FC:  Else
  104:  	Call     UseCamPreset 	( 0000000F )
  114:  	Call     SetCamZoom  	( 0000015E )
  124:  	Call     SetCamOffsetZ 	( 00000014 )
  134:  	Call     CamTargetActor ( .Actor:Self )
  144:  	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  160:  	Call     SetAnimation 	( .Actor:Self 00000001 0055001D )
  178:  	Wait     00000014 
  184:  	Call     SetAnimation 	( .Actor:Self 00000001 00550007 )
  19C:  	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  1B4:  	Call     SetAnimation 	( .Actor:Self 00000001 0055000B )
  1CC:  	Wait     00000014 
  1D8:  	Call     SetActorAngle 	( .Actor:Self 00000000 )
  1EC:  	Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  204:  	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80218960 )
  21C:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
  234:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  250:  	Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  268:  EndIf
  270:  Call     UseCamPreset 	( 00000002 )
  280:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  294:  Call     UseIdleAnimation 	( .Actor:Self .True )
  2A8:  Return
  2B0:  End

#new:IdleAnimations $IdleAnimations_8021CA20
.Status:Normal    00530002
.Status:Stone     00530000
.Status:Sleep     0053000E
.Status:Poison    00530002
.Status:Stop      00530000
.Status:Static    00530002
.Status:Paralyze  00530000
.Status:Dizzy     0053000D
.Status:Fear      0053000D
.Status:End

#new:IdleAnimations $IdleAnimations_8021CA6C
.Status:Normal    00530001
.Status:End

#new:IdleAnimations $IdleAnimations_8021CA78
.Status:Normal    0053000F
.Status:End

#new:DefenseTable $DefenseTable_8021CA84
.Element:Normal 00000002
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:End

#new:DefenseTable $DefenseTable_8021CAA0
.Element:Normal 00000063
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:End

#new:StatusTable $StatusTable_8021CABC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     60`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_8021CB68
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021CC14
00800000 01000000 F81E00FF $IdleAnimations_8021CA20 $DefenseTable_8021CA84 00000000 00000000 FFF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021CA78 $DefenseTable_8021CA84 00000000 00000000 00000000 00000000 

#new:Actor $DryBones
% stats
[Index]        47b 
[Level]        30`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021CABC 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8021CC14 
[Script]      $Script_Init_8021CC84 
% move effectiveness
[Escape]       50`b 
[Item]         10`b 
[AirLift]      75`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  15`b % dx dy
[StatusIcon]    3`b  27`b % dx dy

#new:Script $Script_Init_8021CC84
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021DB48 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021CF2C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D404 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021CCFC )
   50:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   68:  Return
   70:  End

#new:Script $Script_NextTurn_8021CCFC
    0:  Call     GetActorType 	( .Actor:Self *Var[A] )
   14:  Call     CreateTargetList 	( 00008002 )
   24:  Call     InitTargetIterator 	( )
   30:  Label    00000000 
   3C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   50:  Call     GetActorType 	( *Var[0] *Var[2] )
   64:  If  *Var[2]  !=  *Var[A] 
   74:  	Call     GetActorHP  	( *Var[0] *Var[3] )
   88:  	If  *Var[3]  !=  00000000 
   98:  		Return
   A0:  	EndIf
   A8:  EndIf
   B0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   C4:  If  *Var[0]  !=  FFFFFFFF 
   D4:  	Goto     00000000 
   E0:  EndIf
   E8:  Call     CreateTargetList 	( 00008002 )
   F8:  Call     InitTargetIterator 	( )
  104:  Label    00000001 
  110:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  124:  Call     GetActorVar 	( *Var[0] 00000008 *Var[3] )
  13C:  If  *Var[3]  !=  00000001 
  14C:  	Return
  154:  EndIf
  15C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  170:  If  *Var[0]  !=  FFFFFFFF 
  180:  	Goto     00000001 
  18C:  EndIf
  194:  Call     CreateTargetList 	( 00008002 )
  1A4:  Call     InitTargetIterator 	( )
  1B0:  Label    00000002 
  1BC:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  1D0:  Call     SetActorFlagBits 	( *Var[0] 00600000 .True )
  1E8:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1FC:  If  *Var[0]  !=  FFFFFFFF 
  20C:  	Goto     00000002 
  218:  EndIf
  220:  Return
  228:  End

#new:Script $Script_Idle_8021CF2C
    0:  Label    00000000 
    C:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   24:  Call     GetStatusFlags ( .Actor:Self *Var[1] )
   38:  Switch  *Var[0] 
   44:  	Case  ==  00000000 
   50:  		Switch  *Var[1] 
   5C:  			Case  &  00001000 
   68:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFA 00000018 )
   84:  				Call     8027D4C8 ( FFFFFF81 00000001 00000001 FFFFFFFB )
   A0:  			Default
   A8:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF8 0000001E )
   C4:  				Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   E0:  		EndSwitch
   E8:  	Case  ==  00000001 
   F4:  		Switch  *Var[1] 
  100:  			Case  &  00001000 
  10C:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 0000000A )
  128:  				Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  144:  			Default
  14C:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 0000000A )
  168:  				Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  184:  		EndSwitch
  18C:  EndSwitch
  194:  Wait     00000001 
  1A0:  Goto     00000000 
  1AC:  Return
  1B4:  End

#new:Script $Script_8021D0E8
    0:  Call     PlaySoundAtActor 	( .Actor:Self 000002D2 )
   14:  Call     SetAnimation 	( .Actor:Self 00000001 00530008 )
   2C:  Wait     00000014 
   38:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
   50:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CA6C )
   68:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021CAA0 )
   80:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021CB68 )
   94:  Call     8027DDA0 ( FFFFFF81 )
   A4:  Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 0000000A )
   C0:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   DC:  Call     RandInt     	( 00000000 *Var[0] )
   F0:  Add  *Var[0]  00000002 
  100:  Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
  118:  Call     GetActorType 	( .Actor:Self *Var[A] )
  12C:  Call     CreateTargetList 	( 00008002 )
  13C:  Call     InitTargetIterator 	( )
  148:  Label    00000000 
  154:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  168:  Call     GetActorType 	( *Var[0] *Var[2] )
  17C:  If  *Var[2]  !=  *Var[A] 
  18C:  	Return
  194:  EndIf
  19C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1B0:  If  *Var[0]  !=  FFFFFFFF 
  1C0:  	Goto     00000000 
  1CC:  EndIf
  1D4:  Call     CreateTargetList 	( 00008002 )
  1E4:  Call     InitTargetIterator 	( )
  1F0:  Label    00000001 
  1FC:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  210:  Call     GetActorVar 	( *Var[0] 00000008 *Var[3] )
  228:  If  *Var[3]  !=  00000001 
  238:  	Return
  240:  EndIf
  248:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  25C:  If  *Var[0]  !=  FFFFFFFF 
  26C:  	Goto     00000001 
  278:  EndIf
  280:  Call     CreateTargetList 	( 00008002 )
  290:  Call     InitTargetIterator 	( )
  29C:  Label    00000002 
  2A8:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2BC:  Call     SetActorFlagBits 	( *Var[0] 00600000 .True )
  2D4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  2E8:  If  *Var[0]  !=  FFFFFFFF 
  2F8:  	Goto     00000002 
  304:  EndIf
  30C:  Return
  314:  End

#new:Script $Script_HandleEvent_8021D404
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		SetConst  *Var[0]  00000001 
   64:  		SetConst  *Var[1]  00530007 
   74:  		ExecWait DoNormalHit 
   80:  	Case  ==  .Event:Hit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  00530007 
   AC:  		ExecWait DoNormalHit 
   B8:  	Case  ==  .Event:BurnHit
   C4:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .True )
   E0:  		SetConst  *Var[0]  00000001 
   F0:  		SetConst  *Var[1]  0053000B 
  100:  		SetConst  *Var[2]  0053000C 
  110:  		ExecWait DoBurnHit 
  11C:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .False )
  138:  	Case  ==  .Event:BurnDeath
  144:  		SetConst  *Var[0]  00000001 
  154:  		SetConst  *Var[1]  0053000B 
  164:  		SetConst  *Var[2]  0053000C 
  174:  		ExecWait DoBurnHit 
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  0053000C 
  1A0:  		ExecWait DoDeath 
  1AC:  		Return
  1B4:  	Case  ==  .Event:MultibounceHit
  1C0:  		SetConst  *Var[0]  00000001 
  1D0:  		SetConst  *Var[1]  00530007 
  1E0:  		ExecWait 8029B998 
  1EC:  	Case  ==  .Event:MultibounceDeath
  1F8:  		SetConst  *Var[0]  00000001 
  208:  		SetConst  *Var[1]  00530007 
  218:  		ExecWait 8029B998 
  224:  		ExecWait $Script_8021D0E8 
  230:  	CaseOR  ==  00000017
  23C:  	CaseOR  ==  .Event:Immune
  248:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  260:  		If  *Var[0]  ==  00000000 
  270:  			SetConst  *Var[0]  00000001 
  280:  			SetConst  *Var[1]  00530002 
  290:  			ExecWait DoImmune 
  29C:  		Else
  2A4:  			SetConst  *Var[0]  00000001 
  2B4:  			SetConst  *Var[1]  00530001 
  2C4:  			ExecWait DoImmune 
  2D0:  		EndIf
  2D8:  	EndCaseGroup
  2E0:  	Case  ==  .Event:Death
  2EC:  		SetConst  *Var[0]  00000001 
  2FC:  		SetConst  *Var[1]  00530007 
  30C:  		ExecWait DoNormalHit 
  318:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  330:  		If  *Var[0]  ==  00000000 
  340:  			Wait     0000000A 
  34C:  			ExecWait $Script_8021D0E8 
  358:  		EndIf
  360:  	Case  ==  .Event:RecoverStatus
  36C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  384:  		If  *Var[0]  ==  00000000 
  394:  			SetConst  *Var[0]  00000001 
  3A4:  			SetConst  *Var[1]  00530002 
  3B4:  			ExecWait DoRecover 
  3C0:  		EndIf
  3C8:  	Case  ==  .Event:ScareAway
  3D4:  		SetConst  *Var[0]  00000001 
  3E4:  		SetConst  *Var[1]  00530004 
  3F4:  		SetConst  *Var[2]  00530007 
  404:  		ExecWait DoScareAway 
  410:  		Return
  418:  	Case  ==  .Event:BeginAirLift
  424:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  43C:  		If  *Var[0]  ==  00000000 
  44C:  			SetConst  *Var[0]  00000001 
  45C:  			SetConst  *Var[1]  00530004 
  46C:  			ExecWait DoAirLift 
  478:  		Else
  480:  			SetConst  *Var[0]  00000001 
  490:  			SetConst  *Var[1]  00530009 
  4A0:  			ExecWait DoAirLift 
  4AC:  		EndIf
  4B4:  	Case  ==  .Event:BlowAway
  4C0:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  4D8:  		If  *Var[0]  ==  00000000 
  4E8:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  4FC:  			If  *Var[0]  !&  0035D000 
  50C:  				If  *Var[0]  &  00080000 
  51C:  					Call     8026BA04 ( FFFFFF81 FFFFFFFF FFFFFFFE 00000000 )
  538:  				Else
  540:  					Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFB 00000000 )
  55C:  				EndIf
  564:  			EndIf
  56C:  			SetConst  *Var[0]  00000001 
  57C:  			SetConst  *Var[1]  00530007 
  58C:  			ExecWait DoBlowAway 
  598:  		Else
  5A0:  			SetConst  *Var[0]  00000001 
  5B0:  			SetConst  *Var[1]  00530009 
  5C0:  			ExecWait DoBlowAway 
  5CC:  		EndIf
  5D4:  		Return
  5DC:  	Case  ==  .Event:AirLiftFailed
  5E8:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  600:  		If  *Var[0]  ==  00000000 
  610:  			SetConst  *Var[0]  00000001 
  620:  			SetConst  *Var[1]  00530002 
  630:  			ExecWait DoImmune 
  63C:  		Else
  644:  			SetConst  *Var[0]  00000001 
  654:  			SetConst  *Var[1]  00530001 
  664:  			ExecWait DoImmune 
  670:  		EndIf
  678:  	Default
  680:  EndSwitch
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End

#new:Script $Script_8021DAC4
    0:  Set  *Var[0]  00000000 
   10:  Label    00000000 
   1C:  Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
   3C:  Add  *Var[0]  0000003C 
   4C:  Mod  *Var[0]  00000168 
   5C:  Wait     00000001 
   68:  Goto     00000000 
   74:  Return
   7C:  End

#new:Script $Script_TakeTurn_8021DB48
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  EndIf
   84:  Call     GetBattlePhase ( *Var[0] )
   94:  If  *Var[0]  ==  .Phase:FirstStrike
   A4:  	Call     SetAnimation 	( .Actor:Self 00000001 00530006 )
   BC:  	Goto     00000064 
   C8:  EndIf
   D0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   E8:  If  *Var[0]  ==  00000001 
   F8:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  110:  	Sub  *Var[0]  00000001 
  120:  	If  *Var[0]  ==  00000000 
  130:  		Call     PlaySoundAtActor 	( .Actor:Self 000002D4 )
  144:  		Call     SetAnimation 	( .Actor:Self 00000001 00530009 )
  15C:  		Wait     0000000A 
  168:  		Call     PlaySoundAtActor 	( .Actor:Self 000002D3 )
  17C:  		Call     SetAnimation 	( .Actor:Self 00000001 0053000A )
  194:  		Wait     00000014 
  1A0:  		Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  1B8:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  1D0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CA20 )
  1E8:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021CA84 )
  200:  		Call     SetStatusTable ( .Actor:Self $StatusTable_8021CABC )
  214:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00002000 .False )
  230:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF8 0000001E )
  24C:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
  268:  		Call     GetEnemyMaxHP 	( .Actor:Self *Var[0] )
  27C:  		Call     SetEnemyHP  	( .Actor:Self *Var[0] )
  290:  	Else
  298:  		Call     PlaySoundAtActor 	( .Actor:Self 000002D4 )
  2AC:  		Call     SetAnimation 	( .Actor:Self 00000001 00530009 )
  2C4:  		Wait     0000000A 
  2D0:  		Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
  2E8:  	EndIf
  2F0:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  304:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  318:  	Return
  320:  EndIf
  328:  Call     SetAnimation 	( .Actor:Self 00000001 00530005 )
  340:  Wait     0000000F 
  34C:  Call     SetAnimation 	( .Actor:Self 00000001 00530006 )
  364:  Thread
  36C:  	Wait     00000008 
  378:  	Call     SetAnimation 	( .Actor:Self 00000001 00530002 )
  390:  EndThread
  398:  Label    00000064 
  3A4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  3B8:  If  *Var[0]  &  00080000 
  3C8:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  3E8:  Else
  3F0:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  410:  EndIf
  418:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  43C:  Switch  *Var[0] 
  448:  	CaseOR  ==  00000006 
  454:  	CaseOR  ==  00000005 
  460:  		Set  *Var[F]  *Var[0] 
  470:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  48C:  		Add  *Var[1]  00000014 
  49C:  		Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  4BC:  		Wait     00000001 
  4C8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  4E4:  		Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002D1 )
  4FC:  		Call     8026FA00 ( FFFFFF81 00000002 00000000 00000000 00000000 )
  51C:  		Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  53C:  		Exec     $Script_8021DAC4 *Var[A] 
  54C:  		Call     SetGoalToTarget 	( .Actor:Self )
  55C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  578:  		Sub  *Var[0]  00000064 
  588:  		Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[12.0] )
  5A0:  		Call     RunSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 )
  5C4:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  5E0:  		Kill     *Var[A] 
  5EC:  		If  *Var[F]  ==  00000005 
  5FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  620:  		EndIf
  628:  		Wait     0000000F 
  634:  		Call     8027D7F0 ( )
  640:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  65C:  		Wait     00000014 
  668:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  680:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  694:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  6A8:  		Return
  6B0:  	EndCaseGroup
  6B8:  EndSwitch
  6C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6DC:  Add  *Var[1]  00000014 
  6EC:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  70C:  Wait     00000001 
  718:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  734:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002D1 )
  74C:  Call     8026FA00 ( FFFFFF81 00000002 00000000 00000000 00000000 )
  76C:  Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  78C:  Exec     $Script_8021DAC4 *Var[A] 
  79C:  Call     SetGoalToTarget 	( .Actor:Self )
  7AC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C8:  Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[12.0] )
  7E0:  Call     RunSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 )
  804:  Wait     00000002 
  810:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000004 00000020 )
  838:  Switch  *Var[0] 
  844:  	CaseOR  ==  00000000 
  850:  	CaseOR  ==  00000002 
  85C:  		Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  87C:  		Sub  *Var[0]  00000064 
  88C:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.7001953] )
  8A4:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000001E .True )
  8CC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  8E8:  		Kill     *Var[A] 
  8F4:  		Call     8027D7F0 ( )
  900:  	EndCaseGroup
  908:  EndSwitch
  910:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  924:  Call     UseIdleAnimation 	( .Actor:Self .True )
  938:  Return
  940:  End

#new:IdleAnimations $IdleAnimations_8021E490
.Status:Normal    005A0002
.Status:Stone     005A0000
.Status:Sleep     005A0011
.Status:Poison    005A0002
.Status:Stop      005A0000
.Status:Static    005A0002
.Status:Paralyze  005A0000
.Status:Dizzy     005A0012
.Status:Fear      005A0012
.Status:End

#new:IdleAnimations $IdleAnimations_8021E4DC
.Status:Normal    005A000D
.Status:End

#new:DefenseTable $DefenseTable_8021E4E8
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_8021E4F4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_8021E5A0
00800000 01000000 FD2300FF $IdleAnimations_8021E490 $DefenseTable_8021E4E8 00000000 00000000 FDF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 06000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 

#new:Actor $HammerBros
% stats
[Index]        4Bb 
[Level]        27`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E4F4 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_8021E5A0 
[Script]      $Script_Init_8021E6A0 
% move effectiveness
[Escape]       30`b 
[Item]         40`b 
[AirLift]      75`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:Script $Script_Init_8021E6A0
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022028C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021E704 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E860 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_8021E704
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  Switch  *Var[0] 
   2C:  	Case  &  00001000 
   38:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   54:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   70:  	Default
   78:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   90:  		Switch  *Var[0] 
   9C:  			Case  ==  00000000 
   A8:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000023 )
   C4:  				Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
   E0:  			Case  ==  00000001 
   EC:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  				Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		EndSwitch
  12C:  EndSwitch
  134:  Wait     00000001 
  140:  Goto     00000000 
  14C:  Return
  154:  End

#new:Script $Script_HandleEvent_8021E860
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  005A000E 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  005A000F 
   C0:  		SetConst  *Var[2]  005A0010 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  005A000F 
  108:  		SetConst  *Var[2]  005A0010 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  005A0010 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  005A000E 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  005A000E 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  005A000E 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  		SetConst  *Var[0]  00000001 
  224:  		SetConst  *Var[1]  005A0015 
  234:  		ExecWait DoImmune 
  240:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  254:  		If  *Var[0]  !&  0035D000 
  264:  			Call     SetAnimation 	( .Actor:Self 00000001 005A0017 )
  27C:  			Wait     0000000A 
  288:  		EndIf
  290:  	EndCaseGroup
  298:  	Case  ==  .Event:Death
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  005A000E 
  2C4:  		ExecWait DoNormalHit 
  2D0:  		Wait     0000000A 
  2DC:  		SetConst  *Var[0]  00000001 
  2EC:  		SetConst  *Var[1]  005A000E 
  2FC:  		ExecWait DoDeath 
  308:  		Return
  310:  	Case  ==  .Event:RecoverStatus
  31C:  		SetConst  *Var[0]  00000001 
  32C:  		SetConst  *Var[1]  005A0002 
  33C:  		ExecWait DoRecover 
  348:  	Case  ==  .Event:ScareAway
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  005A0007 
  374:  		SetConst  *Var[2]  005A000E 
  384:  		ExecWait DoScareAway 
  390:  		Return
  398:  	Case  ==  .Event:BeginAirLift
  3A4:  		SetConst  *Var[0]  00000001 
  3B4:  		SetConst  *Var[1]  005A0007 
  3C4:  		ExecWait DoAirLift 
  3D0:  	Case  ==  .Event:BlowAway
  3DC:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  3F0:  		If  *Var[0]  !&  0035D000 
  400:  			If  *Var[0]  &  00080000 
  410:  				Call     8026BA04 ( FFFFFF81 FFFFFFFE 00000001 00000000 )
  42C:  			Else
  434:  				Call     8026BA04 ( FFFFFF81 FFFFFFFB 00000003 00000000 )
  450:  			EndIf
  458:  		EndIf
  460:  		SetConst  *Var[0]  00000001 
  470:  		SetConst  *Var[1]  005A000E 
  480:  		ExecWait DoBlowAway 
  48C:  		Return
  494:  	Case  ==  .Event:AirLiftFailed
  4A0:  		SetConst  *Var[0]  00000001 
  4B0:  		SetConst  *Var[1]  005A0002 
  4C0:  		ExecWait DoImmune 
  4CC:  	Default
  4D4:  EndSwitch
  4DC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  504:  Return
  50C:  End

#new:Script $Script_8021ED74
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  EndIf
   84:  Call     GetBattlePhase ( *Var[0] )
   94:  If  *Var[0]  ==  .Phase:FirstStrike
   A4:  	ChildThread
   AC:  		Set  *Var[0]  00000000 
   BC:  		Label    00000000 
   C8:  		Add  *Var[0]  00000014 
   D8:  		Mod  *Var[0]  00000168 
   E8:  		Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
  108:  		Wait     00000001 
  114:  		Goto     00000000 
  120:  	EndChildThread
  128:  	Call     SetSpritePos 	( .Actor:Self 00000002 00000000 00000032 00000000 )
  148:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  164:  	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
  17C:  	Goto     00000064 
  188:  EndIf
  190:  ChildThread
  198:  	Set  *Var[0]  00000000 
  1A8:  	Label    00000000 
  1B4:  	Add  *Var[0]  00000014 
  1C4:  	Mod  *Var[0]  00000168 
  1D4:  	Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
  1F4:  	Wait     00000001 
  200:  	Goto     00000000 
  20C:  EndChildThread
  214:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  230:  Sub  *Var[0]  00000017 
  240:  Add  *Var[1]  00000017 
  250:  Sub  *Var[2]  00000002 
  260:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  280:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
  298:  Wait     00000008 
  2A4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  2C0:  Label    00000064 
  2CC:  Thread
  2D4:  	Wait     0000000F 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  2F8:  EndThread
  300:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  314:  If  *Var[0]  &  00080000 
  324:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  344:  Else
  34C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  36C:  EndIf
  374:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  398:  Switch  *Var[0] 
  3A4:  	CaseOR  ==  00000006 
  3B0:  	CaseOR  ==  00000005 
  3BC:  		Set  *Var[A]  *Var[0] 
  3CC:  		Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  3EC:  		Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
  404:  		Call     SetGoalToTarget 	( .Actor:Self )
  414:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  430:  		Sub  *Var[0]  00000014 
  440:  		Set  *Var[1]  0000000A 
  450:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
  468:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  490:  		If  *Var[A]  ==  00000005 
  4A0:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  4C4:  		EndIf
  4CC:  		Sub  *Var[0]  00000028 
  4DC:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  504:  		Sub  *Var[0]  0000001E 
  514:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
  53C:  		Sub  *Var[0]  00000014 
  54C:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
  574:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  590:  		Wait     0000000F 
  59C:  		Call     8027D7F0 ( )
  5A8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5C4:  		Wait     00000014 
  5D0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5E8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  648:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
  660:  Call     SetGoalToTarget 	( .Actor:Self )
  670:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  68C:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
  6A4:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000005 00000020 )
  700:  Switch  *Var[0] 
  70C:  	CaseOR  ==  00000000 
  718:  	CaseOR  ==  00000002 
  724:  		Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  744:  		Sub  *Var[0]  00000032 
  754:  		Set  *Var[1]  0000000A 
  764:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  78C:  		Sub  *Var[0]  0000001E 
  79C:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
  7C4:  		Sub  *Var[0]  00000014 
  7D4:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
  7FC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  818:  		Wait     00000014 
  824:  		Call     8027D7F0 ( )
  830:  	EndCaseGroup
  838:  EndSwitch
  840:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  854:  Call     UseIdleAnimation 	( .Actor:Self .True )
  868:  Return
  870:  End

#new:Script $Script_8021F5EC
    0:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
   48:  Wait     00000004 
   54:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
   70:  Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
   90:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   D4:  Set  *Var[2]  0000000A 
   E4:  Call     RandInt     	( 0000003C *Var[4] )
   F8:  Set  *Var[5]  0000001E 
  108:  Sub  *Var[5]  *Var[4] 
  118:  Add  *Var[1]  *Var[5] 
  128:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
  140:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
  168:  Sub  *Var[1]  00000032 
  178:  Set  *Var[2]  0000000A 
  188:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
  1B0:  Sub  *Var[1]  0000001E 
  1C0:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
  1E8:  Sub  *Var[1]  00000014 
  1F8:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
  220:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
  23C:  Return
  244:  End

#new:Script $Script_8021F838
    0:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
   48:  Wait     00000004 
   54:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
   70:  Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
   90:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   D4:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
   EC:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
  114:  Sub  *Var[1]  00000032 
  124:  Set  *Var[2]  0000000A 
  134:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
  15C:  Sub  *Var[1]  0000001E 
  16C:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
  194:  Sub  *Var[1]  00000014 
  1A4:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
  1CC:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
  1E8:  Return
  1F0:  End

#new:Script $Script_8021FA30
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Thread
   44:  	Set  *Var[0]  00000000 
   54:  	Loop     00000064 
   60:  		Add  *Var[0]  00000014 
   70:  		Mod  *Var[0]  00000168 
   80:  		Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
   A0:  		Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
   C0:  		Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 *Var[0] )
   E0:  		Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 *Var[0] )
  100:  		Call     SetSpriteRotation 	( .Actor:Self 00000006 00000000 00000000 *Var[0] )
  120:  		Wait     00000001 
  12C:  	EndLoop
  134:  EndThread
  13C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  158:  Sub  *Var[0]  00000017 
  168:  Add  *Var[1]  00000017 
  178:  Sub  *Var[2]  00000002 
  188:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  1A8:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  1C8:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  1E8:  Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  208:  Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  228:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  23C:  If  *Var[0]  &  00080000 
  24C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  26C:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  28C:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2AC:  	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2CC:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2EC:  Else
  2F4:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  314:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  334:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  374:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  394:  EndIf
  39C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  3C0:  Switch  *Var[0] 
  3CC:  	CaseOR  ==  00000006 
  3D8:  	CaseOR  ==  00000005 
  3E4:  		Set  *Var[A]  *Var[0] 
  3F4:  		Set  *Var[0]  00000002 
  404:  		Exec     $Script_8021F5EC 
  410:  		Wait     00000005 
  41C:  		Set  *Var[0]  00000003 
  42C:  		Exec     $Script_8021F5EC 
  438:  		Wait     00000005 
  444:  		Set  *Var[0]  00000004 
  454:  		Exec     $Script_8021F5EC 
  460:  		Wait     00000005 
  46C:  		Set  *Var[0]  00000005 
  47C:  		Exec     $Script_8021F5EC 
  488:  		Wait     00000005 
  494:  		Set  *Var[0]  00000006 
  4A4:  		Exec     $Script_8021F5EC 
  4B0:  		Wait     00000005 
  4BC:  		Wait     00000014 
  4C8:  		Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  4E0:  		If  *Var[A]  ==  00000005 
  4F0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  514:  		EndIf
  51C:  		Wait     0000000F 
  528:  		Call     8027D7F0 ( )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Wait     00000014 
  55C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  574:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Thread
  5BC:  	Set  *Var[0]  00000002 
  5CC:  	Exec     $Script_8021F838 
  5D8:  	Wait     00000005 
  5E4:  	Set  *Var[0]  00000003 
  5F4:  	Exec     $Script_8021F838 
  600:  	Wait     00000005 
  60C:  	Set  *Var[0]  00000004 
  61C:  	Exec     $Script_8021F838 
  628:  	Wait     00000005 
  634:  	Set  *Var[0]  00000005 
  644:  	Exec     $Script_8021F838 
  650:  	Wait     00000005 
  65C:  	Set  *Var[0]  00000006 
  66C:  	Exec     $Script_8021F838 
  678:  EndThread
  680:  Wait     00000015 
  68C:  Wait     00000002 
  698:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000010 )
  6C0:  Wait     00000005 
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  700:  Wait     00000005 
  70C:  Wait     00000002 
  718:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  740:  Wait     00000005 
  74C:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  764:  Wait     00000002 
  770:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  798:  Wait     00000005 
  7A4:  Wait     00000002 
  7B0:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000002 00000020 )
  7D8:  Switch  *Var[0] 
  7E4:  	CaseOR  ==  00000000 
  7F0:  	CaseOR  ==  00000002 
  7FC:  		Wait     00000014 
  808:  		Call     8027D7F0 ( )
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  838:  Call     UseIdleAnimation 	( .Actor:Self .True )
  84C:  Return
  854:  End

#new:Script $Script_TakeTurn_8022028C
    0:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   14:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
   28:  MulF  *Var[0]  *Fixed[100.0] 
   38:  DivF  *Var[0]  *Var[1] 
   48:  If  *Var[0]  >  00000022 
   58:  	ExecWait $Script_8021ED74 
   64:  Else
   6C:  	ExecWait $Script_8021FA30 
   78:  EndIf
   80:  Return
   88:  End

PADDING: 8022031C to 80220320 (0068CD4C to 0068CD50)
00000000 

#new:IdleAnimations $IdleAnimations_80220320
.Status:Normal    00590001
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590001
.Status:Stop      00590000
.Status:Static    00590001
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_8022036C
.Status:Normal    00590003
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590003
.Status:Stop      00590000
.Status:Static    00590003
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_802203B8
.Status:Normal    0059000F
.Status:Stone     00590010
.Status:Sleep     00590012
.Status:Poison    0059000F
.Status:Stop      00590010
.Status:Static    0059000F
.Status:Paralyze  00590010
.Status:Dizzy     00590014
.Status:Fear      00590014
.Status:End

#new:IdleAnimations $IdleAnimations_80220404
.Status:Normal    00590006
.Status:Stone     00590006
.Status:Sleep     00590006
.Status:Poison    00590006
.Status:Stop      00590006
.Status:Static    00590006
.Status:Paralyze  00590006
.Status:Dizzy     00590006
.Status:Fear      00590006
.Status:End

#new:DefenseTable $DefenseTable_80220450
.Element:Normal 00000003
.Element:Shock  00000003
.Element:End

#new:DefenseTable $DefenseTable_80220464
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80220470
.Element:Normal 00000003
.Element:Fire   00000003
.Element:End

#new:StatusTable $StatusTable_80220484
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   75`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80220530
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802205CC
00800000 01000000 002000FF $IdleAnimations_80220320 $DefenseTable_80220450 00001010 00000000 00F40000 00000000 

#new:Actor $Koopatrol
% stats
[Index]        4Cb 
[Level]        25`b 
[MaxHP]         8`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80220484 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802205CC 
[Script]      $Script_Init_80220618 
% move effectiveness
[Escape]       50`b 
[Item]         60`b 
[AirLift]      75`b 
[Hurricane]    65`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  32`b % dx dy
[StatusIcon]    5`b  32`b % dx dy

#new:Script $Script_Init_80220618
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224684 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022098C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220E74 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80220768 )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   80:  Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
   94:  Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
   AC:  Switch  *Var[0] 
   B8:  	Case  ==  00000000 
   C4:  		Call     SetBattleVar 	( 00000004 00000000 )
   D8:  	Case  ==  00000001 
   E4:  		Call     SetBattleVar 	( 00000005 00000000 )
   F8:  	Case  ==  00000002 
  104:  		Call     SetBattleVar 	( 00000006 00000000 )
  118:  	Case  ==  00000003 
  124:  		Call     SetBattleVar 	( 00000007 00000000 )
  138:  EndSwitch
  140:  Return
  148:  End

#new:Script $Script_NextTurn_80220768
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:PlayerBegin
   28:  	Case  ==  .Phase:EnemyBegin
   34:  	Case  ==  .Phase:EnemyEnd
   40:  		Call     SetBattleVar 	( 00000001 00000000 )
   54:  EndSwitch
   5C:  Return
   64:  End

#new:Script $Script_802207D4
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000000 
   18:  		If  *Var[1]  &  00041000 
   28:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   44:  			Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call     $Function_802180D0 ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
   A0:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call     $Function_802180D0 ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001 
   EC:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call     $Function_802180D0 ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  	Case  ==  00000002 
  14C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000014 )
  168:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFFA )
  184:  		Call     $Function_802180D0 ( FFFFFFF1 00000016 00000005 00000016 )
  1A0:  EndSwitch
  1A8:  Return
  1B0:  End

#new:Script $Script_Idle_8022098C
    0:  Label    00000000 
    C:  Call     RandInt     	( 00000050 *Var[A] )
   20:  Add  *Var[A]  00000050 
   30:  Loop     *Var[A] 
   3C:  	Label    00000001 
   48:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   60:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   74:  	ExecWait $Script_802207D4 
   80:  	If  *Var[0]  ==  00000001 
   90:  		Wait     00000001 
   9C:  		Goto     00000001 
   A8:  	EndIf
   B0:  	If  *Var[1]  &  0235D000 
   C0:  		Wait     00000001 
   CC:  		Goto     00000001 
   D8:  	EndIf
   E0:  	Wait     00000001 
   EC:  EndLoop
   F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  110:  Add  *Var[0]  00000005 
  120:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  134:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022036C )
  14C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  168:  Call     8027A264 ( FFFFFF81 00000000 )
  17C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  194:  Switch  *Var[0] 
  1A0:  	Case  ==  00000000 
  1AC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  1C4:  	Case  ==  00000001 
  1D0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802203B8 )
  1E8:  EndSwitch
  1F0:  Loop     00000014 
  1FC:  	Label    00000002 
  208:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  220:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  234:  	ExecWait $Script_802207D4 
  240:  	If  *Var[0]  ==  00000001 
  250:  		Wait     00000001 
  25C:  		Goto     00000002 
  268:  	EndIf
  270:  	If  *Var[1]  &  0235D000 
  280:  		Wait     00000001 
  28C:  		Goto     00000002 
  298:  	EndIf
  2A0:  	Wait     00000001 
  2AC:  EndLoop
  2B4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  Sub  *Var[0]  00000005 
  2E0:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  2F4:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022036C )
  30C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  328:  Call     8027A264 ( FFFFFF81 00000000 )
  33C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  354:  Switch  *Var[0] 
  360:  	Case  ==  00000000 
  36C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  384:  	Case  ==  00000001 
  390:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802203B8 )
  3A8:  EndSwitch
  3B0:  Loop     00000050 
  3BC:  	Label    00000003 
  3C8:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  3E0:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  3F4:  	ExecWait $Script_802207D4 
  400:  	If  *Var[0]  ==  00000001 
  410:  		Wait     00000001 
  41C:  		Goto     00000003 
  428:  	EndIf
  430:  	If  *Var[1]  &  0235D000 
  440:  		Wait     00000001 
  44C:  		Goto     00000003 
  458:  	EndIf
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Goto     00000000 
  480:  Return
  488:  End

#new:IntTable $IntTable_80220E1C
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80220E74
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   3C:  Call     GetEventType 	( .Actor:Self *Var[0] )
   50:  Switch  *Var[0] 
   5C:  	CaseOR  ==  .Event:HitCombo
   68:  	CaseOR  ==  .Event:Hit
   74:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   8C:  		Switch  *Var[0] 
   98:  			CaseOR  ==  00000000 
   A4:  			CaseOR  ==  00000001 
   B0:  				SetConst  *Var[0]  00000001 
   C0:  				SetConst  *Var[1]  0059000B 
   D0:  				ExecWait DoNormalHit 
   DC:  			EndCaseGroup
   E4:  			Case  ==  00000002 
   F0:  				SetConst  *Var[0]  00000001 
  100:  				SetConst  *Var[1]  00590006 
  110:  				ExecWait DoNormalHit 
  11C:  		EndSwitch
  124:  	EndCaseGroup
  12C:  	Case  ==  .Event:BurnHit
  138:  		SetConst  *Var[0]  00000001 
  148:  		SetConst  *Var[1]  0059000C 
  158:  		SetConst  *Var[2]  0059000D 
  168:  		ExecWait DoBurnHit 
  174:  	Case  ==  .Event:BurnDeath
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  0059000C 
  1A0:  		SetConst  *Var[2]  0059000D 
  1B0:  		ExecWait DoBurnHit 
  1BC:  		SetConst  *Var[0]  00000001 
  1CC:  		SetConst  *Var[1]  0059000D 
  1DC:  		ExecWait DoDeath 
  1E8:  		Return
  1F0:  	Case  ==  .Event:MultibounceHit
  1FC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  214:  		Switch  *Var[0] 
  220:  			CaseOR  ==  00000000 
  22C:  			CaseOR  ==  00000001 
  238:  				SetConst  *Var[0]  00000001 
  248:  				SetConst  *Var[1]  0059000B 
  258:  				ExecWait 8029B998 
  264:  			EndCaseGroup
  26C:  			Case  ==  00000002 
  278:  				SetConst  *Var[0]  00000001 
  288:  				SetConst  *Var[1]  00590006 
  298:  				ExecWait 8029B998 
  2A4:  		EndSwitch
  2AC:  	Case  ==  .Event:MultibounceDeath
  2B8:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  2D0:  		Switch  *Var[0] 
  2DC:  			CaseOR  ==  00000000 
  2E8:  			CaseOR  ==  00000001 
  2F4:  				SetConst  *Var[0]  00000001 
  304:  				SetConst  *Var[1]  0059000B 
  314:  				ExecWait 8029B998 
  320:  				SetConst  *Var[0]  00000001 
  330:  				SetConst  *Var[1]  0059000B 
  340:  				ExecWait DoDeath 
  34C:  			EndCaseGroup
  354:  			Case  ==  00000002 
  360:  				SetConst  *Var[0]  00000001 
  370:  				SetConst  *Var[1]  00590006 
  380:  				ExecWait 8029B998 
  38C:  				Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  3A4:  				Wait     00000005 
  3B0:  				SetConst  *Var[0]  00000001 
  3C0:  				SetConst  *Var[1]  0059000B 
  3D0:  				ExecWait DoDeath 
  3DC:  		EndSwitch
  3E4:  	Case  ==  .Event:FlipTrigger
  3F0:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  408:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  420:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220464 )
  438:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802203B8 )
  450:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  46C:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  488:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  4A4:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  4BC:  		Call     SetAnimation 	( .Actor:Self 00000001 0059000B )
  4D4:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  4F0:  		Thread
  4F8:  			Wait     00000004 
  504:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  520:  			Wait     00000001 
  52C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  548:  			Wait     00000001 
  554:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  570:  			Wait     00000001 
  57C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  598:  			Wait     00000001 
  5A4:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  5C0:  			Wait     00000001 
  5CC:  		EndThread
  5D4:  		UseIntBuffer $IntTable_80220E1C 
  5E0:  		Loop     00000016 
  5EC:  			Get1Int  *Var[0] 
  5F8:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  614:  			Wait     00000001 
  620:  		EndLoop
  628:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  644:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  660:  		Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
  678:  	Case  ==  .Event:ShockHit
  684:  		SetConst  *Var[0]  00000001 
  694:  		SetConst  *Var[1]  0059000B 
  6A4:  		ExecWait DoShockHit 
  6B0:  		SetConst  *Var[0]  00000001 
  6C0:  		SetConst  *Var[1]  0059000B 
  6D0:  		ExecWait 8029BD70 
  6DC:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  6FC:  		SetConst  *Var[0]  00000001 
  70C:  		SetConst  *Var[1]  00590004 
  71C:  		ExecWait DoReturnHome 
  728:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  73C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  75C:  	Case  ==  .Event:ShockDeath
  768:  		SetConst  *Var[0]  00000001 
  778:  		SetConst  *Var[1]  0059000B 
  788:  		ExecWait DoShockHit 
  794:  		SetConst  *Var[0]  00000001 
  7A4:  		SetConst  *Var[1]  0059000B 
  7B4:  		ExecWait DoDeath 
  7C0:  		Return
  7C8:  	Case  ==  .Event:StarBeam
  7D4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  7EC:  		If  *Var[0]  ==  00000002 
  7FC:  			Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
  810:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
  828:  			Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  844:  			Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  85C:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  874:  			Call     GetStatusFlags ( .Actor:Self *Var[A] )
  888:  			If  *Var[A]  !&  18000000 
  898:  				Call     EnableActorGlow 	( .Actor:Self .False )
  8AC:  			EndIf
  8B4:  			Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  8D0:  			SetConst  *Var[0]  00000001 
  8E0:  			SetConst  *Var[1]  00590008 
  8F0:  			ExecWait DoImmune 
  8FC:  		EndIf
  904:  	CaseOR  ==  00000017
  910:  	CaseOR  ==  .Event:Immune
  91C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  934:  		Switch  *Var[0] 
  940:  			Case  ==  00000000 
  94C:  				SetConst  *Var[0]  00000001 
  95C:  				SetConst  *Var[1]  00590007 
  96C:  				ExecWait DoImmune 
  978:  				Call     GetStatusFlags ( .Actor:Self *Var[0] )
  98C:  				If  *Var[0]  !&  0035D000 
  99C:  					Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  9B4:  					Wait     0000000A 
  9C0:  				EndIf
  9C8:  			Case  ==  00000001 
  9D4:  				SetConst  *Var[0]  00000001 
  9E4:  				SetConst  *Var[1]  0059000F 
  9F4:  				ExecWait DoImmune 
  A00:  			Case  ==  00000002 
  A0C:  				SetConst  *Var[0]  00000001 
  A1C:  				SetConst  *Var[1]  00590006 
  A2C:  				ExecWait DoImmune 
  A38:  		EndSwitch
  A40:  	EndCaseGroup
  A48:  	Case  ==  .Event:SpikeTaunt
  A54:  		Wait     0000000A 
  A60:  		Set  *Flag[00]  00000000 
  A70:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A8C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  AA0:  		If  *Var[3]  &  00080000 
  AB0:  			Add  *Var[1]  00000010 
  AC0:  			Set  *Flag[00]  00000001 
  AD0:  		EndIf
  AD8:  		If  *Var[3]  &  00040000 
  AE8:  			Add  *Var[0]  FFFFFFF2 
  AF8:  			Add  *Var[1]  00000014 
  B08:  			Set  *Flag[00]  00000001 
  B18:  		EndIf
  B20:  		If  *Var[3]  &  00001000 
  B30:  			Add  *Var[0]  FFFFFFF2 
  B40:  			Add  *Var[1]  00000014 
  B50:  			Set  *Flag[00]  00000001 
  B60:  		EndIf
  B68:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  B80:  		If  *Var[A]  ==  00000002 
  B90:  			Add  *Var[1]  00000017 
  BA0:  			Set  *Flag[00]  00000001 
  BB0:  		EndIf
  BB8:  		If  *Flag[00]  ==  00000000 
  BC8:  			Add  *Var[1]  0000002A 
  BD8:  		EndIf
  BE0:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C24:  		Wait     00000014 
  C30:  	Case  ==  .Event:Death
  C3C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  C54:  		Switch  *Var[0] 
  C60:  			CaseOR  ==  00000000 
  C6C:  			CaseOR  ==  00000001 
  C78:  				SetConst  *Var[0]  00000001 
  C88:  				SetConst  *Var[1]  0059000B 
  C98:  				ExecWait DoNormalHit 
  CA4:  				Wait     0000000A 
  CB0:  				SetConst  *Var[0]  00000001 
  CC0:  				SetConst  *Var[1]  0059000B 
  CD0:  				ExecWait DoDeath 
  CDC:  				Return
  CE4:  			EndCaseGroup
  CEC:  			Case  ==  00000002 
  CF8:  				SetConst  *Var[0]  00000001 
  D08:  				SetConst  *Var[1]  00590006 
  D18:  				ExecWait DoNormalHit 
  D24:  				Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  D3C:  				Wait     00000005 
  D48:  				SetConst  *Var[0]  00000001 
  D58:  				SetConst  *Var[1]  0059000B 
  D68:  				ExecWait DoDeath 
  D74:  				Return
  D7C:  		EndSwitch
  D84:  	Case  ==  .Event:RecoverStatus
  D90:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  DA8:  		Switch  *Var[0] 
  DB4:  			Case  ==  00000000 
  DC0:  				SetConst  *Var[0]  00000001 
  DD0:  				SetConst  *Var[1]  00590001 
  DE0:  				ExecWait DoRecover 
  DEC:  			Case  ==  00000001 
  DF8:  				SetConst  *Var[0]  00000001 
  E08:  				SetConst  *Var[1]  0059000F 
  E18:  				ExecWait DoImmune 
  E24:  			Case  ==  00000002 
  E30:  				SetConst  *Var[0]  00000001 
  E40:  				SetConst  *Var[1]  00590006 
  E50:  				ExecWait DoRecover 
  E5C:  		EndSwitch
  E64:  	Case  ==  .Event:ScareAway
  E70:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  E88:  		Switch  *Var[0] 
  E94:  			CaseOR  ==  00000000 
  EA0:  			CaseOR  ==  00000002 
  EAC:  				SetConst  *Var[0]  00000001 
  EBC:  				SetConst  *Var[1]  00590004 
  ECC:  				SetConst  *Var[2]  0059000B 
  EDC:  				ExecWait DoScareAway 
  EE8:  				Return
  EF0:  			EndCaseGroup
  EF8:  			Case  ==  00000001 
  F04:  				SetConst  *Var[0]  00000001 
  F14:  				SetConst  *Var[1]  0059000F 
  F24:  				ExecWait DoImmune 
  F30:  		EndSwitch
  F38:  	Case  ==  .Event:BeginAirLift
  F44:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  F5C:  		Switch  *Var[0] 
  F68:  			Case  ==  00000000 
  F74:  				SetConst  *Var[0]  00000001 
  F84:  				SetConst  *Var[1]  00590016 
  F94:  				ExecWait DoAirLift 
  FA0:  			Case  ==  00000001 
  FAC:  				SetConst  *Var[0]  00000001 
  FBC:  				SetConst  *Var[1]  0059000F 
  FCC:  				ExecWait DoAirLift 
  FD8:  			Case  ==  00000002 
  FE4:  				SetConst  *Var[0]  00000001 
  FF4:  				SetConst  *Var[1]  0059000F 
 1004:  				ExecWait DoAirLift 
 1010:  		EndSwitch
 1018:  	Case  ==  .Event:BlowAway
 1024:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
 103C:  		Switch  *Var[0] 
 1048:  			Case  ==  00000000 
 1054:  				SetConst  *Var[0]  00000001 
 1064:  				SetConst  *Var[1]  00590016 
 1074:  			Case  ==  00000001 
 1080:  				SetConst  *Var[0]  00000001 
 1090:  				SetConst  *Var[1]  0059000F 
 10A0:  			Case  ==  00000002 
 10AC:  				SetConst  *Var[0]  00000001 
 10BC:  				SetConst  *Var[1]  0059000F 
 10CC:  		EndSwitch
 10D4:  		ExecWait DoBlowAway 
 10E0:  		Return
 10E8:  	Case  ==  .Event:AirLiftFailed
 10F4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
 110C:  		Switch  *Var[0] 
 1118:  			Case  ==  00000000 
 1124:  				SetConst  *Var[0]  00000001 
 1134:  				SetConst  *Var[1]  00590001 
 1144:  			Case  ==  00000001 
 1150:  				SetConst  *Var[0]  00000001 
 1160:  				SetConst  *Var[1]  0059000F 
 1170:  			Case  ==  00000002 
 117C:  				SetConst  *Var[0]  00000001 
 118C:  				SetConst  *Var[1]  0059000F 
 119C:  		EndSwitch
 11A4:  		ExecWait DoImmune 
 11B0:  EndSwitch
 11B8:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
 11CC:  Call     UseIdleAnimation 	( .Actor:Self .True )
 11E0:  Return
 11E8:  End

#new:Script $Script_ShellToss
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
   74:  Else
   7C:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   94:  	If  *Var[0]  ==  00000001 
   A4:  		Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   BC:  		Sub  *Var[0]  00000001 
   CC:  		If  *Var[0]  >  00000000 
   DC:  			Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   F4:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait     0000000F 
  134:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait     0000000A 
  1AC:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  1DC:  			Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1F8:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  20C:  			Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
  224:  			Set  *Var[0]  00000000 
  234:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  250:  			Thread
  258:  				Loop     00000005 
  264:  					Add  *Var[0]  0000000F 
  274:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  290:  					Wait     00000001 
  29C:  				EndLoop
  2A4:  			EndThread
  2AC:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E4:  			Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  2F8:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  318:  			Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  32C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  380:  			Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  398:  			Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  3B0:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  3C8:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
  3E0:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
  3FC:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  434:  			Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  44C:  		EndIf
  454:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  468:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  47C:  		Return
  484:  	EndIf
  48C:  	Call     UseCamPreset 	( 0000003F )
  49C:  	Call     CamTargetActor ( .Actor:Self )
  4AC:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  4C4:  	Wait     0000000A 
  4D0:  	Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  4E8:  	Wait     0000000A 
  4F4:  	Thread
  4FC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  518:  		Add  *Var[1]  00000004 
  528:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  56C:  		Wait     00000003 
  578:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5BC:  		Wait     00000002 
  5C8:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  60C:  	EndThread
  614:  	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  628:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  640:  	Wait     0000000A 
  64C:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  664:  EndIf
  66C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  680:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  69C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  6C0:  Switch  *Var[0] 
  6CC:  	CaseOR  ==  00000006 
  6D8:  	CaseOR  ==  00000005 
  6E4:  		Set  *Var[A]  *Var[0] 
  6F4:  		Call     SetGoalToTarget 	( .Actor:Self )
  704:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
  720:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  734:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  74C:  		Call     GetBattlePhase ( *Var[0] )
  75C:  		If  *Var[0]  ==  .Phase:FirstStrike
  76C:  			Call     UseCamPreset 	( 00000005 )
  77C:  			Call     SetCamZoom  	( 0000012C )
  78C:  			Call     SetCamOffsetZ 	( 00000014 )
  79C:  			Call     MoveCamOver 	( 0000000A )
  7AC:  			Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  7C4:  		EndIf
  7CC:  		If  *Var[A]  ==  00000005 
  7DC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  800:  		EndIf
  808:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  820:  		Wait     00000008 
  82C:  		Call     8026F6EC ( FFFFFF81 )
  83C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  850:  		Wait     00000004 
  85C:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  874:  		Wait     00000001 
  880:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  898:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8B4:  		Add  *Var[1]  00000014 
  8C4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  8F4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  914:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  92C:  		Wait     00000006 
  938:  		Sub  *Var[1]  00000014 
  948:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  964:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  984:  		Call     UseCamPreset 	( 00000002 )
  994:  		Call     8027D7F0 ( )
  9A0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  9B4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9D0:  		Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  9E8:  		Call     SetGoalToHome 	( .Actor:Self )
  9F8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  A0C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A24:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  A3C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  A54:  		Call     8026B438 ( FFFFFF81 00000001 00000000 )
  A6C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  A80:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A94:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:  		Return
  AB0:  	EndCaseGroup
  AB8:  EndSwitch
  AC0:  Call     SetGoalToTarget 	( .Actor:Self )
  AD0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  AE4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  AFC:  Call     8026F6EC ( FFFFFF81 )
  B0C:  Wait     00000002 
  B18:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
  B40:  Switch  *Var[0] 
  B4C:  	CaseOR  ==  00000000 
  B58:  	CaseOR  ==  00000002 
  B64:  		Call     UseCamPreset 	( 00000002 )
  B74:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B90:  		Add  *Var[0]  00000028 
  BA0:  		Set  *Var[1]  00000000 
  BB0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  BC4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BE0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  C00:  		Add  *Var[0]  0000001E 
  C10:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C2C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C4C:  		Add  *Var[0]  00000014 
  C5C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C78:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  C98:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  CB0:  		Wait     00000008 
  CBC:  		Call     8027D7F0 ( )
  CC8:  		SetConst  *Var[0]  00000001 
  CD8:  		SetConst  *Var[1]  00590004 
  CE8:  		ExecWait DoReturnHome 
  CF4:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  D0C:  	EndCaseGroup
  D14:  EndSwitch
  D1C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D30:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D44:  Return
  D4C:  End

#new:Script $Script_SuperShellToss
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   64:  If  *Var[0]  ==  00000000 
   74:  	Call     UseCamPreset 	( 0000000E )
   84:  	Call     CamTargetActor ( .Actor:Self )
   94:  	Call     MoveCamOver 	( 00000014 )
   A4:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:PowerUp )
   B8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D4:  	Add  *Var[1]  0000000A 
   E4:  	Call     PlayEffect  	( {FX:EnergyIn:LongStreaks1} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  128:  	Call     SetAnimation 	( .Actor:Self 00000001 00590015 )
  140:  	Wait     0000001E 
  14C:  	Call     UseCamPreset 	( 00000002 )
  15C:  	Call     MoveCamOver 	( 00000014 )
  16C:  	Thread
  174:  		Wait     00000008 
  180:  		Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
  198:  	EndThread
  1A0:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  1B4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D0:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  20C:  	Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  220:  	Call     $Function_8021819C ( 00000080 0000000A )
  234:  	Thread
  23C:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.5] )
  258:  	EndThread
  260:  	Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
  278:  	Call     SetStatusTable ( .Actor:Self $StatusTable_80220530 )
  28C:  	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220470 )
  2A4:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .False )
  2C0:  	Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
  2D8:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220404 )
  2F0:  	Call     EnableActorGlow 	( .Actor:Self .True )
  304:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .True )
  320:  	Wait     0000000A 
  32C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  340:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  354:  	Return
  35C:  EndIf
  364:  Call     UseCamPreset 	( 0000003F )
  374:  Call     CamTargetActor ( .Actor:Self )
  384:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  39C:  Loop     00000014 
  3A8:  	Call     8026BA04 ( FFFFFF81 00000001 00000000 00000000 )
  3C4:  	Wait     00000001 
  3D0:  	Call     8026BA04 ( FFFFFF81 FFFFFFFF 00000000 00000000 )
  3EC:  	Wait     00000001 
  3F8:  EndLoop
  400:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  41C:  Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
  430:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  44C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  470:  Switch  *Var[0] 
  47C:  	CaseOR  ==  00000006 
  488:  	CaseOR  ==  00000005 
  494:  		Set  *Var[A]  *Var[0] 
  4A4:  		Thread
  4AC:  			Loop     
  4B8:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  4D4:  				Add  *Var[0]  0000001E 
  4E4:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  500:  				If  *Var[0]  >  *Var[3] 
  510:  					BreakLoop
  518:  				EndIf
  520:  				Wait     00000001 
  52C:  			EndLoop
  534:  			Call     UseCamPreset 	( 00000001 )
  544:  			If  *Var[A]  ==  00000005 
  554:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  578:  			EndIf
  580:  			Wait     0000000F 
  58C:  			Call     UseCamPreset 	( 00000002 )
  59C:  		EndThread
  5A4:  		Thread
  5AC:  			Loop     0000001E 
  5B8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5D4:  				Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  618:  				Wait     00000001 
  624:  			EndLoop
  62C:  		EndThread
  634:  		Call     SetGoalToTarget 	( .Actor:Self )
  644:  		Call     AddToGoalPos 	( .Actor:Self FFFFFF38 00000000 00000000 )
  660:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  674:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  68C:  		Wait     0000000F 
  698:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  6AC:  		If  *Var[A]  !&  18000000 
  6BC:  			Call     EnableActorGlow 	( .Actor:Self .False )
  6D0:  		EndIf
  6D8:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  6F4:  		Call     8027D7F0 ( )
  700:  		Call     8026F6EC ( FFFFFF81 )
  710:  		Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
  72C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  748:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  75C:  		Call     SetGoalToHome 	( .Actor:Self )
  76C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  784:  		Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
  79C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7B4:  		Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
  7C8:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
  7E0:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  7FC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  814:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  82C:  		Wait     0000000A 
  838:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  84C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  860:  		Return
  868:  	EndCaseGroup
  870:  EndSwitch
  878:  Thread
  880:  	Loop     0000001E 
  88C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8A8:  		Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8EC:  		Wait     00000001 
  8F8:  	EndLoop
  900:  EndThread
  908:  Call     SetGoalToTarget 	( .Actor:Self )
  918:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  92C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  944:  Wait     00000002 
  950:  Call     DamageTarget 	( .Actor:Self *Var[A] 00000000 0000FFFF 00000000 0000000A 00000020 )
  978:  Switch  *Var[A] 
  984:  	CaseOR  ==  00000000 
  990:  	CaseOR  ==  00000002 
  99C:  		Call     UseCamPreset 	( 00000002 )
  9AC:  		Thread
  9B4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  9D0:  			Set  *Var[0]  00000000 
  9E0:  			Loop     0000003C 
  9EC:  				Add  *Var[0]  00000012 
  9FC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  A18:  				Wait     00000001 
  A24:  			EndLoop
  A2C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  A48:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A64:  		EndThread
  A6C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  A80:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A9C:  		Sub  *Var[0]  00000032 
  AAC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC8:  		Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
  AE8:  		Sub  *Var[0]  00000028 
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  B34:  		Sub  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B80:  		Wait     00000014 
  B8C:  		Call     8027D7F0 ( )
  B98:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  BAC:  		If  *Var[A]  !&  18000000 
  BBC:  			Call     EnableActorGlow 	( .Actor:Self .False )
  BD0:  		EndIf
  BD8:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  BF4:  		Call     8026F6EC ( FFFFFF81 )
  C04:  		Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
  C20:  		SetConst  *Var[0]  00000001 
  C30:  		SetConst  *Var[1]  00590004 
  C40:  		ExecWait DoReturnHome 
  C4C:  		Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
  C64:  		Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
  C78:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
  C90:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  CAC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  CC4:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
  CDC:  	EndCaseGroup
  CE4:  EndSwitch
  CEC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D00:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D14:  Return
  D1C:  End

#new:Script $Script_80223ADC
    0:  Call     CreateTargetList 	( 00008002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000001 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   3C:  Call     GetActorType 	( *Var[0] *Var[2] )
   50:  Switch  *Var[2] 
   5C:  	CaseOR  ==  00000010 
   68:  	CaseOR  ==  00000049 
   74:  		Set  *Var[A]  FFFFFFFF 
   84:  		Return
   8C:  	EndCaseGroup
   94:  EndSwitch
   9C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   B0:  If  *Var[0]  !=  FFFFFFFF 
   C0:  	Goto     00000001 
   CC:  EndIf
   D4:  Set  *Flag[01]  00000000 
   E4:  Set  *Flag[02]  00000000 
   F4:  Set  *Flag[03]  00000000 
  104:  Set  *Flag[04]  00000000 
  114:  Call     CreateTargetList 	( 00008002 )
  124:  Call     InitTargetIterator 	( )
  130:  Label    00000000 
  13C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  150:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
  164:  Mod  *Var[1]  00000004 
  174:  Switch  *Var[1] 
  180:  	Case  ==  00000000 
  18C:  		Set  *Flag[01]  00000001 
  19C:  	Case  ==  00000001 
  1A8:  		Set  *Flag[02]  00000001 
  1B8:  	Case  ==  00000002 
  1C4:  		Set  *Flag[03]  00000001 
  1D4:  	Case  ==  00000003 
  1E0:  		Set  *Flag[04]  00000001 
  1F0:  EndSwitch
  1F8:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  20C:  If  *Var[0]  !=  FFFFFFFF 
  21C:  	Goto     00000000 
  228:  EndIf
  230:  If  *Flag[01]  ==  00000000 
  240:  	Set  *Var[A]  00000000 
  250:  	Return
  258:  EndIf
  260:  If  *Flag[02]  ==  00000000 
  270:  	Set  *Var[A]  00000001 
  280:  	Return
  288:  EndIf
  290:  If  *Flag[03]  ==  00000000 
  2A0:  	Set  *Var[A]  00000002 
  2B0:  	Return
  2B8:  EndIf
  2C0:  If  *Flag[04]  ==  00000000 
  2D0:  	Set  *Var[A]  00000003 
  2E0:  	Return
  2E8:  EndIf
  2F0:  Set  *Var[A]  FFFFFFFF 
  300:  Return
  308:  End

#new:Vector3D $Vector3D_80223DEC
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_80223DF8
$Koopatrol $Vector3D_80223DEC 00000064 00000000 00000000 00000000 00000000 

#new:Script $Script_SummonBackup
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseCamPreset 	( 0000000E )
   38:  Call     CamTargetActor ( .Actor:Self )
   48:  Call     MoveCamOver 	( 00000014 )
   58:  Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
   6C:  Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
   84:  Wait     00000014 
   90:  Loop     00000002 
   9C:  	Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
   B4:  	Wait     00000008 
   C0:  	Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
   D4:  	Call     SetActorAngle 	( .Actor:Self 000000B4 )
   E8:  	Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
  100:  	Wait     00000008 
  10C:  	Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
  124:  	Wait     00000008 
  130:  	Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
  144:  	Call     SetActorAngle 	( .Actor:Self 00000000 )
  158:  	Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
  170:  	Wait     00000008 
  17C:  EndLoop
  184:  Call     UseCamPreset 	( 00000002 )
  194:  Call     MoveCamOver 	( 0000000F )
  1A4:  Thread
  1AC:  	Wait     00000008 
  1B8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  	Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  218:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  22C:  EndThread
  234:  Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
  24C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  260:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  27C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  298:  Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  2B8:  Call     SummonEnemy 	( $SpecialFormation_80223DF8 00000000 )
  2CC:  Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  2E8:  Add  *Var[1]  000000C8 
  2F8:  Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  314:  Call     SetGoalToIndex ( *Var[0] *Var[A] )
  328:  Call     PlaySoundAtActor 	( *Var[0] 000020D3 )
  33C:  Call     8026F740 ( *Var[0] 00000000 00000000 00000000 )
  358:  Call     SetAnimation 	( *Var[0] 00000001 00590006 )
  370:  Call     SetActorSpeed 	( *Var[0] *Fixed[6.0] )
  384:  Call     RunToGoal   	( *Var[0] 00000000 .False )
  39C:  Call     SetAnimation 	( *Var[0] 00000001 00590008 )
  3B4:  Wait     0000000A 
  3C0:  Call     SetAnimation 	( *Var[0] 00000001 00590001 )
  3D8:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  3F4:  Call     ForceHomePos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  410:  Call     HPBarToHome 	( *Var[0] )
  420:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  438:  Switch  *Var[1] 
  444:  	Case  ==  00000000 
  450:  		Call     SetActorVar 	( *Var[0] 00000001 00000001 )
  468:  	Case  ==  00000001 
  474:  		Call     SetActorVar 	( *Var[0] 00000001 00000002 )
  48C:  EndSwitch
  494:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  4AC:  Call     SetActorVar 	( *Var[0] 00000002 *Var[1] )
  4C4:  Switch  *Var[1] 
  4D0:  	Case  ==  00000000 
  4DC:  		Call     GetBattleVar 	( 00000004 *Var[0] )
  4F0:  		Add  *Var[0]  00000001 
  500:  		Call     SetBattleVar 	( 00000004 *Var[0] )
  514:  	Case  ==  00000001 
  520:  		Call     GetBattleVar 	( 00000005 *Var[0] )
  534:  		Add  *Var[0]  00000001 
  544:  		Call     SetBattleVar 	( 00000005 *Var[0] )
  558:  	Case  ==  00000002 
  564:  		Call     GetBattleVar 	( 00000006 *Var[0] )
  578:  		Add  *Var[0]  00000001 
  588:  		Call     SetBattleVar 	( 00000006 *Var[0] )
  59C:  	Case  ==  00000003 
  5A8:  		Call     GetBattleVar 	( 00000007 *Var[0] )
  5BC:  		Add  *Var[0]  00000001 
  5CC:  		Call     SetBattleVar 	( 00000007 *Var[0] )
  5E0:  EndSwitch
  5E8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  610:  Return
  618:  End

#new:Script $Script_80224434
    0:  Set  *Var[9]  00000000 
   10:  Call     CreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	Case  ==  0000004C 
   78:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   8C:  		If  *Var[3]  !&  0035D000 
   9C:  			Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
   B4:  			If  *Var[3]  ==  00000000 
   C4:  				Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
   DC:  				Switch  *Var[3] 
   E8:  					CaseOR  ==  00000000 
   F4:  					CaseOR  ==  00000001 
  100:  						Call     GetActorVar 	( .Actor:Self 00000002 *Var[3] )
  118:  						Switch  *Var[3] 
  124:  							Case  ==  00000000 
  130:  								Call     GetBattleVar 	( 00000004 *Var[4] )
  144:  							Case  ==  00000001 
  150:  								Call     GetBattleVar 	( 00000005 *Var[4] )
  164:  							Case  ==  00000002 
  170:  								Call     GetBattleVar 	( 00000006 *Var[4] )
  184:  							Case  ==  00000003 
  190:  								Call     GetBattleVar 	( 00000007 *Var[4] )
  1A4:  						EndSwitch
  1AC:  						If  *Var[4]  <  00000002 
  1BC:  							Add  *Var[9]  00000001 
  1CC:  						EndIf
  1D4:  					EndCaseGroup
  1DC:  					Case  ==  00000002 
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  EndSwitch
  208:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  21C:  If  *Var[0]  !=  FFFFFFFF 
  22C:  	Goto     00000000 
  238:  EndIf
  240:  Return
  248:  End

#new:Script $Script_TakeTurn_80224684
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	Call     SetBattleVar 	( 00000001 00000001 )
   34:  	ExecWait $Script_ShellToss 
   40:  	Return
   48:  EndIf
   50:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   68:  Switch  *Var[0] 
   74:  	Case  ==  00000000 
   80:  		Call     GetBattleVar 	( 00000001 *Var[0] )
   94:  		Switch  *Var[0] 
   A0:  			Case  ==  00000000 
   AC:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   C4:  				Switch  *Var[0] 
   D0:  					CaseOR  ==  00000000 
   DC:  					CaseOR  ==  00000001 
   E8:  						Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  100:  						Switch  *Var[0] 
  10C:  							Case  ==  00000000 
  118:  								Call     GetBattleVar 	( 00000004 *Var[1] )
  12C:  							Case  ==  00000001 
  138:  								Call     GetBattleVar 	( 00000005 *Var[1] )
  14C:  							Case  ==  00000002 
  158:  								Call     GetBattleVar 	( 00000006 *Var[1] )
  16C:  							Case  ==  00000003 
  178:  								Call     GetBattleVar 	( 00000007 *Var[1] )
  18C:  						EndSwitch
  194:  						If  *Var[1]  >=  00000002 
  1A4:  							Call     RandInt     	( 000003E8 *Var[0] )
  1B8:  							If  *Var[0]  <  0000012C 
  1C8:  								Call     SetBattleVar 	( 00000001 00000002 )
  1DC:  								ExecWait $Script_SuperShellToss 
  1E8:  							Else
  1F0:  								Call     SetBattleVar 	( 00000001 00000001 )
  204:  								ExecWait $Script_ShellToss 
  210:  							EndIf
  218:  							Return
  220:  						EndIf
  228:  					EndCaseGroup
  230:  					Case  ==  00000002 
  23C:  						Call     RandInt     	( 000003E8 *Var[0] )
  250:  						If  *Var[0]  <  0000012C 
  260:  							Call     SetBattleVar 	( 00000001 00000002 )
  274:  							ExecWait $Script_SuperShellToss 
  280:  						Else
  288:  							Call     SetBattleVar 	( 00000001 00000001 )
  29C:  							ExecWait $Script_ShellToss 
  2A8:  						EndIf
  2B0:  						Return
  2B8:  				EndSwitch
  2C0:  				ExecWait $Script_80223ADC 
  2CC:  				If  *Var[A]  ==  FFFFFFFF 
  2DC:  					Call     RandInt     	( 000003E8 *Var[0] )
  2F0:  					If  *Var[0]  <  0000012C 
  300:  						Call     SetBattleVar 	( 00000001 00000002 )
  314:  						ExecWait $Script_SuperShellToss 
  320:  					Else
  328:  						Call     SetBattleVar 	( 00000001 00000001 )
  33C:  						ExecWait $Script_ShellToss 
  348:  					EndIf
  350:  					Return
  358:  				EndIf
  360:  				ExecWait $Script_80224434 
  36C:  				Switch  *Var[9] 
  378:  					Case  ==  00000001 
  384:  						Call     RandInt     	( 000003E8 *Var[0] )
  398:  						If  *Var[0]  <  00000190 
  3A8:  							Call     SetBattleVar 	( 00000001 00000001 )
  3BC:  							ExecWait $Script_SummonBackup 
  3C8:  							Return
  3D0:  						EndIf
  3D8:  					Case  ==  00000002 
  3E4:  						Call     RandInt     	( 000003E8 *Var[0] )
  3F8:  						If  *Var[0]  <  000000C8 
  408:  							Call     SetBattleVar 	( 00000001 00000001 )
  41C:  							ExecWait $Script_SummonBackup 
  428:  							Return
  430:  						EndIf
  438:  					Case  ==  00000003 
  444:  						Call     RandInt     	( 000003E8 *Var[0] )
  458:  						If  *Var[0]  <  00000064 
  468:  							Call     SetBattleVar 	( 00000001 00000001 )
  47C:  							ExecWait $Script_SummonBackup 
  488:  							Return
  490:  						EndIf
  498:  				EndSwitch
  4A0:  				Call     RandInt     	( 000003E8 *Var[0] )
  4B4:  				If  *Var[0]  <  0000012C 
  4C4:  					Call     SetBattleVar 	( 00000001 00000002 )
  4D8:  					ExecWait $Script_SuperShellToss 
  4E4:  				Else
  4EC:  					Call     SetBattleVar 	( 00000001 00000001 )
  500:  					ExecWait $Script_ShellToss 
  50C:  				EndIf
  514:  			Case  ==  00000001 
  520:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  538:  				Switch  *Var[0] 
  544:  					CaseOR  ==  00000000 
  550:  					CaseOR  ==  00000001 
  55C:  						Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  574:  						Switch  *Var[0] 
  580:  							Case  ==  00000000 
  58C:  								Call     GetBattleVar 	( 00000004 *Var[1] )
  5A0:  							Case  ==  00000001 
  5AC:  								Call     GetBattleVar 	( 00000005 *Var[1] )
  5C0:  							Case  ==  00000002 
  5CC:  								Call     GetBattleVar 	( 00000006 *Var[1] )
  5E0:  							Case  ==  00000003 
  5EC:  								Call     GetBattleVar 	( 00000007 *Var[1] )
  600:  						EndSwitch
  608:  						If  *Var[1]  >=  00000002 
  618:  							Call     RandInt     	( 000003E8 *Var[0] )
  62C:  							If  *Var[0]  <  0000012C 
  63C:  								Call     SetBattleVar 	( 00000001 00000002 )
  650:  								ExecWait $Script_SuperShellToss 
  65C:  							Else
  664:  								Call     SetBattleVar 	( 00000001 00000001 )
  678:  								ExecWait $Script_ShellToss 
  684:  							EndIf
  68C:  							Return
  694:  						EndIf
  69C:  					EndCaseGroup
  6A4:  					Case  ==  00000002 
  6B0:  						ExecWait $Script_ShellToss 
  6BC:  						Return
  6C4:  				EndSwitch
  6CC:  				ExecWait $Script_80223ADC 
  6D8:  				If  *Var[A]  ==  FFFFFFFF 
  6E8:  					ExecWait $Script_ShellToss 
  6F4:  					Return
  6FC:  				EndIf
  704:  				ExecWait $Script_80224434 
  710:  				Switch  *Var[9] 
  71C:  					Case  ==  00000001 
  728:  						Call     RandInt     	( 000003E8 *Var[0] )
  73C:  						If  *Var[0]  <  00000190 
  74C:  							ExecWait $Script_SummonBackup 
  758:  							Return
  760:  						EndIf
  768:  					Case  ==  00000002 
  774:  						Call     RandInt     	( 000003E8 *Var[0] )
  788:  						If  *Var[0]  <  000000C8 
  798:  							ExecWait $Script_SummonBackup 
  7A4:  							Return
  7AC:  						EndIf
  7B4:  					Case  ==  00000003 
  7C0:  						Call     RandInt     	( 000003E8 *Var[0] )
  7D4:  						If  *Var[0]  <  00000064 
  7E4:  							ExecWait $Script_SummonBackup 
  7F0:  							Return
  7F8:  						EndIf
  800:  				EndSwitch
  808:  				ExecWait $Script_ShellToss 
  814:  			Case  ==  00000002 
  820:  				ExecWait $Script_SuperShellToss 
  82C:  		EndSwitch
  834:  	Case  ==  00000001 
  840:  		Call     SetBattleVar 	( 00000001 00000001 )
  854:  		ExecWait $Script_ShellToss 
  860:  	Case  ==  00000002 
  86C:  		ExecWait $Script_SuperShellToss 
  878:  EndSwitch
  880:  Return
  888:  End

PADDING: 80224F14 to 80224F20 (00691944 to 00691950)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_80224F20
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80224F2C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80224F38
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:StatusTable $StatusTable_80224FE4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80225090
00800000 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80224F20 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_802250B4
00020001 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80224F2C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_802251BC $DefenseTable_80224F2C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80225208 $DefenseTable_80224F2C 00000000 00000000 00000000 00000000 

#new:Actor $Magikoopa
% stats
[Index]        4Db 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224F38 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80225090 
[Script]      $Script_Init_80225D60 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingMagikoopa
% stats
[Index]        4Eb 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80224FE4 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_802250B4 
[Script]      $Script_Init_80225F20 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      85`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_80225170
.Status:Normal    00560001
.Status:Stone     00560000
.Status:Sleep     00560008
.Status:Poison    00560001
.Status:Stop      00560000
.Status:Static    00560001
.Status:Paralyze  00560000
.Status:Dizzy     00560007
.Status:Fear      00560007
.Status:End

#new:IdleAnimations $IdleAnimations_802251BC
.Status:Normal    00570001
.Status:Stone     00570000
.Status:Sleep     00570008
.Status:Poison    00570001
.Status:Stop      00570000
.Status:Static    00570001
.Status:Paralyze  00570000
.Status:Dizzy     00570007
.Status:Fear      00570007
.Status:End

#new:IdleAnimations $IdleAnimations_80225208
.Status:Normal    0057000A
.Status:End

#new:Script $Script_Idle_80225214
    0:  Set  *Var[F]  00000000 
   10:  Label    00000000 
   1C:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   34:  Call     ActorExists 	( *Var[0] *Var[1] )
   48:  If  *Var[1]  ==  00000001 
   58:  	Call     $Function_80218358 ( *Var[F] *Var[1] *Fixed[254.0] *Fixed[100.0] 00000014 00000000 00000000 )
   80:  	Add  *Var[F]  00000001 
   90:  	Call     GetActorFlags 	( .Actor:Self *Var[2] )
   A4:  	If  *Var[2]  &  00000200 
   B4:  		Call     SetSpriteAlpha ( .Actor:Self 00000002 *Var[1] )
   CC:  		Call     SetSpriteAlpha ( *Var[0] 00000001 *Var[1] )
   E4:  	Else
   EC:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[1] )
  104:  		Call     SetSpriteAlpha ( *Var[0] 00000001 *Var[1] )
  11C:  	EndIf
  124:  Else
  12C:  	Set  *Var[F]  00000000 
  13C:  	Call     GetActorFlags 	( .Actor:Self *Var[2] )
  150:  	If  *Var[2]  &  00000200 
  160:  		Call     SetSpriteAlpha ( .Actor:Self 00000002 000000FF )
  178:  	Else
  180:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  198:  	EndIf
  1A0:  EndIf
  1A8:  Wait     00000001 
  1B4:  Goto     00000000 
  1C0:  Return
  1C8:  End

#new:Script $Script_802253E4
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_802184E8 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_802254F0
    0:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_802185E0 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80226338 )
  4D4:  Call     SetActorType 	( FFFFFF81 0000004D )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80224F38 )
  4FC:  Call     $Function_80218514 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_NextTurn_80225D10
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  ConstAND *Var[0] FFFFFFFE 
   28:  Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
   40:  Return
   48:  End

#new:Script $Script_Init_80225D60
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80225214 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022B784 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80226338 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80225D10 )
   50:  Call     GetBattleVar 	( 00000002 *Var[0] )
   64:  If  *Var[0]  ==  00000000 
   74:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   88:  EndIf
   90:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   A8:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   C0:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   D8:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   F0:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
  108:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
  120:  Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
  138:  Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
  150:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  168:  Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
  180:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
  198:  Call     SetActorVar 	( .Actor:Self 0000000B FFFFFFFF )
  1B0:  Return
  1B8:  End

#new:Script $Script_Init_80225F20
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80225214 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022B784 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80226A50 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   AC:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   C4:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   DC:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   F4:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
  10C:  Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
  124:  Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
  13C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  154:  Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
  16C:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
  184:  Call     SetActorVar 	( .Actor:Self 0000000B FFFFFFFF )
  19C:  Return
  1A4:  End

#new:Script $Script_802260CC
    0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Return
   30:  EndIf
   38:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   50:  Call     ActorExists 	( *Var[0] *Var[1] )
   64:  If  *Var[1]  ==  00000000 
   74:  	Return
   7C:  EndIf
   84:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   9C:  Call     GetLastElement ( *Var[A] )
   AC:  If  *Var[A]  &  20000000 
   BC:  	Label    00000000 
   C8:  	Call     GetBattleFlags ( *Var[A] )
   D8:  	If  *Var[A]  &  00000100 
   E8:  		Wait     00000001 
   F4:  		Goto     00000000 
  100:  	EndIf
  108:  EndIf
  110:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
  128:  Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
  140:  Call     GetActorFlags 	( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00000200 
  164:  	Call     SetSpriteEventBits 	( .Actor:Self 00000002 00400000 .False )
  180:  Else
  188:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  1A4:  EndIf
  1AC:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  1C8:  Call     RemoveActor 	( *Var[0] )
  1D8:  Thread
  1E0:  	Add  *Var[3]  00000002 
  1F0:  	Loop     00000002 
  1FC:  		Call     PlayEffect  	( {FX:BigSmokePuff} *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  240:  		Wait     00000002 
  24C:  	EndLoop
  254:  EndThread
  25C:  Return
  264:  End

#new:Script $Script_HandleEvent_80226338
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
   40:  Call     GetEventType 	( .Actor:Self *Var[0] )
   54:  Switch  *Var[0] 
   60:  	Case  ==  .Event:HitCombo
   6C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   84:  		ConstOR  *Var[0] 00000001 
   94:  		Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
   AC:  		SetConst  *Var[0]  00000001 
   BC:  		SetConst  *Var[1]  00560004 
   CC:  		ExecWait DoNormalHit 
   D8:  	CaseOR  ==  .Event:Hit
   E4:  	CaseOR  ==  .Event:UpAndAway
   F0:  		SetConst  *Var[0]  00000001 
  100:  		SetConst  *Var[1]  00560004 
  110:  		ExecWait DoNormalHit 
  11C:  		ExecWait $Script_802260CC 
  128:  	EndCaseGroup
  130:  	Case  ==  .Event:BurnHit
  13C:  		SetConst  *Var[0]  00000001 
  14C:  		SetConst  *Var[1]  00560005 
  15C:  		SetConst  *Var[2]  00560006 
  16C:  		ExecWait DoBurnHit 
  178:  		ExecWait $Script_802260CC 
  184:  	Case  ==  .Event:BurnDeath
  190:  		SetConst  *Var[0]  00000001 
  1A0:  		SetConst  *Var[1]  00560005 
  1B0:  		SetConst  *Var[2]  00560006 
  1C0:  		ExecWait DoBurnHit 
  1CC:  		ExecWait $Script_802260CC 
  1D8:  		SetConst  *Var[0]  00000001 
  1E8:  		SetConst  *Var[1]  00560006 
  1F8:  		ExecWait DoDeath 
  204:  		Return
  20C:  	Case  ==  .Event:MultibounceHit
  218:  		SetConst  *Var[0]  00000001 
  228:  		SetConst  *Var[1]  00560004 
  238:  		ExecWait 8029B998 
  244:  		ExecWait $Script_802260CC 
  250:  	Case  ==  .Event:MultibounceDeath
  25C:  		SetConst  *Var[0]  00000001 
  26C:  		SetConst  *Var[1]  00560004 
  27C:  		ExecWait 8029B998 
  288:  		ExecWait $Script_802260CC 
  294:  		SetConst  *Var[0]  00000001 
  2A4:  		SetConst  *Var[1]  00560004 
  2B4:  		ExecWait DoDeath 
  2C0:  		Return
  2C8:  	Case  ==  00000017
  2D4:  		SetConst  *Var[0]  00000001 
  2E4:  		SetConst  *Var[1]  00560001 
  2F4:  		ExecWait DoImmune 
  300:  	Case  ==  .Event:Immune
  30C:  		SetConst  *Var[0]  00000001 
  31C:  		SetConst  *Var[1]  00560001 
  32C:  		ExecWait DoImmune 
  338:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  350:  		If  *Var[0]  &  00000001 
  360:  			ExecWait $Script_802260CC 
  36C:  			Return
  374:  		EndIf
  37C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  390:  		If  *Var[0]  !=  00000000 
  3A0:  			ExecWait $Script_802260CC 
  3AC:  		EndIf
  3B4:  	Case  ==  .Event:Death
  3C0:  		SetConst  *Var[0]  00000001 
  3D0:  		SetConst  *Var[1]  00560004 
  3E0:  		ExecWait DoNormalHit 
  3EC:  		ExecWait $Script_802260CC 
  3F8:  		Wait     0000000A 
  404:  		SetConst  *Var[0]  00000001 
  414:  		SetConst  *Var[1]  00560004 
  424:  		ExecWait DoDeath 
  430:  		Return
  438:  	Case  ==  .Event:RecoverStatus
  444:  		SetConst  *Var[0]  00000001 
  454:  		SetConst  *Var[1]  00560001 
  464:  		ExecWait DoRecover 
  470:  	Case  ==  .Event:ScareAway
  47C:  		ExecWait $Script_802260CC 
  488:  		Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
  4A0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  4B4:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4EC:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  50C:  		Wait     0000000F 
  518:  		Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  530:  		ExecWait $Script_RunAway 
  53C:  		Return
  544:  	Case  ==  .Event:BeginAirLift
  550:  		SetConst  *Var[0]  00000001 
  560:  		SetConst  *Var[1]  00560002 
  570:  		ExecWait DoAirLift 
  57C:  	Case  ==  .Event:BlowAway
  588:  		ExecWait $Script_802260CC 
  594:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  5A8:  		If  *Var[0]  !&  0035D000 
  5B8:  			If  *Var[0]  &  00080000 
  5C8:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  5E8:  			Else
  5F0:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  610:  			EndIf
  618:  		EndIf
  620:  		SetConst  *Var[0]  00000001 
  630:  		SetConst  *Var[1]  00560004 
  640:  		ExecWait DoBlowAway 
  64C:  		Return
  654:  	Case  ==  .Event:AirLiftFailed
  660:  		SetConst  *Var[0]  00000001 
  670:  		SetConst  *Var[1]  00560001 
  680:  		ExecWait DoImmune 
  68C:  	Case  ==  .Event:StarBeam
  698:  		SetConst  *Var[0]  00000001 
  6A8:  		SetConst  *Var[1]  00560004 
  6B8:  		ExecWait DoNormalHit 
  6C4:  		ExecWait $Script_802260CC 
  6D0:  	Default
  6D8:  EndSwitch
  6E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  708:  Return
  710:  End

#new:Script $Script_HandleEvent_80226A50
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetSpriteAlpha ( .Actor:Self 00000002 000000FF )
   40:  Call     GetEventType 	( .Actor:Self *Var[0] )
   54:  Switch  *Var[0] 
   60:  	Case  ==  .Event:HitCombo
   6C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   84:  		ConstOR  *Var[0] 00000001 
   94:  		Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
   AC:  		ExecWait $Script_802253E4 
   B8:  		SetConst  *Var[0]  00000002 
   C8:  		SetConst  *Var[1]  00570004 
   D8:  		ExecWait DoNormalHit 
   E4:  	CaseOR  ==  .Event:Hit
   F0:  	CaseOR  ==  .Event:FallTrigger
   FC:  		ExecWait $Script_802253E4 
  108:  		SetConst  *Var[0]  00000002 
  118:  		SetConst  *Var[1]  00570004 
  128:  		ExecWait DoNormalHit 
  134:  		ExecWait $Script_802260CC 
  140:  		ExecWait $Script_802254F0 
  14C:  	EndCaseGroup
  154:  	Case  ==  .Event:UpAndAway
  160:  		SetConst  *Var[0]  00000002 
  170:  		SetConst  *Var[1]  00570004 
  180:  		ExecWait DoNormalHit 
  18C:  		ExecWait $Script_802260CC 
  198:  	CaseOR  ==  .Event:BurnHit
  1A4:  	CaseOR  ==  0000000F
  1B0:  		ExecWait $Script_802253E4 
  1BC:  		SetConst  *Var[0]  00000002 
  1CC:  		SetConst  *Var[1]  00570005 
  1DC:  		SetConst  *Var[2]  00570006 
  1EC:  		ExecWait DoBurnHit 
  1F8:  		ExecWait $Script_802260CC 
  204:  		ExecWait $Script_802254F0 
  210:  	EndCaseGroup
  218:  	Case  ==  .Event:BurnDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570005 
  244:  		SetConst  *Var[2]  00570006 
  254:  		ExecWait DoBurnHit 
  260:  		ExecWait $Script_802260CC 
  26C:  		SetConst  *Var[0]  00000002 
  27C:  		SetConst  *Var[1]  00570006 
  28C:  		ExecWait DoDeath 
  298:  		Return
  2A0:  	Case  ==  .Event:MultibounceHit
  2AC:  		SetConst  *Var[0]  00000002 
  2BC:  		SetConst  *Var[1]  00570004 
  2CC:  		ExecWait 8029B998 
  2D8:  		ExecWait $Script_802260CC 
  2E4:  	Case  ==  .Event:MultibounceDeath
  2F0:  		SetConst  *Var[0]  00000002 
  300:  		SetConst  *Var[1]  00570004 
  310:  		ExecWait 8029B998 
  31C:  		ExecWait $Script_802260CC 
  328:  		SetConst  *Var[0]  00000002 
  338:  		SetConst  *Var[1]  00570004 
  348:  		ExecWait DoDeath 
  354:  		Return
  35C:  	Case  ==  00000017
  368:  		SetConst  *Var[0]  00000002 
  378:  		SetConst  *Var[1]  00570001 
  388:  		ExecWait DoImmune 
  394:  	Case  ==  .Event:Immune
  3A0:  		SetConst  *Var[0]  00000002 
  3B0:  		SetConst  *Var[1]  00570001 
  3C0:  		ExecWait DoImmune 
  3CC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  3E4:  		If  *Var[0]  &  00000001 
  3F4:  			ExecWait $Script_802260CC 
  400:  			Return
  408:  		EndIf
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !=  00000000 
  434:  			ExecWait $Script_802260CC 
  440:  		EndIf
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000002 
  464:  		SetConst  *Var[1]  00570004 
  474:  		ExecWait DoNormalHit 
  480:  		ExecWait $Script_802260CC 
  48C:  		Wait     0000000A 
  498:  		SetConst  *Var[0]  00000002 
  4A8:  		SetConst  *Var[1]  00570004 
  4B8:  		ExecWait DoDeath 
  4C4:  		Return
  4CC:  	Case  ==  .Event:BeginFirstStrike
  4D8:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  4F4:  		Call     HPBarToCurrent ( .Actor:Self )
  504:  	Case  ==  .Event:EndFirstStrike
  510:  		Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  528:  		Call     SetGoalToHome 	( .Actor:Self )
  538:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  54C:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  568:  		Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  580:  		Call     HPBarToHome 	( .Actor:Self )
  590:  	Case  ==  .Event:RecoverStatus
  59C:  		SetConst  *Var[0]  00000002 
  5AC:  		SetConst  *Var[1]  00570001 
  5BC:  		ExecWait DoRecover 
  5C8:  	Case  ==  .Event:ScareAway
  5D4:  		ExecWait $Script_802260CC 
  5E0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570004 )
  5F8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  60C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  628:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  644:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  664:  		Wait     0000000F 
  670:  		Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  688:  		ExecWait $Script_RunAway 
  694:  		Return
  69C:  	Case  ==  .Event:BeginAirLift
  6A8:  		SetConst  *Var[0]  00000002 
  6B8:  		SetConst  *Var[1]  00570002 
  6C8:  		ExecWait DoAirLift 
  6D4:  	Case  ==  .Event:BlowAway
  6E0:  		ExecWait $Script_802260CC 
  6EC:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  700:  		If  *Var[0]  !&  0035D000 
  710:  			If  *Var[0]  &  00080000 
  720:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  740:  			Else
  748:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  768:  			EndIf
  770:  		EndIf
  778:  		SetConst  *Var[0]  00000002 
  788:  		SetConst  *Var[1]  00570004 
  798:  		ExecWait DoBlowAway 
  7A4:  		Return
  7AC:  	Case  ==  .Event:AirLiftFailed
  7B8:  		SetConst  *Var[0]  00000002 
  7C8:  		SetConst  *Var[1]  00570001 
  7D8:  		ExecWait DoImmune 
  7E4:  	Case  ==  .Event:StarBeam
  7F0:  		SetConst  *Var[0]  00000002 
  800:  		SetConst  *Var[1]  00570004 
  810:  		ExecWait DoNormalHit 
  81C:  		ExecWait $Script_802260CC 
  828:  	Default
  830:  EndSwitch
  838:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  84C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  860:  Return
  868:  End

#new:Script $Script_HealOne
    0:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
   30:  Call     ActorVarAdd 	( .Actor:Self 00000004 00000001 )
   48:  Call     UseIdleAnimation 	( .Actor:Self .False )
   5C:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   70:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   84:  Call     UseCamPreset 	( 0000000E )
   94:  Call     CamTargetActor ( .Actor:Self )
   A4:  Call     MoveCamOver 	( 0000000F )
   B4:  Wait     0000000F 
   C0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
   D4:  If  *Var[0]  !&  00000200 
   E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
   FC:  Else
  104:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  11C:  EndIf
  124:  Wait     00000005 
  130:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  144:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  158:  If  *Var[0]  !&  00000200 
  168:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  184:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  198:  	If  *Var[A]  &  00080000 
  1A8:  		Sub  *Var[0]  00000006 
  1B8:  		Add  *Var[1]  0000000C 
  1C8:  		Sub  *Var[2]  00000002 
  1D8:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  21C:  	Else
  224:  		Sub  *Var[0]  00000010 
  234:  		Add  *Var[1]  0000001F 
  244:  		Sub  *Var[2]  00000002 
  254:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  	EndIf
  2A0:  Else
  2A8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C4:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  2D8:  	If  *Var[A]  &  00080000 
  2E8:  		Sub  *Var[0]  0000000C 
  2F8:  		Add  *Var[1]  0000000E 
  308:  		Sub  *Var[2]  00000002 
  318:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Else
  364:  		Sub  *Var[0]  0000001E 
  374:  		Add  *Var[1]  00000024 
  384:  		Sub  *Var[2]  00000002 
  394:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Wait     0000001E 
  3F4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  408:  If  *Var[0]  !&  00000200 
  418:  	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  430:  Else
  438:  	Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  450:  EndIf
  458:  Wait     00000005 
  464:  Thread
  46C:  	Wait     00000005 
  478:  	Call     PlaySoundAtActor 	( *Var[B] 0000206D )
  48C:  	Call     PlaySoundAtActor 	( *Var[B] 00000214 )
  4A0:  	Wait     0000001E 
  4AC:  	Call     PlaySoundAtActor 	( *Var[B] 0000025C )
  4C0:  EndThread
  4C8:  Thread
  4D0:  	Call     8026BF48 ( 00000001 )
  4E0:  	Call     HealActor   	( *Var[B] 00000005 00000000 )
  4F8:  	Call     8026BF48 ( 00000000 )
  508:  EndThread
  510:  Call     8027114C ( )
  51C:  Call     UseCamPreset 	( 00000002 )
  52C:  Call     MoveCamOver 	( 0000000A )
  53C:  Wait     0000000A 
  548:  Call     8027D7F0 ( )
  554:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  568:  Call     UseIdleAnimation 	( .Actor:Self .True )
  57C:  Return
  584:  End

#new:Script $Script_HealAll
    0:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 0000000B 00000001 )
   30:  Call     ActorVarAdd 	( .Actor:Self 00000003 00000001 )
   48:  Call     UseIdleAnimation 	( .Actor:Self .False )
   5C:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   70:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   84:  Call     UseCamPreset 	( 0000000E )
   94:  Call     CamTargetActor ( .Actor:Self )
   A4:  Call     MoveCamOver 	( 0000000F )
   B4:  Wait     0000000F 
   C0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
   D4:  If  *Var[0]  !&  00000200 
   E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
   FC:  Else
  104:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  11C:  EndIf
  124:  Wait     00000005 
  130:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  144:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  158:  If  *Var[0]  !&  00000200 
  168:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  184:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  198:  	If  *Var[A]  &  00080000 
  1A8:  		Sub  *Var[0]  00000006 
  1B8:  		Add  *Var[1]  0000000C 
  1C8:  		Sub  *Var[2]  00000002 
  1D8:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  21C:  	Else
  224:  		Sub  *Var[0]  00000010 
  234:  		Add  *Var[1]  0000001F 
  244:  		Sub  *Var[2]  00000002 
  254:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  298:  	EndIf
  2A0:  Else
  2A8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C4:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  2D8:  	If  *Var[A]  &  00080000 
  2E8:  		Sub  *Var[0]  0000000C 
  2F8:  		Add  *Var[1]  0000000E 
  308:  		Sub  *Var[2]  00000002 
  318:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  	Else
  364:  		Sub  *Var[0]  0000001E 
  374:  		Add  *Var[1]  00000024 
  384:  		Sub  *Var[2]  00000002 
  394:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Wait     0000001E 
  3F4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  408:  If  *Var[0]  !&  00000200 
  418:  	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  430:  Else
  438:  	Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  450:  EndIf
  458:  Wait     00000005 
  464:  Call     CreateTargetList 	( 00008002 )
  474:  Call     InitTargetIterator 	( )
  480:  Label    00000000 
  48C:  Set  *Flag[00]  00000000 
  49C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  4B0:  Call     GetActorType 	( *Var[0] *Var[1] )
  4C4:  If  *Var[1]  ==  00000047 
  4D4:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  4EC:  	If  *Var[1]  ==  00000001 
  4FC:  		Set  *Flag[00]  00000001 
  50C:  	EndIf
  514:  EndIf
  51C:  If  *Flag[00]  ==  00000000 
  52C:  	Thread
  534:  		Wait     00000005 
  540:  		Call     PlaySoundAtActor 	( *Var[0] 0000206D )
  554:  		Call     PlaySoundAtActor 	( *Var[0] 00000214 )
  568:  		Wait     0000001E 
  574:  		Call     PlaySoundAtActor 	( *Var[0] 0000025C )
  588:  	EndThread
  590:  	Thread
  598:  		Call     8026BF48 ( 00000001 )
  5A8:  		Call     HealActor   	( *Var[0] 00000003 00000001 )
  5C0:  		Call     8026BF48 ( 00000000 )
  5D0:  	EndThread
  5D8:  EndIf
  5E0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  5F4:  If  *Var[0]  !=  FFFFFFFF 
  604:  	Goto     00000000 
  610:  EndIf
  618:  Call     8027114C ( )
  624:  Wait     00000001 
  630:  Call     UseCamPreset 	( 00000002 )
  640:  Call     MoveCamOver 	( 0000000A )
  650:  Wait     0000000A 
  65C:  Call     8027D7F0 ( )
  668:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  67C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  690:  Return
  698:  End

#new:Script $Script_ShapeSpell
    0:  Call     SetActorVar 	( .Actor:Self 0000000B 00000002 )
   18:  Set  *Flag[00]  00000000 
   28:  Set  *Flag[01]  00000000 
   38:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
   50:  If  *Var[0]  ==  00000001 
   60:  	Set  *Flag[00]  00000001 
   70:  	Call     GetActorVar 	( .Actor:Self 00000009 *Var[A] )
   88:  EndIf
   90:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
   A4:  If  *Var[0]  &  00000200 
   B4:  	Set  *Flag[01]  00000001 
   C4:  EndIf
   CC:  Call     UseIdleAnimation 	( .Actor:Self .False )
   E0:  If  *Flag[00]  ==  00000001 
   F0:  	Call     UseIdleAnimation 	( *Var[A] .False )
  104:  EndIf
  10C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  120:  Call     GetBattlePhase ( *Var[0] )
  130:  If  *Var[0]  ==  .Phase:FirstStrike
  140:  	Call     UseCamPreset 	( 00000002 )
  150:  	Call     MoveCamOver 	( 00000001 )
  160:  Else
  168:  	Call     UseCamPreset 	( 00000002 )
  178:  	Call     MoveCamOver 	( 0000000A )
  188:  EndIf
  190:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  1A4:  If  *Flag[01]  ==  00000000 
  1B4:  	If  *Flag[00]  ==  00000001 
  1C4:  		Call     SetAnimation 	( *Var[A] 00000001 00560002 )
  1DC:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  1F8:  		Sub  *Var[0]  00000011 
  208:  		Add  *Var[1]  00000021 
  218:  		Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	EndIf
  264:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  27C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  298:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  2AC:  	If  *Var[3]  &  00080000 
  2BC:  		Sub  *Var[0]  00000006 
  2CC:  		Add  *Var[1]  0000000D 
  2DC:  	Else
  2E4:  		Sub  *Var[0]  00000011 
  2F4:  		Add  *Var[1]  00000021 
  304:  	EndIf
  30C:  	Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  350:  Else
  358:  	If  *Flag[00]  ==  00000001 
  368:  		Call     SetAnimation 	( *Var[A] 00000001 00570002 )
  380:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  39C:  		Sub  *Var[0]  0000001E 
  3AC:  		Add  *Var[1]  00000024 
  3BC:  		Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  400:  	EndIf
  408:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  420:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  43C:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  450:  	If  *Var[3]  &  00080000 
  460:  		Sub  *Var[0]  0000000C 
  470:  		Add  *Var[1]  0000000E 
  480:  	Else
  488:  		Sub  *Var[0]  0000001E 
  498:  		Add  *Var[1]  00000024 
  4A8:  	EndIf
  4B0:  	Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4F4:  EndIf
  4FC:  Wait     0000001E 
  508:  Call     CheckPlayerHit ( .Actor:Self *Var[9] 00000000 00000000 00000001 00000010 )
  52C:  Switch  *Var[9] 
  538:  	CaseOR  ==  00000006 
  544:  	CaseOR  ==  00000005 
  550:  		If  *Flag[00]  ==  00000001 
  560:  			Call     PlaySoundAtActor 	( *Var[A] .Sound:SpellCast2 )
  574:  		EndIf
  57C:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  590:  		If  *Flag[01]  ==  00000000 
  5A0:  			If  *Flag[00]  ==  00000001 
  5B0:  				Call     SetAnimation 	( *Var[A] 00000001 00560003 )
  5C8:  			EndIf
  5D0:  			Call     SetAnimation 	( .Actor:Self 00000001 00560003 )
  5E8:  		Else
  5F0:  			If  *Flag[00]  ==  00000001 
  600:  				Call     SetAnimation 	( *Var[A] 00000001 00570003 )
  618:  			EndIf
  620:  			Call     SetAnimation 	( .Actor:Self 00000002 00570003 )
  638:  		EndIf
  640:  		Wait     00000005 
  64C:  		Call     SetGoalToTarget 	( .Actor:Self )
  65C:  		Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  678:  		Sub  *Var[4]  00000032 
  688:  		Set  *Var[5]  00000000 
  698:  		If  *Flag[01]  ==  00000000 
  6A8:  			If  *Flag[00]  ==  00000001 
  6B8:  				Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  6D4:  				Sub  *Var[0]  00000014 
  6E4:  				Add  *Var[1]  00000014 
  6F4:  				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
  71C:  			EndIf
  724:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  740:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  754:  			If  *Var[3]  &  00080000 
  764:  				Sub  *Var[0]  00000008 
  774:  				Add  *Var[1]  00000008 
  784:  			Else
  78C:  				Sub  *Var[0]  00000014 
  79C:  				Add  *Var[1]  00000014 
  7AC:  			EndIf
  7B4:  			Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
  7DC:  		Else
  7E4:  			If  *Flag[00]  ==  00000001 
  7F4:  				Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  810:  				Sub  *Var[0]  00000014 
  820:  				Add  *Var[1]  00000014 
  830:  				Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
  858:  			EndIf
  860:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  87C:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  890:  			If  *Var[3]  &  00080000 
  8A0:  				Sub  *Var[0]  00000008 
  8B0:  				Add  *Var[1]  00000008 
  8C0:  			Else
  8C8:  				Sub  *Var[0]  00000014 
  8D8:  				Add  *Var[1]  00000014 
  8E8:  			EndIf
  8F0:  			Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
  918:  		EndIf
  920:  		Wait     00000032 
  92C:  		If  *Var[9]  ==  00000005 
  93C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  960:  		EndIf
  968:  		Wait     0000000F 
  974:  		Call     8027D7F0 ( )
  980:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  994:  		If  *Flag[00]  ==  00000001 
  9A4:  			Call     UseIdleAnimation 	( *Var[A] .True )
  9B8:  		EndIf
  9C0:  		Return
  9C8:  	EndCaseGroup
  9D0:  EndSwitch
  9D8:  If  *Flag[00]  ==  00000001 
  9E8:  	Call     PlaySoundAtActor 	( *Var[A] .Sound:SpellCast2 )
  9FC:  EndIf
  A04:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  A18:  If  *Flag[01]  ==  00000000 
  A28:  	If  *Flag[00]  ==  00000001 
  A38:  		Call     SetAnimation 	( *Var[A] 00000001 00560003 )
  A50:  	EndIf
  A58:  	Call     SetAnimation 	( .Actor:Self 00000001 00560003 )
  A70:  Else
  A78:  	If  *Flag[00]  ==  00000001 
  A88:  		Call     SetAnimation 	( *Var[A] 00000001 00570003 )
  AA0:  	EndIf
  AA8:  	Call     SetAnimation 	( .Actor:Self 00000002 00570003 )
  AC0:  EndIf
  AC8:  Wait     00000005 
  AD4:  Call     SetGoalToTarget 	( .Actor:Self )
  AE4:  Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  B00:  If  *Flag[01]  ==  00000000 
  B10:  	If  *Flag[00]  ==  00000001 
  B20:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  B3C:  		Sub  *Var[0]  00000014 
  B4C:  		Add  *Var[1]  00000014 
  B5C:  		Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
  B84:  	EndIf
  B8C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BA8:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  BBC:  	If  *Var[3]  &  00080000 
  BCC:  		Sub  *Var[0]  00000008 
  BDC:  		Add  *Var[1]  00000008 
  BEC:  	Else
  BF4:  		Sub  *Var[0]  00000014 
  C04:  		Add  *Var[1]  00000014 
  C14:  	EndIf
  C1C:  	Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
  C44:  Else
  C4C:  	If  *Flag[00]  ==  00000001 
  C5C:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  C78:  		Sub  *Var[0]  00000014 
  C88:  		Add  *Var[1]  00000014 
  C98:  		Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
  CC0:  	EndIf
  CC8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  CE4:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  CF8:  	If  *Var[3]  &  00080000 
  D08:  		Sub  *Var[0]  00000008 
  D18:  		Add  *Var[1]  00000008 
  D28:  	Else
  D30:  		Sub  *Var[0]  00000014 
  D40:  		Add  *Var[1]  00000014 
  D50:  	EndIf
  D58:  	Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
  D80:  EndIf
  D88:  Wait     00000012 
  D94:  If  *Flag[00]  ==  00000001 
  DA4:  	Wait     00000002 
  DB0:  	Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000006 00000020 )
  DD8:  Else
  DE0:  	Wait     00000002 
  DEC:  	Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000006 00000020 )
  E14:  EndIf
  E1C:  Switch  *Var[0] 
  E28:  	CaseOR  ==  00000000 
  E34:  	CaseOR  ==  00000002 
  E40:  		Wait     00000014 
  E4C:  		Call     8027D7F0 ( )
  E58:  	EndCaseGroup
  E60:  EndSwitch
  E68:  Call     UseIdleAnimation 	( .Actor:Self .True )
  E7C:  If  *Flag[00]  ==  00000001 
  E8C:  	Call     UseIdleAnimation 	( *Var[A] .True )
  EA0:  EndIf
  EA8:  Return
  EB0:  End

#new:Script $Script_80228DA4
    0:  Call     CreateTargetList 	( 00008002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000000 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   3C:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   50:  Mod  *Var[1]  00000004 
   60:  Switch  *Var[1] 
   6C:  	Case  ==  00000000 
   78:  		Set  *Flag[0B]  00000001 
   88:  	Case  ==  00000001 
   94:  		Set  *Flag[0C]  00000001 
   A4:  	Case  ==  00000002 
   B0:  		Set  *Flag[0D]  00000001 
   C0:  	Case  ==  00000003 
   CC:  		Set  *Flag[0E]  00000001 
   DC:  EndSwitch
   E4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   F8:  If  *Var[0]  !=  FFFFFFFF 
  108:  	Goto     00000000 
  114:  EndIf
  11C:  Set  *Var[0]  FFFFFFFF 
  12C:  Call     GetIndexFromHome 	( .Actor:Self *Var[1] )
  140:  Mod  *Var[1]  00000004 
  150:  Switch  *Var[1] 
  15C:  	Case  ==  00000000 
  168:  		If  *Flag[0C]  ==  00000000 
  178:  			Set  *Var[0]  00000001 
  188:  		EndIf
  190:  	Case  ==  00000001 
  19C:  		If  *Flag[0B]  ==  00000000 
  1AC:  			Set  *Var[0]  00000000 
  1BC:  		EndIf
  1C4:  		If  *Flag[0D]  ==  00000000 
  1D4:  			Set  *Var[0]  00000002 
  1E4:  		EndIf
  1EC:  	Case  ==  00000002 
  1F8:  		If  *Flag[0C]  ==  00000000 
  208:  			Set  *Var[0]  00000001 
  218:  		EndIf
  220:  		If  *Flag[0E]  ==  00000000 
  230:  			Set  *Var[0]  00000003 
  240:  		EndIf
  248:  	Case  ==  00000003 
  254:  		If  *Flag[0D]  ==  00000000 
  264:  			Set  *Var[0]  00000002 
  274:  		EndIf
  27C:  EndSwitch
  284:  If  *Var[0]  !=  FFFFFFFF 
  294:  	Call     GetActorFlags 	( .Actor:Self *Var[1] )
  2A8:  	If  *Var[1]  &  00000200 
  2B8:  		Add  *Var[0]  00000004 
  2C8:  	EndIf
  2D0:  EndIf
  2D8:  Return
  2E0:  End

#new:Script $Script_HandleEvent_8022908C
    0:  Return
    8:  End

#new:Script $Script_Init_8022909C
    0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022908C )
   14:  Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   2C:  Return
   34:  End

#new:Script $Script_Init_802290D8
    0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022908C )
   14:  Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   2C:  Return
   34:  End

#new:DefenseTable $DefenseTable_80229114
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80229120
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022912C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_802291D8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80229284
00800000 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80229114 00000020 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_802292A8
00800000 01000000 F62300FF $IdleAnimations_802251BC $DefenseTable_80229120 00000020 00000000 00F80000 00000000 

#new:Actor $Magiclone
% stats
[Index]        4Fb 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         0`b 
[Flags]       00200000 
[StatusTable] $StatusTable_8022912C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80229284 
[Script]      $Script_Init_8022909C 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingMagiclone
% stats
[Index]        50b 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00200200 
[StatusTable] $StatusTable_802291D8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802292A8 
[Script]      $Script_Init_802290D8 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:Vector3D $Vector3D_8022931C
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_80229328
$Magiclone $Vector3D_8022931C 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_80229344
$FlyingMagiclone $Vector3D_8022931C 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_MakeCopy
    0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_RunAway 
   34:  	Return
   3C:  EndIf
   44:  Call     SetActorVar 	( .Actor:Self 0000000A 00000001 )
   5C:  Call     SetActorVar 	( .Actor:Self 0000000B 00000003 )
   74:  Set  *Flag[00]  00000000 
   84:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
   98:  If  *Var[0]  &  00000200 
   A8:  	Set  *Flag[00]  00000001 
   B8:  EndIf
   C0:  If  *Flag[00]  ==  00000000 
   D0:  	Call     SummonEnemy 	( $SpecialFormation_80229328 00000000 )
   E4:  Else
   EC:  	Call     SummonEnemy 	( $SpecialFormation_80229344 00000000 )
  100:  EndIf
  108:  Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
  120:  Set  *Var[A]  *Var[0] 
  130:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  144:  Call     EnableIdleScript 	( *Var[A] 00000000 )
  158:  Call     UseIdleAnimation 	( .Actor:Self .False )
  16C:  Call     UseIdleAnimation 	( *Var[A] .False )
  180:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  194:  Call     UseCamPreset 	( 0000000E )
  1A4:  Call     CamTargetActor ( .Actor:Self )
  1B4:  Call     MoveCamOver 	( 00000019 )
  1C4:  Wait     00000019 
  1D0:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast3 )
  1E4:  If  *Flag[00]  ==  00000000 
  1F4:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  20C:  	Call     SetAnimation 	( *Var[A] 00000001 00560002 )
  224:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  240:  	Add  *Var[1]  00000017 
  250:  Else
  258:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  270:  	Call     SetAnimation 	( *Var[A] 00000001 00570002 )
  288:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2A4:  	Add  *Var[1]  00000017 
  2B4:  EndIf
  2BC:  Call     PlayEffect  	( {FX:EnergyIn:Stars} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  300:  Wait     0000000A 
  30C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  320:  Call     EnableIdleScript 	( *Var[9] 00000001 )
  334:  Wait     0000001E 
  340:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  35C:  Add  *Var[2]  FFFFFFFD 
  36C:  Call     SetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  388:  Set  *Var[9]  *Var[A] 
  398:  Wait     0000000F 
  3A4:  Call     UseCamPreset 	( 00000002 )
  3B4:  Call     MoveCamOver 	( 0000001E )
  3C4:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast4 )
  3D8:  Call     PlaySoundAtActor 	( *Var[9] .Sound:SpellCast4 )
  3EC:  Call     SetSpriteFlagBits 	( *Var[9] 00000001 00800000 .False )
  408:  Call     RandInt     	( 000003E8 *Var[0] )
  41C:  If  *Var[0]  <  000001F4 
  42C:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  440:  	ExecWait $Script_80228DA4 
  44C:  	Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  460:  	Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  47C:  Else
  484:  	Call     SetActorSpeed 	( *Var[9] *Fixed[2.0] )
  498:  	ExecWait $Script_80228DA4 
  4A4:  	Call     SetGoalToIndex ( *Var[9] *Var[0] )
  4B8:  	Call     MoveToGoal  	( *Var[9] 00000000 00000000 .Easing:Linear )
  4D4:  EndIf
  4DC:  Call     SetSpriteFlagBits 	( *Var[9] 00000001 00800000 .True )
  4F8:  Call     GetActorHP  	( .Actor:Self *Var[0] )
  50C:  Call     SetEnemyHP  	( *Var[9] *Var[0] )
  520:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  53C:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  558:  Call     HPBarToHome 	( .Actor:Self )
  568:  Call     GetActorPos 	( *Var[9] *Var[0] *Var[1] *Var[2] )
  584:  Call     ForceHomePos 	( *Var[9] *Var[0] *Var[1] *Var[2] )
  5A0:  Call     HPBarToHome 	( *Var[9] )
  5B0:  If  *Flag[00]  ==  00000000 
  5C0:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .True )
  5DC:  Else
  5E4:  	Call     SetSpriteEventBits 	( .Actor:Self 00000002 00400000 .True )
  600:  EndIf
  608:  If  *Flag[00]  ==  00000000 
  618:  	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  630:  	Call     SetAnimation 	( *Var[9] 00000001 00560001 )
  648:  Else
  650:  	Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  668:  	Call     SetAnimation 	( *Var[9] 00000001 00570001 )
  680:  EndIf
  688:  Call     UseIdleAnimation 	( .Actor:Self .True )
  69C:  Call     UseIdleAnimation 	( *Var[9] .True )
  6B0:  Return
  6B8:  End

#new:Script $Script_BoostAttack
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218638 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetActorAttackBoost 	( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  <  00000003 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait $Script_ShapeSpell 
  1F0:  Return
  1F8:  Label    00000064 
  204:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
  21C:  Call     SetActorVar 	( .Actor:Self 0000000B 00000004 )
  234:  Call     ActorVarAdd 	( .Actor:Self 00000005 00000001 )
  24C:  Call     UseIdleAnimation 	( .Actor:Self .False )
  260:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  274:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  288:  Call     UseCamPreset 	( 0000000E )
  298:  Call     CamTargetActor ( .Actor:Self )
  2A8:  Call     MoveCamOver 	( 0000000F )
  2B8:  Wait     0000000F 
  2C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D8:  If  *Var[0]  !&  00000200 
  2E8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait     00000005 
  334:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  348:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  35C:  If  *Var[0]  !&  00000200 
  36C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  39C:  	If  *Var[A]  &  00080000 
  3AC:  		Sub  *Var[0]  00000006 
  3BC:  		Add  *Var[1]  0000000C 
  3CC:  		Sub  *Var[2]  00000002 
  3DC:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub  *Var[0]  00000010 
  438:  		Add  *Var[1]  0000001F 
  448:  		Sub  *Var[2]  00000002 
  458:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C8:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4DC:  	If  *Var[A]  &  00080000 
  4EC:  		Sub  *Var[0]  0000000C 
  4FC:  		Add  *Var[1]  0000000E 
  50C:  		Sub  *Var[2]  00000002 
  51C:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub  *Var[0]  0000001E 
  578:  		Add  *Var[1]  00000024 
  588:  		Sub  *Var[2]  00000002 
  598:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait     0000001E 
  5F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  60C:  If  *Var[0]  !&  00000200 
  61C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait     00000005 
  668:  Thread
  670:  	Wait     0000000A 
  67C:  	Call     PlaySoundAtActor 	( *Var[8] 000002DD )
  690:  EndThread
  698:  Thread
  6A0:  	Call     8026BF48 ( 00000001 )
  6B0:  	Call     BoostAttack 	( *Var[8] 00000001 )
  6C4:  	Call     8026BF48 ( 00000000 )
  6D4:  EndThread
  6DC:  Call     8027114C ( )
  6E8:  Call     UseCamPreset 	( 00000002 )
  6F8:  Wait     0000000A 
  704:  Call     8027D7F0 ( )
  710:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  724:  Call     UseIdleAnimation 	( .Actor:Self .True )
  738:  Return
  740:  End

#new:Script $Script_BoostDefense
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218638 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetActorDefenseBoost 	( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  <  00000003 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait $Script_ShapeSpell 
  1F0:  Return
  1F8:  Label    00000064 
  204:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
  21C:  Call     SetActorVar 	( .Actor:Self 0000000B 00000005 )
  234:  Call     ActorVarAdd 	( .Actor:Self 00000006 00000001 )
  24C:  Call     UseIdleAnimation 	( .Actor:Self .False )
  260:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  274:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  288:  Call     UseCamPreset 	( 0000000E )
  298:  Call     CamTargetActor ( .Actor:Self )
  2A8:  Call     MoveCamOver 	( 0000000F )
  2B8:  Wait     0000000F 
  2C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D8:  If  *Var[0]  !&  00000200 
  2E8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait     00000005 
  334:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  348:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  35C:  If  *Var[0]  !&  00000200 
  36C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  39C:  	If  *Var[A]  &  00080000 
  3AC:  		Sub  *Var[0]  00000006 
  3BC:  		Add  *Var[1]  0000000C 
  3CC:  		Sub  *Var[2]  00000002 
  3DC:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub  *Var[0]  00000010 
  438:  		Add  *Var[1]  0000001F 
  448:  		Sub  *Var[2]  00000002 
  458:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C8:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4DC:  	If  *Var[A]  &  00080000 
  4EC:  		Sub  *Var[0]  0000000C 
  4FC:  		Add  *Var[1]  0000000E 
  50C:  		Sub  *Var[2]  00000002 
  51C:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub  *Var[0]  0000001E 
  578:  		Add  *Var[1]  00000024 
  588:  		Sub  *Var[2]  00000002 
  598:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait     0000001E 
  5F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  60C:  If  *Var[0]  !&  00000200 
  61C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait     00000005 
  668:  Thread
  670:  	Wait     0000000A 
  67C:  	Call     PlaySoundAtActor 	( *Var[8] 000002DD )
  690:  EndThread
  698:  Thread
  6A0:  	Call     8026BF48 ( 00000001 )
  6B0:  	Call     BoostDefense 	( *Var[8] 00000001 )
  6C4:  	Call     8026BF48 ( 00000000 )
  6D4:  EndThread
  6DC:  Call     8027114C ( )
  6E8:  Call     UseCamPreset 	( 00000002 )
  6F8:  Wait     0000000A 
  704:  Call     8027D7F0 ( )
  710:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  724:  Call     UseIdleAnimation 	( .Actor:Self .True )
  738:  Return
  740:  End

#new:Script $Script_Electrify
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218638 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetStatusFlags ( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  !&  04002000 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait $Script_ShapeSpell 
  1F0:  Return
  1F8:  Label    00000064 
  204:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
  21C:  Call     SetActorVar 	( .Actor:Self 0000000B 00000006 )
  234:  Call     ActorVarAdd 	( .Actor:Self 00000007 00000001 )
  24C:  Call     UseIdleAnimation 	( .Actor:Self .False )
  260:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  274:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  288:  Call     UseCamPreset 	( 0000000E )
  298:  Call     CamTargetActor ( .Actor:Self )
  2A8:  Call     MoveCamOver 	( 0000000F )
  2B8:  Wait     0000000F 
  2C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D8:  If  *Var[0]  !&  00000200 
  2E8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait     00000005 
  334:  Call     PlaySoundAtActor 	( .Actor:Self 000002F0 )
  348:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  35C:  If  *Var[0]  !&  00000200 
  36C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  39C:  	If  *Var[A]  &  00080000 
  3AC:  		Sub  *Var[0]  00000006 
  3BC:  		Add  *Var[1]  0000000C 
  3CC:  		Sub  *Var[2]  00000002 
  3DC:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub  *Var[0]  00000010 
  438:  		Add  *Var[1]  0000001F 
  448:  		Sub  *Var[2]  00000002 
  458:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C8:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4DC:  	If  *Var[A]  &  00080000 
  4EC:  		Sub  *Var[0]  0000000C 
  4FC:  		Add  *Var[1]  0000000E 
  50C:  		Sub  *Var[2]  00000002 
  51C:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub  *Var[0]  0000001E 
  578:  		Add  *Var[1]  00000024 
  588:  		Sub  *Var[2]  00000002 
  598:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait     0000001E 
  5F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  60C:  If  *Var[0]  !&  00000200 
  61C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait     00000005 
  668:  Thread
  670:  	Wait     0000000A 
  67C:  	Loop     00000004 
  688:  		Call     PlaySoundAtActor 	( *Var[8] 000003D2 )
  69C:  		Call     RandInt     	( 00000003 *Var[0] )
  6B0:  		Add  *Var[0]  00000003 
  6C0:  		Wait     *Var[0] 
  6CC:  	EndLoop
  6D4:  EndThread
  6DC:  Thread
  6E4:  	Call     8026BF48 ( 00000001 )
  6F4:  	Call     ElectrifyActor ( *Var[8] 00000003 )
  708:  	Call     8026BF48 ( 00000000 )
  718:  EndThread
  720:  Call     8027114C ( )
  72C:  Call     UseCamPreset 	( 00000002 )
  73C:  Wait     0000000A 
  748:  Call     8027D7F0 ( )
  754:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  768:  Call     UseIdleAnimation 	( .Actor:Self .True )
  77C:  Return
  784:  End

#new:Script $Script_Vanish
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218638 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetStatusFlags ( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  !&  04002000 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  ExecWait $Script_ShapeSpell 
  1F0:  Return
  1F8:  Label    00000064 
  204:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
  21C:  Call     SetActorVar 	( .Actor:Self 0000000B 00000007 )
  234:  Call     ActorVarAdd 	( .Actor:Self 00000008 00000001 )
  24C:  Call     UseIdleAnimation 	( .Actor:Self .False )
  260:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  274:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  288:  Call     UseCamPreset 	( 0000000E )
  298:  Call     CamTargetActor ( .Actor:Self )
  2A8:  Call     MoveCamOver 	( 0000000F )
  2B8:  Wait     0000000F 
  2C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D8:  If  *Var[0]  !&  00000200 
  2E8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  300:  Else
  308:  	Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  320:  EndIf
  328:  Wait     00000005 
  334:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  348:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  35C:  If  *Var[0]  !&  00000200 
  36C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  39C:  	If  *Var[A]  &  00080000 
  3AC:  		Sub  *Var[0]  00000006 
  3BC:  		Add  *Var[1]  0000000C 
  3CC:  		Sub  *Var[2]  00000002 
  3DC:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub  *Var[0]  00000010 
  438:  		Add  *Var[1]  0000001F 
  448:  		Sub  *Var[2]  00000002 
  458:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C8:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4DC:  	If  *Var[A]  &  00080000 
  4EC:  		Sub  *Var[0]  0000000C 
  4FC:  		Add  *Var[1]  0000000E 
  50C:  		Sub  *Var[2]  00000002 
  51C:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub  *Var[0]  0000001E 
  578:  		Add  *Var[1]  00000024 
  588:  		Sub  *Var[2]  00000002 
  598:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait     0000001E 
  5F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  60C:  If  *Var[0]  !&  00000200 
  61C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  634:  Else
  63C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  654:  EndIf
  65C:  Wait     00000005 
  668:  Thread
  670:  	Wait     0000000A 
  67C:  	Call     PlaySoundAtActor 	( *Var[8] 000002DB )
  690:  EndThread
  698:  Thread
  6A0:  	Call     8026BF48 ( 00000001 )
  6B0:  	Call     VanishActor 	( *Var[8] 00000002 )
  6C4:  	Call     8026BF48 ( 00000000 )
  6D4:  EndThread
  6DC:  Call     8027114C ( )
  6E8:  Call     UseCamPreset 	( 00000002 )
  6F8:  Wait     0000000A 
  704:  Call     8027D7F0 ( )
  710:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  724:  Call     UseIdleAnimation 	( .Actor:Self .True )
  738:  Return
  740:  End

#new:Script $Script_TakeTurn_8022B784
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_ShapeSpell 
   2C:  	Return
   34:  EndIf
   3C:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
   54:  If  *Var[0]  ==  00000001 
   64:  	Goto     00000014 
   70:  EndIf
   78:  Set  *Var[A]  00000000 
   88:  Call     CreateTargetList 	( 00008002 )
   98:  Call     InitTargetIterator 	( )
   A4:  Label    00000000 
   B0:  Set  *Flag[00]  00000000 
   C0:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   D4:  Call     GetActorType 	( *Var[0] *Var[1] )
   E8:  If  *Var[1]  ==  00000047 
   F8:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  110:  	If  *Var[1]  ==  00000001 
  120:  		Set  *Flag[00]  00000001 
  130:  	EndIf
  138:  EndIf
  140:  Call     GetActorHP  	( *Var[0] *Var[2] )
  154:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  168:  MulF  *Var[2]  *Fixed[100.0] 
  178:  DivF  *Var[2]  *Var[3] 
  188:  If  *Flag[00]  ==  00000000 
  198:  	If  *Var[2]  <=  00000019 
  1A8:  		Call     RandInt     	( 00000063 *Var[4] )
  1BC:  		Add  *Var[4]  00000001 
  1CC:  		If  *Var[4]  <  0000004B 
  1DC:  			Add  *Var[A]  00000001 
  1EC:  			Set  *Var[B]  *Var[0] 
  1FC:  		EndIf
  204:  	EndIf
  20C:  EndIf
  214:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  228:  If  *Var[0]  !=  FFFFFFFF 
  238:  	Goto     00000000 
  244:  EndIf
  24C:  If  *Var[A]  >  00000000 
  25C:  	Goto     0000000A 
  268:  EndIf
  270:  Set  *Var[A]  00000000 
  280:  Call     CreateTargetList 	( 00008002 )
  290:  Call     InitTargetIterator 	( )
  29C:  Label    00000001 
  2A8:  Set  *Flag[00]  00000000 
  2B8:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2CC:  Call     GetActorType 	( *Var[0] *Var[1] )
  2E0:  If  *Var[1]  ==  00000047 
  2F0:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  308:  	If  *Var[1]  ==  00000001 
  318:  		Set  *Flag[00]  00000001 
  328:  	EndIf
  330:  EndIf
  338:  Call     GetActorHP  	( *Var[0] *Var[2] )
  34C:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  360:  MulF  *Var[2]  *Fixed[100.0] 
  370:  DivF  *Var[2]  *Var[3] 
  380:  If  *Flag[00]  ==  00000000 
  390:  	If  *Var[2]  <=  00000014 
  3A0:  		Call     RandInt     	( 00000063 *Var[4] )
  3B4:  		Add  *Var[4]  00000001 
  3C4:  		If  *Var[4]  <  00000050 
  3D4:  			Add  *Var[A]  00000001 
  3E4:  			Set  *Var[B]  *Var[0] 
  3F4:  		EndIf
  3FC:  	EndIf
  404:  EndIf
  40C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  420:  If  *Var[0]  !=  FFFFFFFF 
  430:  	Goto     00000001 
  43C:  EndIf
  444:  If  *Var[A]  >  00000000 
  454:  	Goto     0000000A 
  460:  EndIf
  468:  Set  *Var[A]  00000000 
  478:  Call     CreateTargetList 	( 00008002 )
  488:  Call     InitTargetIterator 	( )
  494:  Label    00000002 
  4A0:  Set  *Flag[00]  00000000 
  4B0:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  4C4:  Call     GetActorType 	( *Var[0] *Var[1] )
  4D8:  If  *Var[1]  ==  00000047 
  4E8:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  500:  	If  *Var[1]  ==  00000001 
  510:  		Set  *Flag[00]  00000001 
  520:  	EndIf
  528:  EndIf
  530:  Call     GetActorHP  	( *Var[0] *Var[2] )
  544:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  558:  MulF  *Var[2]  *Fixed[100.0] 
  568:  DivF  *Var[2]  *Var[3] 
  578:  If  *Flag[00]  ==  00000000 
  588:  	If  *Var[2]  <=  0000000F 
  598:  		Call     RandInt     	( 00000063 *Var[4] )
  5AC:  		Add  *Var[4]  00000001 
  5BC:  		If  *Var[4]  <  00000064 
  5CC:  			Add  *Var[A]  00000001 
  5DC:  			Set  *Var[B]  *Var[0] 
  5EC:  		EndIf
  5F4:  	EndIf
  5FC:  EndIf
  604:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  618:  If  *Var[0]  !=  FFFFFFFF 
  628:  	Goto     00000002 
  634:  EndIf
  63C:  If  *Var[A]  >  00000000 
  64C:  	Goto     0000000A 
  658:  EndIf
  660:  Goto     00000014 
  66C:  Label    0000000A 
  678:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  690:  If  *Var[0]  ==  00000001 
  6A0:  	ExecWait $Script_RunAway 
  6AC:  	Return
  6B4:  EndIf
  6BC:  If  *Var[A]  ==  00000001 
  6CC:  	Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  6E4:  	If  *Var[0]  <  00000002 
  6F4:  		Call     RandInt     	( 000003E8 *Var[0] )
  708:  		If  *Var[0]  <  000001F4 
  718:  			ExecWait $Script_HealOne 
  724:  			Return
  72C:  		EndIf
  734:  	Else
  73C:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  754:  		If  *Var[0]  <  00000002 
  764:  			Call     RandInt     	( 000003E8 *Var[0] )
  778:  			If  *Var[0]  <  000001F4 
  788:  				ExecWait $Script_HealAll 
  794:  				Return
  79C:  			EndIf
  7A4:  		EndIf
  7AC:  	EndIf
  7B4:  Else
  7BC:  	Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  7D4:  	If  *Var[0]  <  00000002 
  7E4:  		Call     RandInt     	( 000003E8 *Var[0] )
  7F8:  		If  *Var[0]  <  000001F4 
  808:  			ExecWait $Script_HealAll 
  814:  			Return
  81C:  		EndIf
  824:  	Else
  82C:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  844:  		If  *Var[0]  <  00000002 
  854:  			SetF  *Var[9]  *Fixed[100.0] 
  864:  			Call     CreateTargetList 	( 00008002 )
  874:  			Call     InitTargetIterator 	( )
  880:  			Label    0000000B 
  88C:  			Set  *Flag[00]  00000000 
  89C:  			Call     GetOwnerTarget ( *Var[0] *Var[1] )
  8B0:  			Call     GetActorType 	( *Var[0] *Var[1] )
  8C4:  			If  *Var[1]  ==  00000047 
  8D4:  				Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  8EC:  				If  *Var[1]  ==  00000001 
  8FC:  					Set  *Flag[00]  00000001 
  90C:  				EndIf
  914:  			EndIf
  91C:  			Call     GetActorHP  	( *Var[0] *Var[2] )
  930:  			Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  944:  			MulF  *Var[2]  *Fixed[100.0] 
  954:  			DivF  *Var[2]  *Var[3] 
  964:  			If  *Flag[00]  ==  00000000 
  974:  				If  *Var[2]  <=  *Var[9] 
  984:  					SetF  *Var[9]  *Var[2] 
  994:  					Set  *Var[B]  *Var[0] 
  9A4:  				EndIf
  9AC:  			EndIf
  9B4:  			Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  9C8:  			If  *Var[0]  !=  FFFFFFFF 
  9D8:  				Goto     0000000B 
  9E4:  			EndIf
  9EC:  			Call     RandInt     	( 000003E8 *Var[0] )
  A00:  			If  *Var[0]  <  000001F4 
  A10:  				ExecWait $Script_HealOne 
  A1C:  				Return
  A24:  			EndIf
  A2C:  		EndIf
  A34:  	EndIf
  A3C:  EndIf
  A44:  Label    00000014 
  A50:  Set  *Var[A]  0000000A 
  A60:  Set  *Var[B]  0000000A 
  A70:  Set  *Var[C]  0000000A 
  A80:  Set  *Var[D]  0000000A 
  A90:  Set  *Var[E]  0000000A 
  AA0:  Set  *Var[F]  0000000A 
  AB0:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  AC8:  If  *Var[0]  ==  00000001 
  AD8:  	Set  *Var[A]  00000064 
  AE8:  	Set  *Var[B]  00000000 
  AF8:  	Set  *Var[C]  00000000 
  B08:  	Set  *Var[D]  00000000 
  B18:  	Set  *Var[E]  00000000 
  B28:  	Set  *Var[F]  00000000 
  B38:  	Goto     0000007B 
  B44:  Else
  B4C:  	ExecWait $Script_80228DA4 
  B58:  	If  *Var[0]  ==  FFFFFFFF 
  B68:  		Set  *Var[B]  00000000 
  B78:  	EndIf
  B80:  EndIf
  B88:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  B9C:  If  *Var[0]  !=  00000000 
  BAC:  	Set  *Var[B]  00000000 
  BBC:  EndIf
  BC4:  Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
  BDC:  Switch  *Var[0] 
  BE8:  	Case  ==  00000004 
  BF4:  		Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
  C0C:  		If  *Var[1]  <  00000003 
  C1C:  			Call     RandInt     	( 00000063 *Var[0] )
  C30:  			Add  *Var[0]  00000001 
  C40:  			If  *Var[0]  <=  00000032 
  C50:  				Set  *Var[A]  00000000 
  C60:  				Set  *Var[B]  00000000 
  C70:  				Set  *Var[C]  00000064 
  C80:  				Set  *Var[D]  00000000 
  C90:  				Set  *Var[E]  00000000 
  CA0:  				Set  *Var[F]  00000000 
  CB0:  			EndIf
  CB8:  		EndIf
  CC0:  	Case  ==  00000005 
  CCC:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  CE4:  		If  *Var[1]  <  00000003 
  CF4:  			Call     RandInt     	( 00000063 *Var[0] )
  D08:  			Add  *Var[0]  00000001 
  D18:  			If  *Var[0]  <=  00000032 
  D28:  				Set  *Var[A]  00000000 
  D38:  				Set  *Var[B]  00000000 
  D48:  				Set  *Var[C]  00000000 
  D58:  				Set  *Var[D]  00000064 
  D68:  				Set  *Var[E]  00000000 
  D78:  				Set  *Var[F]  00000000 
  D88:  			EndIf
  D90:  		EndIf
  D98:  EndSwitch
  DA0:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  DB8:  If  *Var[0]  >=  00000003 
  DC8:  	Set  *Var[C]  00000000 
  DD8:  EndIf
  DE0:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
  DF8:  If  *Var[0]  >=  00000003 
  E08:  	Set  *Var[D]  00000000 
  E18:  EndIf
  E20:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
  E38:  If  *Var[0]  >=  00000003 
  E48:  	Set  *Var[E]  00000000 
  E58:  EndIf
  E60:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  E78:  If  *Var[0]  >=  00000003 
  E88:  	Set  *Var[F]  00000000 
  E98:  EndIf
  EA0:  Label    0000007B 
  EAC:  Set  *Var[9]  00000000 
  EBC:  Add  *Var[9]  *Var[A] 
  ECC:  Add  *Var[9]  *Var[B] 
  EDC:  Add  *Var[9]  *Var[C] 
  EEC:  Add  *Var[9]  *Var[D] 
  EFC:  Add  *Var[9]  *Var[E] 
  F0C:  Add  *Var[9]  *Var[F] 
  F1C:  Sub  *Var[9]  00000001 
  F2C:  Call     RandInt     	( *Var[9] *Var[0] )
  F40:  Add  *Var[0]  00000001 
  F50:  If  *Var[0]  <=  *Var[A] 
  F60:  	ExecWait $Script_ShapeSpell 
  F6C:  	Return
  F74:  EndIf
  F7C:  Add  *Var[A]  *Var[B] 
  F8C:  If  *Var[0]  <=  *Var[A] 
  F9C:  	ExecWait $Script_MakeCopy 
  FA8:  	Return
  FB0:  EndIf
  FB8:  Add  *Var[A]  *Var[C] 
  FC8:  If  *Var[0]  <=  *Var[A] 
  FD8:  	ExecWait $Script_BoostAttack 
  FE4:  	Return
  FEC:  EndIf
  FF4:  Add  *Var[A]  *Var[D] 
 1004:  If  *Var[0]  <=  *Var[A] 
 1014:  	ExecWait $Script_BoostDefense 
 1020:  	Return
 1028:  EndIf
 1030:  Add  *Var[A]  *Var[E] 
 1040:  If  *Var[0]  <=  *Var[A] 
 1050:  	ExecWait $Script_Electrify 
 105C:  	Return
 1064:  EndIf
 106C:  ExecWait $Script_Vanish 
 1078:  Return
 1080:  End

PADDING: 8022C80C to 8022C810 (0069923C to 00699240)
00000000 

#new:DefenseTable $DefenseTable_8022C810
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:End

#new:StatusTable $StatusTable_8022C834
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze    0`
.Status:Shrink     90`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022C8E0
00800000 01000000 FE1900FF $IdleAnimations_8022C9BC $DefenseTable_8022C810 00000002 00000000 FDF60000 00000000 
00120001 02000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 
00120001 03000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 
00120001 04000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 
00120001 05000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 

#new:Actor $Ember
% stats
[Index]        45b 
[Level]        24`b 
[MaxHP]        10`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8022C834 
% ai
[SpriteCount]   5`s 
[SpriteTable] $SpriteTable_8022C8E0 
[Script]      $Script_Init_8022CA14 
% move effectiveness
[Escape]       60`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8022C9BC
.Status:Normal    00460101
.Status:Stone     00460100
.Status:Sleep     00460101
.Status:Poison    00460101
.Status:Stop      00460100
.Status:Static    00460101
.Status:Paralyze  00460100
.Status:Dizzy     0046010A
.Status:Fear      0046010A
.Status:End

#new:IdleAnimations $IdleAnimations_8022CA08
.Status:Normal    00460101
.Status:End

#new:Script $Script_Init_8022CA14
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022EDE4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022CBDC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022D41C )
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  Switch  *Var[0] 
   60:  	Case  ==  00000000 
   6C:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   84:  	Case  ==  00000001 
   90:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   A8:  EndSwitch
   B0:  Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
   D0:  Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
   F0:  Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  110:  Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  130:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  148:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
  160:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  Add  *Var[1]  00000005 
  18C:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1A8:  Call     HPBarToHome 	( .Actor:Self )
  1B8:  Return
  1C0:  End

#new:Script $Script_Idle_8022CBDC
    0:  Label    00000000 
    C:  Call     MakeLerp    	( 00000000 0000000A 00000019 0000000A )
   28:  Label    00000001 
   34:  Call     UpdateLerp  	( )
   40:  Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
   5C:  Add  *Var[0]  *Var[3] 
   6C:  Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
   88:  If  *Var[1]  ==  00000001 
   98:  	Label    0000000B 
   A4:  	Wait     00000001 
   B0:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
   C4:  	If  *Var[0]  &  0035D000 
   D4:  		Goto     0000000B 
   E0:  	EndIf
   E8:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  100:  	If  *Var[0]  ==  00000001 
  110:  		Goto     0000000B 
  11C:  	EndIf
  124:  	Goto     00000001 
  130:  EndIf
  138:  Call     MakeLerp    	( 0000000A 00000000 00000019 0000000A )
  154:  Label    00000002 
  160:  Call     UpdateLerp  	( )
  16C:  Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
  188:  Add  *Var[0]  *Var[3] 
  198:  Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
  1B4:  If  *Var[1]  ==  00000001 
  1C4:  	Label    00000016 
  1D0:  	Wait     00000001 
  1DC:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
  1F0:  	If  *Var[0]  &  0035D000 
  200:  		Goto     00000016 
  20C:  	EndIf
  214:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  22C:  	If  *Var[0]  ==  00000001 
  23C:  		Goto     00000016 
  248:  	EndIf
  250:  	Goto     00000002 
  25C:  EndIf
  264:  Goto     00000000 
  270:  Return
  278:  End

#new:Script $Script_8022CE5C
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
   18:  Call     SetGoalToHome 	( .Actor:Self )
   28:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   3C:  Thread
   44:  	Call     $Function_80218700 ( )
   50:  EndThread
   58:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
   8C:  Return
   94:  End

#new:Script $Script_8022CEF8
    0:  Call     CreateTargetList 	( 00008002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000000 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[5] )
   3C:  Call     GetIndexFromHome 	( *Var[0] *Var[5] )
   50:  Mod  *Var[5]  00000004 
   60:  Switch  *Var[5] 
   6C:  	Case  ==  00000000 
   78:  		Set  *Flag[01]  00000001 
   88:  	Case  ==  00000001 
   94:  		Set  *Flag[02]  00000001 
   A4:  	Case  ==  00000002 
   B0:  		Set  *Flag[03]  00000001 
   C0:  	Case  ==  00000003 
   CC:  		Set  *Flag[04]  00000001 
   DC:  EndSwitch
   E4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   F8:  If  *Var[0]  !=  FFFFFFFF 
  108:  	Goto     00000000 
  114:  EndIf
  11C:  If  *Flag[01]  ==  00000000 
  12C:  	Set  *Var[A]  00000000 
  13C:  	Return
  144:  EndIf
  14C:  If  *Flag[02]  ==  00000000 
  15C:  	Set  *Var[A]  00000001 
  16C:  	Return
  174:  EndIf
  17C:  If  *Flag[03]  ==  00000000 
  18C:  	Set  *Var[A]  00000002 
  19C:  	Return
  1A4:  EndIf
  1AC:  If  *Flag[04]  ==  00000000 
  1BC:  	Set  *Var[A]  00000003 
  1CC:  	Return
  1D4:  EndIf
  1DC:  Set  *Var[A]  FFFFFFFF 
  1EC:  Return
  1F4:  End

#new:Vector3D $Vector3D_8022D0F4
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8022D100
$Ember $Vector3D_8022D0F4 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_Split
    0:  Call     GetLastDamage 	( .Actor:Self *Var[0] )
   14:  If  *Var[0]  ==  00000000 
   24:  	Return
   2C:  EndIf
   34:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   48:  If  *Var[0]  <=  00000000 
   58:  	Return
   60:  EndIf
   68:  Call     GetLastElement ( *Var[0] )
   78:  If  *Var[0]  &  20000000 
   88:  	Return
   90:  EndIf
   98:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   B0:  If  *Var[0]  >=  00000002 
   C0:  	Return
   C8:  EndIf
   D0:  ExecWait $Script_8022CEF8 
   DC:  Switch  *Var[A] 
   E8:  	CaseOR  ==  00000000 
   F4:  	CaseOR  ==  00000001 
  100:  	CaseOR  ==  00000002 
  10C:  	CaseOR  ==  00000003 
  118:  		Call     SummonEnemy 	( $SpecialFormation_8022D100 00000000 )
  12C:  		Call     SetActorVar 	( *Var[0] 00000002 00000001 )
  144:  		Call     GetActorHP  	( .Actor:Self *Var[B] )
  158:  		Call     SetEnemyHP  	( *Var[0] *Var[B] )
  16C:  		Call     GetActorPos 	( .Actor:Self *Var[B] *Var[C] *Var[D] )
  188:  		Call     SetActorPos 	( *Var[0] *Var[B] *Var[C] *Var[D] )
  1A4:  		Call     SetGoalToIndex ( *Var[0] *Var[A] )
  1B8:  		Call     GetGoalPos  	( *Var[0] *Var[B] *Var[C] *Var[D] )
  1D4:  		Call     SetHomePos  	( *Var[0] *Var[B] *Var[C] *Var[D] )
  1F0:  		Call     SetActorJumpscale 	( *Var[0] *Fixed[1.2001953] )
  204:  		Call     JumpToGoal  	( *Var[0] 00000014 00000000 00000001 00000000 )
  224:  		Call     HPBarToHome 	( *Var[0] )
  234:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  24C:  		Switch  *Var[1] 
  258:  			Case  ==  00000000 
  264:  				Call     SetActorVar 	( *Var[0] 00000001 00000001 )
  27C:  			Case  ==  00000001 
  288:  				Call     SetActorVar 	( *Var[0] 00000001 00000002 )
  2A0:  		EndSwitch
  2A8:  		Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
  2C0:  		Call     SetActorVar 	( *Var[0] 00000002 00000000 )
  2D8:  	EndCaseGroup
  2E0:  	Default
  2E8:  EndSwitch
  2F0:  Return
  2F8:  End

#new:Script $Script_HandleEvent_8022D41C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		Exec     $Script_Split 
   6C:  		SetConst  *Var[0]  00000001 
   7C:  		SetConst  *Var[1]  00460107 
   8C:  		ExecWait DoNormalHit 
   98:  	EndCaseGroup
   A0:  	Case  ==  .Event:BurnHit
   AC:  		Exec     $Script_Split 
   B8:  		SetConst  *Var[0]  00000001 
   C8:  		SetConst  *Var[1]  00460108 
   D8:  		SetConst  *Var[2]  00460109 
   E8:  		ExecWait DoBurnHit 
   F4:  	Case  ==  .Event:BurnDeath
  100:  		SetConst  *Var[0]  00000001 
  110:  		SetConst  *Var[1]  00460108 
  120:  		SetConst  *Var[2]  00460109 
  130:  		ExecWait DoBurnHit 
  13C:  		SetConst  *Var[0]  00000001 
  14C:  		SetConst  *Var[1]  00460109 
  15C:  		ExecWait DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:MultibounceHit
  17C:  		Exec     $Script_Split 
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  00460107 
  1A8:  		ExecWait 8029B998 
  1B4:  	Case  ==  .Event:MultibounceDeath
  1C0:  		SetConst  *Var[0]  00000001 
  1D0:  		SetConst  *Var[1]  00460107 
  1E0:  		ExecWait 8029B998 
  1EC:  		SetConst  *Var[0]  00000001 
  1FC:  		SetConst  *Var[1]  00460107 
  20C:  		ExecWait DoDeath 
  218:  		Return
  220:  	Case  ==  .Event:ShockHit
  22C:  		Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
  240:  		SetConst  *Var[0]  00000001 
  250:  		SetConst  *Var[1]  00460107 
  260:  		ExecWait DoShockHit 
  26C:  		SetConst  *Var[0]  00000001 
  27C:  		SetConst  *Var[1]  00460107 
  28C:  		ExecWait 8029BD70 
  298:  		ExecWait $Script_8022CE5C 
  2A4:  	Case  ==  .Event:ShockDeath
  2B0:  		Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
  2C4:  		SetConst  *Var[0]  00000001 
  2D4:  		SetConst  *Var[1]  00460107 
  2E4:  		ExecWait DoShockHit 
  2F0:  		SetConst  *Var[0]  00000001 
  300:  		SetConst  *Var[1]  00460107 
  310:  		ExecWait DoDeath 
  31C:  		Return
  324:  	CaseOR  ==  00000017
  330:  	CaseOR  ==  .Event:Immune
  33C:  	CaseOR  ==  .Event:AirLiftFailed
  348:  	CaseOR  ==  .Event:BurnTaunt
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  00460101 
  374:  		ExecWait DoImmune 
  380:  	EndCaseGroup
  388:  	Case  ==  .Event:Death
  394:  		SetConst  *Var[0]  00000001 
  3A4:  		SetConst  *Var[1]  00460107 
  3B4:  		ExecWait DoNormalHit 
  3C0:  		SetConst  *Var[0]  00000001 
  3D0:  		SetConst  *Var[1]  00460107 
  3E0:  		ExecWait DoDeath 
  3EC:  		Return
  3F4:  	Case  ==  .Event:BeginFirstStrike
  400:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  41C:  		Call     HPBarToCurrent ( .Actor:Self )
  42C:  	Case  ==  .Event:EndFirstStrike
  438:  		ExecWait $Script_8022CE5C 
  444:  		Call     HPBarToHome 	( .Actor:Self )
  454:  	Case  ==  .Event:RecoverStatus
  460:  		SetConst  *Var[0]  00000001 
  470:  		SetConst  *Var[1]  00460101 
  480:  		ExecWait DoRecover 
  48C:  	Case  ==  .Event:ScareAway
  498:  		SetConst  *Var[0]  00000001 
  4A8:  		SetConst  *Var[1]  00460103 
  4B8:  		SetConst  *Var[2]  00460107 
  4C8:  		ExecWait DoScareAway 
  4D4:  		Return
  4DC:  	Case  ==  .Event:BeginAirLift
  4E8:  		SetConst  *Var[0]  00000001 
  4F8:  		SetConst  *Var[1]  00460103 
  508:  		ExecWait DoAirLift 
  514:  	Case  ==  .Event:BlowAway
  520:  		SetConst  *Var[0]  00000001 
  530:  		SetConst  *Var[1]  00460103 
  540:  		ExecWait DoBlowAway 
  54C:  		Return
  554:  	Case  ==  .Event:UpAndAway
  560:  	Default
  568:  EndSwitch
  570:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  584:  Call     UseIdleAnimation 	( .Actor:Self .True )
  598:  Return
  5A0:  End

#new:Script $Script_8022D9C4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B8:  Add  *Var[0]  0000001E 
   C8:  Set  *Var[1]  00000005 
   D8:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   F4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  108:  Thread
  110:  	Call     $Function_80218700 ( )
  11C:  EndThread
  124:  Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:SinOut )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
  158:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  17C:  Switch  *Var[0] 
  188:  	CaseOR  ==  00000006 
  194:  	CaseOR  ==  00000005 
  1A0:  		Set  *Var[A]  *Var[0] 
  1B0:  		Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
  1C8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1D8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F4:  		Sub  *Var[0]  00000014 
  204:  		Set  *Var[1]  00000000 
  214:  		Add  *Var[2]  00000001 
  224:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  238:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  254:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  274:  		If  *Var[A]  ==  00000005 
  284:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  2A8:  		EndIf
  2B0:  		Sub  *Var[0]  0000001E 
  2C0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2DC:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  2FC:  		Sub  *Var[0]  00000014 
  30C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  328:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  348:  		Sub  *Var[0]  0000000A 
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 00000003 00000000 00000001 00000000 )
  394:  		Wait     0000000E 
  3A0:  		Call     UseCamPreset 	( 00000002 )
  3B0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3CC:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3E0:  		ExecWait $Script_8022CE5C 
  3EC:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  400:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  418:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  42C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  440:  		Return
  448:  	EndCaseGroup
  450:  EndSwitch
  458:  Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
  470:  Call     SetGoalToTarget 	( .Actor:Self )
  480:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  49C:  Add  *Var[2]  00000001 
  4AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  4C0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4DC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  4FC:  Wait     00000002 
  508:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
  530:  Switch  *Var[0] 
  53C:  	CaseOR  ==  00000000 
  548:  	CaseOR  ==  00000002 
  554:  		Call     UseCamPreset 	( 00000002 )
  564:  		Set  *Var[0]  00000001 
  574:  		Set  *Var[1]  00460104 
  584:  		ExecWait 8029BD70 
  590:  		Wait     00000005 
  59C:  		ExecWait $Script_8022CE5C 
  5A8:  	EndCaseGroup
  5B0:  EndSwitch
  5B8:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  5CC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5E0:  Return
  5E8:  End

#new:Script $Script_8022DFB4
    0:  Set  *Var[6]  00000002 
   10:  Loop     00000004 
   1C:  	Thread
   24:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
   38:  		If  *Var[A]  &  00080000 
   48:  			Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.20019531] *Fixed[0.20019531] *Fixed[0.20019531] )
   68:  		Else
   70:  			Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
   90:  		EndIf
   98:  		Call     SetSpritePos 	( .Actor:Self *Var[6] *Var[0] *Var[1] *Var[2] )
   B8:  		Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .False )
   D4:  		Call     SetSpriteSpeed ( .Actor:Self *Var[6] *Fixed[8.0] )
   EC:  		Call     SetSpriteJumpscale 	( .Actor:Self *Var[6] *Fixed[0.0107421875] )
  104:  		Call     8026FA00 ( FFFFFF81 *Var[6] 00000002 000002D0 00000000 )
  124:  		Call     JumpSpriteA 	( .Actor:Self *Var[6] *Var[3] *Var[4] *Var[5] 00000000 .False )
  14C:  		Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .True )
  168:  	EndThread
  170:  	Wait     00000003 
  17C:  	Add  *Var[6]  00000001 
  18C:  EndLoop
  194:  Return
  19C:  End

#new:Script $Script_8022E158
    0:  Exec     $Script_8022DFB4 
    C:  Call     GetDistanceToTarget 	( .Actor:Self *Var[0] )
   20:  DivF  *Var[0]  *Fixed[8.0] 
   30:  Add  *Var[0]  00000001 
   40:  Wait     *Var[0] 
   4C:  Return
   54:  End

#new:Script $Script_8022E1B4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Partner )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
   90:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   A8:  If  *Var[A]  ==  00000001 
   B8:  	Add  *Var[0]  00000064 
   C8:  	Set  *Var[1]  00000005 
   D8:  Else
   E0:  	Add  *Var[0]  0000001E 
   F0:  	Set  *Var[1]  00000032 
  100:  EndIf
  108:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
  13C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  150:  Thread
  158:  	Call     $Function_80218700 ( )
  164:  EndThread
  16C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  188:  Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
  1A0:  Wait     0000000A 
  1AC:  Call     SetAnimation 	( .Actor:Self 00000001 00460105 )
  1C4:  Wait     0000001E 
  1D0:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  00000006 
  20C:  	CaseOR  ==  00000005 
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
  240:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  		Sub  *Var[0]  00000005 
  26C:  		Add  *Var[1]  00000004 
  27C:  		Add  *Var[2]  00000002 
  28C:  		Call     SetGoalToTarget 	( .Actor:Self )
  29C:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B8:  		Sub  *Var[3]  00000064 
  2C8:  		Add  *Var[5]  00000002 
  2D8:  		ExecWait $Script_8022E158 
  2E4:  		If  *Var[A]  ==  00000005 
  2F4:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  318:  		EndIf
  320:  		Wait     00000014 
  32C:  		Call     UseCamPreset 	( 00000002 )
  33C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  358:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  36C:  		ExecWait $Script_8022CE5C 
  378:  		Wait     00000014 
  384:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  398:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D8:  		Return
  3E0:  	EndCaseGroup
  3E8:  EndSwitch
  3F0:  Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
  408:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  424:  Sub  *Var[0]  00000005 
  434:  Add  *Var[1]  00000004 
  444:  Add  *Var[2]  00000002 
  454:  Call     SetGoalToTarget 	( .Actor:Self )
  464:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  480:  Sub  *Var[4]  00000006 
  490:  Add  *Var[5]  00000002 
  4A0:  ExecWait $Script_8022E158 
  4AC:  Wait     00000002 
  4B8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000003 00000020 )
  4E0:  Wait     00000014 
  4EC:  Switch  *Var[0] 
  4F8:  	CaseOR  ==  00000000 
  504:  	CaseOR  ==  00000002 
  510:  		Call     UseCamPreset 	( 00000002 )
  520:  		ExecWait $Script_8022CE5C 
  52C:  	EndCaseGroup
  534:  EndSwitch
  53C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  550:  Call     UseIdleAnimation 	( .Actor:Self .True )
  564:  Return
  56C:  End

#new:Script $Script_8022E728
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
   CC:  Thread
   D4:  	Call     $Function_80218700 ( )
   E0:  EndThread
   E8:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
  104:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  128:  Switch  *Var[0] 
  134:  	CaseOR  ==  00000006 
  140:  	CaseOR  ==  00000005 
  14C:  		Set  *Var[A]  *Var[0] 
  15C:  		Wait     0000000A 
  168:  		Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  184:  		Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
  198:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1AC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1C0:  		Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
  1D8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  210:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  230:  		Call     8026F838 ( FFFFFF81 00000002 )
  244:  		Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  258:  		Call     SetGoalToTarget 	( .Actor:Self )
  268:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  284:  		Sub  *Var[0]  0000001E 
  294:  		Add  *Var[2]  00000002 
  2A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2D4:  		Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
  2EC:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  308:  		If  *Var[A]  ==  00000005 
  318:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  33C:  		EndIf
  344:  		Wait     0000001E 
  350:  		Call     UseCamPreset 	( 00000002 )
  360:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  37C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  390:  		ExecWait $Script_8022CE5C 
  39C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  3B0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  3C8:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  3DC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3F0:  		Return
  3F8:  	EndCaseGroup
  400:  EndSwitch
  408:  Wait     00000005 
  414:  Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  430:  Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
  444:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  458:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  46C:  Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
  484:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4BC:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  4DC:  Call     8026F838 ( FFFFFF81 00000002 )
  4F0:  Set  *Var[A]  *Var[0] 
  500:  Set  *Var[B]  *Var[1] 
  510:  Set  *Var[C]  *Var[2] 
  520:  Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  534:  Call     SetGoalToTarget 	( .Actor:Self )
  544:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  560:  Add  *Var[2]  00000002 
  570:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  58C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5A0:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  5BC:  Wait     00000002 
  5C8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
  5F0:  Switch  *Var[0] 
  5FC:  	CaseOR  ==  00000000 
  608:  	CaseOR  ==  00000002 
  614:  		Call     UseCamPreset 	( 00000002 )
  624:  		Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  640:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  65C:  		Wait     00000014 
  668:  		ExecWait $Script_8022CE5C 
  674:  	EndCaseGroup
  67C:  EndSwitch
  684:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  698:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6AC:  Return
  6B4:  End

#new:Script $Script_TakeTurn_8022EDE4
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   38:  	Switch  *Var[0] 
   44:  		Case  ==  00000001 
   50:  			ExecWait $Script_8022D9C4 
   5C:  		Case  ==  00000000 
   68:  			ExecWait $Script_8022E728 
   74:  	EndSwitch
   7C:  	Return
   84:  EndIf
   8C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   A4:  Switch  *Var[0] 
   B0:  	Case  ==  00000001 
   BC:  		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
   D0:  		If  *Var[0]  &  01000000 
   E0:  			ExecWait $Script_8022D9C4 
   EC:  		Else
   F4:  			Call     RandInt     	( 000003E8 *Var[0] )
  108:  			If  *Var[0]  <=  0000012C 
  118:  				ExecWait $Script_8022E1B4 
  124:  			Else
  12C:  				ExecWait $Script_8022D9C4 
  138:  			EndIf
  140:  		EndIf
  148:  	Case  ==  00000000 
  154:  		Call     GetStatusFlags ( .Actor:Partner *Var[0] )
  168:  		If  *Var[0]  &  01000000 
  178:  			ExecWait $Script_8022E728 
  184:  		Else
  18C:  			Call     RandInt     	( 000003E8 *Var[0] )
  1A0:  			If  *Var[0]  <=  0000012C 
  1B0:  				ExecWait $Script_8022E1B4 
  1BC:  			Else
  1C4:  				ExecWait $Script_8022E728 
  1D0:  			EndIf
  1D8:  		EndIf
  1E0:  EndSwitch
  1E8:  Return
  1F0:  End

PADDING: 8022EFDC to 8022EFE0 (0069BA0C to 0069BA10)
00000000 

#new:Script $Script_8022EFE0
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     SetTexPanner 	( *Var[A] 00000001 )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00008000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_BeforeBattle_8022F090
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000024 00000000 )
   40:  Thread
   48:  	Set  *Var[0]  00000025 
   58:  	Exec     $Script_8022EFE0 
   64:  	Wait     00000005 
   70:  	Set  *Var[0]  00000027 
   80:  	Exec     $Script_8022EFE0 
   8C:  EndThread
   94:  Return
   9C:  End

#new:Script $Script_AfterBattle_8022F134
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022F144
00000018 00000017 00000016 00000000 

#new:Stage $Stage_8022F154
$ASCII_80231F70  % kpa_tex
$ASCII_80231F60  % kpa_bt01_shape
$ASCII_80231F50  % kpa_bt01_hit
$Script_BeforeBattle_8022F090 
$Script_AfterBattle_8022F134 
00000000 
$ForegroundModelList_8022F144 
00000000 
00000000 
00000000 

PADDING: 8022F17C to 8022F180 (0069BBAC to 0069BBB0)
00000000 

#new:Script $Script_8022F180
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     SetTexPanner 	( *Var[A] 00000001 )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00008000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_BeforeBattle_8022F230
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000019 00000000 )
   40:  Set  *Var[0]  00000025 
   50:  Exec     $Script_8022F180 
   5C:  Set  *Var[0]  00000027 
   6C:  Exec     $Script_8022F180 
   78:  Return
   80:  End

#new:Script $Script_AfterBattle_8022F2B8
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022F2C8
00000018 00000017 00000016 00000000 

#new:Stage $Stage_8022F2D8
$ASCII_80231F98  % kpa_tex
$ASCII_80231F88  % kpa_bt01_shape
$ASCII_80231F78  % kpa_bt01_hit
$Script_BeforeBattle_8022F230 
$Script_AfterBattle_8022F2B8 
00000000 
$ForegroundModelList_8022F2C8 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_8022F300
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   8C:  	Add  *Var[0]  *Var[B] 
   9C:  	Add  *Var[1]  *Var[C] 
   AC:  	Wait     00000001 
   B8:  EndLoop
   C0:  Return
   C8:  End

#new:Script $Script_8022F3D0
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_8022F4BC
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_BeforeBattle_8022F5A8
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000010 
   3C:  Set  *Var[1]  00000001 
   4C:  Set  *Var[2]  FFFFFE70 
   5C:  Set  *Var[3]  FFFFFCE0 
   6C:  Exec     $Script_8022F3D0 
   78:  Set  *Var[0]  00000013 
   88:  Set  *Var[1]  00000003 
   98:  Set  *Var[2]  FFFFFE70 
   A8:  Set  *Var[3]  FFFFFCE0 
   B8:  Exec     $Script_8022F3D0 
   C4:  Set  *Var[0]  00000011 
   D4:  Set  *Var[1]  00000000 
   E4:  Set  *Var[2]  FFFFFE70 
   F4:  Set  *Var[3]  FFFFFCE0 
  104:  Exec     $Script_8022F4BC 
  110:  Set  *Var[0]  00000012 
  120:  Set  *Var[1]  00000002 
  130:  Set  *Var[2]  FFFFFE70 
  140:  Set  *Var[3]  FFFFFCE0 
  150:  Exec     $Script_8022F4BC 
  15C:  Return
  164:  End

#new:Script $Script_AfterBattle_8022F714
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022F724
0000000D 00000000 

#new:Stage $Stage_8022F72C
$ASCII_80231FC0  % kpa_tex
$ASCII_80231FB0  % kpa_bt02_shape
$ASCII_80231FA0  % kpa_bt02_hit
$Script_BeforeBattle_8022F5A8 
$Script_AfterBattle_8022F714 
00000000 
$ForegroundModelList_8022F724 
00000000 
00000000 
00000000 

PADDING: 8022F754 to 8022F760 (0069C184 to 0069C190)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8022F760
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     80253734 ( 00000001 )
   3C:  Return
   44:  End

#new:Script $Script_AfterBattle_8022F7AC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022F7BC
00000019 00000000 

#new:Stage $Stage_8022F7C4
$ASCII_80231FE8  % kpa_tex
$ASCII_80231FD8  % kpa_bt03_shape
$ASCII_80231FC8  % kpa_bt03_hit
$Script_BeforeBattle_8022F760 
$Script_AfterBattle_8022F7AC 
00000000 
$ForegroundModelList_8022F7BC 
00000000 
00000000 
00000000 

PADDING: 8022F7EC to 8022F7F0 (0069C21C to 0069C220)
00000000 

#new:Script $Script_8022F7F0
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     SetTexPanner 	( *Var[A] 00000001 )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00008000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_BeforeBattle_8022F8A0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 0000000F 00000000 )
   40:  Call     802C9308 ( 00000011 00000000 )
   54:  Call     802C9308 ( 00000010 00000000 )
   68:  Call     802C9308 ( 0000001A 00000000 )
   7C:  Call     802C9308 ( 00000012 00000000 )
   90:  Call     802C9308 ( 00000014 00000000 )
   A4:  Call     802C9308 ( 00000016 00000000 )
   B8:  Call     802C9308 ( 00000018 00000000 )
   CC:  Set  *Var[0]  00000020 
   DC:  Exec     $Script_8022F7F0 
   E8:  Set  *Var[0]  00000022 
   F8:  Exec     $Script_8022F7F0 
  104:  Set  *Var[0]  00000024 
  114:  Exec     $Script_8022F7F0 
  120:  Return
  128:  End

#new:Script $Script_AfterBattle_8022F9D0
    0:  Return
    8:  End

#new:Stage $Stage_8022F9E0
$ASCII_80232010  % kpa_tex
$ASCII_80232000  % kpa_bt04_shape
$ASCII_80231FF0  % kpa_bt04_hit
$Script_BeforeBattle_8022F8A0 
$Script_AfterBattle_8022F9D0 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022FA08 to 8022FA10 (0069C438 to 0069C440)
00000000 00000000 

#new:Script $Script_8022FA10
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     SetTexPanner 	( *Var[A] 00000001 )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00008000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_BeforeBattle_8022FAC0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 0000000D 00000000 )
   40:  Call     802C9308 ( 00000011 00000000 )
   54:  Call     802C9308 ( 00000010 00000000 )
   68:  Call     802C9308 ( 00000012 00000000 )
   7C:  Call     802C9308 ( 00000014 00000000 )
   90:  Call     802C9308 ( 00000016 00000000 )
   A4:  Call     802C9308 ( 00000018 00000000 )
   B8:  Set  *Var[0]  00000020 
   C8:  Exec     $Script_8022FA10 
   D4:  Set  *Var[0]  00000022 
   E4:  Exec     $Script_8022FA10 
   F0:  Set  *Var[0]  00000024 
  100:  Exec     $Script_8022FA10 
  10C:  Return
  114:  End

#new:Script $Script_AfterBattle_8022FBDC
    0:  Return
    8:  End

#new:Stage $Stage_8022FBEC
$ASCII_80232038  % kpa_tex
$ASCII_80232028  % kpa_bt04_shape
$ASCII_80232018  % kpa_bt04_hit
$Script_BeforeBattle_8022FAC0 
$Script_AfterBattle_8022FBDC 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022FC14 to 8022FC20 (0069C644 to 0069C650)
00000000 00000000 00000000 

#new:Script $Script_8022FC20
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     SetTexPanner 	( *Var[A] 00000001 )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00008000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_BeforeBattle_8022FCD0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 0000001E 00000000 )
   40:  Call     802C9308 ( 00000027 00000000 )
   54:  Call     802C9308 ( 00000026 00000000 )
   68:  Call     802C9308 ( 00000024 00000000 )
   7C:  Call     802C9308 ( 00000022 00000000 )
   90:  Call     802C9308 ( 00000020 00000000 )
   A4:  Set  *Var[0]  00000012 
   B4:  Exec     $Script_8022FC20 
   C0:  Set  *Var[0]  00000014 
   D0:  Exec     $Script_8022FC20 
   DC:  Set  *Var[0]  00000016 
   EC:  Exec     $Script_8022FC20 
   F8:  Set  *Var[0]  00000018 
  108:  Exec     $Script_8022FC20 
  114:  Return
  11C:  End

#new:Script $Script_AfterBattle_8022FDF4
    0:  Return
    8:  End

#new:Stage $Stage_8022FE04
$ASCII_80232060  % kpa_tex
$ASCII_80232050  % kpa_bt04_shape
$ASCII_80232040  % kpa_bt04_hit
$Script_BeforeBattle_8022FCD0 
$Script_AfterBattle_8022FDF4 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022FE2C to 8022FE30 (0069C85C to 0069C860)
00000000 

#new:Script $Script_BeforeBattle_8022FE30
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8022FE6C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022FE7C
00000010 00000000 

#new:Stage $Stage_8022FE84
$ASCII_80232088  % kpa_tex
$ASCII_80232078  % kpa_bt05_shape
$ASCII_80232068  % kpa_bt05_hit
$Script_BeforeBattle_8022FE30 
$Script_AfterBattle_8022FE6C 
00000000 
$ForegroundModelList_8022FE7C 
00000000 
00000000 
00000000 

PADDING: 8022FEAC to 8022FEB0 (0069C8DC to 0069C8E0)
00000000 

#new:Script $Script_8022FEB0
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   8C:  	Add  *Var[0]  *Var[B] 
   9C:  	Add  *Var[1]  *Var[C] 
   AC:  	Wait     00000001 
   B8:  EndLoop
   C0:  Return
   C8:  End

% Origin: HEURISTIC
#new:Script $Script_8022FF80
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

% Origin: HEURISTIC
#new:Script $Script_8023006C
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_BeforeBattle_80230158
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000010 
   3C:  Set  *Var[1]  00000000 
   4C:  Set  *Var[2]  FFFFFF38 
   5C:  Set  *Var[3]  00000000 
   6C:  Exec     $Script_8022FEB0 
   78:  Set  *Var[0]  00000011 
   88:  Set  *Var[1]  00000001 
   98:  Set  *Var[2]  FFFFFF88 
   A8:  Set  *Var[3]  00000000 
   B8:  Exec     $Script_8022FEB0 
   C4:  Set  *Var[0]  00000000 
   D4:  Set  *Var[1]  00000002 
   E4:  Set  *Var[2]  FFFFFF9C 
   F4:  Set  *Var[3]  00000000 
  104:  Exec     $Script_8022FEB0 
  110:  Return
  118:  End

#new:Script $Script_AfterBattle_80230278
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80230288
00000011 00000000 

#new:Stage $Stage_80230290
$ASCII_802320B0  % kpa_tex
$ASCII_802320A0  % kpa_bt07_shape
$ASCII_80232090  % kpa_bt07_hit
$Script_BeforeBattle_80230158 
$Script_AfterBattle_80230278 
00000000 
$ForegroundModelList_80230288 
00000000 
00000000 
00000000 

PADDING: 802302B8 to 802302C0 (0069CCE8 to 0069CCF0)
00000000 00000000 

#new:Script $Script_BeforeBattle_802302C0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_802302FC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8023030C
00000016 00000000 

#new:Stage $Stage_80230314
$ASCII_802320D8  % kpa_tex
$ASCII_802320C8  % kpa_bt08_shape
$ASCII_802320B8  % kpa_bt08_hit
$Script_BeforeBattle_802302C0 
$Script_AfterBattle_802302FC 
00000000 
$ForegroundModelList_8023030C 
00000000 
00000000 
00000000 

PADDING: 8023033C to 80230340 (0069CD6C to 0069CD70)
00000000 

#new:Script $Script_BeforeBattle_80230340
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8023037C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8023038C
0000000C 00000000 

#new:Stage $Stage_80230394
$ASCII_80232100  % kpa_tex
$ASCII_802320F0  % kpa_bt09_shape
$ASCII_802320E0  % kpa_bt09_hit
$Script_BeforeBattle_80230340 
$Script_AfterBattle_8023037C 
00000000 
$ForegroundModelList_8023038C 
00000000 
00000000 
00000000 

PADDING: 802303BC to 802303C0 (0069CDEC to 0069CDF0)
00000000 

#new:Script $Script_BeforeBattle_802303C0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_802303FC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8023040C
0000000A 00000000 

#new:Stage $Stage_80230414
$ASCII_80232128  % kpa_tex
$ASCII_80232118  % kpa_bt11_shape
$ASCII_80232108  % kpa_bt11_hit
$Script_BeforeBattle_802303C0 
$Script_AfterBattle_802303FC 
00000000 
$ForegroundModelList_8023040C 
00000000 
00000000 
00000000 

PADDING: 8023043C to 80230440 (0069CE6C to 0069CE70)
00000000 

% Origin: HEURISTIC
#new:Script $Script_80230440
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     SetTexPanner 	( *Var[A] 00000001 )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00008000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_BeforeBattle_802304F0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8023052C
    0:  Return
    8:  End

#new:Stage $Stage_8023053C
$ASCII_80232150  % kpa_tex
$ASCII_80232140  % kpa_bt13_shape
$ASCII_80232130  % kpa_bt13_hit
$Script_BeforeBattle_802304F0 
$Script_AfterBattle_8023052C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80230564 to 80230570 (0069CF94 to 0069CFA0)
00000000 00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80230570
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     SetTexPanner 	( *Var[A] 00000001 )
   24:  Set  *Var[0]  00000000 
   34:  Set  *Var[1]  00000000 
   44:  Loop     
   50:  	Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
   6C:  	Add  *Var[0]  00008000 
   7C:  	Add  *Var[1]  00000000 
   8C:  	Wait     00000005 
   98:  EndLoop
   A0:  Return
   A8:  End

#new:Script $Script_BeforeBattle_80230620
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8023065C
    0:  Return
    8:  End

#new:Stage $Stage_8023066C
$ASCII_80232178  % kpa_tex
$ASCII_80232168  % kpa_bt14_shape
$ASCII_80232158  % kpa_bt14_hit
$Script_BeforeBattle_80230620 
$Script_AfterBattle_8023065C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80230694 to 802306A0 (0069D0C4 to 0069D0D0)
00000000 00000000 00000000 

#new:Formation $Formation_00
$BonyBeetle 00000001 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$DryBones 00000001 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 
$DryBones 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$Ember 00000001 00000009 00000000 00000000 00000000 00000000 
$Ember 00000002 00000008 00000000 00000000 00000000 00000000 
$Ember 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$BonyBeetle 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_11
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_12
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_13
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_14
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_15
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_16
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_17
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_18
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_19
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1A
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1B
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1C
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$HammerBros 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Vector3D $Vector3D_80231040
5` 0` -20`

#new:Vector3D $Vector3D_8023104C
45` 0` -10`

#new:Vector3D $Vector3D_80231058
85` 0` 0`

#new:Vector3D $Vector3D_80231064
125` 0` 5`

#new:Formation $Formation_1D
$Koopatrol $Vector3D_80231040 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol $Vector3D_8023104C 00000009 00000000 00000000 00000000 00000000 
$Koopatrol $Vector3D_80231058 00000008 00000000 00000000 00000000 00000000 
$Magikoopa $Vector3D_80231064 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1E
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

MISSING: 80231150 to 802311C0 (0069DB80 to 0069DBF0)
802205F0 00000000 0000000A 00000000 00000000 00000000 00000000 8021E678 
00000001 00000009 00000000 00000000 00000000 00000000 80225120 00000002 
00000008 00000000 00000000 00000000 00000000 80225120 00000003 00000007 
00000000 00000000 00000000 00000000 

#new:Formation $Formation_1F
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_20
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_21
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_22
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_23
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_24
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_25
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_26
$Magikoopa 00000001 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_27
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_28
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000005 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_29
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2A
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2B
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2C
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2D
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2E
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2F
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_30
$FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_31
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000005 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_32
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_33
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_34
$FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_35
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_36
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_37
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8023274C 00000002 $Formation_00 $Stage_8022F154 00000000 
$SJIS_8023273C 00000003 $Formation_01 $Stage_8022F154 00000000 
$SJIS_80232724 00000003 $Formation_02 $Stage_8022F154 00000000 % unused
$SJIS_8023270C 00000003 $Formation_03 $Stage_8022F154 00000000 % unused
$SJIS_802326F4 00000003 $Formation_04 $Stage_8022F154 00000000 
$SJIS_802326DC 00000004 $Formation_05 $Stage_8022F154 00000000 % unused
$SJIS_802326B4 00000004 $Formation_06 $Stage_8022F154 00000000 
$SJIS_802326A8 00000002 $Formation_07 $Stage_8022F154 00000000 
$SJIS_8023269C 00000003 $Formation_08 $Stage_8022F154 00000000 % unused
$SJIS_80232690 00000004 $Formation_09 $Stage_8022F154 00000000 % unused
$SJIS_8023267C 00000004 $Formation_0A $Stage_8022F154 00000000 % unused
$SJIS_80232668 00000003 $Formation_0B $Stage_8022F154 00000000 
$SJIS_80232654 00000003 $Formation_0C $Stage_8022F154 00000000 
$SJIS_8023263C 00000003 $Formation_0D $Stage_8022F154 00000000 % unused
$SJIS_80232624 00000004 $Formation_0E $Stage_8022F154 00000000 % unused
$SJIS_80232610 00000002 $Formation_0F $Stage_8022F154 00000000 
$SJIS_802325FC 00000003 $Formation_10 $Stage_8022F154 00000000 % unused
$SJIS_802325E4 00000002 $Formation_11 $Stage_8022F154 00000000 % unused
$SJIS_802325C8 00000003 $Formation_12 $Stage_8022F154 00000000 % unused
$SJIS_802325AC 00000003 $Formation_13 $Stage_8022F154 00000000 
$SJIS_8023257C 00000004 $Formation_14 $Stage_8022F154 00000000 
$SJIS_80232554 00000003 $Formation_15 $Stage_8022F154 00000000 
$SJIS_8023252C 00000004 $Formation_16 $Stage_8022F154 00000000 
$SJIS_80232520 00000001 $Formation_17 $Stage_8022F154 00000000 
$SJIS_80232514 00000002 $Formation_18 $Stage_8022F154 00000000 
$SJIS_80232508 00000003 $Formation_19 $Stage_8022F154 00000000 
$SJIS_802324FC 00000004 $Formation_1A $Stage_8022F154 00000000 
$SJIS_802324E4 00000002 $Formation_1B $Stage_8022F154 00000000 % unused
$SJIS_802324B4 00000004 $Formation_1C $Stage_8022F154 00000000 % unused
$SJIS_8023249C 00000004 $Formation_1D $Stage_8022F154 00000000 
$SJIS_80232484 00000004 $Formation_1E $Stage_8022F154 00000000 % unused
$SJIS_80232470 00000002 $Formation_1F $Stage_8022F154 00000000 
$SJIS_80232458 00000003 $Formation_20 $Stage_8022F154 00000000 
$SJIS_80232440 00000003 $Formation_21 $Stage_8022F154 00000000 
$SJIS_80232420 00000003 $Formation_22 $Stage_8022F154 00000000 % unused
$SJIS_8023240C 00000003 $Formation_23 $Stage_8022F154 00000000 
$SJIS_802323E4 00000004 $Formation_24 $Stage_8022F154 00000000 
$SJIS_802323C0 00000004 $Formation_25 $Stage_8022F154 00000000 % unused
$SJIS_802323B4 00000002 $Formation_26 $Stage_8022F154 00000000 % unused
$SJIS_802323A8 00000003 $Formation_27 $Stage_8022F154 00000000 % unused
$SJIS_80232388 00000003 $Formation_28 $Stage_8022F154 00000000 % unused
$SJIS_80232364 00000004 $Formation_29 $Stage_8022F154 00000000 
$SJIS_8023234C 00000004 $Formation_2A $Stage_8022F154 00000000 % unused
$SJIS_80232338 00000003 $Formation_2B $Stage_8022F154 00000000 
$SJIS_80232318 00000003 $Formation_2C $Stage_8022F154 00000000 
$SJIS_802322F8 00000004 $Formation_2D $Stage_8022F154 00000000 % unused
$SJIS_802322D8 00000003 $Formation_2E $Stage_8022F154 00000000 % unused
$SJIS_802322B4 00000004 $Formation_2F $Stage_8022F154 00000000 
$SJIS_8023229C 00000002 $Formation_30 $Stage_8022F154 00000000 % unused
$SJIS_80232284 00000003 $Formation_31 $Stage_8022F154 00000000 % unused
$SJIS_8023224C 00000004 $Formation_32 $Stage_8022F154 00000000 
$SJIS_8023222C 00000003 $Formation_33 $Stage_8022F154 00000000 
$SJIS_80232208 00000002 $Formation_34 $Stage_8022F154 00000000 % unused
$SJIS_802321E8 00000003 $Formation_35 $Stage_8022F154 00000000 
$SJIS_802321B8 00000003 $Formation_36 $Stage_8022F154 00000000 % unused
$SJIS_80232180 00000004 $Formation_37 $Stage_8022F154 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_802327C4 $Stage_8022F154 
$ASCII_802327BC $Stage_8022F2D8 
$ASCII_802327B4 $Stage_8022F72C 
$ASCII_802327AC $Stage_8022F7C4 
$ASCII_802327A4 $Stage_8022F9E0 
$ASCII_8023279C $Stage_8022FBEC 
$ASCII_80232794 $Stage_8022FE04 
$ASCII_8023278C $Stage_8022FE84 
$ASCII_80232784 $Stage_80230290 
$ASCII_8023277C $Stage_80230314 
$ASCII_80232774 $Stage_80230394 
$ASCII_8023276C $Stage_80230414 
$ASCII_80232764 $Stage_8023053C 
$ASCII_8023275C $Stage_8023066C 
00000000 00000000 

#new:ASCII $ASCII_80231F50
kpa_bt01_hit

#new:ASCII $ASCII_80231F60
kpa_bt01_shape

#new:ASCII $ASCII_80231F70
kpa_tex

#new:ASCII $ASCII_80231F78
kpa_bt01_hit

#new:ASCII $ASCII_80231F88
kpa_bt01_shape

#new:ASCII $ASCII_80231F98
kpa_tex

#new:ASCII $ASCII_80231FA0
kpa_bt02_hit

#new:ASCII $ASCII_80231FB0
kpa_bt02_shape

#new:ASCII $ASCII_80231FC0
kpa_tex

#new:ASCII $ASCII_80231FC8
kpa_bt03_hit

#new:ASCII $ASCII_80231FD8
kpa_bt03_shape

#new:ASCII $ASCII_80231FE8
kpa_tex

#new:ASCII $ASCII_80231FF0
kpa_bt04_hit

#new:ASCII $ASCII_80232000
kpa_bt04_shape

#new:ASCII $ASCII_80232010
kpa_tex

#new:ASCII $ASCII_80232018
kpa_bt04_hit

#new:ASCII $ASCII_80232028
kpa_bt04_shape

#new:ASCII $ASCII_80232038
kpa_tex

#new:ASCII $ASCII_80232040
kpa_bt04_hit

#new:ASCII $ASCII_80232050
kpa_bt04_shape

#new:ASCII $ASCII_80232060
kpa_tex

#new:ASCII $ASCII_80232068
kpa_bt05_hit

#new:ASCII $ASCII_80232078
kpa_bt05_shape

#new:ASCII $ASCII_80232088
kpa_tex

#new:ASCII $ASCII_80232090
kpa_bt07_hit

#new:ASCII $ASCII_802320A0
kpa_bt07_shape

#new:ASCII $ASCII_802320B0
kpa_tex

#new:ASCII $ASCII_802320B8
kpa_bt08_hit

#new:ASCII $ASCII_802320C8
kpa_bt08_shape

#new:ASCII $ASCII_802320D8
kpa_tex

#new:ASCII $ASCII_802320E0
kpa_bt09_hit

#new:ASCII $ASCII_802320F0
kpa_bt09_shape

#new:ASCII $ASCII_80232100
kpa_tex

#new:ASCII $ASCII_80232108
kpa_bt11_hit

#new:ASCII $ASCII_80232118
kpa_bt11_shape

#new:ASCII $ASCII_80232128
kpa_tex

#new:ASCII $ASCII_80232130
kpa_bt13_hit

#new:ASCII $ASCII_80232140
kpa_bt13_shape

#new:ASCII $ASCII_80232150
kpa_tex

#new:ASCII $ASCII_80232158
kpa_bt14_hit

#new:ASCII $ASCII_80232168
kpa_bt14_shape

#new:ASCII $ASCII_80232178
kpa_tex

#new:SJIS $SJIS_80232180
% kuuchuukameku,hanma-burosux2,kuuchuukameku
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 6E839383 7D815B83 75838D83 
58788251 2C82AD82 A482BF82 E382A483 4A838183 62834E00 

#new:SJIS $SJIS_802321B8
% kuuchuukameku,togenoko,kuuchuukameku
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 67835183 6D83522C 82AD82A4 
82BF82E3 82A4834A 83818362 834E0000 

#new:SJIS $SJIS_802321E8
% kuuchuukameku,karonx2
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 4A838D83 93788251 00000000 

#new:SJIS $SJIS_80232208
% kuuchuukameku,hanma-burosu
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 6E839383 7D815B83 75838D83 
58000000 

#new:SJIS $SJIS_8023222C
% kuuchuukameku,togenokox2
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 67835183 6D835278 82510000 

#new:SJIS $SJIS_8023224C
% kuuchuukameku,kameku,kuuchuukameku,kameku
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 4A838183 62834E2C 82AD82A4 
82BF82E3 82A4834A 83818362 834E2C83 4A838183 62834E00 

#new:SJIS $SJIS_80232284
% kuuchuukamekux3
82AD82A4 82BF82E3 82A4834A 83818362 834E7882 52000000 

#new:SJIS $SJIS_8023229C
% kuuchuukamekux2
82AD82A4 82BF82E3 82A4834A 83818362 834E7882 51000000 

#new:SJIS $SJIS_802322B4
% kameku,togenoko,kameku,togenoko
834A8381 8362834E 2C836783 51836D83 522C834A 83818362 834E2C83 67835183 
6D835200 

#new:SJIS $SJIS_802322D8
% kamekux2,kuuchuukameku
834A8381 8362834E 7882512C 82AD82A4 82BF82E3 82A4834A 83818362 834E0000 

#new:SJIS $SJIS_802322F8
% kameku,honemetox2,kameku
834A8381 8362834E 2C837A83 6C838183 62836778 82512C83 4A838183 62834E00 

#new:SJIS $SJIS_80232318
% kameku,honemeto,kameku
834A8381 8362834E 2C837A83 6C838183 6283672C 834A8381 8362834E 00000000 

#new:SJIS $SJIS_80232338
% kamekux2,karon
834A8381 8362834E 7882512C 834A838D 83930000 

#new:SJIS $SJIS_8023234C
% kameku,togenokox3
834A8381 8362834E 2C836783 51836D83 52788252 00000000 

#new:SJIS $SJIS_80232364
% kamekux2,kuuchuukamekux2
834A8381 8362834E 7882512C 82AD82A4 82BF82E3 82A4834A 83818362 834E7882 
51000000 

#new:SJIS $SJIS_80232388
% kameku,kuuchuukamekux2
834A8381 8362834E 2C82AD82 A482BF82 E382A483 4A838183 62834E78 82510000 

#new:SJIS $SJIS_802323A8
% kamekux3
834A8381 8362834E 78825200 

#new:SJIS $SJIS_802323B4
% kamekux2
834A8381 8362834E 78825100 

#new:SJIS $SJIS_802323C0
% togenoko,kameku,togenoko,kameku
83678351 836D8352 2C834A83 81836283 4E2C8367 8351836D 83522C83 4A838183 
62834E00 

#new:SJIS $SJIS_802323E4
% togenokox2,kameku,kuuchuukameku
83678351 836D8352 7882512C 834A8381 8362834E 2C82AD82 A482BF82 E382A483 
4A838183 62834E00 

#new:SJIS $SJIS_8023240C
% togenoko,karonx2
83678351 836D8352 2C834A83 8D839378 82510000 

#new:SJIS $SJIS_80232420
% togenoko,honemeto,togenoko
83678351 836D8352 2C837A83 6C838183 6283672C 83678351 836D8352 00000000 

#new:SJIS $SJIS_80232440
% togenoko,honemetox2
83678351 836D8352 2C837A83 6C838183 62836778 82510000 

#new:SJIS $SJIS_80232458
% togenokox2,honemeto
83678351 836D8352 7882512C 837A836C 83818362 83670000 

#new:SJIS $SJIS_80232470
% togenoko,honemeto
83678351 836D8352 2C837A83 6C838183 62836700 

#new:SJIS $SJIS_80232484
% togenokox2,kamekux2
83678351 836D8352 7882512C 834A8381 8362834E 78825100 

#new:SJIS $SJIS_8023249C
% togenokox3,kameku
83678351 836D8352 7882522C 834A8381 8362834E 00000000 

#new:SJIS $SJIS_802324B4
% togenoko,hanma-burosu,togenoko,hanma-burosu
83678351 836D8352 2C836E83 93837D81 5B837583 8D83582C 83678351 836D8352 
2C836E83 93837D81 5B837583 8D835800 

#new:SJIS $SJIS_802324E4
% togenoko,hanma-burosu
83678351 836D8352 2C836E83 93837D81 5B837583 8D835800 

#new:SJIS $SJIS_802324FC
% togenokox4
83678351 836D8352 78825300 

#new:SJIS $SJIS_80232508
% togenokox3
83678351 836D8352 78825200 

#new:SJIS $SJIS_80232514
% togenokox2
83678351 836D8352 78825100 

#new:SJIS $SJIS_80232520
% togenoko
83678351 836D8352 00000000 

#new:SJIS $SJIS_8023252C
% hanma-burosux3,kuuchuukameku
836E8393 837D815B 8375838D 83587882 522C82AD 82A482BF 82E382A4 834A8381 
8362834E 00000000 

#new:SJIS $SJIS_80232554
% hanma-burosux2,kuuchuukameku
836E8393 837D815B 8375838D 83587882 512C82AD 82A482BF 82E382A4 834A8381 
8362834E 00000000 

#new:SJIS $SJIS_8023257C
% hanma-burosu,karon,hannma-burosu,kameku
836E8393 837D815B 8375838D 83582C83 4A838D83 932C836E 83938393 837D815B 
8375838D 83582C83 4A838183 62834E00 

#new:SJIS $SJIS_802325AC
% hanma-burosu,togenokox2
836E8393 837D815B 8375838D 83582C83 67835183 6D835278 82510000 

#new:SJIS $SJIS_802325C8
% hanma-burosux2,togenoko
836E8393 837D815B 8375838D 83587882 512C8367 8351836D 83520000 

#new:SJIS $SJIS_802325E4
% hanma-burosu,togenoko
836E8393 837D815B 8375838D 83582C83 67835183 6D835200 

#new:SJIS $SJIS_802325FC
% hanma-burosux3
836E8393 837D815B 8375838D 83587882 52000000 

#new:SJIS $SJIS_80232610
% hanma-burosux2
836E8393 837D815B 8375838D 83587882 51000000 

#new:SJIS $SJIS_80232624
% karonx2,honemetox2
834A838D 83937882 512C837A 836C8381 83628367 78825100 

#new:SJIS $SJIS_8023263C
% karonx2,honemeto
834A838D 83937882 512C837A 836C8381 83628367 00000000 

#new:SJIS $SJIS_80232654
% karon,togenokox2
834A838D 83932C83 67835183 6D835278 82510000 

#new:SJIS $SJIS_80232668
% karonx2,kameku
834A838D 83937882 512C834A 83818362 834E0000 

#new:SJIS $SJIS_8023267C
% karon,erumosux3
834A838D 83932C83 47838B83 82835878 82520000 

#new:SJIS $SJIS_80232690
% karonx4
834A838D 83937882 53000000 

#new:SJIS $SJIS_8023269C
% karonx3
834A838D 83937882 52000000 

#new:SJIS $SJIS_802326A8
% karonx2
834A838D 83937882 51000000 

#new:SJIS $SJIS_802326B4
% honemeto,karon,honemeto,kameku
837A836C 83818362 83672C83 4A838D83 932C837A 836C8381 83628367 2C834A83 
81836283 4E000000 

#new:SJIS $SJIS_802326DC
% honemetox3,kameku
837A836C 83818362 83677882 522C834A 83818362 834E0000 

#new:SJIS $SJIS_802326F4
% honemetox2,kameku
837A836C 83818362 83677882 512C834A 83818362 834E0000 

#new:SJIS $SJIS_8023270C
% honemetox2,karon
837A836C 83818362 83677882 512C834A 838D8393 00000000 

#new:SJIS $SJIS_80232724
% honemeto,karonx2
837A836C 83818362 83672C83 4A838D83 93788251 00000000 

#new:SJIS $SJIS_8023273C
% honemetox3
837A836C 83818362 83677882 52000000 

#new:SJIS $SJIS_8023274C
% honemetox2
837A836C 83818362 83677882 51000000 

#new:ASCII $ASCII_8023275C
kpa_14

#new:ASCII $ASCII_80232764
kpa_13

#new:ASCII $ASCII_8023276C
kpa_11

#new:ASCII $ASCII_80232774
kpa_09

#new:ASCII $ASCII_8023277C
kpa_08

#new:ASCII $ASCII_80232784
kpa_07

#new:ASCII $ASCII_8023278C
kpa_05

#new:ASCII $ASCII_80232794
kpa_04c

#new:ASCII $ASCII_8023279C
kpa_04b

#new:ASCII $ASCII_802327A4
kpa_04

#new:ASCII $ASCII_802327AC
kpa_03

#new:ASCII $ASCII_802327B4
kpa_02

#new:ASCII $ASCII_802327BC
kpa_01b

#new:ASCII $ASCII_802327C4
kpa_01

PADDING: 802327CC to 802327D0 (0069F1FC to 0069F200)
00000000 

