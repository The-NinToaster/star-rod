% Script File: 1F Area PRA.bscr
% Decoded from: 648E10 to 660750 (1F Area PRA)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_802180CC
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

#new:Function $Function_80218180
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

PADDING: 80218234 to 80218240 (00649044 to 00649050)
00000000 00000000 00000000 

% Origin: HEURISTIC
#new:Function $Function_80218240
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  SDC1      F22, 28 (SP)
   1C:  SDC1      F20, 20 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  DADDU     A0, S1, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S2, V0, R0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  MTC1      V0, F22
   50:  NOP
   54:  CVT.S.W   F22, F22
   58:  JAL       {Func:GetVariable}
   5C:  DADDU     A0, S1, R0
   60:  LW        A1, 0 (S0)
   64:  MTC1      V0, F20
   68:  NOP
   6C:  CVT.S.W   F20, F20
   70:  JAL       {Func:GetVariable}
   74:  DADDU     A0, S1, R0
   78:  LW        V1, C (S2)
   7C:  SWC1      F22, 38 (V1)
   80:  LW        V1, C (S2)
   84:  SWC1      F20, 3C (V1)
   88:  LW        V1, C (S2)
   8C:  MTC1      V0, F0
   90:  NOP
   94:  CVT.S.W   F0, F0
   98:  SWC1      F0, 40 (V1)
   9C:  LW        RA, 1C (SP)
   A0:  LW        S2, 18 (SP)
   A4:  LW        S1, 14 (SP)
   A8:  LW        S0, 10 (SP)
   AC:  LDC1      F22, 28 (SP)
   B0:  LDC1      F20, 20 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_80218300
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

% Origin: HINT
#new:Function $Function_80218458
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_80218484
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

% Origin: HINT
#new:Function $Function_80218550
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_802185A8
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 8021866C to 80218670 (0064947C to 00649480)
00000000 

#new:Function $Function_80218670
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

% Origin: HINT
#new:Function $Function_802187C8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_802187F4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

% Origin: HINT
#new:Function $Function_802188C0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218918
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 802189DC to 802189E0 (006497EC to 006497F0)
00000000 

#new:Function $Function_802189E0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

#new:Function $Function_80218B38
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_80218B64
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218C30
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218C88
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 80218D4C to 80218D50 (00649B5C to 00649B60)
00000000 

#new:Function $Function_80218D50
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

% Origin: HINT
#new:Function $Function_80218EA8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_80218ED4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

% Origin: HINT
#new:Function $Function_80218FA0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218FF8
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 802190BC to 802190C0 (00649ECC to 00649ED0)
00000000 

#new:Function $Function_802190C0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

#new:Function $Function_80219218
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_80219244
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80219310
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80219368
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

#new:Function $Function_8021942C
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S2, 18 (SP)
   10:  LIA       S2, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 0 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:SetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 1 (S2)
   3C:  JAL       {Func:SetVariable}
   40:  DADDU     A0, S1, R0
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  ADDIU     V0, R0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20

#new:Function $Function_8021948C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S3, 1C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S1, 14 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S3)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  DADDU     S1, V0, R0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     A0, S3, R0
   40:  DADDU     S2, V0, R0
   44:  ADDIU     V0, R0, FF81
   48:  BNE       S1, V0, .o54
   4C:  NOP
   50:  LW        S1, 148 (S3)
        .o54
   54:  JAL       {Func:GetActor}
   58:  DADDU     A0, S1, R0
   5C:  DADDU     A0, V0, R0
   60:  JAL       {Func:GetSprite}
   64:  DADDU     A1, S2, R0
   68:  LW        A0, 78 (V0)
   6C:  JAL       80265E44
   70:  ADDIU     A1, R0, 1
   74:  DADDU     A0, S3, R0
   78:  LW        A1, 0 (S0)
   7C:  JAL       {Func:SetVariable}
   80:  DADDU     A2, V0, R0
   84:  LW        RA, 20 (SP)
   88:  LW        S3, 1C (SP)
   8C:  LW        S2, 18 (SP)
   90:  LW        S1, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  ADDIU     V0, R0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28

#new:DefenseTable $DefenseTable_80219530
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021953C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   80`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802195E8
00800000 01000000 001D00FF $IdleAnimations_80219634 $DefenseTable_80219530 00000000 00000000 010F0000 00000000 

#new:Actor $Swoopula
% stats
[Index]        3Ab 
[Level]        22`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_8021953C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802195E8 
[Script]      $Script_Init_802196CC 
% move effectiveness
[Escape]       30`b 
[Item]         70`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         31`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b -20`b % dx dy
[StatusIcon]   10`b -20`b % dx dy

#new:IdleAnimations $IdleAnimations_80219634
.Status:Normal    0034010C
.Status:Stone     0034010B
.Status:Sleep     0034010F
.Status:Poison    0034010C
.Status:Stop      0034010B
.Status:Static    0034010C
.Status:Paralyze  0034010B
.Status:Dizzy     00340110
.Status:Fear      00340110
.Status:End

#new:IdleAnimations $IdleAnimations_80219680
.Status:Normal    00340102
.Status:Stone     00340101
.Status:Sleep     00340113
.Status:Poison    00340102
.Status:Stop      00340101
.Status:Static    00340102
.Status:Paralyze  00340101
.Status:Dizzy     00340114
.Status:Fear      00340114
.Status:End

#new:Script $Script_Init_802196CC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021C484 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80219730 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A0E4 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_80219730
    0:  Return
    8:  End

#new:Script $Script_80219740
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   48:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   5C:  		Call     SetGoalToHome 	( .Actor:Self )
   6C:  		Call     AddToGoalPos 	( .Actor:Self 00000000 FFFFFFE8 00000000 )
   88:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   A4:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .True )
   BC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219634 )
   D4:  		Call     SetAnimation 	( .Actor:Self 00000001 0034010C )
   EC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  108:  		Add  *Var[1]  00000018 
  118:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  134:  		Call     HPBarToHome 	( .Actor:Self )
  144:  	Case  ==  00000001 
  150:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  168:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  17C:  		Call     SetGoalToHome 	( .Actor:Self )
  18C:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
  1A8:  EndSwitch
  1B0:  Return
  1B8:  End

#new:Script $Script_80219900
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00340115 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00340117 
   C0:  		SetConst  *Var[2]  00340118 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00340117 
  108:  		SetConst  *Var[2]  00340118 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00340118 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:ShockHit
  164:  		Call     80269470 ( )
  170:  		SetConst  *Var[0]  00000001 
  180:  		SetConst  *Var[1]  00340115 
  190:  		ExecWait DoShockHit 
  19C:  		Call     UseCamPreset 	( 00000002 )
  1AC:  		ExecWait $Script_80219740 
  1B8:  	Case  ==  .Event:ShockDeath
  1C4:  		Call     80269470 ( )
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  00340115 
  1F0:  		ExecWait DoShockHit 
  1FC:  		Thread
  204:  			Wait     0000001E 
  210:  			Call     UseCamPreset 	( 00000002 )
  220:  		EndThread
  228:  		SetConst  *Var[0]  00000001 
  238:  		SetConst  *Var[1]  00340115 
  248:  		ExecWait DoDeath 
  254:  		Return
  25C:  	CaseOR  ==  00000017
  268:  	CaseOR  ==  .Event:Immune
  274:  	CaseOR  ==  .Event:AirLiftFailed
  280:  		SetConst  *Var[0]  00000001 
  290:  		SetConst  *Var[1]  00340102 
  2A0:  		ExecWait DoImmune 
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death
  2C0:  		SetConst  *Var[0]  00000001 
  2D0:  		SetConst  *Var[1]  00340115 
  2E0:  		ExecWait DoNormalHit 
  2EC:  		Wait     0000000A 
  2F8:  		SetConst  *Var[0]  00000001 
  308:  		SetConst  *Var[1]  00340115 
  318:  		ExecWait DoDeath 
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus
  338:  		SetConst  *Var[0]  00000001 
  348:  		SetConst  *Var[1]  00340102 
  358:  		ExecWait DoRecover 
  364:  	Case  ==  .Event:ScareAway
  370:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  388:  		SetConst  *Var[0]  00000001 
  398:  		SetConst  *Var[1]  00340102 
  3A8:  		SetConst  *Var[2]  00340115 
  3B8:  		ExecWait DoScareAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00340102 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		SetConst  *Var[0]  00000001 
  420:  		SetConst  *Var[1]  00340115 
  430:  		ExecWait DoBlowAway 
  43C:  		Return
  444:  EndSwitch
  44C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  Return
  47C:  End

#new:Script $Script_80219D84
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     GetLastDamage 	( .Actor:Self *Var[0] )
   24:  If  *Var[0]  <=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
   5C:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   74:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
   90:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   AC:  Sub  *Var[1]  00000018 
   BC:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D8:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   F0:  If  *Var[A]  ==  FFFFFFFF 
  100:  	Call     SetHomePos  	( .Actor:Self *Var[0] 0000002D *Var[2] )
  11C:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  130:  	Call     SetGoalToHome 	( .Actor:Self )
  140:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  160:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  180:  Else
  188:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  19C:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] 0000002D *Var[2] )
  1B8:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  1D8:  	Call     GetIndexFromPos 	( .Actor:Self *Var[A] )
  1EC:  	Mod  *Var[A]  00000004 
  1FC:  	Add  *Var[A]  00000004 
  20C:  	Call     SetGoalToIndex ( .Actor:Self *Var[A] )
  220:  	Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  23C:  	Call     SetHomePos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  258:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  26C:  	Call     SetGoalToHome 	( .Actor:Self )
  27C:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  29C:  EndIf
  2A4:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  2C0:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000016 )
  2DC:  Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
  2F8:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219680 )
  310:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  328:  Call     HPBarToHome 	( .Actor:Self )
  338:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  350:  Return
  358:  End

#new:Script $Script_HandleEvent_8021A0E4
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_80219900 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   6C:  Call     GetEventType 	( .Actor:Self *Var[0] )
   80:  Switch  *Var[0] 
   8C:  	Case  ==  .Event:HitCombo
   98:  		Call     GetBattlePhase ( *Var[0] )
   A8:  		If  *Var[0]  ==  .Phase:FirstStrike
   B8:  			SetConst  *Var[0]  00000001 
   C8:  			SetConst  *Var[1]  00340115 
   D8:  			ExecWait DoNormalHit 
   E4:  		Else
   EC:  			SetConst  *Var[0]  00000001 
   FC:  			SetConst  *Var[1]  0034010E 
  10C:  			ExecWait DoNormalHit 
  118:  		EndIf
  120:  	Case  ==  .Event:Hit
  12C:  		Call     GetBattlePhase ( *Var[0] )
  13C:  		If  *Var[0]  ==  .Phase:FirstStrike
  14C:  			SetConst  *Var[0]  00000001 
  15C:  			SetConst  *Var[1]  00340115 
  16C:  			ExecWait DoNormalHit 
  178:  		Else
  180:  			SetConst  *Var[0]  00000001 
  190:  			SetConst  *Var[1]  0034010E 
  1A0:  			ExecWait DoNormalHit 
  1AC:  			ExecWait $Script_80219D84 
  1B8:  		EndIf
  1C0:  	Case  ==  .Event:BurnHit
  1CC:  		Call     GetBattlePhase ( *Var[0] )
  1DC:  		If  *Var[0]  ==  .Phase:FirstStrike
  1EC:  			SetConst  *Var[0]  00000001 
  1FC:  			SetConst  *Var[1]  00340117 
  20C:  			SetConst  *Var[2]  00340118 
  21C:  			ExecWait DoBurnHit 
  228:  		Else
  230:  			SetConst  *Var[0]  00000001 
  240:  			SetConst  *Var[1]  00340111 
  250:  			SetConst  *Var[2]  00340112 
  260:  			ExecWait DoBurnHit 
  26C:  			ExecWait $Script_80219D84 
  278:  		EndIf
  280:  	Case  ==  .Event:BurnDeath
  28C:  		Call     GetBattlePhase ( *Var[0] )
  29C:  		If  *Var[0]  ==  .Phase:FirstStrike
  2AC:  			SetConst  *Var[0]  00000001 
  2BC:  			SetConst  *Var[1]  00340117 
  2CC:  			SetConst  *Var[2]  00340118 
  2DC:  			ExecWait DoBurnHit 
  2E8:  			SetConst  *Var[0]  00000001 
  2F8:  			SetConst  *Var[1]  00340118 
  308:  			ExecWait DoDeath 
  314:  		Else
  31C:  			SetConst  *Var[0]  00000001 
  32C:  			SetConst  *Var[1]  00340111 
  33C:  			SetConst  *Var[2]  00340112 
  34C:  			ExecWait DoBurnHit 
  358:  			SetConst  *Var[0]  00000001 
  368:  			SetConst  *Var[1]  00340112 
  378:  			ExecWait DoDeath 
  384:  		EndIf
  38C:  		Return
  394:  	Case  ==  .Event:ShockHit
  3A0:  		Call     80269470 ( )
  3AC:  		SetConst  *Var[0]  00000001 
  3BC:  		SetConst  *Var[1]  00340115 
  3CC:  		ExecWait 8029A76C 
  3D8:  		Call     UseCamPreset 	( 00000002 )
  3E8:  		ExecWait $Script_80219740 
  3F4:  	Case  ==  .Event:ShockDeath
  400:  		Call     80269470 ( )
  40C:  		SetConst  *Var[0]  00000001 
  41C:  		SetConst  *Var[1]  00340115 
  42C:  		ExecWait 8029A76C 
  438:  		Thread
  440:  			Wait     0000001E 
  44C:  			Call     UseCamPreset 	( 00000002 )
  45C:  		EndThread
  464:  		SetConst  *Var[0]  00000001 
  474:  		SetConst  *Var[1]  00340115 
  484:  		ExecWait DoDeath 
  490:  		Return
  498:  	CaseOR  ==  00000017
  4A4:  	CaseOR  ==  .Event:Immune
  4B0:  		SetConst  *Var[0]  00000001 
  4C0:  		SetConst  *Var[1]  0034010C 
  4D0:  		ExecWait DoImmune 
  4DC:  	EndCaseGroup
  4E4:  	Case  ==  .Event:Death
  4F0:  		Call     GetBattlePhase ( *Var[0] )
  500:  		If  *Var[0]  ==  .Phase:FirstStrike
  510:  			SetConst  *Var[0]  00000001 
  520:  			SetConst  *Var[1]  00340115 
  530:  			ExecWait DoNormalHit 
  53C:  			Wait     0000000A 
  548:  			SetConst  *Var[0]  00000001 
  558:  			SetConst  *Var[1]  00340115 
  568:  			ExecWait DoDeath 
  574:  		Else
  57C:  			SetConst  *Var[0]  00000001 
  58C:  			SetConst  *Var[1]  0034010E 
  59C:  			ExecWait DoNormalHit 
  5A8:  			Wait     0000000A 
  5B4:  			SetConst  *Var[0]  00000001 
  5C4:  			SetConst  *Var[1]  0034010E 
  5D4:  			ExecWait DoDeath 
  5E0:  		EndIf
  5E8:  		Return
  5F0:  	Case  ==  .Event:BeginFirstStrike
  5FC:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  614:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219680 )
  62C:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  644:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  660:  		Call     HPBarToCurrent ( .Actor:Self )
  670:  	Case  ==  .Event:EndFirstStrike
  67C:  		ExecWait $Script_80219740 
  688:  		Call     HPBarToHome 	( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus
  6A4:  	Case  ==  .Event:ScareAway
  6B0:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  6C8:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  6E0:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFE8 00000000 )
  6FC:  		SetConst  *Var[0]  00000001 
  70C:  		SetConst  *Var[1]  00340102 
  71C:  		SetConst  *Var[2]  00340115 
  72C:  		ExecWait DoScareAway 
  738:  		Return
  740:  EndSwitch
  748:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  75C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  770:  Return
  778:  End

#new:Script $Script_8021A864
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   74:  	Call     SetGoalToTarget 	( .Actor:Self )
   84:  	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
   A0:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   B4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D0:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Else
   F4:  	Call     UseCamPreset 	( 0000003F )
  104:  	Call     CamTargetActor ( .Actor:Self )
  114:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  12C:  	Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  144:  	Call     SetGoalToTarget 	( .Actor:Self )
  154:  	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  170:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  184:  	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
  1A0:  EndIf
  1A8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000002 00000010 )
  1CC:  Switch  *Var[0] 
  1D8:  	CaseOR  ==  00000006 
  1E4:  	CaseOR  ==  00000005 
  1F0:  		Set  *Var[A]  *Var[0] 
  200:  		Wait     0000000A 
  20C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  220:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  234:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  24C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  268:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  284:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  2A4:  		Call     SetGoalToTarget 	( .Actor:Self )
  2B4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  		Sub  *Var[0]  00000032 
  2E0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  328:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  344:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
  35C:  		Wait     0000000F 
  368:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  380:  		If  *Var[A]  ==  00000005 
  390:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3B4:  		EndIf
  3BC:  		Call     8027D7F0 ( )
  3C8:  		Call     UseCamPreset 	( 00000002 )
  3D8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3EC:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  408:  		ExecWait $Script_80219740 
  414:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  42C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  440:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  454:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  	Case  ==  00000007 
  484:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  498:  		If  *Var[0]  &  00002000 
  4A8:  			Set  *Flag[00]  00000000 
  4B8:  		Else
  4C0:  			Set  *Flag[00]  00000001 
  4D0:  		EndIf
  4D8:  EndSwitch
  4E0:  Wait     0000000A 
  4EC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  500:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  514:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  52C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  548:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  564:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  584:  Call     SetGoalToTarget 	( .Actor:Self )
  594:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFC FFFFFFF8 FFFFFFF1 )
  5B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5C4:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  5DC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  5F8:  If  *Flag[00]  ==  00000001 
  608:  	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
  630:  	Return
  638:  EndIf
  640:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  654:  If  *Var[0]  &  00100000 
  664:  	Wait     0000000A 
  670:  	Loop     00000002 
  67C:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  694:  		Wait     00000015 
  6A0:  		Loop     00000002 
  6AC:  			Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  6C0:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6DC:  			Wait     00000001 
  6E8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  704:  			Wait     00000001 
  710:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  72C:  			Wait     00000001 
  738:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  754:  			Wait     00000001 
  760:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  77C:  			Wait     00000001 
  788:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  7A4:  			Wait     00000001 
  7B0:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  7CC:  			Wait     00000001 
  7D8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  7F4:  			Wait     00000001 
  800:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  81C:  			Wait     00000001 
  828:  		EndLoop
  830:  		Wait     00000005 
  83C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  858:  		Wait     00000001 
  864:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  880:  		Wait     00000001 
  88C:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  8A8:  		Wait     00000001 
  8B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  8D0:  		Wait     00000001 
  8DC:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  8F8:  		Wait     00000002 
  904:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  920:  		Wait     0000000A 
  92C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  948:  		Wait     00000002 
  954:  		Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000002 00000040 )
  97C:  		Wait     0000001E 
  988:  	EndLoop
  990:  Else
  998:  	Call     ShowMessageBox ( 00000031 00007FFF )
  9AC:  	Call     802694A4 ( 00000001 )
  9BC:  	Call     LoadActionCommand 	( 00000006 )
  9CC:  	Call     802A9000 ( )
  9D8:  	Call     802691C8 ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  9FC:  	Wait     0000000A 
  A08:  	Call     SetBattleFlagBits 	( 00004000 .False )
  A1C:  	Call     802A9110 ( 00000000 00007FFF 00000003 )
  A34:  	Set  *Var[D]  00000000 
  A44:  	Loop     00000005 
  A50:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  A68:  		Set  *Flag[00]  00000000 
  A78:  		Loop     00000015 
  A84:  			Call     802694F8 ( *Var[1] )
  A94:  			If  *Var[1]  ==  00000001 
  AA4:  				Set  *Flag[00]  00000001 
  AB4:  				BreakLoop
  ABC:  			EndIf
  AC4:  			Wait     00000001 
  AD0:  		EndLoop
  AD8:  		If  *Flag[00]  ==  00000001 
  AE8:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  AFC:  			BreakLoop
  B04:  		EndIf
  B0C:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  B20:  		Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  B38:  		Loop     00000002 
  B44:  			Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  B58:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  B74:  			Set  *Flag[00]  00000000 
  B84:  			Loop     00000001 
  B90:  				Call     802694F8 ( *Var[1] )
  BA0:  				If  *Var[1]  ==  00000001 
  BB0:  					Set  *Flag[00]  00000001 
  BC0:  					BreakLoop
  BC8:  				EndIf
  BD0:  				Wait     00000001 
  BDC:  			EndLoop
  BE4:  			If  *Flag[00]  ==  00000001 
  BF4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  C08:  				BreakLoop
  C10:  			EndIf
  C18:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  C34:  			Set  *Flag[00]  00000000 
  C44:  			Loop     00000001 
  C50:  				Call     802694F8 ( *Var[1] )
  C60:  				If  *Var[1]  ==  00000001 
  C70:  					Set  *Flag[00]  00000001 
  C80:  					BreakLoop
  C88:  				EndIf
  C90:  				Wait     00000001 
  C9C:  			EndLoop
  CA4:  			If  *Flag[00]  ==  00000001 
  CB4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  CC8:  				BreakLoop
  CD0:  			EndIf
  CD8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  CF4:  			Set  *Flag[00]  00000000 
  D04:  			Loop     00000001 
  D10:  				Call     802694F8 ( *Var[1] )
  D20:  				If  *Var[1]  ==  00000001 
  D30:  					Set  *Flag[00]  00000001 
  D40:  					BreakLoop
  D48:  				EndIf
  D50:  				Wait     00000001 
  D5C:  			EndLoop
  D64:  			If  *Flag[00]  ==  00000001 
  D74:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  D88:  				BreakLoop
  D90:  			EndIf
  D98:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  DB4:  			Set  *Flag[00]  00000000 
  DC4:  			Loop     00000001 
  DD0:  				Call     802694F8 ( *Var[1] )
  DE0:  				If  *Var[1]  ==  00000001 
  DF0:  					Set  *Flag[00]  00000001 
  E00:  					BreakLoop
  E08:  				EndIf
  E10:  				Wait     00000001 
  E1C:  			EndLoop
  E24:  			If  *Flag[00]  ==  00000001 
  E34:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  E48:  				BreakLoop
  E50:  			EndIf
  E58:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  E74:  			Set  *Flag[00]  00000000 
  E84:  			Loop     00000001 
  E90:  				Call     802694F8 ( *Var[1] )
  EA0:  				If  *Var[1]  ==  00000001 
  EB0:  					Set  *Flag[00]  00000001 
  EC0:  					BreakLoop
  EC8:  				EndIf
  ED0:  				Wait     00000001 
  EDC:  			EndLoop
  EE4:  			If  *Flag[00]  ==  00000001 
  EF4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  F08:  				BreakLoop
  F10:  			EndIf
  F18:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  F34:  			Set  *Flag[00]  00000000 
  F44:  			Loop     00000001 
  F50:  				Call     802694F8 ( *Var[1] )
  F60:  				If  *Var[1]  ==  00000001 
  F70:  					Set  *Flag[00]  00000001 
  F80:  					BreakLoop
  F88:  				EndIf
  F90:  				Wait     00000001 
  F9C:  			EndLoop
  FA4:  			If  *Flag[00]  ==  00000001 
  FB4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  FC8:  				BreakLoop
  FD0:  			EndIf
  FD8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  FF4:  			Set  *Flag[00]  00000000 
 1004:  			Loop     00000001 
 1010:  				Call     802694F8 ( *Var[1] )
 1020:  				If  *Var[1]  ==  00000001 
 1030:  					Set  *Flag[00]  00000001 
 1040:  					BreakLoop
 1048:  				EndIf
 1050:  				Wait     00000001 
 105C:  			EndLoop
 1064:  			If  *Flag[00]  ==  00000001 
 1074:  				Call     UseIdleAnimation 	( .Actor:Player .True )
 1088:  				BreakLoop
 1090:  			EndIf
 1098:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
 10B4:  			Set  *Flag[00]  00000000 
 10C4:  			Loop     00000001 
 10D0:  				Call     802694F8 ( *Var[1] )
 10E0:  				If  *Var[1]  ==  00000001 
 10F0:  					Set  *Flag[00]  00000001 
 1100:  					BreakLoop
 1108:  				EndIf
 1110:  				Wait     00000001 
 111C:  			EndLoop
 1124:  			If  *Flag[00]  ==  00000001 
 1134:  				Call     UseIdleAnimation 	( .Actor:Player .True )
 1148:  				BreakLoop
 1150:  			EndIf
 1158:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1174:  			Set  *Flag[00]  00000000 
 1184:  			Loop     00000001 
 1190:  				Call     802694F8 ( *Var[1] )
 11A0:  				If  *Var[1]  ==  00000001 
 11B0:  					Set  *Flag[00]  00000001 
 11C0:  					BreakLoop
 11C8:  				EndIf
 11D0:  				Wait     00000001 
 11DC:  			EndLoop
 11E4:  			If  *Flag[00]  ==  00000001 
 11F4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
 1208:  				BreakLoop
 1210:  			EndIf
 1218:  		EndLoop
 1220:  		If  *Flag[00]  ==  00000001 
 1230:  			BreakLoop
 1238:  		EndIf
 1240:  		Set  *Flag[00]  00000000 
 1250:  		Loop     00000005 
 125C:  			Call     802694F8 ( *Var[1] )
 126C:  			If  *Var[1]  ==  00000001 
 127C:  				Set  *Flag[00]  00000001 
 128C:  				BreakLoop
 1294:  			EndIf
 129C:  			Wait     00000001 
 12A8:  		EndLoop
 12B0:  		If  *Flag[00]  ==  00000001 
 12C0:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 12D4:  			BreakLoop
 12DC:  		EndIf
 12E4:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
 12F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1314:  		Set  *Flag[00]  00000000 
 1324:  		Loop     00000001 
 1330:  			Call     802694F8 ( *Var[1] )
 1340:  			If  *Var[1]  ==  00000001 
 1350:  				Set  *Flag[00]  00000001 
 1360:  				BreakLoop
 1368:  			EndIf
 1370:  			Wait     00000001 
 137C:  		EndLoop
 1384:  		If  *Flag[00]  ==  00000001 
 1394:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 13A8:  			BreakLoop
 13B0:  		EndIf
 13B8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
 13D4:  		Set  *Flag[00]  00000000 
 13E4:  		Loop     00000001 
 13F0:  			Call     802694F8 ( *Var[1] )
 1400:  			If  *Var[1]  ==  00000001 
 1410:  				Set  *Flag[00]  00000001 
 1420:  				BreakLoop
 1428:  			EndIf
 1430:  			Wait     00000001 
 143C:  		EndLoop
 1444:  		If  *Flag[00]  ==  00000001 
 1454:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1468:  			BreakLoop
 1470:  		EndIf
 1478:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
 1494:  		Set  *Flag[00]  00000000 
 14A4:  		Loop     00000001 
 14B0:  			Call     802694F8 ( *Var[1] )
 14C0:  			If  *Var[1]  ==  00000001 
 14D0:  				Set  *Flag[00]  00000001 
 14E0:  				BreakLoop
 14E8:  			EndIf
 14F0:  			Wait     00000001 
 14FC:  		EndLoop
 1504:  		If  *Flag[00]  ==  00000001 
 1514:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1528:  			BreakLoop
 1530:  		EndIf
 1538:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
 1554:  		Set  *Flag[00]  00000000 
 1564:  		Loop     00000001 
 1570:  			Call     802694F8 ( *Var[1] )
 1580:  			If  *Var[1]  ==  00000001 
 1590:  				Set  *Flag[00]  00000001 
 15A0:  				BreakLoop
 15A8:  			EndIf
 15B0:  			Wait     00000001 
 15BC:  		EndLoop
 15C4:  		If  *Flag[00]  ==  00000001 
 15D4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 15E8:  			BreakLoop
 15F0:  		EndIf
 15F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
 1614:  		Set  *Flag[00]  00000000 
 1624:  		Loop     00000002 
 1630:  			Call     802694F8 ( *Var[1] )
 1640:  			If  *Var[1]  ==  00000001 
 1650:  				Set  *Flag[00]  00000001 
 1660:  				BreakLoop
 1668:  			EndIf
 1670:  			Wait     00000001 
 167C:  		EndLoop
 1684:  		If  *Flag[00]  ==  00000001 
 1694:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 16A8:  			BreakLoop
 16B0:  		EndIf
 16B8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
 16D4:  		Set  *Flag[00]  00000000 
 16E4:  		Loop     0000000A 
 16F0:  			Call     802694F8 ( *Var[1] )
 1700:  			If  *Var[1]  ==  00000001 
 1710:  				Set  *Flag[00]  00000001 
 1720:  				BreakLoop
 1728:  			EndIf
 1730:  			Wait     00000001 
 173C:  		EndLoop
 1744:  		If  *Flag[00]  ==  00000001 
 1754:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1768:  			BreakLoop
 1770:  		EndIf
 1778:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1794:  		Set  *Flag[00]  00000000 
 17A4:  		Loop     00000002 
 17B0:  			Call     802694F8 ( *Var[1] )
 17C0:  			If  *Var[1]  ==  00000001 
 17D0:  				Set  *Flag[00]  00000001 
 17E0:  				BreakLoop
 17E8:  			EndIf
 17F0:  			Wait     00000001 
 17FC:  		EndLoop
 1804:  		If  *Flag[00]  ==  00000001 
 1814:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1828:  			BreakLoop
 1830:  		EndIf
 1838:  		Call     UseIdleAnimation 	( .Actor:Player .True )
 184C:  		Call     DamageTarget 	( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
 1874:  		Call     GetLastDamage 	( .Actor:Player *Var[3] )
 1888:  		If  *Var[3]  !=  00000000 
 1898:  			Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
 18AC:  			Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
 18C0:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 18DC:  			Add  *Var[1]  0000000F 
 18EC:  			Call     $Function_802180CC ( *Var[0] *Var[1] *Var[2] *Var[3] )
 1908:  			Thread
 1910:  				Wait     0000000F 
 191C:  				Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
 1930:  				Call     $Function_80218180 ( *Var[0] *Var[1] *Var[2] *Var[3] )
 194C:  			EndThread
 1954:  			Add  *Var[0]  00000014 
 1964:  			Add  *Var[1]  00000014 
 1974:  			Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 19B8:  			Call     GetActorHP  	( .Actor:Self *Var[0] )
 19CC:  			Add  *Var[0]  *Var[3] 
 19DC:  			Call     SetEnemyHP  	( .Actor:Self *Var[0] )
 19F0:  		Else
 19F8:  			Add  *Var[D]  00000001 
 1A08:  			If  *Var[D]  >  00000001 
 1A18:  				Call     80269470 ( )
 1A24:  				BreakLoop
 1A2C:  			EndIf
 1A34:  		EndIf
 1A3C:  		Call     GetPlayerHP 	( *Var[1] )
 1A4C:  		If  *Var[1]  ==  00000000 
 1A5C:  			Call     80269470 ( )
 1A68:  			BreakLoop
 1A70:  		EndIf
 1A78:  		Set  *Flag[00]  00000000 
 1A88:  		Loop     0000001E 
 1A94:  			Call     802694F8 ( *Var[1] )
 1AA4:  			If  *Var[1]  ==  00000001 
 1AB4:  				Set  *Flag[00]  00000001 
 1AC4:  				BreakLoop
 1ACC:  			EndIf
 1AD4:  			Wait     00000001 
 1AE0:  		EndLoop
 1AE8:  		If  *Flag[00]  ==  00000001 
 1AF8:  			BreakLoop
 1B00:  		EndIf
 1B08:  	EndLoop
 1B10:  	Call     80269470 ( )
 1B1C:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1B38:  EndIf
 1B40:  Call     UseCamPreset 	( 00000002 )
 1B50:  Call     SetGoalToTarget 	( .Actor:Self )
 1B60:  Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
 1B7C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 1B90:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
 1BA8:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
 1BC4:  Wait     0000000A 
 1BD0:  Call     8027D7F0 ( )
 1BDC:  ExecWait $Script_80219740 
 1BE8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 1BFC:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1C10:  Return
 1C18:  End

#new:Script $Script_TakeTurn_8021C484
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_8021A864 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   6C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   80:  Call     UseCamPreset 	( 0000003F )
   90:  Call     CamTargetActor ( .Actor:Self )
   A0:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   B8:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   D0:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
   E8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  104:  Sub  *Var[1]  00000018 
  114:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  130:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000002 00000010 )
  154:  Switch  *Var[0] 
  160:  	CaseOR  ==  00000006 
  16C:  	CaseOR  ==  00000005 
  178:  		Set  *Var[A]  *Var[0] 
  188:  		Wait     0000000A 
  194:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1A8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1BC:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  1D4:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  200:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  21C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  230:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  248:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
  264:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
  27C:  		Wait     0000000F 
  288:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  2A0:  		If  *Var[A]  ==  00000005 
  2B0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Call     8027D7F0 ( )
  2E8:  		Call     UseCamPreset 	( 00000002 )
  2F8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  30C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		ExecWait $Script_80219740 
  334:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  34C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  360:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  374:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  388:  		Return
  390:  	EndCaseGroup
  398:  	Case  ==  00000007 
  3A4:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  3B8:  		If  *Var[0]  &  00002000 
  3C8:  			Set  *Flag[00]  00000000 
  3D8:  		Else
  3E0:  			Set  *Flag[00]  00000001 
  3F0:  		EndIf
  3F8:  EndSwitch
  400:  Wait     0000000A 
  40C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  420:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  434:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  44C:  Call     SetGoalToTarget 	( .Actor:Self )
  45C:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFC FFFFFFF8 FFFFFFF1 )
  478:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  48C:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  4A4:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
  4C0:  If  *Flag[00]  ==  00000001 
  4D0:  	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
  4F8:  	Return
  500:  EndIf
  508:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  51C:  If  *Var[0]  &  00100000 
  52C:  	Wait     0000000A 
  538:  	Loop     00000002 
  544:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  55C:  		Wait     00000015 
  568:  		Loop     00000002 
  574:  			Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  588:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  5A4:  			Wait     00000001 
  5B0:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  5CC:  			Wait     00000001 
  5D8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  5F4:  			Wait     00000001 
  600:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  61C:  			Wait     00000001 
  628:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  644:  			Wait     00000001 
  650:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  66C:  			Wait     00000001 
  678:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  694:  			Wait     00000001 
  6A0:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  6BC:  			Wait     00000001 
  6C8:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6E4:  			Wait     00000001 
  6F0:  		EndLoop
  6F8:  		Wait     00000005 
  704:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  718:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  734:  		Wait     00000001 
  740:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  75C:  		Wait     00000001 
  768:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  784:  		Wait     00000001 
  790:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  7AC:  		Wait     00000001 
  7B8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  7D4:  		Wait     00000002 
  7E0:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  7FC:  		Wait     0000000A 
  808:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  824:  		Wait     00000002 
  830:  		Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000002 00000040 )
  858:  		Wait     0000001E 
  864:  	EndLoop
  86C:  Else
  874:  	Call     ShowMessageBox ( 00000031 00007FFF )
  888:  	Call     802694A4 ( 00000001 )
  898:  	Call     LoadActionCommand 	( 00000006 )
  8A8:  	Call     802A9000 ( )
  8B4:  	Call     802691C8 ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  8D8:  	Wait     0000000A 
  8E4:  	Call     SetBattleFlagBits 	( 00004000 .False )
  8F8:  	Call     802A9110 ( 00000000 00007FFF 00000003 )
  910:  	Set  *Var[D]  00000000 
  920:  	Loop     00000005 
  92C:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  944:  		Set  *Flag[00]  00000000 
  954:  		Loop     00000015 
  960:  			Call     802694F8 ( *Var[1] )
  970:  			If  *Var[1]  ==  00000001 
  980:  				Set  *Flag[00]  00000001 
  990:  				BreakLoop
  998:  			EndIf
  9A0:  			Wait     00000001 
  9AC:  		EndLoop
  9B4:  		If  *Flag[00]  ==  00000001 
  9C4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  9D8:  			BreakLoop
  9E0:  		EndIf
  9E8:  		Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  A00:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  A14:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  A28:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A44:  		Set  *Flag[00]  00000000 
  A54:  		Loop     00000001 
  A60:  			Call     802694F8 ( *Var[1] )
  A70:  			If  *Var[1]  ==  00000001 
  A80:  				Set  *Flag[00]  00000001 
  A90:  				BreakLoop
  A98:  			EndIf
  AA0:  			Wait     00000001 
  AAC:  		EndLoop
  AB4:  		If  *Flag[00]  ==  00000001 
  AC4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  AD8:  			BreakLoop
  AE0:  		EndIf
  AE8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  B04:  		Set  *Flag[00]  00000000 
  B14:  		Loop     00000001 
  B20:  			Call     802694F8 ( *Var[1] )
  B30:  			If  *Var[1]  ==  00000001 
  B40:  				Set  *Flag[00]  00000001 
  B50:  				BreakLoop
  B58:  			EndIf
  B60:  			Wait     00000001 
  B6C:  		EndLoop
  B74:  		If  *Flag[00]  ==  00000001 
  B84:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  B98:  			BreakLoop
  BA0:  		EndIf
  BA8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  BC4:  		Set  *Flag[00]  00000000 
  BD4:  		Loop     00000001 
  BE0:  			Call     802694F8 ( *Var[1] )
  BF0:  			If  *Var[1]  ==  00000001 
  C00:  				Set  *Flag[00]  00000001 
  C10:  				BreakLoop
  C18:  			EndIf
  C20:  			Wait     00000001 
  C2C:  		EndLoop
  C34:  		If  *Flag[00]  ==  00000001 
  C44:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  C58:  			BreakLoop
  C60:  		EndIf
  C68:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  C84:  		Set  *Flag[00]  00000000 
  C94:  		Loop     00000001 
  CA0:  			Call     802694F8 ( *Var[1] )
  CB0:  			If  *Var[1]  ==  00000001 
  CC0:  				Set  *Flag[00]  00000001 
  CD0:  				BreakLoop
  CD8:  			EndIf
  CE0:  			Wait     00000001 
  CEC:  		EndLoop
  CF4:  		If  *Flag[00]  ==  00000001 
  D04:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  D18:  			BreakLoop
  D20:  		EndIf
  D28:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  D44:  		Set  *Flag[00]  00000000 
  D54:  		Loop     00000002 
  D60:  			Call     802694F8 ( *Var[1] )
  D70:  			If  *Var[1]  ==  00000001 
  D80:  				Set  *Flag[00]  00000001 
  D90:  				BreakLoop
  D98:  			EndIf
  DA0:  			Wait     00000001 
  DAC:  		EndLoop
  DB4:  		If  *Flag[00]  ==  00000001 
  DC4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  DD8:  			BreakLoop
  DE0:  		EndIf
  DE8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  E04:  		Set  *Flag[00]  00000000 
  E14:  		Loop     0000000A 
  E20:  			Call     802694F8 ( *Var[1] )
  E30:  			If  *Var[1]  ==  00000001 
  E40:  				Set  *Flag[00]  00000001 
  E50:  				BreakLoop
  E58:  			EndIf
  E60:  			Wait     00000001 
  E6C:  		EndLoop
  E74:  		If  *Flag[00]  ==  00000001 
  E84:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  E98:  			BreakLoop
  EA0:  		EndIf
  EA8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  EC4:  		Set  *Flag[00]  00000000 
  ED4:  		Loop     00000002 
  EE0:  			Call     802694F8 ( *Var[1] )
  EF0:  			If  *Var[1]  ==  00000001 
  F00:  				Set  *Flag[00]  00000001 
  F10:  				BreakLoop
  F18:  			EndIf
  F20:  			Wait     00000001 
  F2C:  		EndLoop
  F34:  		If  *Flag[00]  ==  00000001 
  F44:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  F58:  			BreakLoop
  F60:  		EndIf
  F68:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  F7C:  		Call     DamageTarget 	( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
  FA4:  		Call     GetLastDamage 	( .Actor:Player *Var[3] )
  FB8:  		If  *Var[3]  !=  00000000 
  FC8:  			Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  FDC:  			Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  FF0:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 100C:  			Add  *Var[1]  0000000F 
 101C:  			Call     $Function_802180CC ( *Var[0] *Var[1] *Var[2] *Var[3] )
 1038:  			Thread
 1040:  				Wait     0000000F 
 104C:  				Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
 1060:  				Call     $Function_80218180 ( *Var[0] *Var[1] *Var[2] *Var[3] )
 107C:  			EndThread
 1084:  			Add  *Var[0]  00000014 
 1094:  			Add  *Var[1]  00000014 
 10A4:  			Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 10E8:  			Call     GetActorHP  	( .Actor:Self *Var[0] )
 10FC:  			Add  *Var[0]  *Var[3] 
 110C:  			Call     SetEnemyHP  	( .Actor:Self *Var[0] )
 1120:  		Else
 1128:  			Add  *Var[D]  00000001 
 1138:  			If  *Var[D]  >  00000001 
 1148:  				Call     80269470 ( )
 1154:  				BreakLoop
 115C:  			EndIf
 1164:  		EndIf
 116C:  		Call     GetPlayerHP 	( *Var[1] )
 117C:  		If  *Var[1]  ==  00000000 
 118C:  			Call     80269470 ( )
 1198:  			BreakLoop
 11A0:  		EndIf
 11A8:  		Set  *Flag[00]  00000000 
 11B8:  		Loop     00000023 
 11C4:  			Call     802694F8 ( *Var[1] )
 11D4:  			If  *Var[1]  ==  00000001 
 11E4:  				Set  *Flag[00]  00000001 
 11F4:  				BreakLoop
 11FC:  			EndIf
 1204:  			Wait     00000001 
 1210:  		EndLoop
 1218:  		If  *Flag[00]  ==  00000001 
 1228:  			BreakLoop
 1230:  		EndIf
 1238:  	EndLoop
 1240:  	Call     80269470 ( )
 124C:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1268:  EndIf
 1270:  Call     UseCamPreset 	( 00000002 )
 1280:  Call     SetGoalToTarget 	( .Actor:Self )
 1290:  Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
 12AC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 12C0:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
 12D8:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
 12F4:  Wait     0000000A 
 1300:  Call     8027D7F0 ( )
 130C:  ExecWait $Script_80219740 
 1318:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 132C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1340:  Return
 1348:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 135C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1370:  Return
 1378:  End

PADDING: 8021D804 to 8021D810 (0064E614 to 0064E620)
00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021D810
.Status:Normal    004F0003
.Status:Stone     004F0000
.Status:Sleep     004F0003
.Status:Poison    004F0003
.Status:Stop      004F0000
.Status:Static    004F0003
.Status:Paralyze  004F0000
.Status:Dizzy     004F0000
.Status:Fear      004F0000
.Status:End

#new:DefenseTable $DefenseTable_8021D85C
.Element:Normal 00000004
.Element:Fire   00000063
.Element:End

#new:StatusTable $StatusTable_8021D870
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     75`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021D91C
00800000 01000000 F72E00FF $IdleAnimations_8021D810 $DefenseTable_8021D85C 00000000 00000000 FAEF0000 00000000 

#new:Actor $AlbinoDino
% stats
[Index]        44b 
[Level]        23`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D870 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021D91C 
[Script]      $Script_Init_8021D968 
% move effectiveness
[Escape]       40`b 
[Item]         25`b 
[AirLift]      15`b 
[Hurricane]    10`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         64`b  56`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -22`b  24`b % dx dy
[StatusIcon]   11`b  40`b % dx dy

#new:Script $Script_Init_8021D968
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021E070 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021D9B4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021DA40 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021D9B4
    0:  Return
    8:  End

#new:Script $Script_8021D9C4
    0:  Call     SetAnimation 	( .Actor:Self 00000001 004F0005 )
   18:  Call     SetGoalToHome 	( .Actor:Self )
   28:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   3C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   54:  Call     SetAnimation 	( .Actor:Self 00000001 004F0003 )
   6C:  Return
   74:  End

#new:Script $Script_HandleEvent_8021DA40
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  004F0008 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  004F000A 
   C0:  		SetConst  *Var[2]  004F000B 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  004F000A 
  108:  		SetConst  *Var[2]  004F000B 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  004F000B 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  004F0008 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  004F0008 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  004F0009 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  004F0008 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  004F0008 
  254:  		ExecWait 8029BD70 
  260:  		ExecWait $Script_8021D9C4 
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  004F0008 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  004F0009 
  2C4:  		ExecWait DoDeath 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  004F0003 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  004F0008 
  35C:  		ExecWait DoNormalHit 
  368:  		SetConst  *Var[0]  00000001 
  378:  		SetConst  *Var[1]  004F0009 
  388:  		ExecWait DoDeath 
  394:  		Return
  39C:  	Case  ==  .Event:RecoverStatus
  3A8:  		SetConst  *Var[0]  00000001 
  3B8:  		SetConst  *Var[1]  004F0003 
  3C8:  		ExecWait DoRecover 
  3D4:  	Case  ==  .Event:ScareAway
  3E0:  		SetConst  *Var[0]  00000001 
  3F0:  		SetConst  *Var[1]  004F0005 
  400:  		SetConst  *Var[2]  004F0008 
  410:  		ExecWait DoScareAway 
  41C:  		Return
  424:  	Case  ==  .Event:BeginAirLift
  430:  		SetConst  *Var[0]  00000001 
  440:  		SetConst  *Var[1]  004F0005 
  450:  		ExecWait DoAirLift 
  45C:  	Case  ==  .Event:BlowAway
  468:  		SetConst  *Var[0]  00000001 
  478:  		SetConst  *Var[1]  004F0008 
  488:  		ExecWait DoBlowAway 
  494:  		Return
  49C:  	Default
  4A4:  EndSwitch
  4AC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4C0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4D4:  Return
  4DC:  End

#new:Script $Script_8021DF24
    0:  Set  *Var[A]  00000000 
   10:  Label    00000000 
   1C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   38:  Call     GetActorAngle 	( .Actor:Self *Var[3] )
   4C:  If  *Var[3]  ==  00000000 
   5C:  	Add  *Var[0]  00000014 
   6C:  Else
   74:  	Add  *Var[0]  FFFFFFEC 
   84:  EndIf
   8C:  Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000019 00000008 0000002D 00000014 00000000 00000000 00000000 00000000 00000000 )
   D0:  If  *Var[A]  >  00000003 
   E0:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.20019531] )
   FC:  	Set  *Var[A]  00000000 
  10C:  EndIf
  114:  Add  *Var[A]  00000001 
  124:  Wait     00000002 
  130:  Goto     00000000 
  13C:  Return
  144:  End

#new:Script $Script_TakeTurn_8021E070
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Exec     $Script_8021DF24 *Var[9] 
   84:  Thread
   8C:  	Loop     00000003 
   98:  		Call     PlaySoundAtActor 	( .Actor:Self 0000030B )
   AC:  		Wait     00000004 
   B8:  		Call     PlaySoundAtActor 	( .Actor:Self 000002FD )
   CC:  		Wait     00000004 
   D8:  	EndLoop
   E0:  EndThread
   E8:  Call     SetAnimation 	( .Actor:Self 00000001 004F0005 )
  100:  Wait     00000014 
  10C:  Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
  130:  Switch  *Var[F] 
  13C:  	CaseOR  ==  00000006 
  148:  	CaseOR  ==  00000005 
  154:  		Thread
  15C:  			Call     SetGoalToTarget 	( .Actor:Self )
  16C:  			Call     AddToGoalPos 	( .Actor:Self FFFFFF9C 00000000 00000000 )
  188:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  19C:  			Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1B4:  			Kill     *Var[9] 
  1C0:  		EndThread
  1C8:  		Call     UseCamPreset 	( 00000002 )
  1D8:  		Wait     0000001E 
  1E4:  		If  *Var[F]  ==  00000005 
  1F4:  			Call     SetGoalToTarget 	( .Actor:Self )
  204:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  228:  		EndIf
  230:  		Wait     00000028 
  23C:  		Call     8027D7F0 ( )
  248:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  264:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  278:  		ExecWait $Script_8021D9C4 
  284:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  298:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  2B0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2C4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  2D8:  		Return
  2E0:  	EndCaseGroup
  2E8:  EndSwitch
  2F0:  Call     SetGoalToTarget 	( .Actor:Self )
  300:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  314:  If  *Var[A]  &  00080000 
  324:  	Call     AddToGoalPos 	( .Actor:Self 0000000C 00000000 00000000 )
  340:  Else
  348:  	Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
  364:  EndIf
  36C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  380:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  398:  Thread
  3A0:  	Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[1.5] )
  3BC:  EndThread
  3C4:  Kill     *Var[9] 
  3D0:  Wait     00000002 
  3DC:  Call     SetGoalToTarget 	( .Actor:Self )
  3EC:  Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000018 00000004 00000020 )
  414:  Switch  *Var[F] 
  420:  	CaseOR  ==  00000000 
  42C:  	CaseOR  ==  00000002 
  438:  		Call     UseCamPreset 	( 00000002 )
  448:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  464:  		Add  *Var[0]  00000028 
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  488:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4C4:  		Call     PlaySoundAtActor 	( .Actor:Self 000002FD )
  4D8:  		Call     SetAnimation 	( .Actor:Self 00000001 004F0003 )
  4F0:  		Call     ShakeCam    	( 00000001 00000000 00000003 *Fixed[1.0] )
  50C:  		Wait     0000000A 
  518:  		Call     8027D7F0 ( )
  524:  		ExecWait $Script_8021D9C4 
  530:  	EndCaseGroup
  538:  EndSwitch
  540:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  554:  Call     UseIdleAnimation 	( .Actor:Self .True )
  568:  Return
  570:  End

PADDING: 8021E5E8 to 8021E5F0 (0064F3F8 to 0064F400)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021E5F0
.Status:Normal    003A0101
.Status:Stone     003A0100
.Status:Sleep     003A0103
.Status:Poison    003A0101
.Status:Stop      003A0100
.Status:Static    003A0101
.Status:Paralyze  003A0100
.Status:Dizzy     003A0105
.Status:Fear      003A0105
.Status:End

#new:DefenseTable $DefenseTable_8021E63C
.Element:Normal 00000000
.Element:Fire   FFFFFFFE
.Element:Ice    00000063
.Element:End

#new:StatusTable $StatusTable_8021E658
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021E704
00800000 01000000 F42000FF $IdleAnimations_8021E5F0 $DefenseTable_8021E63C 00000008 00000000 08FD0000 00000000 

#new:Actor $WhiteClubba
% stats
[Index]        38b 
[Level]        23`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E658 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021E704 
[Script]      $Script_Init_8021E750 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      50`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         42`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:Script $Script_Init_8021E750
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021ECBC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021E79C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E7AC )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021E79C
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021E7AC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  003A0104 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  003A0106 
   C0:  		SetConst  *Var[2]  003A0107 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  003A0106 
  108:  		SetConst  *Var[2]  003A0107 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  003A0107 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  003A0104 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  003A0104 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  003A0104 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  003A0104 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  003A0104 
  254:  		ExecWait 8029BD70 
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  003A0102 
  280:  		ExecWait DoReturnHome 
  28C:  	Case  ==  .Event:ShockDeath
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  003A0104 
  2B8:  		ExecWait DoShockHit 
  2C4:  		SetConst  *Var[0]  00000001 
  2D4:  		SetConst  *Var[1]  003A0104 
  2E4:  		ExecWait DoDeath 
  2F0:  		Return
  2F8:  	CaseOR  ==  00000017
  304:  	CaseOR  ==  .Event:Immune
  310:  	CaseOR  ==  .Event:AirLiftFailed
  31C:  		SetConst  *Var[0]  00000001 
  32C:  		SetConst  *Var[1]  003A0101 
  33C:  		ExecWait DoImmune 
  348:  	EndCaseGroup
  350:  	Case  ==  .Event:Death
  35C:  		SetConst  *Var[0]  00000001 
  36C:  		SetConst  *Var[1]  003A0104 
  37C:  		ExecWait DoNormalHit 
  388:  		Wait     0000000A 
  394:  		SetConst  *Var[0]  00000001 
  3A4:  		SetConst  *Var[1]  003A0104 
  3B4:  		ExecWait DoDeath 
  3C0:  		Return
  3C8:  	Case  ==  .Event:RecoverStatus
  3D4:  		SetConst  *Var[0]  00000001 
  3E4:  		SetConst  *Var[1]  003A0101 
  3F4:  		ExecWait DoRecover 
  400:  	Case  ==  .Event:ScareAway
  40C:  		SetConst  *Var[0]  00000001 
  41C:  		SetConst  *Var[1]  003A0102 
  42C:  		SetConst  *Var[2]  003A0104 
  43C:  		ExecWait DoScareAway 
  448:  		Return
  450:  	Case  ==  .Event:BeginAirLift
  45C:  		SetConst  *Var[0]  00000001 
  46C:  		SetConst  *Var[1]  003A0104 
  47C:  		ExecWait DoAirLift 
  488:  	Case  ==  .Event:BlowAway
  494:  		SetConst  *Var[0]  00000001 
  4A4:  		SetConst  *Var[1]  003A0104 
  4B4:  		ExecWait DoBlowAway 
  4C0:  		Return
  4C8:  	Default
  4D0:  EndSwitch
  4D8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4EC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  500:  Return
  508:  End

#new:Script $Script_TakeTurn_8021ECBC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetBattlePhase ( *Var[0] )
   84:  If  *Var[0]  ==  .Phase:FirstStrike
   94:  	Call     SetGoalToTarget 	( .Actor:Self )
   A4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C0:  	Add  *Var[0]  0000001B 
   D0:  	Set  *Var[1]  00000000 
   E0:  	Sub  *Var[2]  00000006 
   F0:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  	Wait     0000000F 
  118:  Else
  120:  	Call     SetAnimation 	( .Actor:Self 00000001 003A0102 )
  138:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  14C:  	Call     SetGoalToTarget 	( .Actor:Self )
  15C:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
  170:  	If  *Var[0]  !&  00080000 
  180:  		Call     AddToGoalPos 	( .Actor:Self 0000001B 00000000 FFFFFFFA )
  19C:  	Else
  1A4:  		Call     AddToGoalPos 	( .Actor:Self 0000000A 00000000 FFFFFFFA )
  1C0:  	EndIf
  1C8:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1E0:  	Call     SetAnimation 	( .Actor:Self 00000001 003A0101 )
  1F8:  	Wait     0000000A 
  204:  EndIf
  20C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  230:  Switch  *Var[0] 
  23C:  	CaseOR  ==  00000006 
  248:  	CaseOR  ==  00000005 
  254:  		Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
  268:  		Call     SetAnimation 	( .Actor:Self 00000001 003A0108 )
  280:  		Wait     00000014 
  28C:  		If  *Var[0]  ==  00000005 
  29C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2C0:  			Wait     00000014 
  2CC:  		EndIf
  2D4:  		Call     UseCamPreset 	( 00000002 )
  2E4:  		Call     8027D7F0 ( )
  2F0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  304:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  320:  		SetConst  *Var[0]  00000001 
  330:  		SetConst  *Var[1]  003A0102 
  340:  		ExecWait DoReturnHome 
  34C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  364:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  378:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  38C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3A0:  		Return
  3A8:  	EndCaseGroup
  3B0:  EndSwitch
  3B8:  Call     GetBattlePhase ( *Var[0] )
  3C8:  If  *Var[0]  ==  .Phase:FirstStrike
  3D8:  	Goto     00000028 
  3E4:  EndIf
  3EC:  Call     GetActorHP  	( .Actor:Self *Var[0] )
  400:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
  414:  MulF  *Var[0]  *Fixed[100.0] 
  424:  DivF  *Var[0]  *Var[1] 
  434:  If  *Var[0]  <  0000001E 
  444:  	Goto     00000032 
  450:  EndIf
  458:  Call     RandInt     	( 00000064 *Var[0] )
  46C:  If  *Var[0]  <  00000019 
  47C:  	Goto     00000032 
  488:  EndIf
  490:  Label    00000028 
  49C:  Call     SetAnimation 	( .Actor:Self 00000001 003A0109 )
  4B4:  Wait     0000000F 
  4C0:  Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
  4D4:  Call     SetAnimation 	( .Actor:Self 00000001 003A010A )
  4EC:  Wait     00000002 
  4F8:  Wait     00000002 
  504:  Call     SetGoalToTarget 	( .Actor:Self )
  514:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
  53C:  Thread
  544:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.5] )
  560:  EndThread
  568:  Goto     00000064 
  574:  Label    00000032 
  580:  Call     SetAnimation 	( .Actor:Self 00000001 003A0109 )
  598:  Wait     0000000F 
  5A4:  Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
  5B8:  Call     SetAnimation 	( .Actor:Self 00000001 003A010A )
  5D0:  Wait     00000002 
  5DC:  Wait     00000002 
  5E8:  Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000010 )
  620:  Thread
  628:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.5] )
  644:  EndThread
  64C:  Call     GetActorHP  	( .Actor:Player *Var[0] )
  660:  If  *Var[0]  ==  00000000 
  670:  	Goto     00000064 
  67C:  EndIf
  684:  Call     SetAnimation 	( .Actor:Self 00000001 003A0109 )
  69C:  Wait     0000000F 
  6A8:  Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
  6BC:  Call     SetAnimation 	( .Actor:Self 00000001 003A010A )
  6D4:  Wait     00000002 
  6E0:  Wait     00000002 
  6EC:  Call     SetGoalToTarget 	( .Actor:Self )
  6FC:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  724:  Thread
  72C:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.5] )
  748:  EndThread
  750:  Call     GetActorHP  	( .Actor:Player *Var[0] )
  764:  If  *Var[0]  ==  00000000 
  774:  	Goto     00000064 
  780:  EndIf
  788:  Call     SetAnimation 	( .Actor:Self 00000001 003A0109 )
  7A0:  Wait     0000000F 
  7AC:  Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
  7C0:  Call     SetAnimation 	( .Actor:Self 00000001 003A010A )
  7D8:  Wait     00000002 
  7E4:  Wait     00000002 
  7F0:  Call     SetGoalToTarget 	( .Actor:Self )
  800:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000020 )
  828:  Thread
  830:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.5] )
  84C:  EndThread
  854:  Label    00000064 
  860:  Switch  *Var[0] 
  86C:  	CaseOR  ==  00000000 
  878:  	CaseOR  ==  00000002 
  884:  		Call     UseCamPreset 	( 00000002 )
  894:  		Wait     00000013 
  8A0:  		Call     8027D7F0 ( )
  8AC:  		SetConst  *Var[0]  00000001 
  8BC:  		SetConst  *Var[1]  003A0102 
  8CC:  		ExecWait DoReturnHome 
  8D8:  	EndCaseGroup
  8E0:  EndSwitch
  8E8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  8FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  910:  Return
  918:  End

PADDING: 8021F5DC to 8021F5E0 (006503EC to 006503F0)
00000000 

#new:DefenseTable $DefenseTable_8021F5E0
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:DefenseTable $DefenseTable_8021F5EC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021F5F8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:StatusTable $StatusTable_8021F6A4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021F750
00800000 01000000 022300FF $IdleAnimations_8021F830 $DefenseTable_8021F5E0 00000000 00000000 FBF40000 00000000 

% Origin: HINT
#new:SpriteTable $SpriteTable_8021F774
00020001 01000000 022300FF $IdleAnimations_8021F830 $DefenseTable_8021F5EC 00800000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8021F87C $DefenseTable_8021F5EC 00000000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8021F8C8 $DefenseTable_8021F5EC 00000000 00000000 00000000 00000000 

#new:Actor $RMagikoopa
% stats
[Index]        51b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021F5F8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021F750 
[Script]      $Script_Init_80221A18 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

% Origin: HINT
#new:Actor $FlyingRMagikoopa
% stats
[Index]        52b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021F6A4 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8021F774 
[Script]      $Script_Init_80221ABC 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_8021F830
.Status:Normal    00560101
.Status:Stone     00560100
.Status:Sleep     00560108
.Status:Poison    00560101
.Status:Stop      00560100
.Status:Static    00560101
.Status:Paralyze  00560100
.Status:Dizzy     00560107
.Status:Fear      00560107
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F87C
.Status:Normal    00570101
.Status:Stone     00570100
.Status:Sleep     00570108
.Status:Poison    00570101
.Status:Stop      00570100
.Status:Static    00570101
.Status:Paralyze  00570100
.Status:Dizzy     00570107
.Status:Fear      00570107
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021F8C8
.Status:Normal    0057010A
.Status:End

#new:Script $Script_Idle_8021F8D4
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021F8E4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560104 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560105 
   C0:  		SetConst  *Var[2]  00560106 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560105 
  108:  		SetConst  *Var[2]  00560106 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560106 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560104 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560104 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560104 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560101 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560104 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560104 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560101 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
  3B8:  		ExecWait $Script_RMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560102 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560104 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

% Origin: HINT
#new:Script $Script_8021FDFC
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218458 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

% Origin: HINT
#new:Script $Script_8021FF08
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218550 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021F8E4 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000051 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021F5F8 )
  4FC:  Call     $Function_80218484 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

% Origin: HINT
#new:Script $Script_HandleEvent_80220504
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8021FDFC 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570104 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8021FDFC 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570104 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_8021FF08 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8021FDFC 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570105 
  134:  		SetConst  *Var[2]  00570106 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_8021FF08 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570105 
  190:  		SetConst  *Var[2]  00570106 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570106 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570104 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570104 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570104 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570101 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570104 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570104 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570101 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570104 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  504:  		ExecWait $Script_RMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570102 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570104 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_RMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570103 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_80218300 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570103 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_80218300 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_RMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560103 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_RMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_80221A18
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021F8D4 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80221B60 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021F8E4 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

% Origin: HINT
#new:Script $Script_Init_80221ABC
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021F8D4 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80221B60 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220504 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_80221B60
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_802185A8 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetActorAttackBoost 	( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  <  00000003 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_RMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_RMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_RMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Call     PlaySoundAtActor 	( *Var[8] 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call     8026BF48 ( 00000001 )
  6A8:  	Call     BoostAttack 	( *Var[8] 00000001 )
  6BC:  	Call     8026BF48 ( 00000000 )
  6CC:  EndThread
  6D4:  Call     8027114C ( )
  6E0:  Call     UseCamPreset 	( 00000002 )
  6F0:  Wait     0000000A 
  6FC:  Call     8027D7F0 ( )
  708:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  71C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  730:  Return
  738:  End

#new:DefenseTable $DefenseTable_802222A0
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:DefenseTable $DefenseTable_802222AC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_802222B8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:StatusTable $StatusTable_80222364
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80222410
00800000 01000000 022300FF $IdleAnimations_802224F0 $DefenseTable_802222A0 00000000 00000000 FBF40000 00000000 

% Origin: HINT
#new:SpriteTable $SpriteTable_80222434
00020001 01000000 022300FF $IdleAnimations_802224F0 $DefenseTable_802222AC 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8022253C $DefenseTable_802222AC 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80222588 $DefenseTable_802222AC 00000000 00000000 00000000 00000000 

#new:Actor $GRNMagikoopa
% stats
[Index]        53b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802222B8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80222410 
[Script]      $Script_Init_802246D8 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

% Origin: HINT
#new:Actor $FlyingGRNMagikoopa
% stats
[Index]        54b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80222364 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80222434 
[Script]      $Script_Init_8022477C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_802224F0
.Status:Normal    00560401
.Status:Stone     00560400
.Status:Sleep     00560408
.Status:Poison    00560401
.Status:Stop      00560400
.Status:Static    00560401
.Status:Paralyze  00560400
.Status:Dizzy     00560407
.Status:Fear      00560407
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022253C
.Status:Normal    00570401
.Status:Stone     00570400
.Status:Sleep     00570408
.Status:Poison    00570401
.Status:Stop      00570400
.Status:Static    00570401
.Status:Paralyze  00570400
.Status:Dizzy     00570407
.Status:Fear      00570407
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80222588
.Status:Normal    0057040A
.Status:End

#new:Script $Script_Idle_80222594
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_802225A4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560404 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560405 
   C0:  		SetConst  *Var[2]  00560406 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560405 
  108:  		SetConst  *Var[2]  00560406 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560406 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560404 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560404 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560404 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560401 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560404 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560404 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560401 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560402 )
  3B8:  		ExecWait $Script_GRNMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560402 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560404 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

% Origin: HINT
#new:Script $Script_80222ABC
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_802187C8 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

% Origin: HINT
#new:Script $Script_80222BC8
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_802188C0 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802225A4 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000053 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_802222B8 )
  4FC:  Call     $Function_802187F4 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

% Origin: HINT
#new:Script $Script_HandleEvent_802231C4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_80222ABC 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570404 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_80222ABC 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570404 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_80222BC8 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_80222ABC 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570405 
  134:  		SetConst  *Var[2]  00570406 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_80222BC8 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570405 
  190:  		SetConst  *Var[2]  00570406 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570406 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570404 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570404 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570404 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570401 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570404 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570404 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570401 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570401 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570401 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570404 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570402 )
  504:  		ExecWait $Script_GRNMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570402 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570404 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_GRNMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570402 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570403 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_80218670 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570403 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_80218670 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_GRNMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560402 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560403 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_GRNMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_802246D8
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80222594 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224820 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802225A4 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

% Origin: HINT
#new:Script $Script_Init_8022477C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80222594 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224820 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802231C4 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_80224820
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218918 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetActorDefenseBoost 	( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  <  00000003 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_GRNMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_GRNMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_GRNMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560402 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570402 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570401 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Call     PlaySoundAtActor 	( *Var[8] 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call     8026BF48 ( 00000001 )
  6A8:  	Call     BoostDefense 	( *Var[8] 00000001 )
  6BC:  	Call     8026BF48 ( 00000000 )
  6CC:  EndThread
  6D4:  Call     8027114C ( )
  6E0:  Call     UseCamPreset 	( 00000002 )
  6F0:  Wait     0000000A 
  6FC:  Call     8027D7F0 ( )
  708:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  71C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  730:  Return
  738:  End

#new:DefenseTable $DefenseTable_80224F60
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80224F6C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80224F78
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80225024
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_802250D0
00800000 01000000 022300FF $IdleAnimations_802251B0 $DefenseTable_80224F60 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_802250F4
00020001 01000000 022300FF $IdleAnimations_802251B0 $DefenseTable_80224F6C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_802251FC $DefenseTable_80224F6C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80225248 $DefenseTable_80224F6C 00000000 00000000 00000000 00000000 

#new:Actor $YMagikoopa
% stats
[Index]        55b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224F78 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802250D0 
[Script]      $Script_Init_80227398 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingYMagikoopa
% stats
[Index]        56b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80225024 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_802250F4 
[Script]      $Script_Init_8022743C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_802251B0
.Status:Normal    00560201
.Status:Stone     00560200
.Status:Sleep     00560208
.Status:Poison    00560201
.Status:Stop      00560200
.Status:Static    00560201
.Status:Paralyze  00560200
.Status:Dizzy     00560207
.Status:Fear      00560207
.Status:End

#new:IdleAnimations $IdleAnimations_802251FC
.Status:Normal    00570201
.Status:Stone     00570200
.Status:Sleep     00570208
.Status:Poison    00570201
.Status:Stop      00570200
.Status:Static    00570201
.Status:Paralyze  00570200
.Status:Dizzy     00570207
.Status:Fear      00570207
.Status:End

#new:IdleAnimations $IdleAnimations_80225248
.Status:Normal    0057020A
.Status:End

#new:Script $Script_Idle_80225254
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80225264
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560204 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560205 
   C0:  		SetConst  *Var[2]  00560206 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560205 
  108:  		SetConst  *Var[2]  00560206 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560206 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560204 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560204 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560204 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560201 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560204 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560204 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560201 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560202 )
  3B8:  		ExecWait $Script_YMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560202 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560204 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

#new:Script $Script_8022577C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218B38 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_80225888
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218C30 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80225264 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000055 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80224F78 )
  4FC:  Call     $Function_80218B64 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_HandleEvent_80225E84
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022577C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570204 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022577C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570204 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_80225888 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022577C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570205 
  134:  		SetConst  *Var[2]  00570206 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_80225888 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570205 
  190:  		SetConst  *Var[2]  00570206 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570206 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570204 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570204 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570204 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570201 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570204 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570204 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570201 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570201 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570201 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570204 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570202 )
  504:  		ExecWait $Script_YMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570202 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570204 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_YMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570202 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570203 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_802189E0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570203 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_802189E0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_YMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560202 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560203 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_YMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_80227398
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80225254 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802274E0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80225264 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_Init_8022743C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80225254 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802274E0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80225E84 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_802274E0
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218C88 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetStatusFlags ( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  !&  04002000 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_YMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_YMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_YMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560202 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570202 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self 000002F0 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570201 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Loop     00000004 
  680:  		Call     PlaySoundAtActor 	( *Var[8] 000003D2 )
  694:  		Call     RandInt     	( 00000003 *Var[0] )
  6A8:  		Add  *Var[0]  00000003 
  6B8:  		Wait     *Var[0] 
  6C4:  	EndLoop
  6CC:  EndThread
  6D4:  Thread
  6DC:  	Call     8026BF48 ( 00000001 )
  6EC:  	Call     ElectrifyActor ( *Var[8] 00000003 )
  700:  	Call     8026BF48 ( 00000000 )
  710:  EndThread
  718:  Call     8027114C ( )
  724:  Call     UseCamPreset 	( 00000002 )
  734:  Wait     0000000A 
  740:  Call     8027D7F0 ( )
  74C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  760:  Call     UseIdleAnimation 	( .Actor:Self .True )
  774:  Return
  77C:  End

PADDING: 80227C64 to 80227C70 (00658A74 to 00658A80)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_80227C70
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:DefenseTable $DefenseTable_80227C7C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80227C88
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:StatusTable $StatusTable_80227D34
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80227DE0
00800000 01000000 022300FF $IdleAnimations_80227EC0 $DefenseTable_80227C70 00000000 00000000 FBF40000 00000000 

% Origin: HINT
#new:SpriteTable $SpriteTable_80227E04
00020001 01000000 022300FF $IdleAnimations_80227EC0 $DefenseTable_80227C7C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_80227F0C $DefenseTable_80227C7C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80227F58 $DefenseTable_80227C7C 00000000 00000000 00000000 00000000 

#new:Actor $GRYMagikoopa
% stats
[Index]        57b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80227C88 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80227DE0 
[Script]      $Script_Init_8022A0A8 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

% Origin: HINT
#new:Actor $FlyingGRYMagikoopa
% stats
[Index]        58b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80227D34 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80227E04 
[Script]      $Script_Init_8022A14C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_80227EC0
.Status:Normal    00560501
.Status:Stone     00560500
.Status:Sleep     00560508
.Status:Poison    00560501
.Status:Stop      00560500
.Status:Static    00560501
.Status:Paralyze  00560500
.Status:Dizzy     00560507
.Status:Fear      00560507
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227F0C
.Status:Normal    00570501
.Status:Stone     00570500
.Status:Sleep     00570508
.Status:Poison    00570501
.Status:Stop      00570500
.Status:Static    00570501
.Status:Paralyze  00570500
.Status:Dizzy     00570507
.Status:Fear      00570507
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80227F58
.Status:Normal    0057050A
.Status:End

#new:Script $Script_Idle_80227F64
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80227F74
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560504 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560505 
   C0:  		SetConst  *Var[2]  00560506 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560505 
  108:  		SetConst  *Var[2]  00560506 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560506 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560504 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560504 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560504 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560501 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560504 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560504 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560501 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560504 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560502 )
  3B8:  		ExecWait $Script_GRYMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560502 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560504 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

% Origin: HINT
#new:Script $Script_8022848C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218EA8 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

% Origin: HINT
#new:Script $Script_80228598
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560504 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560504 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218FA0 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560504 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560501 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227F74 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000057 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80227C88 )
  4FC:  Call     $Function_80218ED4 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

% Origin: HINT
#new:Script $Script_HandleEvent_80228B94
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022848C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570504 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022848C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570504 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_80228598 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022848C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570505 
  134:  		SetConst  *Var[2]  00570506 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_80228598 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570505 
  190:  		SetConst  *Var[2]  00570506 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570506 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570504 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570504 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570504 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570501 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570504 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570504 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570501 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570501 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570501 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570504 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570502 )
  504:  		ExecWait $Script_GRYMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570502 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570504 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_GRYMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570502 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570503 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_80218D50 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570503 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_80218D50 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_GRYMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560502 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560503 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560501 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560501 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_GRYMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_8022A0A8
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227F64 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022A1F0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227F74 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

% Origin: HINT
#new:Script $Script_Init_8022A14C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227F64 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022A1F0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80228B94 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_8022A1F0
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218FF8 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetStatusFlags ( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  !&  04002000 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_GRYMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_GRYMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_GRYMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560502 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570502 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560501 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570501 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Call     PlaySoundAtActor 	( *Var[8] 000002DB )
  688:  EndThread
  690:  Thread
  698:  	Call     8026BF48 ( 00000001 )
  6A8:  	Call     VanishActor 	( *Var[8] 00000002 )
  6BC:  	Call     8026BF48 ( 00000000 )
  6CC:  EndThread
  6D4:  Call     8027114C ( )
  6E0:  Call     UseCamPreset 	( 00000002 )
  6F0:  Wait     0000000A 
  6FC:  Call     8027D7F0 ( )
  708:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  71C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  730:  Return
  738:  End

#new:DefenseTable $DefenseTable_8022A930
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_8022A93C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022A948
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_8022A9F4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8022AAA0
00800000 01000000 022300FF $IdleAnimations_8022AB80 $DefenseTable_8022A930 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_8022AAC4
00020001 01000000 022300FF $IdleAnimations_8022AB80 $DefenseTable_8022A93C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8022ABCC $DefenseTable_8022A93C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8022AC18 $DefenseTable_8022A93C 00000000 00000000 00000000 00000000 

#new:Actor $WMagikoopa
% stats
[Index]        59b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022A948 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022AAA0 
[Script]      $Script_Init_8022CD68 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingWMagikoopa
% stats
[Index]        5Ab 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8022A9F4 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8022AAC4 
[Script]      $Script_Init_8022CDCC 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_8022AB80
.Status:Normal    00560301
.Status:Stone     00560300
.Status:Sleep     00560308
.Status:Poison    00560301
.Status:Stop      00560300
.Status:Static    00560301
.Status:Paralyze  00560300
.Status:Dizzy     00560307
.Status:Fear      00560307
.Status:End

#new:IdleAnimations $IdleAnimations_8022ABCC
.Status:Normal    00570301
.Status:Stone     00570300
.Status:Sleep     00570308
.Status:Poison    00570301
.Status:Stop      00570300
.Status:Static    00570301
.Status:Paralyze  00570300
.Status:Dizzy     00570307
.Status:Fear      00570307
.Status:End

#new:IdleAnimations $IdleAnimations_8022AC18
.Status:Normal    0057030A
.Status:End

#new:Script $Script_Idle_8022AC24
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8022AC34
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560304 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560305 
   C0:  		SetConst  *Var[2]  00560306 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560305 
  108:  		SetConst  *Var[2]  00560306 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560306 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560304 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560304 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560304 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560301 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560304 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560304 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560301 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  3B8:  		ExecWait $Script_WMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560302 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560304 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

#new:Script $Script_8022B14C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80219218 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_8022B258
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80219310 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022AC34 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000059 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_8022A948 )
  4FC:  Call     $Function_80219244 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_HandleEvent_8022B854
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022B14C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570304 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022B14C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570304 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_8022B258 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022B14C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570305 
  134:  		SetConst  *Var[2]  00570306 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_8022B258 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570305 
  190:  		SetConst  *Var[2]  00570306 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570306 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570304 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570304 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570304 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570301 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570304 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570304 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570301 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570304 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  504:  		ExecWait $Script_WMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570302 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570304 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_WMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_802190C0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_802190C0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_WMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560303 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_WMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_8022CD68
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022AC24 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022E2F4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022AC34 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Init_8022CDCC
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022AC24 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022E2F4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022B854 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_HealOne
    0:  Set  *Var[8]  00000000 
   10:  Set  *Var[9]  0000270F 
   20:  Call     CreateTargetList 	( 00008002 )
   30:  Call     InitTargetIterator 	( )
   3C:  Label    00000000 
   48:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   5C:  Call     GetActorHP  	( *Var[0] *Var[2] )
   70:  Call     $Function_8021942C ( *Var[3] *Var[4] )
   84:  If  *Var[3]  >  *Var[4] 
   94:  	Set  *Var[3]  *Var[4] 
   A4:  EndIf
   AC:  Call     $Function_8021948C ( *Var[0] *Var[1] *Var[5] )
   C4:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
   D8:  Add  *Var[5]  *Var[6] 
   E8:  Sub  *Var[3]  *Var[5] 
   F8:  Sub  *Var[2]  *Var[3] 
  108:  Call     $Function_80219368 ( *Var[0] *Var[A] )
  11C:  If  *Var[A]  ==  00000000 
  12C:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  140:  	Call     GetActorHP  	( *Var[0] *Var[B] )
  154:  	If  *Var[A]  !=  *Var[B] 
  164:  		If  *Var[2]  <  *Var[9] 
  174:  			Set  *Var[8]  *Var[0] 
  184:  			Set  *Var[9]  *Var[2] 
  194:  		Else
  19C:  			If  *Var[2]  ==  *Var[9] 
  1AC:  				If  *Var[0]  <  *Var[8] 
  1BC:  					Set  *Var[8]  *Var[0] 
  1CC:  					Set  *Var[9]  *Var[2] 
  1DC:  				EndIf
  1E4:  			EndIf
  1EC:  		EndIf
  1F4:  	EndIf
  1FC:  EndIf
  204:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  218:  If  *Var[0]  !=  FFFFFFFF 
  228:  	Goto     00000000 
  234:  EndIf
  23C:  If  *Var[8]  !=  00000000 
  24C:  	Goto     00000064 
  258:  EndIf
  260:  Set  *Var[8]  00000000 
  270:  Set  *Var[9]  0000270F 
  280:  Call     CreateTargetList 	( 00008002 )
  290:  Call     InitTargetIterator 	( )
  29C:  Label    00000001 
  2A8:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2BC:  Call     GetActorHP  	( *Var[0] *Var[2] )
  2D0:  Call     $Function_8021942C ( *Var[3] *Var[4] )
  2E4:  If  *Var[3]  >  *Var[4] 
  2F4:  	Set  *Var[3]  *Var[4] 
  304:  EndIf
  30C:  Call     $Function_8021948C ( *Var[0] *Var[1] *Var[5] )
  324:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
  338:  Add  *Var[5]  *Var[6] 
  348:  Sub  *Var[3]  *Var[5] 
  358:  Sub  *Var[2]  *Var[4] 
  368:  Set  *Flag[00]  00000000 
  378:  Call     GetActorType 	( *Var[0] *Var[A] )
  38C:  If  *Var[A]  ==  00000047 
  39C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  3B4:  	If  *Var[A]  ==  00000001 
  3C4:  		Set  *Flag[00]  00000001 
  3D4:  	EndIf
  3DC:  EndIf
  3E4:  Call     GetOwnerID  	( *Var[A] )
  3F4:  If  *Var[A]  !=  *Var[0] 
  404:  	If  *Flag[00]  ==  00000000 
  414:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  428:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  43C:  		If  *Var[A]  !=  *Var[B] 
  44C:  			If  *Var[2]  <  *Var[9] 
  45C:  				Set  *Var[8]  *Var[0] 
  46C:  				Set  *Var[9]  *Var[2] 
  47C:  			Else
  484:  				If  *Var[2]  ==  *Var[9] 
  494:  					If  *Var[0]  <  *Var[8] 
  4A4:  						Set  *Var[8]  *Var[0] 
  4B4:  						Set  *Var[9]  *Var[2] 
  4C4:  					EndIf
  4CC:  				EndIf
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  	EndIf
  4EC:  EndIf
  4F4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  508:  If  *Var[0]  !=  FFFFFFFF 
  518:  	Goto     00000001 
  524:  EndIf
  52C:  If  *Var[8]  !=  00000000 
  53C:  	Goto     00000064 
  548:  EndIf
  550:  Call     CreateTargetList 	( 00008002 )
  560:  Call     InitTargetIterator 	( )
  56C:  Label    00000002 
  578:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  58C:  Set  *Flag[00]  00000000 
  59C:  Call     GetActorType 	( *Var[0] *Var[A] )
  5B0:  If  *Var[A]  ==  00000047 
  5C0:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  5D8:  	If  *Var[A]  ==  00000001 
  5E8:  		Set  *Flag[00]  00000001 
  5F8:  	EndIf
  600:  EndIf
  608:  Call     GetOwnerID  	( *Var[A] )
  618:  If  *Var[A]  !=  *Var[0] 
  628:  	If  *Flag[00]  ==  00000000 
  638:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  64C:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  660:  		If  *Var[A]  !=  *Var[B] 
  670:  			Set  *Var[8]  *Var[0] 
  680:  			Goto     00000064 
  68C:  		EndIf
  694:  	EndIf
  69C:  EndIf
  6A4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  6B8:  If  *Var[0]  !=  FFFFFFFF 
  6C8:  	Goto     00000002 
  6D4:  EndIf
  6DC:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[A] )
  6F0:  Call     GetActorHP  	( .Actor:Self *Var[B] )
  704:  If  *Var[A]  !=  *Var[B] 
  714:  	Set  *Var[8]  FFFFFF81 
  724:  	Goto     00000064 
  730:  EndIf
  738:  Call     CreateTargetList 	( 00008002 )
  748:  Call     InitTargetIterator 	( )
  754:  Label    00000003 
  760:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  774:  Call     GetOwnerID  	( *Var[A] )
  784:  If  *Var[A]  !=  *Var[0] 
  794:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  7A8:  	If  *Var[0]  &  00000200 
  7B8:  		ExecWait $Script_WMagikoopa_ShapeSpell 
  7C4:  	Else
  7CC:  		ExecWait $Script_WMagikoopa_WandStrike 
  7D8:  	EndIf
  7E0:  	Return
  7E8:  EndIf
  7F0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  804:  If  *Var[0]  !=  FFFFFFFF 
  814:  	Goto     00000003 
  820:  EndIf
  828:  ExecWait $Script_WMagikoopa_RunAway 
  834:  Return
  83C:  Label    00000064 
  848:  Call     RandInt     	( 000003E8 *Var[0] )
  85C:  If  *Var[0]  >  000002EE 
  86C:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  880:  	If  *Var[0]  &  00000200 
  890:  		ExecWait $Script_WMagikoopa_ShapeSpell 
  89C:  	Else
  8A4:  		ExecWait $Script_WMagikoopa_WandStrike 
  8B0:  	EndIf
  8B8:  	Return
  8C0:  EndIf
  8C8:  Call     UseIdleAnimation 	( .Actor:Self .False )
  8DC:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  8F0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  904:  Call     UseCamPreset 	( 0000000E )
  914:  Call     CamTargetActor ( .Actor:Self )
  924:  Call     MoveCamOver 	( 0000000F )
  934:  Wait     0000000F 
  940:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  954:  If  *Var[0]  !&  00000200 
  964:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  97C:  Else
  984:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  99C:  EndIf
  9A4:  Wait     00000005 
  9B0:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  9C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  9D8:  If  *Var[0]  !&  00000200 
  9E8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A04:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  A18:  	If  *Var[A]  &  00080000 
  A28:  		Sub  *Var[0]  00000006 
  A38:  		Add  *Var[1]  0000000C 
  A48:  		Sub  *Var[2]  00000002 
  A58:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  	Else
  AA4:  		Sub  *Var[0]  00000010 
  AB4:  		Add  *Var[1]  0000001F 
  AC4:  		Sub  *Var[2]  00000002 
  AD4:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B18:  	EndIf
  B20:  Else
  B28:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B44:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  B58:  	If  *Var[A]  &  00080000 
  B68:  		Sub  *Var[0]  0000000C 
  B78:  		Add  *Var[1]  0000000E 
  B88:  		Sub  *Var[2]  00000002 
  B98:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BDC:  	Else
  BE4:  		Sub  *Var[0]  0000001E 
  BF4:  		Add  *Var[1]  00000024 
  C04:  		Sub  *Var[2]  00000002 
  C14:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C58:  	EndIf
  C60:  EndIf
  C68:  Wait     0000001E 
  C74:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  C88:  If  *Var[0]  !&  00000200 
  C98:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  CB0:  Else
  CB8:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  CD0:  EndIf
  CD8:  Wait     00000005 
  CE4:  Thread
  CEC:  	Wait     00000005 
  CF8:  	Call     PlaySoundAtActor 	( *Var[8] 0000206D )
  D0C:  	Call     PlaySoundAtActor 	( *Var[8] 00000214 )
  D20:  	Wait     0000001E 
  D2C:  	Call     PlaySoundAtActor 	( *Var[8] 0000025C )
  D40:  EndThread
  D48:  Thread
  D50:  	Call     8026BF48 ( 00000001 )
  D60:  	Call     HealActor   	( *Var[8] 00000005 00000000 )
  D78:  	Call     8026BF48 ( 00000000 )
  D88:  EndThread
  D90:  Call     8027114C ( )
  D9C:  Call     UseCamPreset 	( 00000002 )
  DAC:  Wait     0000000A 
  DB8:  Call     8027D7F0 ( )
  DC4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DD8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  DEC:  Return
  DF4:  End

#new:Script $Script_HealAll
    0:  Call     RandInt     	( 000003E8 *Var[0] )
   14:  If  *Var[0]  >  000002EE 
   24:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
   38:  	If  *Var[0]  &  00000200 
   48:  		ExecWait $Script_WMagikoopa_ShapeSpell 
   54:  	Else
   5C:  		ExecWait $Script_WMagikoopa_WandStrike 
   68:  	EndIf
   70:  	Return
   78:  EndIf
   80:  Call     UseIdleAnimation 	( .Actor:Self .False )
   94:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   A8:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   BC:  Call     UseCamPreset 	( 0000000E )
   CC:  Call     CamTargetActor ( .Actor:Self )
   DC:  Call     MoveCamOver 	( 0000000F )
   EC:  Wait     0000000F 
   F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  10C:  If  *Var[0]  !&  00000200 
  11C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  134:  Else
  13C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  154:  EndIf
  15C:  Wait     00000005 
  168:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  17C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  190:  If  *Var[0]  !&  00000200 
  1A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1D0:  	If  *Var[A]  &  00080000 
  1E0:  		Sub  *Var[0]  00000006 
  1F0:  		Add  *Var[1]  0000000C 
  200:  		Sub  *Var[2]  00000002 
  210:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  254:  	Else
  25C:  		Sub  *Var[0]  00000010 
  26C:  		Add  *Var[1]  0000001F 
  27C:  		Sub  *Var[2]  00000002 
  28C:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	EndIf
  2D8:  Else
  2E0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  310:  	If  *Var[A]  &  00080000 
  320:  		Sub  *Var[0]  0000000C 
  330:  		Add  *Var[1]  0000000E 
  340:  		Sub  *Var[2]  00000002 
  350:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  394:  	Else
  39C:  		Sub  *Var[0]  0000001E 
  3AC:  		Add  *Var[1]  00000024 
  3BC:  		Sub  *Var[2]  00000002 
  3CC:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  410:  	EndIf
  418:  EndIf
  420:  Wait     0000001E 
  42C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  440:  If  *Var[0]  !&  00000200 
  450:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  468:  Else
  470:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  488:  EndIf
  490:  Wait     00000005 
  49C:  Call     CreateTargetList 	( 00008002 )
  4AC:  Call     InitTargetIterator 	( )
  4B8:  Label    00000000 
  4C4:  Set  *Flag[00]  00000000 
  4D4:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  4E8:  Call     GetActorType 	( *Var[0] *Var[1] )
  4FC:  If  *Var[1]  ==  00000047 
  50C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  524:  	If  *Var[1]  ==  00000001 
  534:  		Set  *Flag[00]  00000001 
  544:  	EndIf
  54C:  EndIf
  554:  If  *Flag[00]  ==  00000000 
  564:  	Thread
  56C:  		Wait     00000005 
  578:  		Call     PlaySoundAtActor 	( *Var[0] 0000206D )
  58C:  		Call     PlaySoundAtActor 	( *Var[0] 00000214 )
  5A0:  		Wait     0000001E 
  5AC:  		Call     PlaySoundAtActor 	( *Var[0] 0000025C )
  5C0:  	EndThread
  5C8:  	Thread
  5D0:  		Call     8026BF48 ( 00000001 )
  5E0:  		Call     HealActor   	( *Var[0] 00000003 00000001 )
  5F8:  		Call     8026BF48 ( 00000000 )
  608:  	EndThread
  610:  EndIf
  618:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  62C:  If  *Var[0]  !=  FFFFFFFF 
  63C:  	Goto     00000000 
  648:  EndIf
  650:  Call     8027114C ( )
  65C:  Wait     00000001 
  668:  Call     UseCamPreset 	( 00000002 )
  678:  Wait     0000000A 
  684:  Call     8027D7F0 ( )
  690:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B8:  Return
  6C0:  End

#new:Script $Script_TakeTurn_8022E2F4
    0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_WMagikoopa_RunAway 
   34:  	Return
   3C:  EndIf
   44:  Set  *Var[A]  00000000 
   54:  Set  *Var[B]  00000000 
   64:  Call     CreateTargetList 	( 00008002 )
   74:  Call     InitTargetIterator 	( )
   80:  Label    00000000 
   8C:  Set  *Flag[00]  00000000 
   9C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   B0:  Call     GetActorType 	( *Var[0] *Var[1] )
   C4:  If  *Var[1]  ==  00000047 
   D4:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
   EC:  	If  *Var[1]  ==  00000001 
   FC:  		Set  *Flag[00]  00000001 
  10C:  	EndIf
  114:  EndIf
  11C:  If  *Flag[00]  ==  00000000 
  12C:  	Call     GetActorHP  	( *Var[0] *Var[2] )
  140:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  154:  	If  *Var[2]  !=  *Var[3] 
  164:  		Add  *Var[A]  00000001 
  174:  	EndIf
  17C:  	Add  *Var[B]  00000001 
  18C:  EndIf
  194:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1A8:  If  *Var[0]  !=  FFFFFFFF 
  1B8:  	Goto     00000000 
  1C4:  EndIf
  1CC:  Mul  *Var[A]  00000064 
  1DC:  Div  *Var[A]  *Var[B] 
  1EC:  Switch  *Var[A] 
  1F8:  	Case  >=  0000003C 
  204:  		ExecWait $Script_HealAll 
  210:  	Case  ==  00000000 
  21C:  		Call     GetActorFlags 	( .Actor:Self *Var[0] )
  230:  		If  *Var[0]  &  00000200 
  240:  			ExecWait $Script_WMagikoopa_ShapeSpell 
  24C:  		Else
  254:  			ExecWait $Script_WMagikoopa_WandStrike 
  260:  		EndIf
  268:  	Default
  270:  		ExecWait $Script_HealOne 
  27C:  EndSwitch
  284:  Return
  28C:  End

PADDING: 8022E588 to 8022E590 (0065F398 to 0065F3A0)
00000000 00000000 

#new:Script $Script_BeforeBattle_8022E590
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802536A8 ( 00000001 )
   3C:  Return
   44:  End

#new:Script $Script_AfterBattle_8022E5DC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022E5EC
00000013 00000014 00000015 00000000 

#new:Stage $Stage_8022E5FC
$ASCII_8022F670  % pra_tex
$ASCII_8022F660  % pra_bt01_shape
$ASCII_8022F650  % pra_bt01_hit
$Script_BeforeBattle_8022E590 
$Script_AfterBattle_8022E5DC 
00000000 
$ForegroundModelList_8022E5EC 
00000000 
00000000 
00000000 

PADDING: 8022E624 to 8022E630 (0065F434 to 0065F440)
00000000 00000000 00000000 

#new:Script $Script_8022E630
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   8C:  	Add  *Var[0]  *Var[B] 
   9C:  	Add  *Var[1]  *Var[C] 
   AC:  	Wait     00000001 
   B8:  EndLoop
   C0:  Return
   C8:  End

% Origin: HEURISTIC
#new:Script $Script_8022E700
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

% Origin: HEURISTIC
#new:Script $Script_8022E7EC
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_BeforeBattle_8022E8D8
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802536A8 ( 00000001 )
   3C:  Set  *Var[0]  00000011 
   4C:  Set  *Var[1]  00000000 
   5C:  Set  *Var[2]  00000BB8 
   6C:  Set  *Var[3]  00000000 
   7C:  Exec     $Script_8022E630 
   88:  Set  *Var[0]  00000012 
   98:  Set  *Var[1]  00000000 
   A8:  Set  *Var[2]  00000BB8 
   B8:  Set  *Var[3]  00000000 
   C8:  Exec     $Script_8022E630 
   D4:  Return
   DC:  End

#new:Script $Script_AfterBattle_8022E9BC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022E9CC
00000016 00000017 00000018 00000000 

#new:Stage $Stage_8022E9DC
$ASCII_8022F698  % pra_tex
$ASCII_8022F688  % pra_bt02_shape
$ASCII_8022F678  % pra_bt02_hit
$Script_BeforeBattle_8022E8D8 
$Script_AfterBattle_8022E9BC 
00000000 
$ForegroundModelList_8022E9CC 
00000000 
00000000 
00000000 

PADDING: 8022EA04 to 8022EA10 (0065F814 to 0065F820)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8022EA10
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8022EA4C
    0:  Return
    8:  End

#new:Stage $Stage_8022EA5C
$ASCII_8022F6C0  % pra_tex
$ASCII_8022F6B0  % pra_bt03_shape
$ASCII_8022F6A0  % pra_bt03_hit
$Script_BeforeBattle_8022EA10 
$Script_AfterBattle_8022EA4C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022EA84 to 8022EA90 (0065F894 to 0065F8A0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8022EA90
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000021 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_8022EAE0
    0:  Return
    8:  End

#new:Stage $Stage_8022EAF0
$ASCII_8022F6E8  % pra_tex
$ASCII_8022F6D8  % pra_bt03_shape
$ASCII_8022F6C8  % pra_bt03_hit
$Script_BeforeBattle_8022EA90 
$Script_AfterBattle_8022EAE0 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022EB18 to 8022EB20 (0065F928 to 0065F930)
00000000 00000000 

#new:Script $Script_BeforeBattle_8022EB20
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000021 00000000 )
   40:  Call     802C9308 ( 00000026 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_AfterBattle_8022EB84
    0:  Return
    8:  End

#new:Stage $Stage_8022EB94
$ASCII_8022F710  % pra_tex
$ASCII_8022F700  % pra_bt03_shape
$ASCII_8022F6F0  % pra_bt03_hit
$Script_BeforeBattle_8022EB20 
$Script_AfterBattle_8022EB84 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022EBBC to 8022EBC0 (0065F9CC to 0065F9D0)
00000000 

#new:Script $Script_8022EBC0
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   8C:  	Add  *Var[0]  *Var[B] 
   9C:  	Add  *Var[1]  *Var[C] 
   AC:  	Wait     00000001 
   B8:  EndLoop
   C0:  Return
   C8:  End

% Origin: HEURISTIC
#new:Script $Script_8022EC90
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

% Origin: HEURISTIC
#new:Script $Script_8022ED7C
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_BeforeBattle_8022EE68
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000001 
   3C:  Set  *Var[1]  00000000 
   4C:  Set  *Var[2]  00000BB8 
   5C:  Set  *Var[3]  00000000 
   6C:  Exec     $Script_8022EBC0 
   78:  Set  *Var[0]  00000000 
   88:  Set  *Var[1]  00000001 
   98:  Set  *Var[2]  00000BB8 
   A8:  Set  *Var[3]  00000000 
   B8:  Exec     $Script_8022EBC0 
   C4:  Call     802536A8 ( 00000001 )
   D4:  Return
   DC:  End

#new:Script $Script_AfterBattle_8022EF4C
    0:  Return
    8:  End

#new:Stage $Stage_8022EF5C
$ASCII_8022F738  % pra_tex
$ASCII_8022F728  % pra_bt04_shape
$ASCII_8022F718  % pra_bt04_hit
$Script_BeforeBattle_8022EE68 
$Script_AfterBattle_8022EF4C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022EF84 to 8022EF90 (0065FD94 to 0065FDA0)
00000000 00000000 00000000 

#new:Vector3D $Vector3D_8022EF90
15` 133` -25`

#new:Vector3D $Vector3D_8022EF9C
55` 133` -25`

#new:Vector3D $Vector3D_8022EFA8
95` 133` -25`

MISSING: 8022EFB4 to 8022EFC0 (0065FDC4 to 0065FDD0)
00000087 00000085 FFFFFFE7 

#new:Formation $Formation_00
$Swoopula $Vector3D_8022EF9C 0000000A 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_8022EFA8 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Swoopula $Vector3D_8022EF90 0000000A 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_8022EF9C 00000009 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_8022EFA8 00000008 00000000 00000000 00000000 00000000 

#new:Vector3D $Vector3D_8022F04C
0` 133` -25`

#new:Vector3D $Vector3D_8022F058
40` 133` -25`

#new:Vector3D $Vector3D_8022F064
80` 133` -25`

#new:Vector3D $Vector3D_8022F070
120` 133` -25`

#new:Formation $Formation_02
$Swoopula $Vector3D_8022F04C 0000000A 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_8022F058 00000009 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_8022F064 00000008 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_8022F070 00000007 00000000 00000000 00000000 00000000 

#new:Vector3D $Vector3D_8022F0EC
0` 133` -25`

#new:Vector3D $Vector3D_8022F0F8
40` 133` -25`

#new:Vector3D $Vector3D_8022F104
80` 133` -25`

#new:Vector3D $Vector3D_8022F110
120` 55` 25`

#new:Formation $Formation_03
$Swoopula $Vector3D_8022F0EC 0000000A FFFFFFFF 00000000 00000000 00000000 
$Swoopula $Vector3D_8022F0F8 00000009 FFFFFFFF 00000000 00000000 00000000 
$Swoopula $Vector3D_8022F104 00000008 FFFFFFFF 00000000 00000000 00000000 
$FlyingYMagikoopa $Vector3D_8022F110 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000 
$WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000 
$Swoopula $Vector3D_8022EFA8 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000 
$YMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000 
$WMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000 
$WMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$RMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$WhiteClubba 00000001 0000000A 00000000 00000000 00000000 00000000 
$GRYMagikoopa 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000 
$WhiteClubba 00000002 00000008 00000000 00000000 00000000 00000000 
$GRNMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$WhiteClubba 00000000 0000000A 00000000 00000000 00000000 00000000 
$WhiteClubba 00000001 00000009 00000000 00000000 00000000 00000000 
$GRNMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$FlyingWMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$AlbinoDino 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8022F8F8 00000002 $Formation_00 $Stage_8022E5FC 00000000 % unused
$SJIS_8022F8E4 00000003 $Formation_01 $Stage_8022E5FC 00000000 
$SJIS_8022F8D0 00000004 $Formation_02 $Stage_8022E5FC 00000000 
$SJIS_8022F8A4 00000004 $Formation_03 $Stage_8022E5FC 00000000 
$SJIS_8022F894 00000001 $Formation_04 $Stage_8022E5FC 00000000 % unused
$SJIS_8022F880 00000002 $Formation_05 $Stage_8022E5FC 00000000 % unused
$SJIS_8022F86C 00000003 $Formation_06 $Stage_8022E5FC 00000000 % unused
$SJIS_8022F848 00000003 $Formation_07 $Stage_8022E5FC 00000000 % unused
$SJIS_8022F824 00000003 $Formation_08 $Stage_8022E5FC 00000000 
$SJIS_8022F800 00000003 $Formation_09 $Stage_8022E5FC 00000000 
$SJIS_8022F7CC 00000004 $Formation_0A $Stage_8022E5FC 00000000 % unused
$SJIS_8022F7AC 00000002 $Formation_0B $Stage_8022E5FC 00000000 
$SJIS_8022F788 00000004 $Formation_0C $Stage_8022E5FC 00000000 
$SJIS_8022F74C 00000004 $Formation_0D $Stage_8022E5FC 00000000 
$SJIS_8022F740 00000001 $Formation_0E $Stage_8022E5FC 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8022F934 $Stage_8022E5FC 
$ASCII_8022F92C $Stage_8022E9DC 
$ASCII_8022F924 $Stage_8022EA5C 
$ASCII_8022F91C $Stage_8022EAF0 
$ASCII_8022F914 $Stage_8022EB94 
$ASCII_8022F90C $Stage_8022EF5C 
00000000 00000000 

PADDING: 8022F64C to 8022F650 (0066045C to 00660460)
00000000 

#new:ASCII $ASCII_8022F650
pra_bt01_hit

#new:ASCII $ASCII_8022F660
pra_bt01_shape

#new:ASCII $ASCII_8022F670
pra_tex

#new:ASCII $ASCII_8022F678
pra_bt02_hit

#new:ASCII $ASCII_8022F688
pra_bt02_shape

#new:ASCII $ASCII_8022F698
pra_tex

#new:ASCII $ASCII_8022F6A0
pra_bt03_hit

#new:ASCII $ASCII_8022F6B0
pra_bt03_shape

#new:ASCII $ASCII_8022F6C0
pra_tex

#new:ASCII $ASCII_8022F6C8
pra_bt03_hit

#new:ASCII $ASCII_8022F6D8
pra_bt03_shape

#new:ASCII $ASCII_8022F6E8
pra_tex

#new:ASCII $ASCII_8022F6F0
pra_bt03_hit

#new:ASCII $ASCII_8022F700
pra_bt03_shape

#new:ASCII $ASCII_8022F710
pra_tex

#new:ASCII $ASCII_8022F718
pra_bt04_hit

#new:ASCII $ASCII_8022F728
pra_bt04_shape

#new:ASCII $ASCII_8022F738
pra_tex

#new:SJIS $SJIS_8022F740
% sekizo-
835A834C 835D815B 00000000 

#new:SJIS $SJIS_8022F74C
% howaitogabonx2,guri-nkameku,howaitokameku?sora?
837A838F 83438367 834B837B 83937882 512C834F 838A815B 8393834A 83818362 
834E2C83 7A838F83 43836783 4A838183 62834E81 6982BB82 E7816A00 

#new:SJIS $SJIS_8022F788
% howaitogabonx3,guri-nkameku
837A838F 83438367 834B837B 83937882 522C834F 838A815B 8393834A 83818362 
834E0000 

#new:SJIS $SJIS_8022F7AC
% howaitogabon,gureikameku
837A838F 83438367 834B837B 83932C83 4F838C83 43834A83 81836283 4E000000 

#new:SJIS $SJIS_8022F7CC
% howaitogabonx2,howaitokameku,redokameku
837A838F 83438367 834B837B 83937882 512C837A 838F8343 8367834A 83818362 
834E2C83 8C836283 68834A83 81836283 4E000000 

#new:SJIS $SJIS_8022F800
% howaitogabonx2,howaitokameku
837A838F 83438367 834B837B 83937882 512C837A 838F8343 8367834A 83818362 
834E0000 

#new:SJIS $SJIS_8022F824
% howaitogabonx2,iero-kameku
837A838F 83438367 834B837B 83937882 512C8343 8347838D 815B834A 83818362 
834E0000 

#new:SJIS $SJIS_8022F848
% howaitogabonx2,basabasachururu
837A838F 83438367 834B837B 83937882 512C836F 8354836F 83548360 8385838B 
838B0000 

#new:SJIS $SJIS_8022F86C
% howaitogabonx3
837A838F 83438367 834B837B 83937882 52000000 

#new:SJIS $SJIS_8022F880
% howaitogabonx2
837A838F 83438367 834B837B 83937882 51000000 

#new:SJIS $SJIS_8022F894
% howaitogabon
837A838F 83438367 834B837B 83930000 

#new:SJIS $SJIS_8022F8A4
% basabasachururux3,iero-kameku?sora?
836F8354 836F8354 83608385 838B838B 78332C83 43834783 8D815B83 4A838183 
62834E81 6982BB82 E7816A00 

#new:SJIS $SJIS_8022F8D0
% basabasachururux4
836F8354 836F8354 83608385 838B838B 78340000 

#new:SJIS $SJIS_8022F8E4
% basabasachururux3
836F8354 836F8354 83608385 838B838B 78330000 

#new:SJIS $SJIS_8022F8F8
% basabasachururux2
836F8354 836F8354 83608385 838B838B 78320000 

#new:ASCII $ASCII_8022F90C
pra_04

#new:ASCII $ASCII_8022F914
pra_03c

#new:ASCII $ASCII_8022F91C
pra_03b

#new:ASCII $ASCII_8022F924
pra_03

#new:ASCII $ASCII_8022F92C
pra_02

#new:ASCII $ASCII_8022F934
pra_01

PADDING: 8022F93C to 8022F940 (0066074C to 00660750)
00000000 

