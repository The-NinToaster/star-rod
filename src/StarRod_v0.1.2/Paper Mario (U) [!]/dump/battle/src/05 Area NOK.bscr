% Script File: 05 Area NOK.bscr
% Decoded from: 48D1A0 to 4A10A0 (05 Area NOK)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       80028FF0
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  DADDU     A0, R0, R0
   44:  ADDIU     A2, R0, 5A
   48:  DADDU     A1, A0, R0
   4C:  LIA       A3, $FloatTable_8021A2D4
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  DADDU     A2, V1, R0
   90:  DADDU     A0, V1, R0
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021A2D4)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021A2D4)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  DADDU     V1, A2, R0
   F0:  DADDU     V1, A0, R0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  ADDIU     V0, R0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  ADDIU     V0, R0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28

#new:Function $Function_8021818C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  DADDU     A0, S4, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S0, V0, R0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  DADDU     A0, S4, R0
   50:  JAL       {Func:GetVariable}
   54:  DADDU     S1, V0, R0
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  DADDU     A0, S4, R0
   68:  JAL       {Func:GetVariable}
   6C:  SUBU      S3, S3, S0
   70:  DADDU     S0, V0, R0
   74:  DADDU     A0, S4, R0
   78:  LW        A1, 0 (S2)
   7C:  JAL       {Func:GetVariable}
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  DADDU     A0, S4, R0
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  DADDU     A2, V0, R0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218000
   B8:  CVT.S.W   F14, F14
   BC:  DADDU     A0, S4, R0
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       {Func:SetVariable}
   CC:  NOP
   D0:  ADDIU     V0, R0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28

#new:Function $Function_80218280
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_802182D8
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       80028FF0
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  DADDU     A0, R0, R0
   44:  ADDIU     A2, R0, 5A
   48:  DADDU     A1, A0, R0
   4C:  LIA       A3, $FloatTable_8021D57C
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  DADDU     A2, V1, R0
   90:  DADDU     A0, V1, R0
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021D57C)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021D57C)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  DADDU     V1, A2, R0
   F0:  DADDU     V1, A0, R0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  ADDIU     V0, R0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  ADDIU     V0, R0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28

#new:Function $Function_80218464
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  DADDU     A0, S4, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S0, V0, R0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  DADDU     A0, S4, R0
   50:  JAL       {Func:GetVariable}
   54:  DADDU     S1, V0, R0
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  DADDU     A0, S4, R0
   68:  JAL       {Func:GetVariable}
   6C:  SUBU      S3, S3, S0
   70:  DADDU     S0, V0, R0
   74:  DADDU     A0, S4, R0
   78:  LW        A1, 0 (S2)
   7C:  JAL       {Func:GetVariable}
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  DADDU     A0, S4, R0
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  DADDU     A2, V0, R0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_802182D8
   B8:  CVT.S.W   F14, F14
   BC:  DADDU     A0, S4, R0
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       {Func:SetVariable}
   CC:  NOP
   D0:  ADDIU     V0, R0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28

PADDING: 80218558 to 80218560 (0048D6F8 to 0048D700)
00000000 00000000 

#new:Function $Function_80218560
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       80028FF0
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  DADDU     A0, R0, R0
   44:  ADDIU     A2, R0, 5A
   48:  DADDU     A1, A0, R0
   4C:  LIA       A3, $FloatTable_8021F050
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  DADDU     A2, V1, R0
   90:  DADDU     A0, V1, R0
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021F050)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021F050)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  DADDU     V1, A2, R0
   F0:  DADDU     V1, A0, R0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  ADDIU     V0, R0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  ADDIU     V0, R0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28

#new:Function $Function_802186EC
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  DADDU     A0, S4, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S0, V0, R0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  DADDU     A0, S4, R0
   50:  JAL       {Func:GetVariable}
   54:  DADDU     S1, V0, R0
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  DADDU     A0, S4, R0
   68:  JAL       {Func:GetVariable}
   6C:  SUBU      S3, S3, S0
   70:  DADDU     S0, V0, R0
   74:  DADDU     A0, S4, R0
   78:  LW        A1, 0 (S2)
   7C:  JAL       {Func:GetVariable}
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  DADDU     A0, S4, R0
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  DADDU     A2, V0, R0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218560
   B8:  CVT.S.W   F14, F14
   BC:  DADDU     A0, S4, R0
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       {Func:SetVariable}
   CC:  NOP
   D0:  ADDIU     V0, R0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28

#new:Function $Function_802187E0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 802188AC to 802188B0 (0048DA4C to 0048DA50)
00000000 

#new:Function $Function_802188B0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

#new:Function $Function_80218964
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

PADDING: 80218A18 to 80218A20 (0048DBB8 to 0048DBC0)
00000000 00000000 

#new:Function $Function_80218A20
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218A78
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 80218B44 to 80218B50 (0048DCE4 to 0048DCF0)
00000000 00000000 00000000 

#new:Function $Function_80218B50
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218BA8
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218C74
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        S0, C (S1)
   34:  LW        A1, 0 (S0)
   38:  JAL       {Func:GetVariable}
   3C:  ADDIU     S0, S0, 4
   40:  DADDU     A0, S1, R0
   44:  LW        A1, 0 (S0)
   48:  JAL       {Func:GetVariable}
   4C:  DADDU     S2, V0, R0
   50:  ADDIU     A0, R0, 168
   54:  JAL       {Func:GetRandom}
   58:  DADDU     S3, V0, R0
   5C:  MTC1      V0, F22
   60:  NOP
   64:  CVT.S.W   F22, F22
   68:  LIF       F24, 46.0
   70:  JAL       {Func:CosDeg}
   74:  MOV.S     F12, F22
   78:  MUL.S     F0, F0, F24
   7C:  NOP
   80:  MTC1      S2, F20
   84:  NOP
   88:  CVT.S.W   F20, F20
   8C:  ADD.S     F0, F20, F0
   90:  TRUNC.W.S F2, F0
   94:  MFC1      S2, F2
   98:  JAL       {Func:SinDeg}
   9C:  MOV.S     F12, F22
   A0:  MUL.S     F0, F0, F24
   A4:  NOP
   A8:  MTC1      S3, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  ADD.S     F0, F24, F0
   B8:  LIF       F26, 62.0
   C0:  TRUNC.W.S F2, F0
   C4:  MFC1      S3, F2
   C8:  JAL       {Func:CosDeg}
   CC:  MOV.S     F12, F22
   D0:  MUL.S     F0, F0, F26
   D4:  NOP
   D8:  ADD.S     F20, F20, F0
   DC:  TRUNC.W.S F2, F20
   E0:  MFC1      S4, F2
   E4:  JAL       {Func:SinDeg}
   E8:  MOV.S     F12, F22
   EC:  MUL.S     F0, F0, F26
   F0:  NOP
   F4:  ADDIU     S0, S0, 4
   F8:  LW        A1, 0 (S0)
   FC:  ADDIU     S0, S0, 4
  100:  ADD.S     F24, F24, F0
  104:  DADDU     A2, S2, R0
  108:  TRUNC.W.S F2, F24
  10C:  MFC1      S2, F2
  110:  JAL       {Func:SetVariable}
  114:  DADDU     A0, S1, R0
  118:  LW        A1, 0 (S0)
  11C:  ADDIU     S0, S0, 4
  120:  DADDU     A0, S1, R0
  124:  JAL       {Func:SetVariable}
  128:  DADDU     A2, S3, R0
  12C:  LW        A1, 0 (S0)
  130:  ADDIU     S0, S0, 4
  134:  DADDU     A0, S1, R0
  138:  JAL       {Func:SetVariable}
  13C:  DADDU     A2, S4, R0
  140:  DADDU     A0, S1, R0
  144:  LW        A1, 0 (S0)
  148:  JAL       {Func:SetVariable}
  14C:  DADDU     A2, S2, R0
  150:  LW        RA, 24 (SP)
  154:  LW        S4, 20 (SP)
  158:  LW        S3, 1C (SP)
  15C:  LW        S2, 18 (SP)
  160:  LW        S1, 14 (SP)
  164:  LW        S0, 10 (SP)
  168:  LDC1      F26, 40 (SP)
  16C:  LDC1      F24, 38 (SP)
  170:  LDC1      F22, 30 (SP)
  174:  LDC1      F20, 28 (SP)
  178:  ADDIU     V0, R0, 2
  17C:  JR        RA
  180:  ADDIU     SP, SP, 48

% Origin: HEURISTIC
#new:Function $Function_80218DF8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       {Func:GetVariable}
   10:  LW        A1, 4 (V0)
   14:  LW        RA, 10 (SP)
   18:  ADDIU     V0, R0, 2
   1C:  JR        RA
   20:  ADDIU     SP, SP, 18

PADDING: 80218E1C to 80218E20 (0048DFBC to 0048DFC0)
00000000 

#new:Formation $Formation_00
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000 
$Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000001 00000009 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$SpikedGoomba 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$KoopaTroopa 00000001 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Paragoomba 00000005 00000009 00000000 00000000 00000000 00000000 
$Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000001 00000009 00000000 00000000 00000000 00000000 
$Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$KoopaTroopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000 
$Paragoomba 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_11
$Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000 
$Paratroopa 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_12
$Paratroopa 00000005 0000000A 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_13
$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_14
$Paratroopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$KoopaTroopa 00000001 00000009 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000008 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_15
$Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_16
$Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 
$Fuzzy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_17
$Fuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$Fuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$Fuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$Fuzzy 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_18
$KentCKoopa 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8022BE10 00000002 $Formation_00 $Stage_8022BAEC 00000000 % unused
$SJIS_8022BDF8 00000002 $Formation_01 $Stage_8022BAEC 00000000 
$SJIS_8022BDE8 00000002 $Formation_02 $Stage_8022BAEC 00000000 
$SJIS_8022BDCC 00000002 $Formation_03 $Stage_8022BAEC 00000000 
$SJIS_8022BDBC 00000002 $Formation_04 $Stage_8022BAEC 00000000 
$SJIS_8022BDA0 00000003 $Formation_05 $Stage_8022BAEC 00000000 % unused
$SJIS_8022BD90 00000003 $Formation_06 $Stage_8022BAEC 00000000 
$SJIS_8022BD80 00000004 $Formation_07 $Stage_8022BAEC 00000000 % unused
$SJIS_8022BD6C 00000002 $Formation_08 $Stage_8022BAEC 00000000 
$SJIS_8022BD60 00000002 $Formation_09 $Stage_8022BAEC 00000000 
$SJIS_8022BD54 00000003 $Formation_0A $Stage_8022BAEC 00000000 % unused
$SJIS_8022BD3C 00000002 $Formation_0B $Stage_8022BAEC 00000000 
$SJIS_8022BD24 00000003 $Formation_0C $Stage_8022BAEC 00000000 
$SJIS_8022BD08 00000003 $Formation_0D $Stage_8022BAEC 00000000 
$SJIS_8022BCEC 00000003 $Formation_0E $Stage_8022BAEC 00000000 % unused
$SJIS_8022BCC8 00000003 $Formation_0F $Stage_8022BAEC 00000000 
$SJIS_8022BCA0 00000004 $Formation_10 $Stage_8022BAEC 00000000 % unused
$SJIS_8022BC94 00000002 $Formation_11 $Stage_8022BAEC 00000000 
$SJIS_8022BC80 00000002 $Formation_12 $Stage_8022BAEC 00000000 % unused
$SJIS_8022BC5C 00000003 $Formation_13 $Stage_8022BAEC 00000000 % unused
$SJIS_8022BC38 00000004 $Formation_14 $Stage_8022BAEC 00000000 
$SJIS_8022BC2C 00000001 $Formation_15 $Stage_8022BAEC 00000000 % unused
$SJIS_8022BC1C 00000002 $Formation_16 $Stage_8022BAEC 00000000 
$SJIS_8022BC0C 00000004 $Formation_17 $Stage_8022BAEC 00000000 
$SJIS_8022BC00 00000001 $Formation_18 $Stage_8022BAEC 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8022BE34 $Stage_8022B7E0 
$ASCII_8022BE2C $Stage_8022BAEC 
$ASCII_8022BE24 $Stage_8022BB5C 
$ASCII_8022BE1C $Stage_8022BBD8 
00000000 00000000 

#new:DefenseTable $DefenseTable_80219750
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021975C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80219808
00800000 01000000 001400FF $IdleAnimations_80219854 $DefenseTable_80219750 00000000 00000000 00F60000 00000000 

#new:Actor $Goomba
% stats
[Index]         7b 
[Level]         5`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021975C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80219808 
[Script]      $Script_Init_802198EC 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80219854
.Status:Normal    00260001
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260001
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:IdleAnimations $IdleAnimations_802198A0
.Status:Normal    00260003
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260003
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:Script $Script_Init_802198EC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021A440 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80219938 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219C14 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_80219938
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198A0 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027A264 ( FFFFFF81 00000000 )
  128:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219854 )
  140:  Loop     00000014 
  14C:  	Label    00000001 
  158:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  16C:  	If  *Var[1]  &  0035D000 
  17C:  		Wait     00000001 
  188:  		Goto     00000001 
  194:  	EndIf
  19C:  	Wait     00000001 
  1A8:  EndLoop
  1B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Sub  *Var[0]  00000005 
  1DC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198A0 )
  208:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  224:  Call     8027A264 ( FFFFFF81 00000000 )
  238:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219854 )
  250:  Loop     00000050 
  25C:  	Label    00000002 
  268:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  27C:  	If  *Var[1]  &  0035D000 
  28C:  		Wait     00000001 
  298:  		Goto     00000002 
  2A4:  	EndIf
  2AC:  	Wait     00000001 
  2B8:  EndLoop
  2C0:  Goto     0000000A 
  2CC:  Return
  2D4:  End

#new:Script $Script_HandleEvent_80219C14
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  00260005 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  00260009 
   DC:  		SetConst  *Var[2]  0026000A 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  00260009 
  124:  		SetConst  *Var[2]  0026000A 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  0026000A 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  00260005 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00260005 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00260006 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0026000E 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  00260005 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  344:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  0026000E 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00260006 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00260001 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  00260005 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00260006 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  00260001 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  00260003 
  5C4:  		SetConst  *Var[2]  00260005 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  00260003 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  00260005 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End

#new:FloatTable $FloatTable_8021A2D4
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021A440
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
   FC:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  118:  Wait     00000001 
  124:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  140:  Wait     00000005 
  14C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  168:  Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[0] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:  				Call     $Function_8021818C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  2E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260008 )
  3B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  3D0:  		Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  3F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  43C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  5B4:  			Loop     00000004 
  5C0:  				Sub  *Var[0]  0000002D 
  5D0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  5EC:  				Wait     00000001 
  5F8:  			EndLoop
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  658:  		Wait     00000005 
  664:  		Call     UseCamPreset 	( 00000002 )
  674:  		Call     8027D7F0 ( )
  680:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  754:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  838:  			Loop     00000010 
  844:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  860:  				Call     $Function_8021818C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  880:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  89C:  				Set  *Var[1]  *Var[4] 
  8AC:  				Set  *Var[2]  *Var[5] 
  8BC:  				Set  *Var[3]  *Var[6] 
  8CC:  				Wait     00000001 
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 0026000B )
  954:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  970:  		Wait     00000001 
  97C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseCamPreset 	( 00000002 )
  A08:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  A24:  		Wait     00000001 
  A30:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait     00000001 
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  BE4:  		Wait     00000003 
  BF0:  		Call     8027D7F0 ( )
  BFC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  C2C:  		Call     SetGoalToHome 	( .Actor:Self )
  C3C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  C50:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  C68:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CA4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CB8:  Return
  CC0:  End

PADDING: 8021B108 to 8021B110 (004902A8 to 004902B0)
00000000 00000000 

#new:DefenseTable $DefenseTable_8021B110
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_8021B11C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021B128
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_8021B1D4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     80`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear       80`
.Status:Static     80`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021B280
00020001 01000000 001400FF $IdleAnimations_8021CAFC $DefenseTable_8021B110 00000000 00000000 00F60000 00000000 
00800000 02000000 001800FF $IdleAnimations_8021B338 $DefenseTable_8021B11C 00004000 00000000 00F60000 00000000 
00020001 03000000 F01800FF $IdleAnimations_8021B3D0 $DefenseTable_8021B110 00000000 00000000 00F60000 00000000 
00020001 04000000 F01800FF $IdleAnimations_8021B3DC $DefenseTable_8021B110 00000000 00000000 00F60000 00000000 

#new:Actor $Paragoomba
% stats
[Index]         8b 
[Level]         6`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021B1D4 
% ai
[SpriteCount]   4`s 
[SpriteTable] $SpriteTable_8021B280 
[Script]      $Script_Init_8021B3E8 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]   100`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021B338
.Status:Normal    00280001
.Status:Stone     00280000
.Status:Sleep     0028000B
.Status:Poison    00280001
.Status:Stop      00280000
.Status:Static    00280001
.Status:Paralyze  00280000
.Status:Dizzy     0028000C
.Status:Fear      0028000C
.Status:End

#new:IdleAnimations $IdleAnimations_8021B384
.Status:Normal    00280004
.Status:Stone     00280000
.Status:Sleep     0028000B
.Status:Poison    00280001
.Status:Stop      00280000
.Status:Static    00280004
.Status:Paralyze  00280000
.Status:Dizzy     0028000C
.Status:Fear      0028000C
.Status:End

#new:IdleAnimations $IdleAnimations_8021B3D0
.Status:Normal    00280009
.Status:End

#new:IdleAnimations $IdleAnimations_8021B3DC
.Status:Normal    0028000A
.Status:End

#new:Script $Script_Init_8021B3E8
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021BD5C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021B434 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021B768 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021B434
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[0.60058594] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021B384 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027BBB8 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
  130:  Loop     00000014 
  13C:  	Label    00000001 
  148:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  15C:  	If  *Var[1]  &  0035D000 
  16C:  		Wait     00000001 
  178:  		Goto     00000001 
  184:  	EndIf
  18C:  	Wait     00000001 
  198:  EndLoop
  1A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  Sub  *Var[0]  00000005 
  1CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[0.60058594] )
  1E0:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  1FC:  Call     8027BBB8 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
  218:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021B338 )
  230:  Loop     00000028 
  23C:  	Label    00000002 
  248:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  25C:  	If  *Var[1]  &  0035D000 
  26C:  		Wait     00000001 
  278:  		Goto     00000002 
  284:  	EndIf
  28C:  	Wait     00000001 
  298:  EndLoop
  2A0:  Goto     0000000A 
  2AC:  Return
  2B4:  End

#new:Script $Script_8021B6F0
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  Call     SetGoalToHome 	( .Actor:Self )
   20:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
   34:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   50:  Call     SetAnimation 	( .Actor:Self 00000002 00280001 )
   68:  Return
   70:  End

#new:Script $Script_HandleEvent_8021B768
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00280006 
   80:  		ExecWait DoNormalHit 
   8C:  		Call     GetBattlePhase ( *Var[0] )
   9C:  		If  *Var[0]  ==  .Phase:FirstStrike
   AC:  			Call     8027D7C4 ( *Var[0] )
   BC:  			If  *Var[0]  ==  00000004 
   CC:  				ExecWait $Script_8021C574 
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit
   FC:  		SetConst  *Var[0]  00000002 
  10C:  		SetConst  *Var[1]  0028000D 
  11C:  		SetConst  *Var[2]  0028000E 
  12C:  		ExecWait DoBurnHit 
  138:  	Case  ==  .Event:BurnDeath
  144:  		SetConst  *Var[0]  00000002 
  154:  		SetConst  *Var[1]  0028000D 
  164:  		SetConst  *Var[2]  0028000E 
  174:  		ExecWait DoBurnHit 
  180:  		SetConst  *Var[0]  00000002 
  190:  		SetConst  *Var[1]  0028000E 
  1A0:  		ExecWait DoDeath 
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger
  1C0:  		SetConst  *Var[0]  00000002 
  1D0:  		SetConst  *Var[1]  00280006 
  1E0:  		ExecWait DoNormalHit 
  1EC:  		ExecWait $Script_8021C574 
  1F8:  	Case  ==  0000000F
  204:  		SetConst  *Var[0]  00000002 
  214:  		SetConst  *Var[1]  0028000D 
  224:  		SetConst  *Var[2]  0028000E 
  234:  		ExecWait DoBurnHit 
  240:  		ExecWait $Script_8021C574 
  24C:  	Case  ==  .Event:ShockHit
  258:  		SetConst  *Var[0]  00000002 
  268:  		SetConst  *Var[1]  0028000F 
  278:  		ExecWait DoShockHit 
  284:  		SetConst  *Var[0]  00000002 
  294:  		SetConst  *Var[1]  00280006 
  2A4:  		ExecWait 8029BD70 
  2B0:  		Call     SetAnimation 	( .Actor:Self 00000002 0028000C )
  2C8:  		ExecWait $Script_8021B6F0 
  2D4:  	Case  ==  .Event:ShockDeath
  2E0:  		SetConst  *Var[0]  00000002 
  2F0:  		SetConst  *Var[1]  0028000F 
  300:  		ExecWait DoShockHit 
  30C:  		SetConst  *Var[0]  00000002 
  31C:  		SetConst  *Var[1]  00280007 
  32C:  		ExecWait DoDeath 
  338:  		Return
  340:  	Case  ==  .Event:StarBeam
  34C:  	CaseOR  ==  00000017
  358:  	CaseOR  ==  .Event:Immune
  364:  	CaseOR  ==  .Event:AirLiftFailed
  370:  		SetConst  *Var[0]  00000002 
  380:  		SetConst  *Var[1]  00280001 
  390:  		ExecWait DoImmune 
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death
  3B0:  		SetConst  *Var[0]  00000002 
  3C0:  		SetConst  *Var[1]  00280006 
  3D0:  		ExecWait DoNormalHit 
  3DC:  		Wait     0000000A 
  3E8:  		SetConst  *Var[0]  00000002 
  3F8:  		SetConst  *Var[1]  00280007 
  408:  		ExecWait DoDeath 
  414:  		Return
  41C:  	Case  ==  .Event:BeginFirstStrike
  428:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  444:  		Call     HPBarToCurrent ( .Actor:Self )
  454:  	Case  ==  .Event:EndFirstStrike
  460:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  478:  		ExecWait $Script_8021B6F0 
  484:  		Call     HPBarToHome 	( .Actor:Self )
  494:  	Case  ==  .Event:RecoverStatus
  4A0:  		SetConst  *Var[0]  00000002 
  4B0:  		SetConst  *Var[1]  00280001 
  4C0:  		ExecWait DoRecover 
  4CC:  	Case  ==  .Event:ScareAway
  4D8:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4F0:  		SetConst  *Var[0]  00000002 
  500:  		SetConst  *Var[1]  00280004 
  510:  		SetConst  *Var[2]  00280006 
  520:  		ExecWait DoScareAway 
  52C:  		Return
  534:  	Case  ==  .Event:BeginAirLift
  540:  		SetConst  *Var[0]  00000002 
  550:  		SetConst  *Var[1]  00280004 
  560:  		ExecWait DoAirLift 
  56C:  	Case  ==  .Event:BlowAway
  578:  		SetConst  *Var[0]  00000002 
  588:  		SetConst  *Var[1]  00280006 
  598:  		ExecWait DoBlowAway 
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  5D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5E4:  Return
  5EC:  End

#new:Script $Script_TakeTurn_8021BD5C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 0000003F )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
   9C:  Call     SetGoalToTarget 	( .Actor:Self )
   AC:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   C8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   DC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
   F8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  11C:  Switch  *Var[0] 
  128:  	CaseOR  ==  00000006 
  134:  	CaseOR  ==  00000005 
  140:  		Set  *Var[A]  *Var[0] 
  150:  		Wait     0000000A 
  15C:  		Call     UseCamPreset 	( 00000042 )
  16C:  		Call     SetCamZoom  	( 0000012C )
  17C:  		Call     CamTargetActor ( .Actor:Self )
  18C:  		Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E0 )
  1B8:  		Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1D4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1E8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1FC:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  214:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  230:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  24C:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  26C:  		Call     PlaySoundAtActor 	( .Actor:Self 000002C1 )
  280:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  29C:  		Call     SetGoalToTarget 	( .Actor:Self )
  2AC:  		Sub  *Var[0]  00000050 
  2BC:  		Set  *Var[1]  00000014 
  2CC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2FC:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  314:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop     00000004 
  344:  				Call     PlaySoundAtActor 	( .Actor:Self 000020DF )
  358:  				Wait     00000004 
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call     SetAnimation 	( .Actor:Self 00000002 00280002 )
  38C:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call     SetAnimationSpeed 	( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait     0000000A 
  3CC:  		If  *Var[A]  ==  00000005 
  3DC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait     0000000A 
  414:  		Call     SetAnimationSpeed 	( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call     UseCamPreset 	( 00000002 )
  43C:  		Call     8026F6EC ( FFFFFF81 )
  44C:  		Call     8027D7F0 ( )
  458:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  470:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  484:  		ExecWait $Script_8021B6F0 
  490:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  4A4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  4BC:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  4D0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait     0000000A 
  508:  		Call     UseCamPreset 	( 00000042 )
  518:  		Call     SetCamZoom  	( 0000012C )
  528:  		Call     CamTargetActor ( .Actor:Self )
  538:  		Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  550:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E0 )
  564:  		Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  580:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  594:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  5C0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5F8:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  618:  		Call     PlaySoundAtActor 	( .Actor:Self 000002C1 )
  62C:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  648:  		Call     SetGoalToTarget 	( .Actor:Self )
  658:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  66C:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  684:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait     00000002 
  6B4:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  6DC:  Switch  *Var[0] 
  6E8:  	CaseOR  ==  00000000 
  6F4:  	CaseOR  ==  00000002 
  700:  		Call     UseCamPreset 	( 00000002 )
  710:  		Call     SetGoalToTarget 	( .Actor:Self )
  720:  		Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  73C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  750:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  768:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  784:  		Call     8026F6EC ( FFFFFF81 )
  794:  		Wait     00000005 
  7A0:  		Call     8027D7F0 ( )
  7AC:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  7C4:  		ExecWait $Script_8021B6F0 
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  7F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  808:  Return
  810:  End

#new:Script $Script_8021C574
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     SetSpriteFlags ( .Actor:Self 00000002 00020005 )
   28:  Call     SetSpriteFlags ( .Actor:Self 00000003 00120004 )
   40:  Call     SetSpriteFlags ( .Actor:Self 00000004 00120004 )
   58:  Call     SetSpriteFlags ( .Actor:Self 00000001 00800004 )
   70:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   8C:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
   AC:  Call     SetSpriteOffset 	( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetSpriteOffset 	( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call     GetEventType 	( .Actor:Self *Var[0] )
  120:  If  *Var[0]  ==  0000000F
  130:  	Call     SetAnimation 	( .Actor:Self 00000001 0026000A )
  148:  Else
  150:  	Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  168:  EndIf
  170:  Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
  18C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1A8:  Set  *Var[1]  00000000 
  1B8:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  1CC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E8:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  208:  Call     $Function_80218280 ( 00000064 0000000A )
  21C:  Thread
  224:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.30078125] )
  240:  EndThread
  248:  Call     8026F838 ( FFFFFF81 00000002 )
  25C:  Call     GetEventType 	( .Actor:Self *Var[3] )
  270:  If  *Var[3]  ==  0000000F
  280:  	Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  298:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B4:  	Add  *Var[4]  0000000A 
  2C4:  	Add  *Var[5]  00000005 
  2D4:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  33C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  35C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  378:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  398:  Loop     0000000A 
  3A4:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait     00000001 
  3E8:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  404:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .False )
  420:  	Wait     00000001 
  42C:  EndLoop
  434:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  450:  Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
  46C:  Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
  480:  Mod  *Var[0]  00000004 
  490:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  4A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4DC:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  4F4:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  50C:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021B128 )
  520:  Call     SetActorType 	( FFFFFF81 00000007 )
  534:  ExecWait $Script_8021CB94 
  540:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  558:  Call     HPBarToHome 	( .Actor:Self )
  568:  Call     8026F6EC ( FFFFFF81 )
  578:  Return
  580:  End

#new:IdleAnimations $IdleAnimations_8021CAFC
.Status:Normal    00260001
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260001
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:IdleAnimations $IdleAnimations_8021CB48
.Status:Normal    00260003
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260003
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:Script $Script_8021CB94
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D6E8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021CBE0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021CEBC )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021CBE0
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CB48 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027A264 ( FFFFFF81 00000000 )
  128:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CAFC )
  140:  Loop     00000014 
  14C:  	Label    00000001 
  158:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  16C:  	If  *Var[1]  &  0035D000 
  17C:  		Wait     00000001 
  188:  		Goto     00000001 
  194:  	EndIf
  19C:  	Wait     00000001 
  1A8:  EndLoop
  1B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Sub  *Var[0]  00000005 
  1DC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CB48 )
  208:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  224:  Call     8027A264 ( FFFFFF81 00000000 )
  238:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CAFC )
  250:  Loop     00000050 
  25C:  	Label    00000002 
  268:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  27C:  	If  *Var[1]  &  0035D000 
  28C:  		Wait     00000001 
  298:  		Goto     00000002 
  2A4:  	EndIf
  2AC:  	Wait     00000001 
  2B8:  EndLoop
  2C0:  Goto     0000000A 
  2CC:  Return
  2D4:  End

#new:Script $Script_HandleEvent_8021CEBC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  00260005 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  00260009 
   DC:  		SetConst  *Var[2]  0026000A 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  00260009 
  124:  		SetConst  *Var[2]  0026000A 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  0026000A 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  00260005 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00260005 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00260006 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0026000E 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  00260005 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  344:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  0026000E 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00260006 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00260001 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  00260005 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00260006 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  00260001 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  00260003 
  5C4:  		SetConst  *Var[2]  00260005 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  00260003 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  00260005 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End

#new:FloatTable $FloatTable_8021D57C
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021D6E8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
   FC:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  118:  Wait     00000001 
  124:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  140:  Wait     00000005 
  14C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  168:  Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[0] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:  				Call     $Function_80218464 ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  2E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260008 )
  3B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  3D0:  		Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  3F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  43C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  5B4:  			Loop     00000004 
  5C0:  				Sub  *Var[0]  0000002D 
  5D0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  5EC:  				Wait     00000001 
  5F8:  			EndLoop
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  658:  		Wait     00000005 
  664:  		Call     UseCamPreset 	( 00000002 )
  674:  		Call     8027D7F0 ( )
  680:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  754:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  838:  			Loop     00000010 
  844:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  860:  				Call     $Function_80218464 ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  880:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  89C:  				Set  *Var[1]  *Var[4] 
  8AC:  				Set  *Var[2]  *Var[5] 
  8BC:  				Set  *Var[3]  *Var[6] 
  8CC:  				Wait     00000001 
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 0026000B )
  954:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  970:  		Wait     00000001 
  97C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseCamPreset 	( 00000002 )
  A08:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  A24:  		Wait     00000001 
  A30:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait     00000001 
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  BE4:  		Wait     00000003 
  BF0:  		Call     8027D7F0 ( )
  BFC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  C2C:  		Call     SetGoalToHome 	( .Actor:Self )
  C3C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  C50:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  C68:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CA4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CB8:  Return
  CC0:  End

#new:DefenseTable $DefenseTable_8021E3B0
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021E3BC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     80`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear       80`
.Status:Static     80`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021E468
00800000 01000000 001800FF $IdleAnimations_8021E4B4 $DefenseTable_8021E3B0 00000010 00000000 00F40000 00000000 

#new:Actor $SpikedGoomba
% stats
[Index]         9b 
[Level]         6`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E3BC 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021E468 
[Script]      $Script_Init_8021E54C 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]      95`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021E4B4
.Status:Normal    00270001
.Status:Stone     00270000
.Status:Sleep     0027000A
.Status:Poison    00270001
.Status:Stop      00270000
.Status:Static    00270001
.Status:Paralyze  00270000
.Status:Dizzy     00270009
.Status:Fear      00270009
.Status:End

#new:IdleAnimations $IdleAnimations_8021E500
.Status:Normal    00270003
.Status:Stone     00270000
.Status:Sleep     0027000A
.Status:Poison    00270001
.Status:Stop      00270000
.Status:Static    00270003
.Status:Paralyze  00270000
.Status:Dizzy     00270009
.Status:Fear      00270009
.Status:End

#new:Script $Script_Init_8021E54C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021F1BC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021E598 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E874 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021E598
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E500 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027A264 ( FFFFFF81 00000000 )
  128:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E4B4 )
  140:  Loop     00000014 
  14C:  	Label    00000001 
  158:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  16C:  	If  *Var[1]  &  0035D000 
  17C:  		Wait     00000001 
  188:  		Goto     00000001 
  194:  	EndIf
  19C:  	Wait     00000001 
  1A8:  EndLoop
  1B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Sub  *Var[0]  00000005 
  1DC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E500 )
  208:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  224:  Call     8027A264 ( FFFFFF81 00000000 )
  238:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E4B4 )
  250:  Loop     00000050 
  25C:  	Label    00000002 
  268:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  27C:  	If  *Var[1]  &  0035D000 
  28C:  		Wait     00000001 
  298:  		Goto     00000002 
  2A4:  	EndIf
  2AC:  	Wait     00000001 
  2B8:  EndLoop
  2C0:  Goto     0000000A 
  2CC:  Return
  2D4:  End

#new:Script $Script_HandleEvent_8021E874
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  00270006 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  00270007 
   DC:  		SetConst  *Var[2]  00270008 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  00270007 
  124:  		SetConst  *Var[2]  00270008 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  00270008 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  00270006 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00270006 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00270005 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0027000C 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  00270006 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00270009 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  344:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  0027000C 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00270005 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00270001 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  00270006 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00270005 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00270003 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  00270001 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  00270003 
  5C4:  		SetConst  *Var[2]  00270006 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  00270003 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  00270006 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Case  ==  .Event:SpikeTaunt
  66C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  680:  		If  *Var[0]  !&  0035D000 
  690:  			Call     SetAnimation 	( .Actor:Self 00000001 0027000B )
  6A8:  		EndIf
  6B0:  		Wait     0000000A 
  6BC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6D8:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  6EC:  		If  *Var[3]  &  00080000 
  6FC:  			Add  *Var[1]  0000000A 
  70C:  		Else
  714:  			Add  *Var[1]  0000001A 
  724:  		EndIf
  72C:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  770:  		Wait     00000014 
  77C:  	Default
  784:  EndSwitch
  78C:  Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  7A4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7CC:  Return
  7D4:  End

#new:FloatTable $FloatTable_8021F050
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021F1BC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00270003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
   FC:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  118:  Wait     00000001 
  124:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  140:  Wait     00000005 
  14C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  168:  Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[0] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:  				Call     $Function_802186EC ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  2E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 0027000A )
  3B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  3D0:  		Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  3F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  43C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 00270006 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  5B4:  			Loop     00000004 
  5C0:  				Sub  *Var[0]  0000002D 
  5D0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  5EC:  				Wait     00000001 
  5F8:  			EndLoop
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 00270009 )
  658:  		Wait     00000005 
  664:  		Call     UseCamPreset 	( 00000002 )
  674:  		Call     8027D7F0 ( )
  680:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  754:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  838:  			Loop     00000010 
  844:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  860:  				Call     $Function_802186EC ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  880:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  89C:  				Set  *Var[1]  *Var[4] 
  8AC:  				Set  *Var[2]  *Var[5] 
  8BC:  				Set  *Var[3]  *Var[6] 
  8CC:  				Wait     00000001 
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  954:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  970:  		Wait     00000001 
  97C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseCamPreset 	( 00000002 )
  A08:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  A24:  		Wait     00000001 
  A30:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait     00000001 
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  BE0:  		If  *Var[0]  >  00000000 
  BF0:  			Call     SetAnimation 	( .Actor:Self 00000001 0027000B )
  C08:  			Wait     0000000F 
  C14:  		Else
  C1C:  			Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  C34:  			Wait     00000003 
  C40:  		EndIf
  C48:  		Call     8027D7F0 ( )
  C54:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  C6C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270003 )
  C84:  		Call     SetGoalToHome 	( .Actor:Self )
  C94:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  CA8:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  CC0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  CD8:  	EndCaseGroup
  CE0:  EndSwitch
  CE8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CFC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D10:  Return
  D18:  End

PADDING: 8021FEDC to 8021FEE0 (0049507C to 00495080)
00000000 

#new:DefenseTable $DefenseTable_8021FEE0
.Element:Normal 00000001
.Element:Hammer 00000001
.Element:Jump   00000001
.Element:Water  00000001
.Element:Blast  00000001
.Element:End

#new:DefenseTable $DefenseTable_8021FF0C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021FF18
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     60`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   90`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021FFC4
00800000 01000000 FE2400FF $IdleAnimations_80220010 $DefenseTable_8021FEE0 00001000 00000000 00F90000 00000000 

#new:Actor $KoopaTroopa
% stats
[Index]         Bb 
[Level]         6`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021FF18 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021FFC4 
[Script]      $Script_Init_802200F4 
% move effectiveness
[Escape]       70`b 
[Item]         90`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  32`b % dx dy
[StatusIcon]    5`b  32`b % dx dy

#new:IdleAnimations $IdleAnimations_80220010
.Status:Normal    00290101
.Status:Stone     00290100
.Status:Sleep     00290111
.Status:Poison    00290101
.Status:Stop      00290100
.Status:Static    00290101
.Status:Paralyze  00290100
.Status:Dizzy     00290113
.Status:Fear      00290113
.Status:End

#new:IdleAnimations $IdleAnimations_8022005C
.Status:Normal    00290103
.Status:Stone     00290100
.Status:Sleep     00290111
.Status:Poison    00290103
.Status:Stop      00290100
.Status:Static    00290103
.Status:Paralyze  00290100
.Status:Dizzy     00290113
.Status:Fear      00290113
.Status:End

#new:IdleAnimations $IdleAnimations_802200A8
.Status:Normal    0029010F
.Status:Stone     00290110
.Status:Sleep     00290112
.Status:Poison    0029010F
.Status:Stop      00290110
.Status:Static    0029010F
.Status:Paralyze  00290110
.Status:Dizzy     00290114
.Status:Fear      00290114
.Status:End

#new:Script $Script_Init_802200F4
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022131C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802202B0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220798 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_80220158
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000000 
   18:  		If  *Var[1]  &  00041000 
   28:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   44:  			Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call     $Function_802187E0 ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
   A0:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call     $Function_802187E0 ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001 
   EC:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call     $Function_802187E0 ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End

#new:Script $Script_Idle_802202B0
    0:  Label    00000000 
    C:  Call     RandInt     	( 00000050 *Var[A] )
   20:  Add  *Var[A]  00000050 
   30:  Loop     *Var[A] 
   3C:  	Label    00000001 
   48:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   60:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   74:  	ExecWait $Script_80220158 
   80:  	If  *Var[0]  ==  00000001 
   90:  		Wait     00000001 
   9C:  		Goto     00000001 
   A8:  	EndIf
   B0:  	If  *Var[1]  &  0035D000 
   C0:  		Wait     00000001 
   CC:  		Goto     00000001 
   D8:  	EndIf
   E0:  	Wait     00000001 
   EC:  EndLoop
   F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  110:  Add  *Var[0]  00000005 
  120:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  134:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022005C )
  14C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  168:  Call     8027A264 ( FFFFFF81 00000000 )
  17C:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  194:  Switch  *Var[0] 
  1A0:  	Case  ==  00000000 
  1AC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220010 )
  1C4:  	Case  ==  00000001 
  1D0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802200A8 )
  1E8:  EndSwitch
  1F0:  Loop     00000014 
  1FC:  	Label    00000002 
  208:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  220:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  234:  	ExecWait $Script_80220158 
  240:  	If  *Var[0]  ==  00000001 
  250:  		Wait     00000001 
  25C:  		Goto     00000002 
  268:  	EndIf
  270:  	If  *Var[1]  &  0035D000 
  280:  		Wait     00000001 
  28C:  		Goto     00000002 
  298:  	EndIf
  2A0:  	Wait     00000001 
  2AC:  EndLoop
  2B4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  Sub  *Var[0]  00000005 
  2E0:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  2F4:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022005C )
  30C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  328:  Call     8027A264 ( FFFFFF81 00000000 )
  33C:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  354:  Switch  *Var[0] 
  360:  	Case  ==  00000000 
  36C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220010 )
  384:  	Case  ==  00000001 
  390:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802200A8 )
  3A8:  EndSwitch
  3B0:  Loop     00000050 
  3BC:  	Label    00000003 
  3C8:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  3E0:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  3F4:  	ExecWait $Script_80220158 
  400:  	If  *Var[0]  ==  00000001 
  410:  		Wait     00000001 
  41C:  		Goto     00000003 
  428:  	EndIf
  430:  	If  *Var[1]  &  0035D000 
  440:  		Wait     00000001 
  44C:  		Goto     00000003 
  458:  	EndIf
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Goto     00000000 
  480:  Return
  488:  End

#new:IntTable $IntTable_80220740
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80220798
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   3C:  Call     GetEventType 	( .Actor:Self *Var[0] )
   50:  Switch  *Var[0] 
   5C:  	CaseOR  ==  .Event:HitCombo
   68:  	CaseOR  ==  .Event:Hit
   74:  		SetConst  *Var[0]  00000001 
   84:  		SetConst  *Var[1]  0029010B 
   94:  		ExecWait DoNormalHit 
   A0:  	EndCaseGroup
   A8:  	Case  ==  .Event:BurnHit
   B4:  		SetConst  *Var[0]  00000001 
   C4:  		SetConst  *Var[1]  0029010C 
   D4:  		SetConst  *Var[2]  0029010D 
   E4:  		ExecWait DoBurnHit 
   F0:  	Case  ==  .Event:BurnDeath
   FC:  		SetConst  *Var[0]  00000001 
  10C:  		SetConst  *Var[1]  0029010C 
  11C:  		SetConst  *Var[2]  0029010D 
  12C:  		ExecWait DoBurnHit 
  138:  		SetConst  *Var[0]  00000001 
  148:  		SetConst  *Var[1]  0029010D 
  158:  		ExecWait DoDeath 
  164:  		Return
  16C:  	Case  ==  .Event:MultibounceHit
  178:  		SetConst  *Var[0]  00000001 
  188:  		SetConst  *Var[1]  0029010B 
  198:  		ExecWait 8029B998 
  1A4:  	Case  ==  .Event:MultibounceDeath
  1B0:  		SetConst  *Var[0]  00000001 
  1C0:  		SetConst  *Var[1]  0029010B 
  1D0:  		ExecWait 8029B998 
  1DC:  		SetConst  *Var[0]  00000001 
  1EC:  		SetConst  *Var[1]  0029010B 
  1FC:  		ExecWait DoDeath 
  208:  		Return
  210:  	Case  ==  .Event:FlipTrigger
  21C:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  234:  		Call     SetActorVar 	( .Actor:Self 00000009 00000002 )
  24C:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021FF0C )
  264:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802200A8 )
  27C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  298:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  2B4:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2CC:  		Call     SetAnimation 	( .Actor:Self 00000001 0029010B )
  2E4:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  2F8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  314:  		ChildThread
  31C:  			Wait     00000004 
  328:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  344:  			Wait     00000001 
  350:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  36C:  			Wait     00000001 
  378:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  394:  			Wait     00000001 
  3A0:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3BC:  			Wait     00000001 
  3C8:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3E4:  			Wait     00000001 
  3F0:  		EndChildThread
  3F8:  		UseIntBuffer $IntTable_80220740 
  404:  		Loop     00000016 
  410:  			Get1Int  *Var[0] 
  41C:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  438:  			Wait     00000001 
  444:  		EndLoop
  44C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  468:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  484:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4A0:  		Call     SetAnimation 	( .Actor:Self 00000001 0029010F )
  4B8:  	Case  ==  .Event:ShockHit
  4C4:  		SetConst  *Var[0]  00000001 
  4D4:  		SetConst  *Var[1]  0029010B 
  4E4:  		ExecWait DoShockHit 
  4F0:  		SetConst  *Var[0]  00000001 
  500:  		SetConst  *Var[1]  0029010B 
  510:  		ExecWait 8029BD70 
  51C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  53C:  		SetConst  *Var[0]  00000001 
  54C:  		SetConst  *Var[1]  00290104 
  55C:  		ExecWait DoReturnHome 
  568:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  57C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  59C:  	Case  ==  .Event:ShockDeath
  5A8:  		SetConst  *Var[0]  00000001 
  5B8:  		SetConst  *Var[1]  0029010B 
  5C8:  		ExecWait DoShockHit 
  5D4:  		SetConst  *Var[0]  00000001 
  5E4:  		SetConst  *Var[1]  0029010B 
  5F4:  		ExecWait DoDeath 
  600:  		Return
  608:  	CaseOR  ==  00000017
  614:  	CaseOR  ==  .Event:Immune
  620:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  638:  		If  *Var[0]  ==  00000000 
  648:  			SetConst  *Var[0]  00000001 
  658:  			SetConst  *Var[1]  00290107 
  668:  			ExecWait DoImmune 
  674:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  688:  			If  *Var[0]  !&  0035D000 
  698:  				Call     SetAnimation 	( .Actor:Self 00000001 00290108 )
  6B0:  				Wait     0000000A 
  6BC:  			EndIf
  6C4:  		Else
  6CC:  			SetConst  *Var[0]  00000001 
  6DC:  			SetConst  *Var[1]  0029010F 
  6EC:  			ExecWait DoImmune 
  6F8:  		EndIf
  700:  	EndCaseGroup
  708:  	Case  ==  .Event:Death
  714:  		SetConst  *Var[0]  00000001 
  724:  		SetConst  *Var[1]  0029010B 
  734:  		ExecWait DoNormalHit 
  740:  		Wait     0000000A 
  74C:  		SetConst  *Var[0]  00000001 
  75C:  		SetConst  *Var[1]  0029010B 
  76C:  		ExecWait DoDeath 
  778:  		Return
  780:  	Case  ==  .Event:EndFirstStrike
  78C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  7A4:  		If  *Var[0]  ==  00000000 
  7B4:  			SetConst  *Var[0]  00000001 
  7C4:  			SetConst  *Var[1]  00290104 
  7D4:  			ExecWait DoReturnHome 
  7E0:  		EndIf
  7E8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  804:  		Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  820:  		Call     HPBarToHome 	( .Actor:Self )
  830:  	Case  ==  .Event:RecoverStatus
  83C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  854:  		If  *Var[0]  ==  00000000 
  864:  			SetConst  *Var[0]  00000001 
  874:  			SetConst  *Var[1]  00290101 
  884:  			ExecWait DoRecover 
  890:  		Else
  898:  			SetConst  *Var[0]  00000001 
  8A8:  			SetConst  *Var[1]  0029010F 
  8B8:  			ExecWait DoImmune 
  8C4:  		EndIf
  8CC:  	Case  ==  .Event:ScareAway
  8D8:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  8F0:  		If  *Var[0]  ==  00000000 
  900:  			SetConst  *Var[0]  00000001 
  910:  			SetConst  *Var[1]  00290104 
  920:  			SetConst  *Var[2]  0029010B 
  930:  			ExecWait DoScareAway 
  93C:  			Return
  944:  		Else
  94C:  			SetConst  *Var[0]  00000001 
  95C:  			SetConst  *Var[1]  0029010F 
  96C:  			ExecWait DoImmune 
  978:  		EndIf
  980:  	Case  ==  .Event:BeginAirLift
  98C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  9A4:  		If  *Var[0]  ==  00000000 
  9B4:  			SetConst  *Var[0]  00000001 
  9C4:  			SetConst  *Var[1]  00290117 
  9D4:  		Else
  9DC:  			SetConst  *Var[0]  00000001 
  9EC:  			SetConst  *Var[1]  0029010F 
  9FC:  		EndIf
  A04:  		ExecWait DoAirLift 
  A10:  	Case  ==  .Event:BlowAway
  A1C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  A34:  		If  *Var[0]  ==  00000000 
  A44:  			SetConst  *Var[0]  00000001 
  A54:  			SetConst  *Var[1]  00290117 
  A64:  		Else
  A6C:  			SetConst  *Var[0]  00000001 
  A7C:  			SetConst  *Var[1]  0029010F 
  A8C:  		EndIf
  A94:  		ExecWait DoBlowAway 
  AA0:  		Return
  AA8:  	Case  ==  .Event:AirLiftFailed
  AB4:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  ACC:  		If  *Var[0]  ==  00000000 
  ADC:  			SetConst  *Var[0]  00000001 
  AEC:  			SetConst  *Var[1]  00290101 
  AFC:  			ExecWait DoImmune 
  B08:  		Else
  B10:  			SetConst  *Var[0]  00000001 
  B20:  			SetConst  *Var[1]  0029010F 
  B30:  			ExecWait DoImmune 
  B3C:  		EndIf
  B44:  EndSwitch
  B4C:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  B60:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B74:  Return
  B7C:  End

#new:Script $Script_TakeTurn_8022131C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00290106 )
   74:  Else
   7C:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   94:  	If  *Var[0]  ==  00000001 
   A4:  		Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   BC:  		Sub  *Var[0]  00000001 
   CC:  		If  *Var[0]  >  00000000 
   DC:  			Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   F4:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait     0000001E 
  134:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait     00000014 
  1AC:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  1DC:  			Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1F8:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  20C:  			Call     SetAnimation 	( .Actor:Self 00000001 0029010F )
  224:  			Set  *Var[0]  00000000 
  234:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  250:  			ChildThread
  258:  				Loop     00000005 
  264:  					Add  *Var[0]  0000000F 
  274:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  290:  					Wait     00000001 
  29C:  				EndLoop
  2A4:  			EndChildThread
  2AC:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E4:  			Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  2F8:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  318:  			Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  32C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  380:  			Call     SetAnimation 	( .Actor:Self 00000001 00290101 )
  398:  			Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  3B0:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220010 )
  3C8:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021FEE0 )
  3E0:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
  3FC:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  430:  			Call     8026F838 ( FFFFFF81 00000002 )
  444:  		EndIf
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndIf
  484:  	Call     UseCamPreset 	( 0000003F )
  494:  	Call     CamTargetActor ( .Actor:Self )
  4A4:  	Wait     0000000A 
  4B0:  	Call     SetAnimation 	( .Actor:Self 00000001 00290107 )
  4C8:  	Wait     0000000A 
  4D4:  	ChildThread
  4DC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4F8:  		Add  *Var[1]  00000004 
  508:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait     00000003 
  558:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait     00000002 
  5A8:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  608:  	Call     SetAnimation 	( .Actor:Self 00000001 00290106 )
  620:  	Wait     0000000A 
  62C:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  644:  EndIf
  64C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  660:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  67C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  6A0:  Switch  *Var[0] 
  6AC:  	CaseOR  ==  00000006 
  6B8:  	CaseOR  ==  00000005 
  6C4:  		Set  *Var[A]  *Var[0] 
  6D4:  		Call     SetGoalToTarget 	( .Actor:Self )
  6E4:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
  700:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  714:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  72C:  		Call     GetBattlePhase ( *Var[0] )
  73C:  		If  *Var[0]  ==  .Phase:FirstStrike
  74C:  			Call     UseCamPreset 	( 00000005 )
  75C:  			Call     SetCamZoom  	( 0000012C )
  76C:  			Call     SetCamOffsetZ 	( 00000014 )
  77C:  			Call     MoveCamOver 	( 0000000A )
  78C:  			Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call     SetAnimation 	( .Actor:Self 00000001 00290108 )
  7C4:  		Wait     00000008 
  7D0:  		Call     8026F6EC ( FFFFFF81 )
  7E0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  7F4:  		Wait     00000004 
  800:  		If  *Var[A]  ==  00000005 
  810:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call     SetAnimation 	( .Actor:Self 00000001 00290115 )
  854:  		Wait     00000001 
  860:  		Call     SetAnimation 	( .Actor:Self 00000001 00290116 )
  878:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  894:  		Add  *Var[1]  00000014 
  8A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8C0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  8D4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  8F4:  		Call     SetAnimation 	( .Actor:Self 00000001 00290117 )
  90C:  		Wait     00000006 
  918:  		Sub  *Var[1]  00000014 
  928:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  944:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  964:  		Call     UseCamPreset 	( 00000002 )
  974:  		Call     8027D7F0 ( )
  980:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  994:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call     SetAnimation 	( .Actor:Self 00000001 00290117 )
  9C8:  		Call     SetGoalToHome 	( .Actor:Self )
  9D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  9EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A04:  		Call     SetAnimation 	( .Actor:Self 00000001 00290101 )
  A1C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  A34:  		Call     8026B438 ( FFFFFF81 00000001 00000000 )
  A4C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  A60:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A74:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call     SetGoalToTarget 	( .Actor:Self )
  AB0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  AC4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  ADC:  Call     8026F6EC ( FFFFFF81 )
  AEC:  Wait     00000002 
  AF8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
  B20:  Switch  *Var[0] 
  B2C:  	CaseOR  ==  00000000 
  B38:  	CaseOR  ==  00000002 
  B44:  		Call     UseCamPreset 	( 00000002 )
  B54:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B70:  		Add  *Var[0]  00000028 
  B80:  		Set  *Var[1]  00000000 
  B90:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  BA4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BC0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  BE0:  		Add  *Var[0]  0000001E 
  BF0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C0C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C2C:  		Add  *Var[0]  00000014 
  C3C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C58:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  C78:  		Call     SetAnimation 	( .Actor:Self 00000001 00290108 )
  C90:  		Wait     00000008 
  C9C:  		Call     8027D7F0 ( )
  CA8:  		SetConst  *Var[0]  00000001 
  CB8:  		SetConst  *Var[1]  00290104 
  CC8:  		ExecWait DoReturnHome 
  CD4:  		Call     SetAnimation 	( .Actor:Self 00000001 00290101 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  CFC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D10:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D24:  Return
  D2C:  End

#new:DefenseTable $DefenseTable_80222050
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022205C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80222108
00800000 01000000 001400FF $IdleAnimations_80222154 $DefenseTable_80222050 00000000 00000000 00F60000 00000000 

#new:Actor $Fuzzy
% stats
[Index]         Ab 
[Level]         6`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022205C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80222108 
[Script]      $Script_Init_802221A0 
% move effectiveness
[Escape]       50`b 
[Item]         95`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80222154
.Status:Normal    002B0001
.Status:Stone     002B0000
.Status:Sleep     002B000E
.Status:Poison    002B0001
.Status:Stop      002B0000
.Status:Static    002B0001
.Status:Paralyze  002B0000
.Status:Dizzy     002B000F
.Status:Fear      002B000F
.Status:End

#new:Script $Script_Init_802221A0
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222860 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802221EC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802221FC )
   3C:  Return
   44:  End

#new:Script $Script_Idle_802221EC
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_802221FC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		Call     GetLastElement ( *Var[0] )
   8C:  		If  *Var[0]  &  00000020 
   9C:  			SetConst  *Var[0]  00000001 
   AC:  			SetConst  *Var[1]  002B0013 
   BC:  		Else
   C4:  			SetConst  *Var[0]  00000001 
   D4:  			SetConst  *Var[1]  002B0008 
   E4:  		EndIf
   EC:  		ExecWait DoNormalHit 
   F8:  	EndCaseGroup
  100:  	Case  ==  .Event:BurnHit
  10C:  		SetConst  *Var[0]  00000001 
  11C:  		SetConst  *Var[1]  002B0010 
  12C:  		SetConst  *Var[2]  002B0012 
  13C:  		ExecWait DoBurnHit 
  148:  	Case  ==  .Event:BurnDeath
  154:  		SetConst  *Var[0]  00000001 
  164:  		SetConst  *Var[1]  002B0010 
  174:  		SetConst  *Var[2]  002B0012 
  184:  		ExecWait DoBurnHit 
  190:  		SetConst  *Var[0]  00000001 
  1A0:  		SetConst  *Var[1]  002B0012 
  1B0:  		ExecWait DoDeath 
  1BC:  		Return
  1C4:  	Case  ==  .Event:MultibounceHit
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  002B0008 
  1F0:  		ExecWait 8029B998 
  1FC:  	Case  ==  .Event:MultibounceDeath
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  002B0008 
  228:  		ExecWait 8029B998 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  002B0008 
  254:  		ExecWait DoDeath 
  260:  		Return
  268:  	Case  ==  .Event:ShockHit
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  002B0013 
  294:  		ExecWait DoShockHit 
  2A0:  		SetConst  *Var[0]  00000001 
  2B0:  		SetConst  *Var[1]  002B0013 
  2C0:  		ExecWait 8029BD70 
  2CC:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  2EC:  		SetConst  *Var[0]  00000001 
  2FC:  		SetConst  *Var[1]  002B0003 
  30C:  		ExecWait 8029C0A4 
  318:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  32C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  34C:  	Case  ==  .Event:ShockDeath
  358:  		SetConst  *Var[0]  00000001 
  368:  		SetConst  *Var[1]  002B0013 
  378:  		ExecWait DoShockHit 
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  002B0008 
  3A4:  		ExecWait DoDeath 
  3B0:  		Return
  3B8:  	CaseOR  ==  00000017
  3C4:  	CaseOR  ==  .Event:Immune
  3D0:  	CaseOR  ==  .Event:AirLiftFailed
  3DC:  		SetConst  *Var[0]  00000001 
  3EC:  		SetConst  *Var[1]  002B0001 
  3FC:  		ExecWait DoImmune 
  408:  	EndCaseGroup
  410:  	Case  ==  .Event:Death
  41C:  		Call     GetLastElement ( *Var[0] )
  42C:  		If  *Var[0]  &  00000020 
  43C:  			SetConst  *Var[0]  00000001 
  44C:  			SetConst  *Var[1]  002B0013 
  45C:  			ExecWait DoNormalHit 
  468:  			Wait     0000000A 
  474:  			SetConst  *Var[0]  00000001 
  484:  			SetConst  *Var[1]  002B0013 
  494:  			ExecWait DoDeath 
  4A0:  		Else
  4A8:  			SetConst  *Var[0]  00000001 
  4B8:  			SetConst  *Var[1]  002B0008 
  4C8:  			ExecWait DoNormalHit 
  4D4:  			Wait     0000000A 
  4E0:  			SetConst  *Var[0]  00000001 
  4F0:  			SetConst  *Var[1]  002B0008 
  500:  			ExecWait DoDeath 
  50C:  		EndIf
  514:  		Return
  51C:  	Case  ==  .Event:RecoverStatus
  528:  		SetConst  *Var[0]  00000001 
  538:  		SetConst  *Var[1]  002B0001 
  548:  		ExecWait DoRecover 
  554:  	Case  ==  .Event:ScareAway
  560:  		SetConst  *Var[0]  00000001 
  570:  		SetConst  *Var[1]  002B0003 
  580:  		SetConst  *Var[2]  002B0009 
  590:  		ExecWait DoScareAway 
  59C:  		Return
  5A4:  	Case  ==  .Event:BeginAirLift
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  002B0003 
  5D0:  		ExecWait DoAirLift 
  5DC:  	Case  ==  .Event:BlowAway
  5E8:  		SetConst  *Var[0]  00000001 
  5F8:  		SetConst  *Var[1]  002B0003 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_TakeTurn_80222860
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     GetBattlePhase ( *Var[0] )
   84:  If  *Var[0]  ==  .Phase:FirstStrike
   94:  	Call     SetGoalToTarget 	( .Actor:Self )
   A4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C0:  	Add  *Var[0]  00000032 
   D0:  	Set  *Var[1]  00000000 
   E0:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   FC:  	Goto     00000064 
  108:  EndIf
  110:  Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
  128:  Call     SetGoalToTarget 	( .Actor:Self )
  138:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  154:  Add  *Var[0]  00000032 
  164:  Set  *Var[1]  00000000 
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  188:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  19C:  ExecWait 8029C12C 
  1A8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
  1C0:  Label    00000064 
  1CC:  Call     8026BA04 ( FFFFFF81 00000000 0000000A 00000000 )
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0004 )
  200:  Call     8026BA04 ( FFFFFF81 00000000 00000009 00000000 )
  21C:  Wait     00000001 
  228:  Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
  244:  Wait     00000005 
  250:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000001 00000010 )
  274:  Switch  *Var[0] 
  280:  	CaseOR  ==  00000006 
  28C:  	CaseOR  ==  00000005 
  298:  		Set  *Var[A]  *Var[0] 
  2A8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2B8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D4:  		Sub  *Var[0]  00000005 
  2E4:  		Set  *Var[1]  00000000 
  2F4:  		Sub  *Var[2]  00000005 
  304:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  318:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0005 )
  330:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  34C:  		Call     JumpToGoal  	( .Actor:Self 0000000B 00000000 00000001 00000000 )
  36C:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  388:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0009 )
  3A0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3BC:  		Sub  *Var[0]  00000014 
  3CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  3E0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3FC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  41C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  438:  		Sub  *Var[0]  0000000F 
  448:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  45C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  478:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  498:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B4:  		Wait     00000004 
  4C0:  		Wait     00000005 
  4CC:  		If  *Var[A]  ==  00000005 
  4DC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait     00000005 
  514:  		Call     UseCamPreset 	( 00000002 )
  524:  		Call     8027D7F0 ( )
  530:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  544:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
  578:  		Call     SetGoalToHome 	( .Actor:Self )
  588:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5B8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  5CC:  		ExecWait 8029C12C 
  5D8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5F0:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  604:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  618:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  00000007 
  648:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  65C:  		If  *Var[0]  &  00002000 
  66C:  			Set  *Flag[00]  00000000 
  67C:  		Else
  684:  			Set  *Flag[00]  00000001 
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call     SetGoalToTarget 	( .Actor:Self )
  6B4:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
  6D0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  6E4:  Call     SetAnimation 	( .Actor:Self 00000001 002B0005 )
  6FC:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  71C:  If  *Flag[00]  ==  00000001 
  72C:  	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Wait     0000000A 
  770:  Call     UseIdleAnimation 	( .Actor:Player .False )
  784:  Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  79C:  Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  7B0:  Call     SetAnimation 	( .Actor:Self 00000001 002B0007 )
  7C8:  Wait     00000015 
  7D4:  Call     SetAnimation 	( .Actor:Self 00000001 002B0000 )
  7EC:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  808:  Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  81C:  Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFE 00000000 )
  838:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  854:  Wait     00000001 
  860:  Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  87C:  Wait     00000001 
  888:  Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  8A4:  Wait     00000001 
  8B0:  Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  8CC:  Wait     00000001 
  8D8:  Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  8F4:  Wait     00000002 
  900:  Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  91C:  Wait     0000000A 
  928:  Wait     00000002 
  934:  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000001 00000020 )
  95C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  978:  Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
  990:  Switch  *Var[0] 
  99C:  	CaseOR  ==  00000000 
  9A8:  	CaseOR  ==  00000002 
  9B4:  		Call     UseCamPreset 	( 00000002 )
  9C4:  		Call     GetLastDamage 	( .Actor:Player *Var[3] )
  9D8:  		If  *Var[3]  !=  00000000 
  9E8:  			Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  9FC:  			Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  A10:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A2C:  			Add  *Var[1]  0000000A 
  A3C:  			Call     $Function_802188B0 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A58:  			Thread
  A60:  				Wait     0000000F 
  A6C:  				Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
  A80:  				Call     $Function_80218964 ( *Var[0] *Var[1] *Var[2] *Var[3] )
  A9C:  			EndThread
  AA4:  			Add  *Var[0]  00000014 
  AB4:  			Add  *Var[1]  00000014 
  AC4:  			Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B08:  			Call     GetActorHP  	( .Actor:Self *Var[0] )
  B1C:  			Add  *Var[0]  *Var[3] 
  B2C:  			Call     SetEnemyHP  	( .Actor:Self *Var[0] )
  B40:  		EndIf
  B48:  		Thread
  B50:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.6005859] *Fixed[0.60058594] *Fixed[1.0] )
  B6C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  B88:  			Wait     00000001 
  B94:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  BB0:  			Wait     00000001 
  BBC:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  BD8:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000012C )
  BF4:  			Wait     00000001 
  C00:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000010E )
  C1C:  			Wait     00000001 
  C28:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
  C44:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000F0 )
  C60:  			Wait     00000001 
  C6C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000D2 )
  C88:  			Wait     00000001 
  C94:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  CB0:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
  CCC:  			Wait     00000002 
  CD8:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
  CF4:  			Wait     00000002 
  D00:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
  D1C:  		EndThread
  D24:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D40:  		Add  *Var[0]  00000028 
  D50:  		Set  *Var[1]  00000000 
  D60:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  D74:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D90:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  DB0:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.4003906] *Fixed[0.20019531] *Fixed[1.0] )
  DCC:  		Wait     00000001 
  DD8:  		Thread
  DE0:  			Wait     00000001 
  DEC:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
  E08:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000096 )
  E24:  			Wait     00000001 
  E30:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  E4C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000078 )
  E68:  			Wait     00000001 
  E74:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000005A )
  E90:  			Wait     00000001 
  E9C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000003C )
  EB8:  			Wait     00000001 
  EC4:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  EE0:  			Wait     00000001 
  EEC:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  F08:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  F24:  		EndThread
  F2C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  F48:  		Add  *Var[0]  0000001E 
  F58:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  F74:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  F94:  		Wait     00000005 
  FA0:  		Call     8027D7F0 ( )
  FAC:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  FC8:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
  FE0:  		Call     SetGoalToHome 	( .Actor:Self )
  FF0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 100C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 1020:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
 1034:  		ExecWait 8029C12C 
 1040:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
 1058:  	EndCaseGroup
 1060:  EndSwitch
 1068:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 107C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1090:  Return
 1098:  End

#new:DefenseTable $DefenseTable_80223900
.Element:Normal 00000001
.Element:Hammer 00000001
.Element:Jump   00000001
.Element:Water  00000001
.Element:Blast  00000001
.Element:End

#new:DefenseTable $DefenseTable_8022392C
.Element:Normal 00000001
.Element:End

#new:DefenseTable $DefenseTable_80223938
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80223944
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     60`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   90`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_802239F0
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     60`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   90`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80223A9C
00020001 01000000 FE2400FF $IdleAnimations_802258D0 $DefenseTable_80223900 00001000 00000000 00F90000 00000000 
00800000 02000000 FC2400FF $IdleAnimations_80223B30 $DefenseTable_8022392C 00004000 00000000 02F20000 00000000 
00020001 03000000 002000FF $IdleAnimations_80223BC8 $DefenseTable_80223900 00000000 00000000 00F60000 00000000 

#new:Actor $Paratroopa
% stats
[Index]         Cb 
[Level]         6`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802239F0 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80223A9C 
[Script]      $Script_Init_80223C3C 
% move effectiveness
[Escape]       60`b 
[Item]         90`b 
[AirLift]      95`b 
[Hurricane]   100`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         50`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  29`b % dx dy
[StatusIcon]    8`b  30`b % dx dy

#new:IdleAnimations $IdleAnimations_80223B30
.Status:Normal    002A0101
.Status:Stone     002A0100
.Status:Sleep     002A0112
.Status:Poison    002A0100
.Status:Stop      002A0100
.Status:Static    002A0101
.Status:Paralyze  002A0100
.Status:Dizzy     002A0113
.Status:Fear      002A0113
.Status:End

#new:IdleAnimations $IdleAnimations_80223B7C
.Status:Normal    002A0101
.Status:Stone     002A0100
.Status:Sleep     002A0112
.Status:Poison    002A0100
.Status:Stop      002A0100
.Status:Static    002A0101
.Status:Paralyze  002A0100
.Status:Dizzy     002A0113
.Status:Fear      002A0113
.Status:End

#new:IdleAnimations $IdleAnimations_80223BC8
.Status:Normal    002A010F
.Status:Stone     002A0100
.Status:Sleep     002A0112
.Status:Poison    002A0100
.Status:Stop      002A0100
.Status:Static    002A010F
.Status:Paralyze  002A0100
.Status:Dizzy     002A0113
.Status:Fear      002A0113
.Status:End

#new:Script $Script_NextTurn_80223C14
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   18:  Return
   20:  End

#new:Script $Script_Init_80223C3C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224854 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80223D8C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022411C )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80223C14 )
   50:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   68:  Return
   70:  End

#new:Script $Script_80223CB4
    0:  If  *Var[1]  &  00041000 
   10:  	Call     SetTargetOffset 	( .Actor:Self 00000002 00000000 00000019 )
   2C:  	Call     8027D4C8 ( FFFFFF81 00000002 00000003 FFFFFFFA )
   48:  	Call     $Function_80218A78 ( FFFFFFED 00000019 00000004 0000001C )
   64:  Else
   6C:  	Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFFE 00000024 )
   88:  	Call     8027D4C8 ( FFFFFF81 00000002 00000000 FFFFFFF9 )
   A4:  	Call     $Function_80218A78 ( FFFFFFF6 0000001D 00000008 0000001E )
   C0:  EndIf
   C8:  Return
   D0:  End

#new:Script $Script_Idle_80223D8C
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	ExecWait $Script_80223CB4 
   68:  	If  *Var[1]  &  0035D000 
   78:  		Wait     00000001 
   84:  		Goto     00000000 
   90:  	EndIf
   98:  	Wait     00000001 
   A4:  EndLoop
   AC:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C8:  Add  *Var[0]  00000005 
   D8:  Call     8026B6D0 ( FFFFFF81 *Fixed[0.60058594] )
   EC:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_80223B7C )
  104:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  120:  Call     8027BBB8 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
  13C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223B30 )
  154:  Loop     00000014 
  160:  	Label    00000001 
  16C:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  180:  	ExecWait $Script_80223CB4 
  18C:  	If  *Var[1]  &  0035D000 
  19C:  		Wait     00000001 
  1A8:  		Goto     00000001 
  1B4:  	EndIf
  1BC:  	Wait     00000001 
  1C8:  EndLoop
  1D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  Sub  *Var[0]  00000005 
  1FC:  Call     8026B6D0 ( FFFFFF81 *Fixed[0.60058594] )
  210:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_80223B7C )
  228:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  244:  Call     8027BBB8 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
  260:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_80223B30 )
  278:  Loop     00000028 
  284:  	Label    00000002 
  290:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  2A4:  	ExecWait $Script_80223CB4 
  2B0:  	If  *Var[1]  &  0035D000 
  2C0:  		Wait     00000001 
  2CC:  		Goto     00000002 
  2D8:  	EndIf
  2E0:  	Wait     00000001 
  2EC:  EndLoop
  2F4:  Goto     0000000A 
  300:  Return
  308:  End

#new:Script $Script_8022409C
    0:  Call     SetAnimation 	( .Actor:Self 00000002 002A0103 )
   18:  Call     SetGoalToHome 	( .Actor:Self )
   28:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   3C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   58:  Call     SetAnimation 	( .Actor:Self 00000002 002A0101 )
   70:  Return
   78:  End

#new:Script $Script_HandleEvent_8022411C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   6C:  		SetConst  *Var[0]  00000002 
   7C:  		SetConst  *Var[1]  002A0107 
   8C:  		ExecWait DoNormalHit 
   98:  	Case  ==  .Event:Hit
   A4:  		SetConst  *Var[0]  00000002 
   B4:  		SetConst  *Var[1]  002A0107 
   C4:  		ExecWait DoNormalHit 
   D0:  		Call     GetBattlePhase ( *Var[0] )
   E0:  		If  *Var[0]  ==  .Phase:FirstStrike
   F0:  			Call     8027D7C4 ( *Var[0] )
  100:  			If  *Var[0]  ==  00000004 
  110:  				ExecWait $Script_8022530C 
  11C:  			EndIf
  124:  		EndIf
  12C:  	Case  ==  .Event:MultibounceHit
  138:  		SetConst  *Var[0]  00000002 
  148:  		SetConst  *Var[1]  002A0107 
  158:  		ExecWait 8029B998 
  164:  	Case  ==  .Event:MultibounceDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  002A0107 
  190:  		ExecWait 8029B998 
  19C:  		SetConst  *Var[0]  00000002 
  1AC:  		SetConst  *Var[1]  002A0106 
  1BC:  		ExecWait DoDeath 
  1C8:  		Return
  1D0:  	Case  ==  .Event:BurnHit
  1DC:  		SetConst  *Var[0]  00000002 
  1EC:  		SetConst  *Var[1]  002A0108 
  1FC:  		SetConst  *Var[2]  002A0109 
  20C:  		ExecWait DoBurnHit 
  218:  	Case  ==  .Event:BurnDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  002A0108 
  244:  		SetConst  *Var[2]  002A0109 
  254:  		ExecWait DoBurnHit 
  260:  		SetConst  *Var[0]  00000002 
  270:  		SetConst  *Var[1]  002A0109 
  280:  		ExecWait DoDeath 
  28C:  		Return
  294:  	Case  ==  .Event:FallTrigger
  2A0:  		SetConst  *Var[0]  00000002 
  2B0:  		SetConst  *Var[1]  002A0107 
  2C0:  		ExecWait DoNormalHit 
  2CC:  		ExecWait $Script_8022530C 
  2D8:  	Case  ==  0000000F
  2E4:  		SetConst  *Var[0]  00000001 
  2F4:  		SetConst  *Var[1]  002A0108 
  304:  		SetConst  *Var[1]  002A0109 
  314:  		ExecWait DoBurnHit 
  320:  		ExecWait $Script_8022530C 
  32C:  	Case  ==  .Event:ShockHit
  338:  		SetConst  *Var[0]  00000001 
  348:  		SetConst  *Var[1]  002A0107 
  358:  		ExecWait DoShockHit 
  364:  		SetConst  *Var[0]  00000001 
  374:  		SetConst  *Var[1]  002A0106 
  384:  		ExecWait 8029BD70 
  390:  		ExecWait $Script_8022409C 
  39C:  	Case  ==  .Event:ShockDeath
  3A8:  		SetConst  *Var[0]  00000002 
  3B8:  		SetConst  *Var[1]  002A0107 
  3C8:  		ExecWait DoShockHit 
  3D4:  		SetConst  *Var[0]  00000002 
  3E4:  		SetConst  *Var[1]  002A0106 
  3F4:  		ExecWait DoDeath 
  400:  		Return
  408:  	Case  ==  00000017
  414:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  42C:  		SetConst  *Var[0]  00000002 
  43C:  		SetConst  *Var[1]  002A010B 
  44C:  		ExecWait DoImmune 
  458:  	CaseOR  ==  .Event:Immune
  464:  	CaseOR  ==  .Event:AirLiftFailed
  470:  		SetConst  *Var[0]  00000002 
  480:  		SetConst  *Var[1]  002A010B 
  490:  		ExecWait DoImmune 
  49C:  		Call     GetBattlePhase ( *Var[0] )
  4AC:  		If  *Var[0]  ==  .Phase:FirstStrike
  4BC:  			Call     8027D7C4 ( *Var[0] )
  4CC:  			If  *Var[0]  ==  00000004 
  4DC:  				ExecWait $Script_8022530C 
  4E8:  			EndIf
  4F0:  		EndIf
  4F8:  	EndCaseGroup
  500:  	Case  ==  .Event:Death
  50C:  		SetConst  *Var[0]  00000002 
  51C:  		SetConst  *Var[1]  002A0107 
  52C:  		ExecWait DoNormalHit 
  538:  		Wait     0000000A 
  544:  		SetConst  *Var[0]  00000002 
  554:  		SetConst  *Var[1]  002A0106 
  564:  		ExecWait DoDeath 
  570:  		Return
  578:  	Case  ==  .Event:BeginFirstStrike
  584:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  5A0:  		Call     HPBarToCurrent ( .Actor:Self )
  5B0:  	Case  ==  .Event:EndFirstStrike
  5BC:  		ExecWait $Script_8022409C 
  5C8:  		Call     HPBarToHome 	( .Actor:Self )
  5D8:  	Case  ==  .Event:RecoverStatus
  5E4:  		SetConst  *Var[0]  00000002 
  5F4:  		SetConst  *Var[1]  002A0101 
  604:  		ExecWait DoRecover 
  610:  	Case  ==  .Event:ScareAway
  61C:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  634:  		SetConst  *Var[0]  00000002 
  644:  		SetConst  *Var[1]  002A0103 
  654:  		SetConst  *Var[2]  002A0107 
  664:  		ExecWait DoScareAway 
  670:  		Return
  678:  	Case  ==  .Event:BeginAirLift
  684:  		SetConst  *Var[0]  00000002 
  694:  		SetConst  *Var[1]  002A0103 
  6A4:  		ExecWait DoAirLift 
  6B0:  	Case  ==  .Event:BlowAway
  6BC:  		SetConst  *Var[0]  00000002 
  6CC:  		SetConst  *Var[1]  002A0107 
  6DC:  		ExecWait DoBlowAway 
  6E8:  		Return
  6F0:  	Default
  6F8:  EndSwitch
  700:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  714:  Call     UseIdleAnimation 	( .Actor:Self .True )
  728:  Return
  730:  End

#new:Script $Script_TakeTurn_80224854
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 00000005 )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   80:  Call     SetAnimation 	( .Actor:Self 00000002 002A0103 )
   98:  Call     SetGoalToTarget 	( .Actor:Self )
   A8:  Call     AddToGoalPos 	( .Actor:Self 00000028 0000001E 00000000 )
   C4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
   D8:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF0 .Easing:Linear )
   F4:  Call     8024E664 ( 00000001 )
  104:  Wait     00000005 
  110:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  134:  Switch  *Var[0] 
  140:  	CaseOR  ==  00000006 
  14C:  	CaseOR  ==  00000005 
  158:  		Set  *Var[A]  *Var[0] 
  168:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E0 )
  17C:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  198:  		Call     SetAnimation 	( .Actor:Self 00000002 002A0104 )
  1B0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E8:  		Call     AddToGoalPos 	( .Actor:Self 00000006 00000006 00000000 )
  204:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  218:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  234:  		Wait     00000006 
  240:  		Call     PlaySoundAtActor 	( .Actor:Self 000002C1 )
  254:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  270:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  28C:  		Sub  *Var[0]  00000019 
  29C:  		Set  *Var[1]  00000000 
  2AC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  2DC:  		Call     SetAnimation 	( .Actor:Self 00000002 002A010C )
  2F4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  310:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  32C:  		Sub  *Var[0]  0000001E 
  33C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[4.0] )
  36C:  		Thread
  374:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  390:  			Set  *Var[0]  00000000 
  3A0:  			Loop     00000008 
  3AC:  				Add  *Var[0]  0000005A 
  3BC:  				If  *Var[0]  >=  00000168 
  3CC:  					Sub  *Var[0]  00000168 
  3DC:  				EndIf
  3E4:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  400:  				Wait     00000001 
  40C:  			EndLoop
  414:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  430:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 FFFFFFF6 00000000 )
  44C:  		EndThread
  454:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  474:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  490:  		Sub  *Var[0]  0000001E 
  4A0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4BC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[4.0] )
  4D0:  		Call     SetAnimation 	( .Actor:Self 00000002 002A0107 )
  4E8:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  508:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  524:  		Sub  *Var[0]  0000001E 
  534:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  550:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[4.0] )
  564:  		Call     SetAnimation 	( .Actor:Self 00000002 002A0107 )
  57C:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  59C:  		If  *Var[A]  ==  00000005 
  5AC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5D0:  		EndIf
  5D8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5F4:  		Add  *Var[1]  0000001E 
  604:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  620:  		Wait     00000014 
  62C:  		Call     UseCamPreset 	( 00000002 )
  63C:  		Call     8027D7F0 ( )
  648:  		Call     8026F6EC ( FFFFFF81 )
  658:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  674:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  688:  		ExecWait $Script_8022409C 
  694:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  6A8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  6C0:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  6D4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  6E8:  		Return
  6F0:  	EndCaseGroup
  6F8:  EndSwitch
  700:  Call     PlaySoundAtActor 	( .Actor:Self 000020E0 )
  714:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  730:  Call     SetAnimation 	( .Actor:Self 00000002 002A0104 )
  748:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  764:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  780:  Call     AddToGoalPos 	( .Actor:Self 00000006 00000006 00000000 )
  79C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  7B0:  Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  7CC:  Wait     00000006 
  7D8:  Call     PlaySoundAtActor 	( .Actor:Self 000002C1 )
  7EC:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  808:  Call     SetGoalToTarget 	( .Actor:Self )
  818:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  82C:  Call     SetAnimation 	( .Actor:Self 00000002 002A010C )
  844:  Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  860:  Wait     00000002 
  86C:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
  894:  Switch  *Var[0] 
  8A0:  	CaseOR  ==  00000000 
  8AC:  	CaseOR  ==  00000002 
  8B8:  		Call     UseCamPreset 	( 00000002 )
  8C8:  		Call     SetGoalToTarget 	( .Actor:Self )
  8D8:  		Call     AddToGoalPos 	( .Actor:Self 00000028 0000001E 00000000 )
  8F4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  908:  		Call     SetAnimation 	( .Actor:Self 00000002 002A010D )
  920:  		Thread
  928:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  944:  			Set  *Var[0]  00000000 
  954:  			Loop     0000000C 
  960:  				Sub  *Var[0]  0000005A 
  970:  				If  *Var[0]  <  00000000 
  980:  					Add  *Var[0]  00000168 
  990:  				EndIf
  998:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  9B4:  				Wait     00000001 
  9C0:  			EndLoop
  9C8:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  9E4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 FFFFFFF6 00000000 )
  A00:  			Call     SetAnimation 	( .Actor:Self 00000002 002A0101 )
  A18:  		EndThread
  A20:  		Call     MoveToGoal  	( .Actor:Self 00000000 0000001E .Easing:Linear )
  A3C:  		Wait     0000000A 
  A48:  		Call     8027D7F0 ( )
  A54:  		Call     8026F6EC ( FFFFFF81 )
  A64:  		ExecWait $Script_8022409C 
  A70:  	EndCaseGroup
  A78:  EndSwitch
  A80:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  A94:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:  Return
  AB0:  End

#new:Script $Script_8022530C
    0:  Call     SetSpriteOffset 	( .Actor:Self 00000002 00000000 00000000 00000000 )
   20:  Call     8027D32C ( FFFFFF81 )
   30:  Call     SetSpriteFlags ( .Actor:Self 00000002 00020005 )
   48:  Call     SetSpriteFlags ( .Actor:Self 00000003 00120004 )
   60:  Call     SetSpriteFlags ( .Actor:Self 00000001 00800004 )
   78:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   94:  Add  *Var[1]  00000008 
   A4:  Sub  *Var[2]  00000002 
   B4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
   D4:  Call     SetAnimation 	( .Actor:Self 00000001 0029010B )
   EC:  Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
  108:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  120:  If  *Var[A]  ==  00000000 
  130:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  14C:  	Set  *Var[1]  00000000 
  15C:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  170:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  18C:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  1AC:  	Call     $Function_80218A20 ( 00000080 00000007 )
  1C0:  	Thread
  1C8:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.30078125] )
  1E4:  	EndThread
  1EC:  	Call     8026F838 ( FFFFFF81 00000002 )
  200:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  21C:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  23C:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  258:  	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  278:  	Loop     0000000A 
  284:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  2A0:  		Wait     00000001 
  2AC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  2C8:  		Wait     00000001 
  2D4:  	EndLoop
  2DC:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  2F8:  Else
  300:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  31C:  	Set  *Var[1]  00000000 
  32C:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  340:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  35C:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  37C:  	Thread
  384:  		Loop     0000000A 
  390:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  3AC:  			Wait     00000001 
  3B8:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  3D4:  			Wait     00000001 
  3E0:  		EndLoop
  3E8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  404:  	EndThread
  40C:  	Call     $Function_80218A20 ( 00000096 00000007 )
  420:  	Thread
  428:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.30078125] )
  444:  	EndThread
  44C:  	Call     8026F838 ( FFFFFF81 00000002 )
  460:  EndIf
  468:  Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
  47C:  Mod  *Var[0]  00000004 
  48C:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  4A0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4BC:  Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4D8:  Call     SetAnimation 	( .Actor:Self 00000001 00290101 )
  4F0:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  508:  Call     SetStatusTable ( .Actor:Self $StatusTable_80223944 )
  51C:  Call     BindNextTurn 	( .Actor:Self 00000000 )
  530:  ExecWait $Script_802259B4 
  53C:  Call     SetActorType 	( FFFFFF81 0000000B )
  550:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  568:  Call     HPBarToHome 	( .Actor:Self )
  578:  Call     8026F6EC ( FFFFFF81 )
  588:  If  *Var[A]  !=  00000000 
  598:  	Call     DispatchEvent 	( .Actor:Self .Event:FlipTrigger )
  5AC:  EndIf
  5B4:  Return
  5BC:  End

#new:IdleAnimations $IdleAnimations_802258D0
.Status:Normal    00290101
.Status:Stone     00290100
.Status:Sleep     00290111
.Status:Poison    00290101
.Status:Stop      00290100
.Status:Static    00290101
.Status:Paralyze  00290100
.Status:Dizzy     00290113
.Status:Fear      00290113
.Status:End

#new:IdleAnimations $IdleAnimations_8022591C
.Status:Normal    00290103
.Status:Stone     00290100
.Status:Sleep     00290111
.Status:Poison    00290103
.Status:Stop      00290100
.Status:Static    00290103
.Status:Paralyze  00290100
.Status:Dizzy     00290113
.Status:Fear      00290113
.Status:End

#new:IdleAnimations $IdleAnimations_80225968
.Status:Normal    0029010F
.Status:Stone     00290110
.Status:Sleep     00290112
.Status:Poison    0029010F
.Status:Stop      00290110
.Status:Static    0029010F
.Status:Paralyze  00290110
.Status:Dizzy     00290114
.Status:Fear      00290114
.Status:End

#new:Script $Script_802259B4
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80226BDC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80225B70 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80226058 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_80225A18
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000000 
   18:  		If  *Var[1]  &  00041000 
   28:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   44:  			Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call     $Function_80218A78 ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
   A0:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call     $Function_80218A78 ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001 
   EC:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call     $Function_80218A78 ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End

#new:Script $Script_Idle_80225B70
    0:  Label    00000000 
    C:  Call     RandInt     	( 00000050 *Var[A] )
   20:  Add  *Var[A]  00000050 
   30:  Loop     *Var[A] 
   3C:  	Label    00000001 
   48:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   60:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   74:  	ExecWait $Script_80225A18 
   80:  	If  *Var[0]  ==  00000001 
   90:  		Wait     00000001 
   9C:  		Goto     00000001 
   A8:  	EndIf
   B0:  	If  *Var[1]  &  0035D000 
   C0:  		Wait     00000001 
   CC:  		Goto     00000001 
   D8:  	EndIf
   E0:  	Wait     00000001 
   EC:  EndLoop
   F4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  110:  Add  *Var[0]  00000005 
  120:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  134:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022591C )
  14C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  168:  Call     8027A264 ( FFFFFF81 00000000 )
  17C:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  194:  Switch  *Var[0] 
  1A0:  	Case  ==  00000000 
  1AC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802258D0 )
  1C4:  	Case  ==  00000001 
  1D0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225968 )
  1E8:  EndSwitch
  1F0:  Loop     00000014 
  1FC:  	Label    00000002 
  208:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  220:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  234:  	ExecWait $Script_80225A18 
  240:  	If  *Var[0]  ==  00000001 
  250:  		Wait     00000001 
  25C:  		Goto     00000002 
  268:  	EndIf
  270:  	If  *Var[1]  &  0035D000 
  280:  		Wait     00000001 
  28C:  		Goto     00000002 
  298:  	EndIf
  2A0:  	Wait     00000001 
  2AC:  EndLoop
  2B4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  Sub  *Var[0]  00000005 
  2E0:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  2F4:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022591C )
  30C:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  328:  Call     8027A264 ( FFFFFF81 00000000 )
  33C:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  354:  Switch  *Var[0] 
  360:  	Case  ==  00000000 
  36C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802258D0 )
  384:  	Case  ==  00000001 
  390:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225968 )
  3A8:  EndSwitch
  3B0:  Loop     00000050 
  3BC:  	Label    00000003 
  3C8:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  3E0:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  3F4:  	ExecWait $Script_80225A18 
  400:  	If  *Var[0]  ==  00000001 
  410:  		Wait     00000001 
  41C:  		Goto     00000003 
  428:  	EndIf
  430:  	If  *Var[1]  &  0035D000 
  440:  		Wait     00000001 
  44C:  		Goto     00000003 
  458:  	EndIf
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Goto     00000000 
  480:  Return
  488:  End

#new:IntTable $IntTable_80226000
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80226058
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   3C:  Call     GetEventType 	( .Actor:Self *Var[0] )
   50:  Switch  *Var[0] 
   5C:  	CaseOR  ==  .Event:HitCombo
   68:  	CaseOR  ==  .Event:Hit
   74:  		SetConst  *Var[0]  00000001 
   84:  		SetConst  *Var[1]  0029010B 
   94:  		ExecWait DoNormalHit 
   A0:  	EndCaseGroup
   A8:  	Case  ==  .Event:BurnHit
   B4:  		SetConst  *Var[0]  00000001 
   C4:  		SetConst  *Var[1]  0029010C 
   D4:  		SetConst  *Var[2]  0029010D 
   E4:  		ExecWait DoBurnHit 
   F0:  	Case  ==  .Event:BurnDeath
   FC:  		SetConst  *Var[0]  00000001 
  10C:  		SetConst  *Var[1]  0029010C 
  11C:  		SetConst  *Var[2]  0029010D 
  12C:  		ExecWait DoBurnHit 
  138:  		SetConst  *Var[0]  00000001 
  148:  		SetConst  *Var[1]  0029010D 
  158:  		ExecWait DoDeath 
  164:  		Return
  16C:  	Case  ==  .Event:MultibounceHit
  178:  		SetConst  *Var[0]  00000001 
  188:  		SetConst  *Var[1]  0029010B 
  198:  		ExecWait 8029B998 
  1A4:  	Case  ==  .Event:MultibounceDeath
  1B0:  		SetConst  *Var[0]  00000001 
  1C0:  		SetConst  *Var[1]  0029010B 
  1D0:  		ExecWait 8029B998 
  1DC:  		SetConst  *Var[0]  00000001 
  1EC:  		SetConst  *Var[1]  0029010B 
  1FC:  		ExecWait DoDeath 
  208:  		Return
  210:  	Case  ==  .Event:FlipTrigger
  21C:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  234:  		Call     SetActorVar 	( .Actor:Self 00000009 00000002 )
  24C:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80223938 )
  264:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225968 )
  27C:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  298:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  2B4:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2CC:  		Call     SetAnimation 	( .Actor:Self 00000001 0029010B )
  2E4:  		Call     GetStatusFlags ( .Actor:Self *Var[A] )
  2F8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  314:  		ChildThread
  31C:  			Wait     00000004 
  328:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  344:  			Wait     00000001 
  350:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  36C:  			Wait     00000001 
  378:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  394:  			Wait     00000001 
  3A0:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  3BC:  			Wait     00000001 
  3C8:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3E4:  			Wait     00000001 
  3F0:  		EndChildThread
  3F8:  		UseIntBuffer $IntTable_80226000 
  404:  		Loop     00000016 
  410:  			Get1Int  *Var[0] 
  41C:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  438:  			Wait     00000001 
  444:  		EndLoop
  44C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  468:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  484:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4A0:  		Call     SetAnimation 	( .Actor:Self 00000001 0029010F )
  4B8:  	Case  ==  .Event:ShockHit
  4C4:  		SetConst  *Var[0]  00000001 
  4D4:  		SetConst  *Var[1]  0029010B 
  4E4:  		ExecWait DoShockHit 
  4F0:  		SetConst  *Var[0]  00000001 
  500:  		SetConst  *Var[1]  0029010B 
  510:  		ExecWait 8029BD70 
  51C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  53C:  		SetConst  *Var[0]  00000001 
  54C:  		SetConst  *Var[1]  00290104 
  55C:  		ExecWait DoReturnHome 
  568:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  57C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  59C:  	Case  ==  .Event:ShockDeath
  5A8:  		SetConst  *Var[0]  00000001 
  5B8:  		SetConst  *Var[1]  0029010B 
  5C8:  		ExecWait DoShockHit 
  5D4:  		SetConst  *Var[0]  00000001 
  5E4:  		SetConst  *Var[1]  0029010B 
  5F4:  		ExecWait DoDeath 
  600:  		Return
  608:  	CaseOR  ==  00000017
  614:  	CaseOR  ==  .Event:Immune
  620:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  638:  		If  *Var[0]  ==  00000000 
  648:  			SetConst  *Var[0]  00000001 
  658:  			SetConst  *Var[1]  00290107 
  668:  			ExecWait DoImmune 
  674:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  688:  			If  *Var[0]  !&  0035D000 
  698:  				Call     SetAnimation 	( .Actor:Self 00000001 00290108 )
  6B0:  				Wait     0000000A 
  6BC:  			EndIf
  6C4:  		Else
  6CC:  			SetConst  *Var[0]  00000001 
  6DC:  			SetConst  *Var[1]  0029010F 
  6EC:  			ExecWait DoImmune 
  6F8:  		EndIf
  700:  	EndCaseGroup
  708:  	Case  ==  .Event:Death
  714:  		SetConst  *Var[0]  00000001 
  724:  		SetConst  *Var[1]  0029010B 
  734:  		ExecWait DoNormalHit 
  740:  		Wait     0000000A 
  74C:  		SetConst  *Var[0]  00000001 
  75C:  		SetConst  *Var[1]  0029010B 
  76C:  		ExecWait DoDeath 
  778:  		Return
  780:  	Case  ==  .Event:EndFirstStrike
  78C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  7A4:  		If  *Var[0]  ==  00000000 
  7B4:  			SetConst  *Var[0]  00000001 
  7C4:  			SetConst  *Var[1]  00290104 
  7D4:  			ExecWait DoReturnHome 
  7E0:  		EndIf
  7E8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  804:  		Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  820:  		Call     HPBarToHome 	( .Actor:Self )
  830:  	Case  ==  .Event:RecoverStatus
  83C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  854:  		If  *Var[0]  ==  00000000 
  864:  			SetConst  *Var[0]  00000001 
  874:  			SetConst  *Var[1]  00290101 
  884:  			ExecWait DoRecover 
  890:  		Else
  898:  			SetConst  *Var[0]  00000001 
  8A8:  			SetConst  *Var[1]  0029010F 
  8B8:  			ExecWait DoImmune 
  8C4:  		EndIf
  8CC:  	Case  ==  .Event:ScareAway
  8D8:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  8F0:  		If  *Var[0]  ==  00000000 
  900:  			SetConst  *Var[0]  00000001 
  910:  			SetConst  *Var[1]  00290104 
  920:  			SetConst  *Var[2]  0029010B 
  930:  			ExecWait DoScareAway 
  93C:  			Return
  944:  		Else
  94C:  			SetConst  *Var[0]  00000001 
  95C:  			SetConst  *Var[1]  0029010F 
  96C:  			ExecWait DoImmune 
  978:  		EndIf
  980:  	Case  ==  .Event:BeginAirLift
  98C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  9A4:  		If  *Var[0]  ==  00000000 
  9B4:  			SetConst  *Var[0]  00000001 
  9C4:  			SetConst  *Var[1]  00290117 
  9D4:  		Else
  9DC:  			SetConst  *Var[0]  00000001 
  9EC:  			SetConst  *Var[1]  0029010F 
  9FC:  		EndIf
  A04:  		ExecWait DoAirLift 
  A10:  	Case  ==  .Event:BlowAway
  A1C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  A34:  		If  *Var[0]  ==  00000000 
  A44:  			SetConst  *Var[0]  00000001 
  A54:  			SetConst  *Var[1]  00290117 
  A64:  		Else
  A6C:  			SetConst  *Var[0]  00000001 
  A7C:  			SetConst  *Var[1]  0029010F 
  A8C:  		EndIf
  A94:  		ExecWait DoBlowAway 
  AA0:  		Return
  AA8:  	Case  ==  .Event:AirLiftFailed
  AB4:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  ACC:  		If  *Var[0]  ==  00000000 
  ADC:  			SetConst  *Var[0]  00000001 
  AEC:  			SetConst  *Var[1]  00290101 
  AFC:  			ExecWait DoImmune 
  B08:  		Else
  B10:  			SetConst  *Var[0]  00000001 
  B20:  			SetConst  *Var[1]  0029010F 
  B30:  			ExecWait DoImmune 
  B3C:  		EndIf
  B44:  EndSwitch
  B4C:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  B60:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B74:  Return
  B7C:  End

#new:Script $Script_TakeTurn_80226BDC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00290106 )
   74:  Else
   7C:  	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   94:  	If  *Var[0]  ==  00000001 
   A4:  		Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   BC:  		Sub  *Var[0]  00000001 
   CC:  		If  *Var[0]  >  00000000 
   DC:  			Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   F4:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  110:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  128:  			Wait     0000001E 
  134:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  14C:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  164:  		Else
  16C:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  188:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  1A0:  			Wait     00000014 
  1AC:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  1C4:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  1DC:  			Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1F8:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  20C:  			Call     SetAnimation 	( .Actor:Self 00000001 0029010F )
  224:  			Set  *Var[0]  00000000 
  234:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  250:  			ChildThread
  258:  				Loop     00000005 
  264:  					Add  *Var[0]  0000000F 
  274:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  290:  					Wait     00000001 
  29C:  				EndLoop
  2A4:  			EndChildThread
  2AC:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C8:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E4:  			Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  2F8:  			Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  318:  			Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  32C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  348:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  364:  			Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  380:  			Call     SetAnimation 	( .Actor:Self 00000001 00290101 )
  398:  			Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  3B0:  			Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802258D0 )
  3C8:  			Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80223900 )
  3E0:  			Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
  3FC:  			Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
  418:  			Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  430:  			Call     8026F838 ( FFFFFF81 00000002 )
  444:  		EndIf
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndIf
  484:  	Call     UseCamPreset 	( 0000003F )
  494:  	Call     CamTargetActor ( .Actor:Self )
  4A4:  	Wait     0000000A 
  4B0:  	Call     SetAnimation 	( .Actor:Self 00000001 00290107 )
  4C8:  	Wait     0000000A 
  4D4:  	ChildThread
  4DC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4F8:  		Add  *Var[1]  00000004 
  508:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait     00000003 
  558:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait     00000002 
  5A8:  		Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  608:  	Call     SetAnimation 	( .Actor:Self 00000001 00290106 )
  620:  	Wait     0000000A 
  62C:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  644:  EndIf
  64C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  660:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  67C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  6A0:  Switch  *Var[0] 
  6AC:  	CaseOR  ==  00000006 
  6B8:  	CaseOR  ==  00000005 
  6C4:  		Set  *Var[A]  *Var[0] 
  6D4:  		Call     SetGoalToTarget 	( .Actor:Self )
  6E4:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
  700:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  714:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  72C:  		Call     GetBattlePhase ( *Var[0] )
  73C:  		If  *Var[0]  ==  .Phase:FirstStrike
  74C:  			Call     UseCamPreset 	( 00000005 )
  75C:  			Call     SetCamZoom  	( 0000012C )
  76C:  			Call     SetCamOffsetZ 	( 00000014 )
  77C:  			Call     MoveCamOver 	( 0000000A )
  78C:  			Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call     SetAnimation 	( .Actor:Self 00000001 00290108 )
  7C4:  		Wait     00000008 
  7D0:  		Call     8026F6EC ( FFFFFF81 )
  7E0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  7F4:  		Wait     00000004 
  800:  		If  *Var[A]  ==  00000005 
  810:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call     SetAnimation 	( .Actor:Self 00000001 00290115 )
  854:  		Wait     00000001 
  860:  		Call     SetAnimation 	( .Actor:Self 00000001 00290116 )
  878:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  894:  		Add  *Var[1]  00000014 
  8A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8C0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  8D4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  8F4:  		Call     SetAnimation 	( .Actor:Self 00000001 00290117 )
  90C:  		Wait     00000006 
  918:  		Sub  *Var[1]  00000014 
  928:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  944:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  964:  		Call     UseCamPreset 	( 00000002 )
  974:  		Call     8027D7F0 ( )
  980:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  994:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call     SetAnimation 	( .Actor:Self 00000001 00290117 )
  9C8:  		Call     SetGoalToHome 	( .Actor:Self )
  9D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  9EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A04:  		Call     SetAnimation 	( .Actor:Self 00000001 00290101 )
  A1C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  A34:  		Call     8026B438 ( FFFFFF81 00000001 00000000 )
  A4C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  A60:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A74:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call     SetGoalToTarget 	( .Actor:Self )
  AB0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  AC4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  ADC:  Call     8026F6EC ( FFFFFF81 )
  AEC:  Wait     00000002 
  AF8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
  B20:  Switch  *Var[0] 
  B2C:  	CaseOR  ==  00000000 
  B38:  	CaseOR  ==  00000002 
  B44:  		Call     UseCamPreset 	( 00000002 )
  B54:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B70:  		Add  *Var[0]  00000028 
  B80:  		Set  *Var[1]  00000000 
  B90:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  BA4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BC0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  BE0:  		Add  *Var[0]  0000001E 
  BF0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C0C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C2C:  		Add  *Var[0]  00000014 
  C3C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C58:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  C78:  		Call     SetAnimation 	( .Actor:Self 00000001 00290108 )
  C90:  		Wait     00000008 
  C9C:  		Call     8027D7F0 ( )
  CA8:  		SetConst  *Var[0]  00000001 
  CB8:  		SetConst  *Var[1]  00290104 
  CC8:  		ExecWait DoReturnHome 
  CD4:  		Call     SetAnimation 	( .Actor:Self 00000001 00290101 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  CFC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D10:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D24:  Return
  D2C:  End

#new:IntTable $IntTable_80227910
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:IdleAnimations $IdleAnimations_80227968
.Status:Normal    00470001
.Status:Stone     00470000
.Status:Sleep     00470013
.Status:Poison    00470001
.Status:Stop      00470000
.Status:Static    00470000
.Status:Paralyze  00470000
.Status:Dizzy     00470014
.Status:Fear      00470000
.Status:End

#new:IdleAnimations $IdleAnimations_802279B4
.Status:Normal    0047001A
.Status:Stop      00470019
.Status:Paralyze  00470019
.Status:End

#new:IdleAnimations $IdleAnimations_802279D0
.Status:Normal    00D50000
.Status:End

#new:DefenseTable $DefenseTable_802279DC
.Element:Normal 00000006
.Element:Blast  00000006
.Element:End

#new:DefenseTable $DefenseTable_802279F0
.Element:Normal 00000003
.Element:End

#new:DefenseTable $DefenseTable_802279FC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80227A08
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   30`
.Status:Shrink     40`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80227AB4
00800000 01000000 003C00FF $IdleAnimations_80227968 $DefenseTable_802279DC 00001000 00000000 00000000 00000000 
00020000 020C3D00 00EC00FF 00000000 $DefenseTable_802279F0 00000000 00000000 00000000 00000000 
00020000 032D0000 BA1A00FF 00000000 $DefenseTable_802279FC 00000000 00000000 00000000 00000000 
00120003 04000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000 
00120003 05000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000 
00120003 06000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000 
00120003 07000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000 
00120003 08000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000 
00120003 09000000 000000FF $IdleAnimations_802279D0 $DefenseTable_802279FC 00000000 00000000 00000000 00000000 

#new:Actor $KentCKoopa
% stats
[Index]        B9b 
[Level]        55`b 
[MaxHP]        70`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80227A08 
% ai
[SpriteCount]   9`s 
[SpriteTable] $SpriteTable_80227AB4 
[Script]      $Script_Init_80227C20 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         90`b  70`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -26`b  38`b % dx dy
[StatusIcon]    2`b  63`b % dx dy

#new:Script $Script_Init_80227C20
    0:  Call     8027D434 ( FFFFFF81 00000003 00000046 )
   18:  Call     8027D970 ( FFFFFF81 00000003 0000001E 0000001E )
   34:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80228A7C )
   48:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227DD4 )
   5C:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227E08 )
   70:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80227D2C )
   84:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   9C:  Call     SetActorVar 	( .Actor:Self 00000001 0047001C )
   B4:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000003 00000014 )
   E4:  Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   FC:  Return
  104:  End

#new:Script $Script_NextTurn_80227D2C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetBattlePhase ( *Var[0] )
   38:  Switch  *Var[0] 
   44:  	Case  ==  .Phase:PlayerBegin
   50:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   68:  EndSwitch
   70:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
   84:  Call     UseIdleAnimation 	( .Actor:Self .True )
   98:  Return
   A0:  End

#new:Script $Script_Idle_80227DD4
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Goto     00000000 
   24:  Return
   2C:  End

#new:Script $Script_HandleEvent_80227E08
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastElement ( *Var[E] )
   38:  Call     GetEventType 	( .Actor:Self *Var[D] )
   4C:  Switch  *Var[D] 
   58:  	Case  ==  .Event:BeginFirstStrike
   64:  	Case  ==  .Event:HitCombo
   70:  		SetConst  *Var[0]  00000001 
   80:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
   98:  		ExecWait DoNormalHit 
   A4:  	Case  ==  .Event:Hit
   B0:  		SetConst  *Var[0]  00000001 
   C0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
   D8:  		ExecWait DoNormalHit 
   E4:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   FC:  	Case  ==  .Event:Death
  108:  		SetConst  *Var[0]  00000001 
  118:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  130:  		ExecWait DoNormalHit 
  13C:  		Wait     0000000A 
  148:  		SetConst  *Var[0]  00000001 
  158:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  170:  		ExecWait DoDeath 
  17C:  		Return
  184:  	Case  ==  .Event:BurnHit
  190:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  1A8:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  1C0:  		If  *Var[0]  ==  00000000 
  1D0:  			Set  *Var[0]  00000001 
  1E0:  			Set  *Var[1]  00470015 
  1F0:  			Set  *Var[2]  00470016 
  200:  			ExecWait DoBurnHit 
  20C:  		Else
  214:  			Set  *Var[0]  00000001 
  224:  			Set  *Var[1]  00470017 
  234:  			Set  *Var[2]  00470018 
  244:  			ExecWait DoBurnHit 
  250:  		EndIf
  258:  	Case  ==  .Event:BurnDeath
  264:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  27C:  		If  *Var[0]  ==  00000000 
  28C:  			Set  *Var[0]  00000001 
  29C:  			Set  *Var[1]  00470015 
  2AC:  			Set  *Var[2]  00470016 
  2BC:  		Else
  2C4:  			Set  *Var[0]  00000001 
  2D4:  			Set  *Var[1]  00470017 
  2E4:  			Set  *Var[2]  00470018 
  2F4:  		EndIf
  2FC:  		ExecWait DoBurnHit 
  308:  		Wait     0000000A 
  314:  		SetConst  *Var[0]  00000001 
  324:  		SetConst  *Var[1]  *Var[2] 
  334:  		ExecWait DoDeath 
  340:  		Return
  348:  	Case  ==  .Event:MultibounceHit
  354:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  36C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  384:  		If  *Var[0]  ==  00000000 
  394:  			SetConst  *Var[0]  00000001 
  3A4:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  3BC:  			ExecWait DoNormalHit 
  3C8:  		Else
  3D0:  			SetConst  *Var[0]  00000001 
  3E0:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  3F8:  			ExecWait $Script_8022B158 
  404:  		EndIf
  40C:  	Case  ==  .Event:MultibounceDeath
  418:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  430:  		If  *Var[0]  ==  00000000 
  440:  			SetConst  *Var[0]  00000001 
  450:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  468:  			ExecWait DoNormalHit 
  474:  			SetConst  *Var[0]  00000001 
  484:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  49C:  			ExecWait DoDeath 
  4A8:  			Return
  4B0:  		Else
  4B8:  			SetConst  *Var[0]  00000001 
  4C8:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  4E0:  			ExecWait $Script_8022B204 
  4EC:  			Return
  4F4:  		EndIf
  4FC:  	Case  ==  .Event:ShockHit
  508:  		SetConst  *Var[0]  00000001 
  518:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  530:  		ExecWait DoShockHit 
  53C:  		SetConst  *Var[0]  00000001 
  54C:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  564:  		ExecWait 8029BD70 
  570:  		SetConst  *Var[0]  00000001 
  580:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  598:  		ExecWait DoReturnHome 
  5A4:  	Case  ==  .Event:ShockDeath
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  5D8:  		ExecWait DoShockHit 
  5E4:  		SetConst  *Var[0]  00000001 
  5F4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  60C:  		ExecWait 8029BD70 
  618:  		SetConst  *Var[0]  00000001 
  628:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  640:  		ExecWait DoDeath 
  64C:  		Return
  654:  	Case  ==  00000017
  660:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  678:  		If  *Var[0]  ==  00000000 
  688:  			SetConst  *Var[0]  00000001 
  698:  			SetConst  *Var[1]  00470009 
  6A8:  			ExecWait DoImmune 
  6B4:  		Else
  6BC:  			SetConst  *Var[0]  00000001 
  6CC:  			SetConst  *Var[1]  0047001A 
  6DC:  			ExecWait DoImmune 
  6E8:  		EndIf
  6F0:  	Case  ==  .Event:Immune
  6FC:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  714:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  72C:  		If  *Var[0]  ==  00000000 
  73C:  			SetConst  *Var[0]  00000001 
  74C:  			SetConst  *Var[1]  00470009 
  75C:  			ExecWait DoImmune 
  768:  			Call     GetStatusFlags ( .Actor:Self *Var[2] )
  77C:  			If  *Var[2]  ==  00000000 
  78C:  				Wait     00000014 
  798:  				Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  7B0:  				Wait     00000008 
  7BC:  			EndIf
  7C4:  		Else
  7CC:  			SetConst  *Var[0]  00000001 
  7DC:  			SetConst  *Var[1]  0047001A 
  7EC:  			ExecWait DoImmune 
  7F8:  		EndIf
  800:  	Case  ==  .Event:AirLiftFailed
  80C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  824:  		If  *Var[0]  ==  00000000 
  834:  			Set  *Var[1]  00470001 
  844:  		Else
  84C:  			Set  *Var[1]  0047001A 
  85C:  		EndIf
  864:  		Set  *Var[0]  00000001 
  874:  		ExecWait DoImmune 
  880:  	Case  ==  .Event:EndFirstStrike
  88C:  		ExecWait $Script_8022AD84 
  898:  		Call     HPBarToHome 	( .Actor:Self )
  8A8:  	Case  ==  .Event:RecoverStatus
  8B4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  8CC:  		If  *Var[0]  ==  00000000 
  8DC:  			SetConst  *Var[1]  00470001 
  8EC:  			SetConst  *Var[0]  00000001 
  8FC:  			ExecWait DoRecover 
  908:  		Else
  910:  			SetConst  *Var[0]  00000001 
  920:  			SetConst  *Var[1]  0047001A 
  930:  			ExecWait DoImmune 
  93C:  		EndIf
  944:  	Case  ==  .Event:FlipTrigger
  950:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  968:  		If  *Var[0]  ==  00000001 
  978:  			SetConst  *Var[0]  00000001 
  988:  			SetConst  *Var[1]  00470012 
  998:  			ExecWait DoNormalHit 
  9A4:  			Return
  9AC:  		EndIf
  9B4:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  9CC:  		If  *Var[0]  >  00000000 
  9DC:  			Sub  *Var[0]  00000001 
  9EC:  			Call     SetActorVar 	( .Actor:Self 00000004 *Var[0] )
  A04:  		EndIf
  A0C:  		Call     80269E80 ( *Var[0] )
  A1C:  		If  *Var[0]  ==  00000016 
  A2C:  			Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
  A44:  		EndIf
  A4C:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  A64:  		If  *Var[0]  ==  00000000 
  A74:  			Call     GetBattleFlags ( *Var[D] )
  A84:  			If  *Var[D]  &  00000020 
  A94:  				Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  AAC:  			EndIf
  AB4:  			ExecWait $Script_FlipOver_KentC 
  AC0:  		Else
  AC8:  			Call     GetBattleFlags ( *Var[D] )
  AD8:  			If  *Var[D]  &  00000020 
  AE8:  				Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  B00:  				Call     GetLastDamage 	( .Actor:Self *Var[0] )
  B14:  				If  *Var[0]  >  00000000 
  B24:  					SetConst  *Var[0]  00000001 
  B34:  					SetConst  *Var[1]  0047001C 
  B44:  					ExecWait DoNormalHit 
  B50:  				Else
  B58:  					SetConst  *Var[0]  00000001 
  B68:  					SetConst  *Var[1]  00470009 
  B78:  					ExecWait DoImmune 
  B84:  					Call     GetStatusFlags ( .Actor:Self *Var[2] )
  B98:  					If  *Var[2]  ==  00000000 
  BA8:  						Wait     00000014 
  BB4:  						Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  BCC:  						Wait     00000008 
  BD8:  					EndIf
  BE0:  				EndIf
  BE8:  			Else
  BF0:  				SetConst  *Var[0]  00000001 
  C00:  				SetConst  *Var[1]  0047001C 
  C10:  				ExecWait DoNormalHit 
  C1C:  			EndIf
  C24:  		EndIf
  C2C:  	Default
  C34:  EndSwitch
  C3C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  C50:  Call     UseIdleAnimation 	( .Actor:Self .True )
  C64:  Return
  C6C:  End

#new:Script $Script_TakeTurn_80228A7C
    0:  Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   18:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   30:  If  *Var[0]  ==  00000001 
   40:  	Call     UseIdleAnimation 	( .Actor:Self .False )
   54:  	Call     EnableIdleScript 	( .Actor:Self 00000000 )
   68:  	Call     UseCamPreset 	( 0000000E )
   78:  	Call     SetCamZoom  	( 000000C8 )
   88:  	Call     SetCamOffsetZ 	( 00000014 )
   98:  	Call     CamTargetActor ( .Actor:Self )
   A8:  	Call     MoveCamOver 	( 00000019 )
   B8:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   D0:  	Sub  *Var[0]  00000001 
   E0:  	Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
   F8:  	If  *Var[0]  >  00000000 
  108:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  		Add  *Var[0]  00000024 
  134:  		Add  *Var[1]  00000012 
  144:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  15C:  		Loop     00000005 
  168:  			Call     PlayEffect  	( {FX:Sweat:Large} *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  1AC:  			Wait     00000005 
  1B8:  		EndLoop
  1C0:  		Wait     0000001E 
  1CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  1E4:  		Call     UseCamPreset 	( 00000002 )
  1F4:  		Call     MoveCamOver 	( 00000014 )
  204:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  218:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  22C:  		Return
  234:  	Else
  23C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  258:  		Add  *Var[0]  00000024 
  268:  		Add  *Var[1]  00000012 
  278:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  290:  		Loop     00000005 
  29C:  			Call     PlayEffect  	( {FX:Sweat:Large} *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E0:  			Wait     00000005 
  2EC:  		EndLoop
  2F4:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  30C:  		Wait     0000001E 
  318:  		Call     UseCamPreset 	( 00000002 )
  328:  		Call     MoveCamOver 	( 0000000F )
  338:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  350:  		Call     SetAnimation 	( .Actor:Self 00000001 00470019 )
  368:  		Thread
  370:  			Wait     00000003 
  37C:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  390:  			If  *Var[0]  !&  00080000 
  3A0:  				Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000001B 00000000 )
  3BC:  			Else
  3C4:  				Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  3E0:  			EndIf
  3E8:  			Set  *Var[0]  00000000 
  3F8:  			Loop     00000005 
  404:  				Add  *Var[0]  00000024 
  414:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  430:  				Wait     00000001 
  43C:  			EndLoop
  444:  		EndThread
  44C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  460:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  47C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  498:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4B8:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  4CC:  		If  *Var[3]  !&  00080000 
  4DC:  			Call     $Function_80218B50 ( 00000050 0000000E )
  4F0:  			Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  50C:  		EndIf
  514:  		Wait     00000003 
  520:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  570:  		Wait     0000000A 
  57C:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_802279DC )
  594:  		Call     SetEnemyTargetOffset 	( .Actor:Self 00000001 00000000 0000003C )
  5B0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .True )
  5CC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .False )
  5E8:  		Call     SetSpriteFlags ( .Actor:Self 00000002 00020004 )
  600:  		Call     SetSpriteFlags ( .Actor:Self 00000001 00800004 )
  618:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80227968 )
  630:  		Call     $Function_80218BA8 ( FFFFFFE6 00000026 00000002 0000003F )
  64C:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  664:  		Call     SetActorVar 	( .Actor:Self 00000001 0047001C )
  67C:  	EndIf
  684:  EndIf
  68C:  Call     RandInt     	( 00000064 *Var[0] )
  6A0:  If  *Var[0]  <  00000032 
  6B0:  	Call     GetStatusFlags ( .Actor:Partner *Var[0] )
  6C4:  	If  *Var[0]  !&  01000000 
  6D4:  		ExecWait $Script_ShellToss_KentC 
  6E0:  	Else
  6E8:  		ExecWait $Script_Tackle_KentC 
  6F4:  	EndIf
  6FC:  Else
  704:  	ExecWait $Script_Tackle_KentC 
  710:  EndIf
  718:  Return
  720:  End

#new:Script $Script_ShellToss_KentC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000000E )
   4C:  Call     SetCamZoom  	( 000000C8 )
   5C:  Call     SetCamOffsetZ 	( 00000014 )
   6C:  Call     CamTargetActor ( .Actor:Self )
   7C:  Call     MoveCamOver 	( 00000019 )
   8C:  Wait     00000014 
   98:  Call     SetAnimation 	( .Actor:Self 00000001 0047000B )
   B0:  Wait     0000000A 
   BC:  Thread
   C4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  	Add  *Var[1]  00000004 
   F0:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  134:  	Wait     00000003 
  140:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  184:  	Wait     00000002 
  190:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1D4:  EndThread
  1DC:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  1F8:  Call     PlaySoundAtActor 	( .Actor:Self 00000370 )
  20C:  Call     SetAnimation 	( .Actor:Self 00000001 0047000A )
  224:  Wait     0000000A 
  230:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000003 00000010 )
  254:  Switch  *Var[A] 
  260:  	CaseOR  ==  00000006 
  26C:  	CaseOR  ==  00000005 
  278:  		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  28C:  		Call     CheckPlayerHit ( .Actor:Self *Var[B] 00000000 00000000 00000003 00000010 )
  2B0:  		Switch  *Var[B] 
  2BC:  			Case  ==  00000006 
  2C8:  				Call     UseCamPreset 	( 00000002 )
  2D8:  				Call     MoveCamOver 	( 0000001E )
  2E8:  				Call     SetGoalToTarget 	( .Actor:Self )
  2F8:  				Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  314:  				Sub  *Var[0]  00000028 
  324:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  340:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  354:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF10 00000000 *Var[2] )
  370:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  388:  				Call     SetActorPos 	( .Actor:Self 000000F0 00000000 *Var[2] )
  3A4:  				Call     SetGoalToHome 	( .Actor:Self )
  3B4:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3CC:  				Call     8026F6EC ( FFFFFF81 )
  3DC:  				Call     802D62B8 ( 00000370 )
  3EC:  				Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  404:  				Wait     00000008 
  410:  				Call     8027D7F0 ( )
  41C:  				Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  434:  				Call     EnableIdleScript 	( .Actor:Self 00000001 )
  448:  				Call     UseIdleAnimation 	( .Actor:Self .True )
  45C:  				Return
  464:  			Default
  46C:  				Call     GetStatusFlags ( .Actor:Player *Var[0] )
  480:  				If  *Var[0]  !&  0435D000 
  490:  					Call     UseIdleAnimation 	( .Actor:Player .False )
  4A4:  					Call     SetAnimation 	( .Actor:Player 00000000 0001002B )
  4BC:  				EndIf
  4C4:  				Call     UseCamPreset 	( 00000013 )
  4D4:  				Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
  4EC:  				Call     SetCamZoom  	( 000001CC )
  4FC:  				Call     SetCamOffsetZ 	( 00000000 )
  50C:  				Call     MoveCamOver 	( 00000032 )
  51C:  				Call     SetTargetActor ( .Actor:Self .Actor:Player )
  530:  				Call     SetGoalToTarget 	( .Actor:Self )
  540:  				Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  55C:  				Call     GetStatusFlags ( .Actor:Self *Var[3] )
  570:  				If  *Var[3]  !&  00080000 
  580:  					Add  *Var[0]  00000020 
  590:  				Else
  598:  					Add  *Var[0]  0000000C 
  5A8:  				EndIf
  5B0:  				Set  *Var[1]  00000000 
  5C0:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  5D4:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5F0:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  608:  				If  *Var[A]  ==  00000005 
  618:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  63C:  				EndIf
  644:  				Set  *Var[A]  00000001 
  654:  		EndSwitch
  65C:  	EndCaseGroup
  664:  	Default
  66C:  		Call     UseCamPreset 	( 00000013 )
  67C:  		Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
  694:  		Call     SetCamZoom  	( 000001CC )
  6A4:  		Call     SetCamOffsetZ 	( 00000000 )
  6B4:  		Call     MoveCamOver 	( 00000032 )
  6C4:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  6D8:  		Call     GetStatusFlags ( .Actor:Player *Var[0] )
  6EC:  		If  *Var[0]  !&  0435D000 
  6FC:  			Call     SetAnimation 	( .Actor:Player 00000000 0001002B )
  714:  		EndIf
  71C:  		Call     SetGoalToTarget 	( .Actor:Self )
  72C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  748:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  75C:  		If  *Var[3]  !&  00080000 
  76C:  			Add  *Var[0]  00000020 
  77C:  		Else
  784:  			Add  *Var[0]  0000000C 
  794:  		EndIf
  79C:  		Set  *Var[1]  00000000 
  7AC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  7C0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7DC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  7F4:  		Call     SetGoalToTarget 	( .Actor:Self )
  804:  		Call     GetStatusFlags ( .Actor:Self *Var[E] )
  818:  		If  *Var[E]  !&  00080000 
  828:  			Call     80269EAC ( 00000018 )
  838:  		EndIf
  840:  		Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 0000FFFF 00000000 00000003 00000020 )
  868:  		Set  *Var[A]  00000000 
  878:  		If  *Var[E]  !&  00080000 
  888:  			Call     GetBattleFlags ( *Var[0] )
  898:  			If  *Var[0]  !&  80000000 
  8A8:  				Call     GetStatusFlags ( .Actor:Player *Var[0] )
  8BC:  				If  *Var[0]  !&  00100000 
  8CC:  					Set  *Var[A]  00000001 
  8DC:  				EndIf
  8E4:  			EndIf
  8EC:  		EndIf
  8F4:  EndSwitch
  8FC:  If  *Var[A]  !=  00000000 
  90C:  	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  920:  	Call     SetGoalToTarget 	( .Actor:Self )
  930:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  94C:  	Add  *Var[0]  00000020 
  95C:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  970:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  98C:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  9A4:  	Call     SetGoalToTarget 	( .Actor:Self )
  9B4:  	Call     80269EAC ( 00000019 )
  9C4:  	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
  9EC:  	Call     GetBattleFlags ( *Var[0] )
  9FC:  	If  *Var[0]  !&  80000000 
  A0C:  		Call     SetGoalToTarget 	( .Actor:Self )
  A1C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A38:  		Call     SetGoalToPos 	( .Actor:Self FFFFFF10 00000000 *Var[2] )
  A54:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A6C:  		Call     UseCamPreset 	( 00000002 )
  A7C:  		Call     MoveCamOver 	( 00000014 )
  A8C:  		Call     SetActorPos 	( .Actor:Self 000000F0 00000000 *Var[2] )
  AA8:  		Call     SetGoalToHome 	( .Actor:Self )
  AB8:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  AD0:  		Call     8026F6EC ( FFFFFF81 )
  AE0:  		Call     802D62B8 ( 00000370 )
  AF0:  		Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  B08:  		Wait     00000008 
  B14:  		Call     8027D7F0 ( )
  B20:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  B38:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B4C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  B60:  		Return
  B68:  	Else
  B70:  		Call     UseCamPreset 	( 00000013 )
  B80:  		Call     SetCamTarget 	( FFFFFFD3 0000003C 00000000 )
  B98:  		Call     SetCamZoom  	( 000001CC )
  BA8:  		Call     SetCamOffsetZ 	( 00000000 )
  BB8:  		Call     MoveCamOver 	( 0000001E )
  BC8:  	EndIf
  BD0:  EndIf
  BD8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BF4:  Add  *Var[0]  0000001E 
  C04:  Set  *Var[1]  00000000 
  C14:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  C28:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C44:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C64:  Thread
  C6C:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  C80:  	If  *Var[3]  !&  00080000 
  C90:  		Call     $Function_80218B50 ( 00000050 0000000E )
  CA4:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  CC0:  	EndIf
  CC8:  EndThread
  CD0:  Add  *Var[0]  00000010 
  CE0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  CFC:  Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  D1C:  Thread
  D24:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  D38:  	If  *Var[3]  !&  00080000 
  D48:  		Call     $Function_80218B50 ( 00000050 0000000E )
  D5C:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  D78:  	EndIf
  D80:  EndThread
  D88:  Add  *Var[0]  0000000A 
  D98:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DB4:  Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  DD4:  Thread
  DDC:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  DF0:  	If  *Var[3]  !&  00080000 
  E00:  		Call     $Function_80218B50 ( 00000050 0000000E )
  E14:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  E30:  	EndIf
  E38:  EndThread
  E40:  Call     8026F6EC ( FFFFFF81 )
  E50:  Call     802D62B8 ( 00000370 )
  E60:  Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  E78:  Wait     00000008 
  E84:  Call     8027D7F0 ( )
  E90:  Call     UseCamPreset 	( 00000002 )
  EA0:  Call     MoveCamOver 	( 00000014 )
  EB0:  SetConst  *Var[0]  00000001 
  EC0:  SetConst  *Var[1]  00470004 
  ED0:  ExecWait DoReturnHome 
  EDC:  Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  EF4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  F08:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F1C:  Return
  F24:  End

#new:Script $Script_Tackle_KentC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     SetCamZoom  	( 00000118 )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     MoveCamOver 	( 00000014 )
   7C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   94:  Call     SetGoalToTarget 	( .Actor:Self )
   A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C0:  Add  *Var[0]  00000032 
   D0:  Set  *Var[1]  00000000 
   E0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
   F4:  Call     SetAnimation 	( .Actor:Self 00000001 00470003 )
  10C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  128:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  158:  Wait     00000008 
  164:  Call     PlaySoundAtActor 	( .Actor:Self 000003E7 )
  178:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  19C:  Switch  *Var[0] 
  1A8:  	CaseOR  ==  00000006 
  1B4:  	CaseOR  ==  00000005 
  1C0:  		Set  *Var[A]  *Var[0] 
  1D0:  		Call     SetAnimation 	( .Actor:Self 00000001 00470006 )
  1E8:  		Thread
  1F0:  			Wait     00000007 
  1FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00470007 )
  214:  			Wait     00000004 
  220:  			Call     SetAnimation 	( .Actor:Self 00000001 00470008 )
  238:  		EndThread
  240:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  254:  		Call     SetGoalToTarget 	( .Actor:Self )
  264:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  280:  		Sub  *Var[0]  00000014 
  290:  		Set  *Var[1]  00000000 
  2A0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2BC:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  2DC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  2F0:  		Thread
  2F8:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  30C:  			If  *Var[3]  !&  00080000 
  31C:  				Call     $Function_80218B50 ( 00000050 0000000E )
  330:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  34C:  			EndIf
  354:  		EndThread
  35C:  		Sub  *Var[0]  0000000F 
  36C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  380:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  39C:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  3BC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  3D0:  		Thread
  3D8:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  3EC:  			If  *Var[3]  !&  00080000 
  3FC:  				Call     $Function_80218B50 ( 00000050 0000000E )
  410:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  42C:  			EndIf
  434:  		EndThread
  43C:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  454:  		Sub  *Var[0]  0000000A 
  464:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  4A0:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  4B4:  		Thread
  4BC:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  4D0:  			If  *Var[3]  !&  00080000 
  4E0:  				Call     $Function_80218B50 ( 00000050 0000000E )
  4F4:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  510:  			EndIf
  518:  		EndThread
  520:  		Wait     00000008 
  52C:  		If  *Var[A]  ==  00000005 
  53C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  560:  		EndIf
  568:  		Call     UseCamPreset 	( 00000002 )
  578:  		Call     MoveCamOver 	( 00000014 )
  588:  		Set  *Var[3]  00000000 
  598:  		Loop     0000000C 
  5A4:  			Add  *Var[3]  0000000F 
  5B4:  			Call     SetActorAngle 	( .Actor:Self *Var[3] )
  5C8:  			Wait     00000001 
  5D4:  		EndLoop
  5DC:  		Call     SetGoalToHome 	( .Actor:Self )
  5EC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  600:  		Call     SetAnimation 	( .Actor:Self 00000001 00470004 )
  618:  		Call     8026B438 ( FFFFFF81 00000001 000000B4 )
  630:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  64C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  664:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  67C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  694:  		Set  *Var[3]  000000B4 
  6A4:  		Loop     0000000F 
  6B0:  			Sub  *Var[3]  0000000C 
  6C0:  			Call     SetActorAngle 	( .Actor:Self *Var[3] )
  6D4:  			Wait     00000001 
  6E0:  		EndLoop
  6E8:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  6FC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  710:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  724:  		Return
  72C:  	EndCaseGroup
  734:  EndSwitch
  73C:  Call     SetAnimation 	( .Actor:Self 00000001 00470006 )
  754:  Thread
  75C:  	Wait     00000005 
  768:  	Call     SetAnimation 	( .Actor:Self 00000001 00470007 )
  780:  	Wait     00000002 
  78C:  	Call     SetAnimation 	( .Actor:Self 00000001 00470008 )
  7A4:  EndThread
  7AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
  7C0:  Call     SetGoalToTarget 	( .Actor:Self )
  7D0:  Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  7F0:  Wait     00000002 
  7FC:  Call     SetGoalToTarget 	( .Actor:Self )
  80C:  Call     GetStatusFlags ( .Actor:Self *Var[F] )
  820:  If  *Var[F]  !&  00080000 
  830:  	Call     80269EAC ( 00000018 )
  840:  EndIf
  848:  Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 0000FFFF 00000000 0000000A 00000020 )
  870:  Switch  *Var[F] 
  87C:  	CaseOR  ==  00000000 
  888:  	CaseOR  ==  00000002 
  894:  	CaseOR  ==  0000000A 
  8A0:  		Call     UseCamPreset 	( 00000002 )
  8B0:  		Call     MoveCamOver 	( 0000001E )
  8C0:  		Call     GetBattleFlags ( *Var[0] )
  8D0:  		If  *Var[0]  !&  80000000 
  8E0:  			Call     GetStatusFlags ( .Actor:Player *Var[0] )
  8F4:  			If  *Var[0]  !&  00100000 
  904:  				Call     GetStatusFlags ( .Actor:Self *Var[E] )
  918:  				If  *Var[E]  !&  00080000 
  928:  					Call     80279AD4 ( FFFFFF81 )
  938:  					Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  94C:  				EndIf
  954:  			EndIf
  95C:  		EndIf
  964:  		Thread
  96C:  			Call     $Function_80218B50 ( 00000050 0000000E )
  980:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  994:  			If  *Var[3]  !&  00080000 
  9A4:  				Call     $Function_80218B50 ( 00000050 0000000E )
  9B8:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  9D4:  			EndIf
  9DC:  		EndThread
  9E4:  		Thread
  9EC:  			Wait     00000005 
  9F8:  			Call     SetAnimation 	( .Actor:Self 00000001 00470006 )
  A10:  		EndThread
  A18:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A34:  		Add  *Var[0]  00000028 
  A44:  		Set  *Var[1]  00000000 
  A54:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  A68:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A84:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  AA4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  AB8:  		Thread
  AC0:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  AD4:  			If  *Var[3]  !&  00080000 
  AE4:  				Call     $Function_80218B50 ( 00000050 0000000E )
  AF8:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  B14:  			EndIf
  B1C:  		EndThread
  B24:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  B3C:  		Add  *Var[0]  00000014 
  B4C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B68:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B88:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  B9C:  		Thread
  BA4:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  BB8:  			If  *Var[3]  !&  00080000 
  BC8:  				Call     $Function_80218B50 ( 00000050 0000000E )
  BDC:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  BF8:  			EndIf
  C00:  		EndThread
  C08:  		Wait     00000008 
  C14:  		If  *Var[F]  ==  0000000A 
  C24:  			Return
  C2C:  		EndIf
  C34:  		Call     UseCamPreset 	( 00000002 )
  C44:  		Call     MoveCamOver 	( 00000014 )
  C54:  		ExecWait $Script_8022AD84 
  C60:  	Case  ==  00000003 
  C6C:  	EndCaseGroup
  C74:  EndSwitch
  C7C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  C90:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CA4:  Return
  CAC:  End

#new:Script $Script_8022AD84
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00470004 
   20:  ExecWait DoReturnHome 
   2C:  Return
   34:  End

#new:Script $Script_FlipOver_KentC
    0:  Call     SetEnemyTargetOffset 	( .Actor:Self 00000001 00000000 00000028 )
   1C:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_802279F0 )
   34:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802279B4 )
   4C:  Call     $Function_80218BA8 ( FFFFFFE8 0000002F 00000017 00000025 )
   68:  Call     SetAnimation 	( .Actor:Self 00000001 0047001C )
   80:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   98:  Call     SetActorVar 	( .Actor:Self 00000001 00470012 )
   B0:  Thread
   B8:  	Wait     00000004 
   C4:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  	If  *Var[0]  !&  00080000 
   E8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000023 00000000 )
  104:  	Else
  10C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  128:  	EndIf
  130:  	Set  *Var[0]  00000000 
  140:  	Loop     00000005 
  14C:  		Sub  *Var[0]  00000012 
  15C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  178:  		Wait     00000001 
  184:  	EndLoop
  18C:  EndThread
  194:  UseIntBuffer $IntTable_80227910 
  1A0:  Loop     00000016 
  1AC:  	Get1Int  *Var[0] 
  1B8:  	Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  1D4:  	If  *Var[0]  ==  00000000 
  1E4:  		Thread
  1EC:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  200:  			If  *Var[3]  !&  00080000 
  210:  				Call     $Function_80218B50 ( 00000050 0000000E )
  224:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  240:  			EndIf
  248:  		EndThread
  250:  	EndIf
  258:  	Wait     00000001 
  264:  EndLoop
  26C:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  288:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  2A4:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  2C0:  Call     SetAnimation 	( .Actor:Self 00000001 0047001D )
  2D8:  Wait     00000001 
  2E4:  Call     SetAnimation 	( .Actor:Self 00000001 0047001E )
  2FC:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .False )
  318:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .True )
  334:  Call     SetSpriteFlags ( .Actor:Self 00000002 00000004 )
  34C:  Call     SetSpriteFlags ( .Actor:Self 00000001 00020004 )
  364:  Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
  37C:  Wait     00000008 
  388:  Return
  390:  End

#new:Script $Script_8022B158
    0:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   18:  Set  *Var[A]  00000005 
   28:  ExecWait $Script_8022B2E8 
   34:  Set  *Var[2]  00000000 
   44:  Loop     00000024 
   50:  	Add  *Var[2]  0000001E 
   60:  	Call     SetActorAngle 	( .Actor:Self *Var[2] )
   74:  	Wait     00000001 
   80:  EndLoop
   88:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   9C:  Return
   A4:  End

#new:Script $Script_8022B204
    0:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   18:  Set  *Var[A]  00000000 
   28:  ExecWait $Script_8022B2E8 
   34:  Set  *Var[2]  00000000 
   44:  Loop     00000030 
   50:  	Add  *Var[2]  0000001E 
   60:  	Call     SetActorAngle 	( .Actor:Self *Var[2] )
   74:  	Wait     00000001 
   80:  EndLoop
   88:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   9C:  Wait     0000000A 
   A8:  Set  *Var[0]  00000001 
   B8:  Set  *Var[1]  FFFFFFFF 
   C8:  ExecWait DoDeath 
   D4:  Return
   DC:  End

#new:Script $Script_8022B2E8
    0:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   14:  If  *Var[3]  &  00080000 
   24:  	Return
   2C:  EndIf
   34:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[3] )
   4C:  Call     GetLastDamage 	( .Actor:Self *Var[4] )
   60:  If  *Var[4]  >  *Var[3] 
   70:  	Set  *Var[4]  *Var[3] 
   80:  EndIf
   88:  If  *Var[4]  >  00000006 
   98:  	Set  *Var[4]  00000006 
   A8:  EndIf
   B0:  If  *Var[4]  >  00000000 
   C0:  	Thread
   C8:  		Sub  *Var[3]  *Var[4] 
   D8:  		Call     SetActorVar 	( .Actor:Self 00000003 *Var[3] )
   F0:  		Set  *Var[5]  00000004 
  100:  		Loop     *Var[4] 
  10C:  			Exec     $Script_8022B444 
  118:  			Add  *Var[5]  00000001 
  128:  			Wait     *Var[A] 
  134:  		EndLoop
  13C:  	EndThread
  144:  EndIf
  14C:  Return
  154:  End

#new:Script $Script_8022B444
    0:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[5] 00000212 )
   18:  Call     GetActorPos 	( .Actor:Self *Var[6] *Var[7] *Var[8] )
   34:  Call     SetSpritePos 	( .Actor:Self *Var[5] *Var[6] 00000023 *Var[8] )
   54:  Call     $Function_80218C74 ( *Var[6] *Var[8] *Var[0] *Var[1] *Var[2] *Var[3] )
   78:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[5] 00000001 .False )
   94:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[5] *Fixed[1.0] )
   AC:  Call     JumpSpriteA 	( .Actor:Self *Var[5] *Var[0] 00000000 *Var[1] 00000012 .True )
   D4:  Call     JumpSpriteA 	( .Actor:Self *Var[5] *Var[2] 00000000 *Var[3] 00000009 .True )
   FC:  Wait     0000000A 
  108:  Loop     0000000A 
  114:  	Call     SetSpriteFlagBits 	( .Actor:Self *Var[5] 00000001 .False )
  130:  	Wait     00000001 
  13C:  	Call     SetSpriteFlagBits 	( .Actor:Self *Var[5] 00000001 .True )
  158:  	Wait     00000001 
  164:  EndLoop
  16C:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[5] 00000211 )
  184:  Call     AddCoin     	( 00000001 )
  194:  Return
  19C:  End

PADDING: 8022B5E8 to 8022B5F0 (004A0788 to 004A0790)
00000000 00000000 

#new:Script $Script_8022B5F0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     TranslateModel ( *Var[A] 00000000 00000002 00000000 )
   38:  Wait     00000005 
   44:  Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
   60:  Wait     00000005 
   6C:  Call     TranslateModel ( *Var[A] 00000000 00000002 00000000 )
   88:  Wait     00000005 
   94:  Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
   B0:  Wait     00000005 
   BC:  Call     RandInt     	( 0000001E *Var[0] )
   D0:  Add  *Var[0]  0000001E 
   E0:  Wait     *Var[0] 
   EC:  Goto     00000000 
   F8:  Return
  100:  End

#new:Script $Script_BeforeBattle_8022B6F8
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Set  *Var[0]  00000013 
   20:  Exec     $Script_8022B5F0 
   2C:  Set  *Var[0]  00000014 
   3C:  Exec     $Script_8022B5F0 
   48:  Set  *Var[0]  00000015 
   58:  Exec     $Script_8022B5F0 
   64:  Set  *Var[0]  00000016 
   74:  Exec     $Script_8022B5F0 
   80:  Set  *Var[0]  00000017 
   90:  Exec     $Script_8022B5F0 
   9C:  Set  *Var[0]  00000018 
   AC:  Exec     $Script_8022B5F0 
   B8:  Return
   C0:  End

#new:Script $Script_AfterBattle_8022B7C0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022B7D0
0000001E 0000001D 0000001C 00000000 

#new:Stage $Stage_8022B7E0
$ASCII_8022BE64  % nok_tex
$ASCII_8022BE54  % nok_bt01_shape
$ASCII_8022BE44  % nok_bt01_hit
$Script_BeforeBattle_8022B6F8 
$Script_AfterBattle_8022B7C0 
$ASCII_8022BE3C  % nok_bg
$ForegroundModelList_8022B7D0 
00000000 
00000000 
00000000 

PADDING: 8022B808 to 8022B810 (004A09A8 to 004A09B0)
00000000 00000000 

#new:Script $Script_8022B810
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     TranslateModel ( *Var[A] 00000000 00000002 00000000 )
   38:  Wait     00000005 
   44:  Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
   60:  Wait     00000005 
   6C:  Call     TranslateModel ( *Var[A] 00000000 00000002 00000000 )
   88:  Wait     00000005 
   94:  Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
   B0:  Wait     00000005 
   BC:  Call     RandInt     	( 0000001E *Var[0] )
   D0:  Add  *Var[0]  0000001E 
   E0:  Wait     *Var[0] 
   EC:  Goto     00000000 
   F8:  Return
  100:  End

#new:Script $Script_BeforeBattle_8022B918
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Thread
   18:  	Set  *Var[0]  00000013 
   28:  	Exec     $Script_8022B810 
   34:  	Wait     00000005 
   40:  	Set  *Var[0]  00000014 
   50:  	Exec     $Script_8022B810 
   5C:  	Wait     00000005 
   68:  	Set  *Var[0]  00000015 
   78:  	Exec     $Script_8022B810 
   84:  	Wait     00000005 
   90:  	Set  *Var[0]  00000016 
   A0:  	Exec     $Script_8022B810 
   AC:  	Wait     00000005 
   B8:  	Set  *Var[0]  00000017 
   C8:  	Exec     $Script_8022B810 
   D4:  	Wait     00000005 
   E0:  	Set  *Var[0]  00000018 
   F0:  	Exec     $Script_8022B810 
   FC:  	Wait     00000005 
  108:  	Set  *Var[0]  00000019 
  118:  	Exec     $Script_8022B810 
  124:  	Wait     00000005 
  130:  	Set  *Var[0]  0000001A 
  140:  	Exec     $Script_8022B810 
  14C:  	Wait     00000005 
  158:  	Set  *Var[0]  0000001B 
  168:  	Exec     $Script_8022B810 
  174:  	Wait     00000005 
  180:  	Set  *Var[0]  0000001C 
  190:  	Exec     $Script_8022B810 
  19C:  EndThread
  1A4:  Return
  1AC:  End

#new:Script $Script_AfterBattle_8022BACC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022BADC
0000001F 00000020 0000001E 00000000 

#new:Stage $Stage_8022BAEC
$ASCII_8022BE94  % nok_tex
$ASCII_8022BE84  % nok_bt02_shape
$ASCII_8022BE74  % nok_bt02_hit
$Script_BeforeBattle_8022B918 
$Script_AfterBattle_8022BACC 
$ASCII_8022BE6C  % nok_bg
$ForegroundModelList_8022BADC 
00000000 
00000000 
00000000 

PADDING: 8022BB14 to 8022BB20 (004A0CB4 to 004A0CC0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8022BB20
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Return
   18:  End

#new:Script $Script_AfterBattle_8022BB40
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022BB50
0000000E 0000000F 00000000 

#new:Stage $Stage_8022BB5C
$ASCII_8022BEC4  % nok_tex
$ASCII_8022BEB4  % nok_bt03_shape
$ASCII_8022BEA4  % nok_bt03_hit
$Script_BeforeBattle_8022BB20 
$Script_AfterBattle_8022BB40 
$ASCII_8022BE9C  % nok_bg
$ForegroundModelList_8022BB50 
00000000 
00000000 
00000000 

PADDING: 8022BB84 to 8022BB90 (004A0D24 to 004A0D30)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8022BB90
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Return
   18:  End

#new:Script $Script_AfterBattle_8022BBB0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022BBC0
0000001B 0000001A 0000001D 0000001C 00000019 00000000 

#new:Stage $Stage_8022BBD8
$ASCII_8022BEF4  % nok_tex
$ASCII_8022BEE4  % nok_bt04_shape
$ASCII_8022BED4  % nok_bt04_hit
$Script_BeforeBattle_8022BB90 
$Script_AfterBattle_8022BBB0 
$ASCII_8022BECC  % nok_bg
$ForegroundModelList_8022BBC0 
00000000 
00000000 
00000000 

#new:SJIS $SJIS_8022BC00
% zeninoko-
835B836A 836D8352 815B0000 

#new:SJIS $SJIS_8022BC0C
% chorobonx4
83608387 838D837B 83937834 00000000 

#new:SJIS $SJIS_8022BC1C
% chorobonx2
83608387 838D837B 83937832 00000000 

#new:SJIS $SJIS_8022BC2C
% chorobon
83608387 838D837B 83930000 

#new:SJIS $SJIS_8022BC38
% patapata,nokonoko,togekuribo-x2
8370835E 8370835E 8141836D 8352836D 83528141 83678351 834E838A 837B815B 
78320000 

#new:SJIS $SJIS_8022BC5C
% patapata,nokonoko,togekuribo-
8370835E 8370835E 8141836D 8352836D 83528141 83678351 834E838A 837B815B 
00000000 

#new:SJIS $SJIS_8022BC80
% patapata,nokonoko
8370835E 8370835E 8141836D 8352836D 83520000 

#new:SJIS $SJIS_8022BC94
% patapatax2
8370835E 8370835E 78320000 

#new:SJIS $SJIS_8022BCA0
% nokonokox2,togekuribo-,patakuribo-
836D8352 836D8352 78328141 83678351 834E838A 837B815B 2C837083 5E834E83 
8A837B81 5B000000 

#new:SJIS $SJIS_8022BCC8
% nokonoko,togekuribo-,patakuribo-
836D8352 836D8352 81418367 8351834E 838A837B 815B2C83 70835E83 4E838A83 
7B815B00 

#new:SJIS $SJIS_8022BCEC
% nokonoko,patakuribo-x2
836D8352 836D8352 81418370 835E834E 838A837B 815B7832 00000000 

#new:SJIS $SJIS_8022BD08
% nokonoko,togekuribo-x2
836D8352 836D8352 81418367 8351834E 838A837B 815B7832 00000000 

#new:SJIS $SJIS_8022BD24
% nokonokox2,togekuri
836D8352 836D8352 78328141 83678351 834E838A 00000000 

#new:SJIS $SJIS_8022BD3C
% nokonoko,togekuribo-
836D8352 836D8352 81418367 8351834E 838A837B 815B0000 

#new:SJIS $SJIS_8022BD54
% nokonokox3
836D8352 836D8352 78825200 

#new:SJIS $SJIS_8022BD60
% nokonokox2
836D8352 836D8352 78825100 

#new:SJIS $SJIS_8022BD6C
% nokonoko,kuribo-
836D8352 836D8352 8141834E 838A837B 815B0000 

#new:SJIS $SJIS_8022BD80
% togekuribo-x4
83678351 834E838A 837B815B 78825300 

#new:SJIS $SJIS_8022BD90
% togekuribo-x3
83678351 834E838A 837B815B 78825200 

#new:SJIS $SJIS_8022BDA0
% togekuribo-,kuribo-x2
83678351 834E838A 837B815B 8141834E 838A837B 815B7832 00000000 

#new:SJIS $SJIS_8022BDBC
% togekuribo-x2
83678351 834E838A 837B815B 78825100 

#new:SJIS $SJIS_8022BDCC
% togekuribo-,patakuribo-
83678351 834E838A 837B815B 81418370 835E834E 838A837B 815B0000 

#new:SJIS $SJIS_8022BDE8
% patakuribo-x2
8370835E 834E838A 837B815B 78825100 

#new:SJIS $SJIS_8022BDF8
% kuribo-,togekuribo-
834E838A 837B815B 2C836783 51834E83 8A837B81 5B000000 

#new:SJIS $SJIS_8022BE10
% kuribo-x2
834E838A 837B815B 78825100 

#new:ASCII $ASCII_8022BE1C
nok_04

#new:ASCII $ASCII_8022BE24
nok_03

#new:ASCII $ASCII_8022BE2C
nok_02

#new:ASCII $ASCII_8022BE34
nok_01

#new:ASCII $ASCII_8022BE3C
nok_bg

#new:ASCII $ASCII_8022BE44
nok_bt01_hit

#new:ASCII $ASCII_8022BE54
nok_bt01_shape

#new:ASCII $ASCII_8022BE64
nok_tex

#new:ASCII $ASCII_8022BE6C
nok_bg

#new:ASCII $ASCII_8022BE74
nok_bt02_hit

#new:ASCII $ASCII_8022BE84
nok_bt02_shape

#new:ASCII $ASCII_8022BE94
nok_tex

#new:ASCII $ASCII_8022BE9C
nok_bg

#new:ASCII $ASCII_8022BEA4
nok_bt03_hit

#new:ASCII $ASCII_8022BEB4
nok_bt03_shape

#new:ASCII $ASCII_8022BEC4
nok_tex

#new:ASCII $ASCII_8022BECC
nok_bg

#new:ASCII $ASCII_8022BED4
nok_bt04_hit

#new:ASCII $ASCII_8022BEE4
nok_bt04_shape

#new:ASCII $ASCII_8022BEF4
nok_tex

PADDING: 8022BEFC to 8022BF00 (004A109C to 004A10A0)
00000000 

