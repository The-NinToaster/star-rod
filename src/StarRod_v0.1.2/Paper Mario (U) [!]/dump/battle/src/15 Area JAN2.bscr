% Script File: 15 Area JAN2.bscr
% Decoded from: 584940 to 58C2F0 (15 Area JAN2)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_802180CC
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 1C (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 34 (SP)
   10:  SW        S6, 30 (SP)
   14:  SW        S5, 2C (SP)
   18:  SW        S4, 28 (SP)
   1C:  SW        S3, 24 (SP)
   20:  SW        S2, 20 (SP)
   24:  SW        S0, 18 (SP)
   28:  SDC1      F20, 38 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  JAL       {Func:GetVariable}
   48:  DADDU     A0, S1, R0
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  DADDU     A0, S1, R0
   58:  JAL       {Func:GetVariable}
   5C:  DADDU     S6, V0, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S1, R0
   6C:  JAL       {Func:GetVariable}
   70:  DADDU     S5, V0, R0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S1, R0
   80:  JAL       {Func:GetFloatVariable}
   84:  DADDU     S4, V0, R0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S1, R0
   94:  JAL       {Func:GetVariable}
   98:  MOV.S     F20, F0
   9C:  LW        A1, 0 (S0)
   A0:  ADDIU     S0, S0, 4
   A4:  DADDU     A0, S1, R0
   A8:  JAL       {Func:GetVariable}
   AC:  DADDU     S2, V0, R0
   B0:  LW        A1, 0 (S0)
   B4:  ADDIU     S0, S0, 4
   B8:  DADDU     A0, S1, R0
   BC:  JAL       {Func:GetVariable}
   C0:  DADDU     S3, V0, R0
   C4:  DADDU     A0, S1, R0
   C8:  LW        A1, 0 (S0)
   CC:  JAL       {Func:GetVariable}
   D0:  DADDU     S1, V0, R0
   D4:  ADDIU     A0, R0, 1
   D8:  MTC1      S6, F2
   DC:  NOP
   E0:  CVT.S.W   F2, F2
   E4:  MFC1      A1, F2
   E8:  MTC1      S5, F2
   EC:  NOP
   F0:  CVT.S.W   F2, F2
   F4:  MFC1      A2, F2
   F8:  MTC1      S4, F2
   FC:  NOP
  100:  CVT.S.W   F2, F2
  104:  MFC1      A3, F2
  108:  DADDU     S0, V0, R0
  10C:  SWC1      F20, 10 (SP)
  110:  JAL       80072230
  114:  SW        S2, 14 (SP)
  118:  LW        V1, C (V0)
  11C:  SW        S3, 18 (V1)
  120:  LW        V1, C (V0)
  124:  SW        S1, 1C (V1)
  128:  LW        V1, C (V0)
  12C:  SW        S0, 20 (V1)
  130:  LW        V1, C (V0)
  134:  ADDIU     A0, R0, FF
  138:  SW        A0, 28 (V1)
  13C:  LW        V1, C (V0)
  140:  SW        A0, 2C (V1)
  144:  LW        V1, C (V0)
  148:  SW        A0, 30 (V1)
  14C:  LW        RA, 34 (SP)
  150:  LW        S6, 30 (SP)
  154:  LW        S5, 2C (SP)
  158:  LW        S4, 28 (SP)
  15C:  LW        S3, 24 (SP)
  160:  LW        S2, 20 (SP)
  164:  LW        S1, 1C (SP)
  168:  LW        S0, 18 (SP)
  16C:  LDC1      F20, 38 (SP)
  170:  ADDIU     V0, R0, 2
  174:  JR        RA
  178:  ADDIU     SP, SP, 40

PADDING: 80218248 to 80218250 (00584B88 to 00584B90)
00000000 00000000 

#new:Function $Function_80218250
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

% Origin: HINT
#new:Function $Function_802183A8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_802183D4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

% Origin: HINT
#new:Function $Function_802184A0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_802184F8
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

#new:Function $Function_802185BC
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S2, 18 (SP)
   10:  LIA       S2, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 0 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:SetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 1 (S2)
   3C:  JAL       {Func:SetVariable}
   40:  DADDU     A0, S1, R0
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  ADDIU     V0, R0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20

#new:Function $Function_8021861C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S3, 1C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S1, 14 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S3)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  DADDU     S1, V0, R0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     A0, S3, R0
   40:  DADDU     S2, V0, R0
   44:  ADDIU     V0, R0, FF81
   48:  BNE       S1, V0, .o54
   4C:  NOP
   50:  LW        S1, 148 (S3)
        .o54
   54:  JAL       {Func:GetActor}
   58:  DADDU     A0, S1, R0
   5C:  DADDU     A0, V0, R0
   60:  JAL       {Func:GetSprite}
   64:  DADDU     A1, S2, R0
   68:  LW        A0, 78 (V0)
   6C:  JAL       80265E44
   70:  ADDIU     A1, R0, 1
   74:  DADDU     A0, S3, R0
   78:  LW        A1, 0 (S0)
   7C:  JAL       {Func:SetVariable}
   80:  DADDU     A2, V0, R0
   84:  LW        RA, 20 (SP)
   88:  LW        S3, 1C (SP)
   8C:  LW        S2, 18 (SP)
   90:  LW        S1, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  ADDIU     V0, R0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28

#new:IdleAnimations $IdleAnimations_802186C0
.Status:Normal    00360001
.Status:Stone     00360000
.Status:Sleep     00360000
.Status:Poison    00360001
.Status:Stop      00360000
.Status:Static    00360000
.Status:Paralyze  00360000
.Status:Paralyze  00360000
.Status:Dizzy     0036000F
.Status:End

#new:DefenseTable $DefenseTable_8021870C
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End

#new:StatusTable $StatusTable_80218720
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802187CC
00800000 01000000 F13200FF $IdleAnimations_802186C0 $DefenseTable_8021870C 00000000 00000000 03F20000 00000000 

#new:Actor $PutridPiranha
% stats
[Index]        2Db 
[Level]        17`b 
[MaxHP]        12`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218720 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802187CC 
[Script]      $Script_Init_80218818 
% move effectiveness
[Escape]       60`b 
[Item]         30`b 
[AirLift]      20`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         60`b  52`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -22`b  32`b % dx dy
[StatusIcon]    1`b  44`b % dx dy

#new:Script $Script_Init_80218818
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80218EC8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80218864 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802189F0 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_80218864
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   20:  If  *Var[A]  &  00040000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFE5 00000021 )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000005 FFFFFFF5 )
   68:  	Call     $Function_80218000 ( FFFFFFDB 00000009 FFFFFFF9 0000001F )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF1 00000032 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 00000003 FFFFFFF2 )
   C4:  	Call     $Function_80218000 ( FFFFFFEA 00000020 00000001 0000002C )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_80218974
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
   18:  Call     SetGoalToHome 	( .Actor:Self )
   28:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   40:  Call     SetAnimation 	( .Actor:Self 00000001 00360001 )
   58:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   6C:  Return
   74:  End

#new:Script $Script_HandleEvent_802189F0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  0036000E 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00360010 
   C0:  		SetConst  *Var[2]  00360011 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00360010 
  108:  		SetConst  *Var[2]  00360011 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00360011 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  0036000E 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  0036000E 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  0036000E 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  0036000E 
  228:  		ExecWait DoShockHit 
  234:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  248:  		ExecWait $Script_80218974 
  254:  	Case  ==  .Event:ShockDeath
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  0036000E 
  280:  		ExecWait DoShockHit 
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  0036000E 
  2AC:  		ExecWait DoDeath 
  2B8:  		Return
  2C0:  	CaseOR  ==  00000017
  2CC:  	CaseOR  ==  .Event:Immune
  2D8:  	CaseOR  ==  .Event:AirLiftFailed
  2E4:  		SetConst  *Var[0]  00000001 
  2F4:  		SetConst  *Var[1]  00360001 
  304:  		ExecWait DoImmune 
  310:  	EndCaseGroup
  318:  	Case  ==  .Event:Death
  324:  		SetConst  *Var[0]  00000001 
  334:  		SetConst  *Var[1]  0036000E 
  344:  		ExecWait DoNormalHit 
  350:  		Wait     0000000A 
  35C:  		SetConst  *Var[0]  00000001 
  36C:  		SetConst  *Var[1]  0036000E 
  37C:  		ExecWait DoDeath 
  388:  		Return
  390:  	Case  ==  .Event:RecoverStatus
  39C:  		SetConst  *Var[0]  00000001 
  3AC:  		SetConst  *Var[1]  00360001 
  3BC:  		ExecWait DoRecover 
  3C8:  	Case  ==  .Event:ScareAway
  3D4:  		SetConst  *Var[0]  00000001 
  3E4:  		SetConst  *Var[1]  00360003 
  3F4:  		SetConst  *Var[2]  0036000E 
  404:  		ExecWait DoScareAway 
  410:  		Return
  418:  	Case  ==  .Event:BeginAirLift
  424:  		SetConst  *Var[0]  00000001 
  434:  		SetConst  *Var[1]  00360003 
  444:  		ExecWait DoAirLift 
  450:  	Case  ==  .Event:BlowAway
  45C:  		SetConst  *Var[0]  00000001 
  46C:  		SetConst  *Var[1]  00360003 
  47C:  		ExecWait DoBlowAway 
  488:  		Return
  490:  	Default
  498:  EndSwitch
  4A0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4B4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4C8:  Return
  4D0:  End

#new:Script $Script_TakeTurn_80218EC8
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_Bite 
   2C:  	Return
   34:  EndIf
   3C:  Call     RandInt     	( 00000064 *Var[0] )
   50:  If  *Var[0]  <  00000046 
   60:  	ExecWait $Script_Breath 
   6C:  Else
   74:  	ExecWait $Script_Bite 
   80:  EndIf
   88:  Return
   90:  End

#new:Script $Script_Bite
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00360018 )
   74:  	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
   8C:  	Wait     00000008 
   98:  	Call     SetGoalToTarget 	( .Actor:Self )
   A8:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C4:  	Add  *Var[0]  0000001B 
   D4:  	Set  *Var[1]  00000000 
   E4:  	Set  *Var[3]  *Var[0] 
   F4:  	Set  *Var[4]  *Var[1] 
  104:  	Set  *Var[5]  *Var[2] 
  114:  	Call     GetActorPos 	( .Actor:Player *Var[6] *Var[7] *Var[8] )
  130:  	Add  *Var[3]  *Var[6] 
  140:  	Add  *Var[4]  *Var[7] 
  150:  	Add  *Var[5]  *Var[8] 
  160:  	Div  *Var[3]  00000002 
  170:  	Div  *Var[4]  00000002 
  180:  	Div  *Var[5]  00000002 
  190:  	Call     UseCamPreset 	( 00000013 )
  1A0:  	Call     SetCamTarget 	( *Var[3] *Var[4] *Var[5] )
  1B8:  	Call     SetCamZoom  	( 0000012C )
  1C8:  	Call     SetCamOffsetZ 	( 00000028 )
  1D8:  	Wait     00000014 
  1E4:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  1F8:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  214:  	Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
  22C:  	Call     SetAnimation 	( .Actor:Self 00000001 00360017 )
  244:  	Wait     00000008 
  250:  Else
  258:  	Call     UseCamPreset 	( 0000003F )
  268:  	Call     CamTargetActor ( .Actor:Self )
  278:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  290:  	Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
  2A8:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  2BC:  	Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
  2D4:  	Call     SetGoalToTarget 	( .Actor:Self )
  2E4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  300:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  314:  	If  *Var[A]  &  00080000 
  324:  		Add  *Var[0]  0000000A 
  334:  	Else
  33C:  		Add  *Var[0]  0000001B 
  34C:  	EndIf
  354:  	Set  *Var[1]  00000000 
  364:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  398:  	Call     SetAnimation 	( .Actor:Self 00000001 00360001 )
  3B0:  EndIf
  3B8:  Thread
  3C0:  	Wait     00000008 
  3CC:  	Call     PlaySoundAtActor 	( .Actor:Self 000020DE )
  3E0:  EndThread
  3E8:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  40C:  Switch  *Var[A] 
  418:  	CaseOR  ==  00000006 
  424:  	CaseOR  ==  00000005 
  430:  		Call     SetAnimation 	( .Actor:Self 00000001 00360005 )
  448:  		Wait     0000000A 
  454:  		Call     SetAnimation 	( .Actor:Self 00000001 00360006 )
  46C:  		Wait     00000006 
  478:  		Call     SetAnimation 	( .Actor:Self 00000001 00360007 )
  490:  		If  *Var[A]  ==  00000005 
  4A0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4C4:  		EndIf
  4CC:  		Wait     0000000E 
  4D8:  		Call     UseCamPreset 	( 00000002 )
  4E8:  		Call     MoveCamOver 	( 00000014 )
  4F8:  		Call     8027D7F0 ( )
  504:  		Call     GetBattlePhase ( *Var[0] )
  514:  		If  *Var[0]  ==  .Phase:FirstStrike
  524:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  538:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  550:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  564:  			Call     SetAnimation 	( .Actor:Self 00000001 00360018 )
  57C:  			Wait     0000000A 
  588:  			Call     SetGoalToHome 	( .Actor:Self )
  598:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5B4:  			Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5D0:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  5E4:  			Call     SetAnimation 	( .Actor:Self 00000001 00360017 )
  5FC:  			Wait     0000000A 
  608:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
  620:  		Else
  628:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  640:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  654:  			Call     SetActorAngle 	( .Actor:Self 000000B4 )
  668:  			Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  684:  			ExecWait $Script_80218974 
  690:  			Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  6A8:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  6C0:  		EndIf
  6C8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6DC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  6F0:  		Return
  6F8:  	EndCaseGroup
  700:  EndSwitch
  708:  Call     SetAnimation 	( .Actor:Self 00000001 00360005 )
  720:  Wait     0000000A 
  72C:  Call     SetAnimation 	( .Actor:Self 00000001 00360006 )
  744:  Wait     00000001 
  750:  Wait     00000002 
  75C:  Call     SetGoalToTarget 	( .Actor:Self )
  76C:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  794:  Set  *Var[F]  *Var[0] 
  7A4:  Switch  *Var[F] 
  7B0:  	CaseOR  ==  00000000 
  7BC:  	CaseOR  ==  00000002 
  7C8:  		Call     UseCamPreset 	( 00000002 )
  7D8:  		Wait     0000000A 
  7E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00360007 )
  7FC:  		Wait     00000014 
  808:  		Call     8027D7F0 ( )
  814:  		Call     GetBattlePhase ( *Var[0] )
  824:  		If  *Var[0]  ==  .Phase:FirstStrike
  834:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  848:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  860:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  874:  			Call     SetAnimation 	( .Actor:Self 00000001 00360018 )
  88C:  			Wait     0000000A 
  898:  			Call     SetGoalToHome 	( .Actor:Self )
  8A8:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8C4:  			Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8E0:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  8F4:  			Call     SetAnimation 	( .Actor:Self 00000001 00360017 )
  90C:  			Wait     0000000A 
  918:  			Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
  930:  		Else
  938:  			Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  94C:  			ExecWait $Script_80218974 
  958:  		EndIf
  960:  	EndCaseGroup
  968:  EndSwitch
  970:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  984:  Call     UseIdleAnimation 	( .Actor:Self .True )
  998:  Return
  9A0:  End

#new:Script $Script_Breath
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
   8C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   A0:  Call     SetAnimation 	( .Actor:Self 00000001 00360003 )
   B8:  Call     SetGoalToTarget 	( .Actor:Self )
   C8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E4:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F8:  If  *Var[A]  &  00080000 
  108:  	Add  *Var[0]  00000010 
  118:  Else
  120:  	Add  *Var[0]  00000028 
  130:  EndIf
  138:  Set  *Var[1]  00000000 
  148:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  164:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 00360001 )
  194:  Call     SetAnimation 	( .Actor:Self 00000001 00360008 )
  1AC:  Wait     0000000B 
  1B8:  Call     PlaySoundAtActor 	( .Actor:Self 000003AB )
  1CC:  Call     SetGoalToTarget 	( .Actor:Self )
  1DC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  20C:  If  *Var[A]  &  00080000 
  21C:  	Add  *Var[0]  0000000C 
  22C:  	Set  *Var[1]  00000005 
  23C:  	SetF  *Var[3]  *Fixed[0.40039062] 
  24C:  Else
  254:  	Add  *Var[0]  00000020 
  264:  	Set  *Var[1]  0000000D 
  274:  	SetF  *Var[3]  *Fixed[1.0] 
  284:  EndIf
  28C:  Call     $Function_802180CC ( *Var[2] *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000078 00000000 00000078 )
  2BC:  Wait     00000001 
  2C8:  Call     SetAnimation 	( .Actor:Self 00000001 00360009 )
  2E0:  Wait     00000005 
  2EC:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  310:  Switch  *Var[A] 
  31C:  	CaseOR  ==  00000006 
  328:  	CaseOR  ==  00000005 
  334:  		Wait     0000000A 
  340:  		Call     SetAnimation 	( .Actor:Self 00000001 0036000A )
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     UseCamPreset 	( 00000002 )
  3B0:  		Call     8027D7F0 ( )
  3BC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  3D4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
  3E8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3FC:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  418:  		ExecWait $Script_80218974 
  424:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  43C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  454:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  468:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  47C:  		Return
  484:  	EndCaseGroup
  48C:  EndSwitch
  494:  Wait     00000002 
  4A0:  Call     SetGoalToTarget 	( .Actor:Self )
  4B0:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 80020364 00000002 00000020 )
  4D8:  Set  *Var[F]  *Var[0] 
  4E8:  Switch  *Var[F] 
  4F4:  	CaseOR  ==  00000000 
  500:  	CaseOR  ==  00000002 
  50C:  		Call     UseCamPreset 	( 00000002 )
  51C:  		Wait     0000000A 
  528:  		Call     SetAnimation 	( .Actor:Self 00000001 0036000A )
  540:  		Wait     00000014 
  54C:  		Call     8027D7F0 ( )
  558:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  56C:  		ExecWait $Script_80218974 
  578:  	EndCaseGroup
  580:  EndSwitch
  588:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  59C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5B0:  Return
  5B8:  End

PADDING: 80219EC8 to 80219ED0 (00586808 to 00586810)
00000000 00000000 

#new:DefenseTable $DefenseTable_80219ED0
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:DefenseTable $DefenseTable_80219EDC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80219EE8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:StatusTable $StatusTable_80219F94
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021A040
00800000 01000000 022300FF $IdleAnimations_8021A120 $DefenseTable_80219ED0 00000000 00000000 FBF40000 00000000 

% Origin: HINT
#new:SpriteTable $SpriteTable_8021A064
00020001 01000000 022300FF $IdleAnimations_8021A120 $DefenseTable_80219EDC 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8021A16C $DefenseTable_80219EDC 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8021A1B8 $DefenseTable_80219EDC 00000000 00000000 00000000 00000000 

#new:Actor $WMagikoopa
% stats
[Index]        59b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80219EE8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021A040 
[Script]      $Script_Init_8021C308 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

% Origin: HINT
#new:Actor $FlyingWMagikoopa
% stats
[Index]        5Ab 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80219F94 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8021A064 
[Script]      $Script_Init_8021C36C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_8021A120
.Status:Normal    00560301
.Status:Stone     00560300
.Status:Sleep     00560308
.Status:Poison    00560301
.Status:Stop      00560300
.Status:Static    00560301
.Status:Paralyze  00560300
.Status:Dizzy     00560307
.Status:Fear      00560307
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021A16C
.Status:Normal    00570301
.Status:Stone     00570300
.Status:Sleep     00570308
.Status:Poison    00570301
.Status:Stop      00570300
.Status:Static    00570301
.Status:Paralyze  00570300
.Status:Dizzy     00570307
.Status:Fear      00570307
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8021A1B8
.Status:Normal    0057030A
.Status:End

#new:Script $Script_Idle_8021A1C4
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021A1D4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560304 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560305 
   C0:  		SetConst  *Var[2]  00560306 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560305 
  108:  		SetConst  *Var[2]  00560306 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560306 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560304 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560304 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560304 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560301 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560304 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560304 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560301 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  3B8:  		ExecWait $Script_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560302 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560304 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

% Origin: HINT
#new:Script $Script_8021A6EC
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_802183A8 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

% Origin: HINT
#new:Script $Script_8021A7F8
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_802184A0 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A1D4 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000059 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80219EE8 )
  4FC:  Call     $Function_802183D4 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

% Origin: HINT
#new:Script $Script_HandleEvent_8021ADF4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8021A6EC 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570304 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8021A6EC 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570304 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_8021A7F8 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8021A6EC 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570305 
  134:  		SetConst  *Var[2]  00570306 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_8021A7F8 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570305 
  190:  		SetConst  *Var[2]  00570306 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570306 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570304 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570304 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570304 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570301 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570304 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570304 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570301 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570304 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  504:  		ExecWait $Script_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570302 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570304 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_80218250 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_80218250 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560303 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_8021C308
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021A1C4 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D894 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A1D4 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

% Origin: HINT
#new:Script $Script_Init_8021C36C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021A1C4 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D894 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021ADF4 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_HealOne
    0:  Set  *Var[8]  00000000 
   10:  Set  *Var[9]  0000270F 
   20:  Call     CreateTargetList 	( 00008002 )
   30:  Call     InitTargetIterator 	( )
   3C:  Label    00000000 
   48:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   5C:  Call     GetActorHP  	( *Var[0] *Var[2] )
   70:  Call     $Function_802185BC ( *Var[3] *Var[4] )
   84:  If  *Var[3]  >  *Var[4] 
   94:  	Set  *Var[3]  *Var[4] 
   A4:  EndIf
   AC:  Call     $Function_8021861C ( *Var[0] *Var[1] *Var[5] )
   C4:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
   D8:  Add  *Var[5]  *Var[6] 
   E8:  Sub  *Var[3]  *Var[5] 
   F8:  Sub  *Var[2]  *Var[3] 
  108:  Call     $Function_802184F8 ( *Var[0] *Var[A] )
  11C:  If  *Var[A]  ==  00000000 
  12C:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  140:  	Call     GetActorHP  	( *Var[0] *Var[B] )
  154:  	If  *Var[A]  !=  *Var[B] 
  164:  		If  *Var[2]  <  *Var[9] 
  174:  			Set  *Var[8]  *Var[0] 
  184:  			Set  *Var[9]  *Var[2] 
  194:  		Else
  19C:  			If  *Var[2]  ==  *Var[9] 
  1AC:  				If  *Var[0]  <  *Var[8] 
  1BC:  					Set  *Var[8]  *Var[0] 
  1CC:  					Set  *Var[9]  *Var[2] 
  1DC:  				EndIf
  1E4:  			EndIf
  1EC:  		EndIf
  1F4:  	EndIf
  1FC:  EndIf
  204:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  218:  If  *Var[0]  !=  FFFFFFFF 
  228:  	Goto     00000000 
  234:  EndIf
  23C:  If  *Var[8]  !=  00000000 
  24C:  	Goto     00000064 
  258:  EndIf
  260:  Set  *Var[8]  00000000 
  270:  Set  *Var[9]  0000270F 
  280:  Call     CreateTargetList 	( 00008002 )
  290:  Call     InitTargetIterator 	( )
  29C:  Label    00000001 
  2A8:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2BC:  Call     GetActorHP  	( *Var[0] *Var[2] )
  2D0:  Call     $Function_802185BC ( *Var[3] *Var[4] )
  2E4:  If  *Var[3]  >  *Var[4] 
  2F4:  	Set  *Var[3]  *Var[4] 
  304:  EndIf
  30C:  Call     $Function_8021861C ( *Var[0] *Var[1] *Var[5] )
  324:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
  338:  Add  *Var[5]  *Var[6] 
  348:  Sub  *Var[3]  *Var[5] 
  358:  Sub  *Var[2]  *Var[4] 
  368:  Set  *Flag[00]  00000000 
  378:  Call     GetActorType 	( *Var[0] *Var[A] )
  38C:  If  *Var[A]  ==  00000047 
  39C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  3B4:  	If  *Var[A]  ==  00000001 
  3C4:  		Set  *Flag[00]  00000001 
  3D4:  	EndIf
  3DC:  EndIf
  3E4:  Call     GetOwnerID  	( *Var[A] )
  3F4:  If  *Var[A]  !=  *Var[0] 
  404:  	If  *Flag[00]  ==  00000000 
  414:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  428:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  43C:  		If  *Var[A]  !=  *Var[B] 
  44C:  			If  *Var[2]  <  *Var[9] 
  45C:  				Set  *Var[8]  *Var[0] 
  46C:  				Set  *Var[9]  *Var[2] 
  47C:  			Else
  484:  				If  *Var[2]  ==  *Var[9] 
  494:  					If  *Var[0]  <  *Var[8] 
  4A4:  						Set  *Var[8]  *Var[0] 
  4B4:  						Set  *Var[9]  *Var[2] 
  4C4:  					EndIf
  4CC:  				EndIf
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  	EndIf
  4EC:  EndIf
  4F4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  508:  If  *Var[0]  !=  FFFFFFFF 
  518:  	Goto     00000001 
  524:  EndIf
  52C:  If  *Var[8]  !=  00000000 
  53C:  	Goto     00000064 
  548:  EndIf
  550:  Call     CreateTargetList 	( 00008002 )
  560:  Call     InitTargetIterator 	( )
  56C:  Label    00000002 
  578:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  58C:  Set  *Flag[00]  00000000 
  59C:  Call     GetActorType 	( *Var[0] *Var[A] )
  5B0:  If  *Var[A]  ==  00000047 
  5C0:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  5D8:  	If  *Var[A]  ==  00000001 
  5E8:  		Set  *Flag[00]  00000001 
  5F8:  	EndIf
  600:  EndIf
  608:  Call     GetOwnerID  	( *Var[A] )
  618:  If  *Var[A]  !=  *Var[0] 
  628:  	If  *Flag[00]  ==  00000000 
  638:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  64C:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  660:  		If  *Var[A]  !=  *Var[B] 
  670:  			Set  *Var[8]  *Var[0] 
  680:  			Goto     00000064 
  68C:  		EndIf
  694:  	EndIf
  69C:  EndIf
  6A4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  6B8:  If  *Var[0]  !=  FFFFFFFF 
  6C8:  	Goto     00000002 
  6D4:  EndIf
  6DC:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[A] )
  6F0:  Call     GetActorHP  	( .Actor:Self *Var[B] )
  704:  If  *Var[A]  !=  *Var[B] 
  714:  	Set  *Var[8]  FFFFFF81 
  724:  	Goto     00000064 
  730:  EndIf
  738:  Call     CreateTargetList 	( 00008002 )
  748:  Call     InitTargetIterator 	( )
  754:  Label    00000003 
  760:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  774:  Call     GetOwnerID  	( *Var[A] )
  784:  If  *Var[A]  !=  *Var[0] 
  794:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  7A8:  	If  *Var[0]  &  00000200 
  7B8:  		ExecWait $Script_ShapeSpell 
  7C4:  	Else
  7CC:  		ExecWait $Script_WandStrike 
  7D8:  	EndIf
  7E0:  	Return
  7E8:  EndIf
  7F0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  804:  If  *Var[0]  !=  FFFFFFFF 
  814:  	Goto     00000003 
  820:  EndIf
  828:  ExecWait $Script_RunAway 
  834:  Return
  83C:  Label    00000064 
  848:  Call     RandInt     	( 000003E8 *Var[0] )
  85C:  If  *Var[0]  >  000002EE 
  86C:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  880:  	If  *Var[0]  &  00000200 
  890:  		ExecWait $Script_ShapeSpell 
  89C:  	Else
  8A4:  		ExecWait $Script_WandStrike 
  8B0:  	EndIf
  8B8:  	Return
  8C0:  EndIf
  8C8:  Call     UseIdleAnimation 	( .Actor:Self .False )
  8DC:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  8F0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  904:  Call     UseCamPreset 	( 0000000E )
  914:  Call     CamTargetActor ( .Actor:Self )
  924:  Call     MoveCamOver 	( 0000000F )
  934:  Wait     0000000F 
  940:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  954:  If  *Var[0]  !&  00000200 
  964:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  97C:  Else
  984:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  99C:  EndIf
  9A4:  Wait     00000005 
  9B0:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  9C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  9D8:  If  *Var[0]  !&  00000200 
  9E8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A04:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  A18:  	If  *Var[A]  &  00080000 
  A28:  		Sub  *Var[0]  00000006 
  A38:  		Add  *Var[1]  0000000C 
  A48:  		Sub  *Var[2]  00000002 
  A58:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  	Else
  AA4:  		Sub  *Var[0]  00000010 
  AB4:  		Add  *Var[1]  0000001F 
  AC4:  		Sub  *Var[2]  00000002 
  AD4:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B18:  	EndIf
  B20:  Else
  B28:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B44:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  B58:  	If  *Var[A]  &  00080000 
  B68:  		Sub  *Var[0]  0000000C 
  B78:  		Add  *Var[1]  0000000E 
  B88:  		Sub  *Var[2]  00000002 
  B98:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BDC:  	Else
  BE4:  		Sub  *Var[0]  0000001E 
  BF4:  		Add  *Var[1]  00000024 
  C04:  		Sub  *Var[2]  00000002 
  C14:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C58:  	EndIf
  C60:  EndIf
  C68:  Wait     0000001E 
  C74:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  C88:  If  *Var[0]  !&  00000200 
  C98:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  CB0:  Else
  CB8:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  CD0:  EndIf
  CD8:  Wait     00000005 
  CE4:  Thread
  CEC:  	Wait     00000005 
  CF8:  	Call     PlaySoundAtActor 	( *Var[8] 0000206D )
  D0C:  	Call     PlaySoundAtActor 	( *Var[8] 00000214 )
  D20:  	Wait     0000001E 
  D2C:  	Call     PlaySoundAtActor 	( *Var[8] 0000025C )
  D40:  EndThread
  D48:  Thread
  D50:  	Call     8026BF48 ( 00000001 )
  D60:  	Call     HealActor   	( *Var[8] 00000005 00000000 )
  D78:  	Call     8026BF48 ( 00000000 )
  D88:  EndThread
  D90:  Call     8027114C ( )
  D9C:  Call     UseCamPreset 	( 00000002 )
  DAC:  Wait     0000000A 
  DB8:  Call     8027D7F0 ( )
  DC4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DD8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  DEC:  Return
  DF4:  End

#new:Script $Script_HealAll
    0:  Call     RandInt     	( 000003E8 *Var[0] )
   14:  If  *Var[0]  >  000002EE 
   24:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
   38:  	If  *Var[0]  &  00000200 
   48:  		ExecWait $Script_ShapeSpell 
   54:  	Else
   5C:  		ExecWait $Script_WandStrike 
   68:  	EndIf
   70:  	Return
   78:  EndIf
   80:  Call     UseIdleAnimation 	( .Actor:Self .False )
   94:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   A8:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   BC:  Call     UseCamPreset 	( 0000000E )
   CC:  Call     CamTargetActor ( .Actor:Self )
   DC:  Call     MoveCamOver 	( 0000000F )
   EC:  Wait     0000000F 
   F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  10C:  If  *Var[0]  !&  00000200 
  11C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  134:  Else
  13C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  154:  EndIf
  15C:  Wait     00000005 
  168:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  17C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  190:  If  *Var[0]  !&  00000200 
  1A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1D0:  	If  *Var[A]  &  00080000 
  1E0:  		Sub  *Var[0]  00000006 
  1F0:  		Add  *Var[1]  0000000C 
  200:  		Sub  *Var[2]  00000002 
  210:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  254:  	Else
  25C:  		Sub  *Var[0]  00000010 
  26C:  		Add  *Var[1]  0000001F 
  27C:  		Sub  *Var[2]  00000002 
  28C:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	EndIf
  2D8:  Else
  2E0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  310:  	If  *Var[A]  &  00080000 
  320:  		Sub  *Var[0]  0000000C 
  330:  		Add  *Var[1]  0000000E 
  340:  		Sub  *Var[2]  00000002 
  350:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  394:  	Else
  39C:  		Sub  *Var[0]  0000001E 
  3AC:  		Add  *Var[1]  00000024 
  3BC:  		Sub  *Var[2]  00000002 
  3CC:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  410:  	EndIf
  418:  EndIf
  420:  Wait     0000001E 
  42C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  440:  If  *Var[0]  !&  00000200 
  450:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  468:  Else
  470:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  488:  EndIf
  490:  Wait     00000005 
  49C:  Call     CreateTargetList 	( 00008002 )
  4AC:  Call     InitTargetIterator 	( )
  4B8:  Label    00000000 
  4C4:  Set  *Flag[00]  00000000 
  4D4:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  4E8:  Call     GetActorType 	( *Var[0] *Var[1] )
  4FC:  If  *Var[1]  ==  00000047 
  50C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  524:  	If  *Var[1]  ==  00000001 
  534:  		Set  *Flag[00]  00000001 
  544:  	EndIf
  54C:  EndIf
  554:  If  *Flag[00]  ==  00000000 
  564:  	Thread
  56C:  		Wait     00000005 
  578:  		Call     PlaySoundAtActor 	( *Var[0] 0000206D )
  58C:  		Call     PlaySoundAtActor 	( *Var[0] 00000214 )
  5A0:  		Wait     0000001E 
  5AC:  		Call     PlaySoundAtActor 	( *Var[0] 0000025C )
  5C0:  	EndThread
  5C8:  	Thread
  5D0:  		Call     8026BF48 ( 00000001 )
  5E0:  		Call     HealActor   	( *Var[0] 00000003 00000001 )
  5F8:  		Call     8026BF48 ( 00000000 )
  608:  	EndThread
  610:  EndIf
  618:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  62C:  If  *Var[0]  !=  FFFFFFFF 
  63C:  	Goto     00000000 
  648:  EndIf
  650:  Call     8027114C ( )
  65C:  Wait     00000001 
  668:  Call     UseCamPreset 	( 00000002 )
  678:  Wait     0000000A 
  684:  Call     8027D7F0 ( )
  690:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B8:  Return
  6C0:  End

#new:Script $Script_TakeTurn_8021D894
    0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_RunAway 
   34:  	Return
   3C:  EndIf
   44:  Set  *Var[A]  00000000 
   54:  Set  *Var[B]  00000000 
   64:  Call     CreateTargetList 	( 00008002 )
   74:  Call     InitTargetIterator 	( )
   80:  Label    00000000 
   8C:  Set  *Flag[00]  00000000 
   9C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   B0:  Call     GetActorType 	( *Var[0] *Var[1] )
   C4:  If  *Var[1]  ==  00000047 
   D4:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
   EC:  	If  *Var[1]  ==  00000001 
   FC:  		Set  *Flag[00]  00000001 
  10C:  	EndIf
  114:  EndIf
  11C:  If  *Flag[00]  ==  00000000 
  12C:  	Call     GetActorHP  	( *Var[0] *Var[2] )
  140:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  154:  	If  *Var[2]  !=  *Var[3] 
  164:  		Add  *Var[A]  00000001 
  174:  	EndIf
  17C:  	Add  *Var[B]  00000001 
  18C:  EndIf
  194:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1A8:  If  *Var[0]  !=  FFFFFFFF 
  1B8:  	Goto     00000000 
  1C4:  EndIf
  1CC:  Mul  *Var[A]  00000064 
  1DC:  Div  *Var[A]  *Var[B] 
  1EC:  Switch  *Var[A] 
  1F8:  	Case  >=  0000003C 
  204:  		ExecWait $Script_HealAll 
  210:  	Case  ==  00000000 
  21C:  		Call     GetActorFlags 	( .Actor:Self *Var[0] )
  230:  		If  *Var[0]  &  00000200 
  240:  			ExecWait $Script_ShapeSpell 
  24C:  		Else
  254:  			ExecWait $Script_WandStrike 
  260:  		EndIf
  268:  	Default
  270:  		ExecWait $Script_HealOne 
  27C:  EndSwitch
  284:  Return
  28C:  End

PADDING: 8021DB28 to 8021DB30 (0058A468 to 0058A470)
00000000 00000000 

#new:Script $Script_8021DB30
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_8021DC48
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_8021E1F4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000020 
   3C:  Exec     $Script_8021DB30 
   48:  Set  *Var[0]  0000002B 
   58:  Exec     $Script_8021DB30 
   64:  Set  *Var[0]  00000035 
   74:  Exec     $Script_8021DC48 
   80:  Call     PlayEffect  	( {FX:SunRays:RightCorner} 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C4:  Return
   CC:  End

#new:Script $Script_AfterBattle_8021E2C8
    0:  Return
    8:  End

#new:Stage $Stage_8021E2D8
$ASCII_8021F7A8  % jan_tex
$ASCII_8021F798  % jan_bt00_shape
$ASCII_8021F788  % jan_bt00_hit
$Script_BeforeBattle_8021E1F4 
$Script_AfterBattle_8021E2C8 
$ASCII_8021F780  % yos_bg
00000000 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_8021E300
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_8021E418
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_8021E9C4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 0000003F 00000000 )
   40:  Thread
   48:  	Wait     00000005 
   54:  	Set  *Var[0]  00000009 
   64:  	Exec     $Script_8021E418 
   70:  	Wait     00000005 
   7C:  	Set  *Var[0]  0000000A 
   8C:  	Exec     $Script_8021E418 
   98:  	Wait     00000005 
   A4:  	Set  *Var[0]  0000000B 
   B4:  	Exec     $Script_8021E418 
   C0:  EndThread
   C8:  Return
   D0:  End

#new:Script $Script_AfterBattle_8021EA9C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021EAAC
00000012 00000000 

#new:Stage $Stage_8021EAB4
$ASCII_8021F7D8  % jan_tex
$ASCII_8021F7C8  % jan_bt01_shape
$ASCII_8021F7B8  % jan_bt01_hit
$Script_BeforeBattle_8021E9C4 
$Script_AfterBattle_8021EA9C 
$ASCII_8021F7B0  % yos_bg
$ForegroundModelList_8021EAAC 
00000000 
00000000 
00000000 

PADDING: 8021EADC to 8021EAE0 (0058B41C to 0058B420)
00000000 

% Origin: HEURISTIC
#new:Script $Script_8021EAE0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_8021EBF8
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_8021F1A4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000028 00000000 )
   40:  Thread
   48:  	Wait     00000005 
   54:  	Set  *Var[0]  00000009 
   64:  	Exec     $Script_8021EBF8 
   70:  	Wait     00000005 
   7C:  	Set  *Var[0]  0000000A 
   8C:  	Exec     $Script_8021EBF8 
   98:  	Wait     00000005 
   A4:  	Set  *Var[0]  0000000B 
   B4:  	Exec     $Script_8021EBF8 
   C0:  EndThread
   C8:  Return
   D0:  End

#new:Script $Script_AfterBattle_8021F27C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021F28C
00000012 00000000 

#new:Stage $Stage_8021F294
$ASCII_8021F808  % jan_tex
$ASCII_8021F7F8  % jan_bt01_shape
$ASCII_8021F7E8  % jan_bt01_hit
$Script_BeforeBattle_8021F1A4 
$Script_AfterBattle_8021F27C 
$ASCII_8021F7E0  % yos_bg
$ForegroundModelList_8021F28C 
00000000 
00000000 
00000000 

PADDING: 8021F2BC to 8021F2C0 (0058BBFC to 0058BC00)
00000000 

#new:Script $Script_BeforeBattle_8021F2C0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8021F2FC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021F30C
00000005 00000006 00000007 00000000 

#new:Stage $Stage_8021F31C
$ASCII_8021F838  % jan_tex
$ASCII_8021F828  % jan_bt02_shape
$ASCII_8021F818  % jan_bt02_hit
$Script_BeforeBattle_8021F2C0 
$Script_AfterBattle_8021F2FC 
$ASCII_8021F810  % yos_bg
$ForegroundModelList_8021F30C 
00000000 
00000000 
00000000 

PADDING: 8021F344 to 8021F350 (0058BC84 to 0058BC90)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021F350
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000016 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_8021F3A0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021F3B0
00000040 0000003F 0000003E 00000000 

#new:Stage $Stage_8021F3C0
$ASCII_8021F868  % jan_tex
$ASCII_8021F858  % jan_bt03_shape
$ASCII_8021F848  % jan_bt03_hit
$Script_BeforeBattle_8021F350 
$Script_AfterBattle_8021F3A0 
$ASCII_8021F840  % jan_bg
$ForegroundModelList_8021F3B0 
00000000 
00000000 
00000000 

PADDING: 8021F3E8 to 8021F3F0 (0058BD28 to 0058BD30)
00000000 00000000 

#new:Script $Script_BeforeBattle_8021F3F0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000042 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_8021F440
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021F450
00000040 0000003F 0000003E 00000000 

#new:Stage $Stage_8021F460
$ASCII_8021F898  % jan_tex
$ASCII_8021F888  % jan_bt03_shape
$ASCII_8021F878  % jan_bt03_hit
$Script_BeforeBattle_8021F3F0 
$Script_AfterBattle_8021F440 
$ASCII_8021F870  % jan_bg
$ForegroundModelList_8021F450 
00000000 
00000000 
00000000 

PADDING: 8021F488 to 8021F490 (0058BDC8 to 0058BDD0)
00000000 00000000 

#new:Script $Script_BeforeBattle_8021F490
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000041 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_8021F4E0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021F4F0
00000025 00000000 

#new:Stage $Stage_8021F4F8
$ASCII_8021F8C8  % jan_tex
$ASCII_8021F8B8  % jan_bt04_shape
$ASCII_8021F8A8  % jan_bt04_hit
$Script_BeforeBattle_8021F490 
$Script_AfterBattle_8021F4E0 
$ASCII_8021F8A0  % jan_bg
$ForegroundModelList_8021F4F0 
00000000 
00000000 
00000000 

#new:Script $Script_BeforeBattle_8021F520
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000021 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_8021F570
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021F580
00000025 00000000 

#new:Stage $Stage_8021F588
$ASCII_8021F8F8  % jan_tex
$ASCII_8021F8E8  % jan_bt04_shape
$ASCII_8021F8D8  % jan_bt04_hit
$Script_BeforeBattle_8021F520 
$Script_AfterBattle_8021F570 
$ASCII_8021F8D0  % jan_bg
$ForegroundModelList_8021F580 
00000000 
00000000 
00000000 

#new:Formation $Formation_00
$PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$PutridPiranha 00000001 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$PutridPiranha 00000000 0000000A 00000000 00000000 00000000 00000000 
$PutridPiranha 00000001 00000009 00000000 00000000 00000000 00000000 
$PutridPiranha 00000002 00000008 00000000 00000000 00000000 00000000 
$WMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8021F950 00000001 $Formation_00 $Stage_8021EAB4 00000000 % unused
$SJIS_8021F93C 00000002 $Formation_01 $Stage_8021EAB4 00000000 
$SJIS_8021F928 00000003 $Formation_02 $Stage_8021EAB4 00000000 % unused
$SJIS_8021F900 00000004 $Formation_03 $Stage_8021EAB4 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8021F99C $Stage_8021E2D8 
$ASCII_8021F994 $Stage_8021EAB4 
$ASCII_8021F98C $Stage_8021F294 
$ASCII_8021F984 $Stage_8021F31C 
$ASCII_8021F97C $Stage_8021F3C0 
$ASCII_8021F974 $Stage_8021F460 
$ASCII_8021F96C $Stage_8021F4F8 
$ASCII_8021F964 $Stage_8021F588 
00000000 00000000 

PADDING: 8021F774 to 8021F780 (0058C0B4 to 0058C0C0)
00000000 00000000 00000000 

#new:ASCII $ASCII_8021F780
yos_bg

#new:ASCII $ASCII_8021F788
jan_bt00_hit

#new:ASCII $ASCII_8021F798
jan_bt00_shape

#new:ASCII $ASCII_8021F7A8
jan_tex

#new:ASCII $ASCII_8021F7B0
yos_bg

#new:ASCII $ASCII_8021F7B8
jan_bt01_hit

#new:ASCII $ASCII_8021F7C8
jan_bt01_shape

#new:ASCII $ASCII_8021F7D8
jan_tex

#new:ASCII $ASCII_8021F7E0
yos_bg

#new:ASCII $ASCII_8021F7E8
jan_bt01_hit

#new:ASCII $ASCII_8021F7F8
jan_bt01_shape

#new:ASCII $ASCII_8021F808
jan_tex

#new:ASCII $ASCII_8021F810
yos_bg

#new:ASCII $ASCII_8021F818
jan_bt02_hit

#new:ASCII $ASCII_8021F828
jan_bt02_shape

#new:ASCII $ASCII_8021F838
jan_tex

#new:ASCII $ASCII_8021F840
jan_bg

#new:ASCII $ASCII_8021F848
jan_bt03_hit

#new:ASCII $ASCII_8021F858
jan_bt03_shape

#new:ASCII $ASCII_8021F868
jan_tex

#new:ASCII $ASCII_8021F870
jan_bg

#new:ASCII $ASCII_8021F878
jan_bt03_hit

#new:ASCII $ASCII_8021F888
jan_bt03_shape

#new:ASCII $ASCII_8021F898
jan_tex

#new:ASCII $ASCII_8021F8A0
jan_bg

#new:ASCII $ASCII_8021F8A8
jan_bt04_hit

#new:ASCII $ASCII_8021F8B8
jan_bt04_shape

#new:ASCII $ASCII_8021F8C8
jan_tex

#new:ASCII $ASCII_8021F8D0
jan_bg

#new:ASCII $ASCII_8021F8D8
jan_bt04_hit

#new:ASCII $ASCII_8021F8E8
jan_bt04_shape

#new:ASCII $ASCII_8021F8F8
jan_tex

#new:SJIS $SJIS_8021F900
% poizunpakunx3,howaitokameku
837C8343 83598393 83708362 834E8393 7882522C 837A838F 83438367 834A8381 
8362834E 00000000 

#new:SJIS $SJIS_8021F928
% poizunpakunx3
837C8343 83598393 83708362 834E8393 78825200 

#new:SJIS $SJIS_8021F93C
% poizunpakunx2
837C8343 83598393 83708362 834E8393 78825100 

#new:SJIS $SJIS_8021F950
% poizunpakun
837C8343 83598393 83708362 834E8393 00000000 

#new:ASCII $ASCII_8021F964
jan_04b

#new:ASCII $ASCII_8021F96C
jan_04

#new:ASCII $ASCII_8021F974
jan_03b

#new:ASCII $ASCII_8021F97C
jan_03

#new:ASCII $ASCII_8021F984
jan_02

#new:ASCII $ASCII_8021F98C
jan_01b

#new:ASCII $ASCII_8021F994
jan_01

#new:ASCII $ASCII_8021F99C
jan_00

PADDING: 8021F9A4 to 8021F9B0 (0058C2E4 to 0058C2F0)
00000000 00000000 00000000 

