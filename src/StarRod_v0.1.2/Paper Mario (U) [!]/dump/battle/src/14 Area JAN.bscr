% Script File: 14 Area JAN.bscr
% Decoded from: 573920 to 584940 (14 Area JAN)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 802180CC to 802180D0 (005739EC to 005739F0)
00000000 

#new:Function $Function_802180D0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 8021819C to 802181A0 (00573ABC to 00573AC0)
00000000 

#new:Function $Function_802181A0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

#new:Function $Function_80218254
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

PADDING: 80218308 to 80218310 (00573C28 to 00573C30)
00000000 00000000 

#new:Function $Function_80218310
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_802183DC
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetVariable}
   4C:  DADDU     S2, V0, R0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S3, V0, R0
   64:  DADDU     A0, S1, R0
   68:  LW        A1, 0 (S0)
   6C:  JAL       {Func:GetFloatVariable}
   70:  DADDU     S0, V0, R0
   74:  LIO       AT, 40C90FD8
   7C:  MTC1      AT, F8
   80:  MTC1      S2, F4
   84:  NOP
   88:  CVT.S.W   F4, F4
   8C:  MUL.S     F8, F4, F8
   90:  NOP
   94:  MTC1      S0, F6
   98:  NOP
   9C:  CVT.S.W   F6, F6
   A0:  LIF       F2, 1.0
   A8:  DIV.S     F4, F4, F6
   AC:  SUB.S     F2, F2, F4
   B0:  MUL.S     F20, F0, F2
   B4:  NOP
   B8:  MTC1      S3, F12
   BC:  NOP
   C0:  CVT.S.W   F12, F12
   C4:  JAL       {Func:CosRad}
   C8:  DIV.S     F12, F8, F12
   CC:  MUL.S     F20, F20, F0
   D0:  NOP
   D4:  DADDU     A0, S1, R0
   D8:  TRUNC.W.S F10, F20
   DC:  MFC1      A2, F10
   E0:  JAL       {Func:SetVariable}
   E4:  DADDU     A1, S4, R0
   E8:  LW        RA, 24 (SP)
   EC:  LW        S4, 20 (SP)
   F0:  LW        S3, 1C (SP)
   F4:  LW        S2, 18 (SP)
   F8:  LW        S1, 14 (SP)
   FC:  LW        S0, 10 (SP)
  100:  LDC1      F20, 28 (SP)
  104:  ADDIU     V0, R0, 2
  108:  JR        RA
  10C:  ADDIU     SP, SP, 30

PADDING: 802184EC to 802184F0 (00573E0C to 00573E10)
00000000 

#new:Function $Function_802184F0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 802185BC to 802185C0 (00573EDC to 00573EE0)
00000000 

#new:IdleAnimations $IdleAnimations_802185C0
.Status:Normal    00420004
.Status:Stone     00420002
.Status:Sleep     0042000D
.Status:Poison    0042000F
.Status:Stop      00420002
.Status:Static    00420004
.Status:Paralyze  00420002
.Status:Dizzy     0042000F
.Status:Fear      0042000F
.Status:End

#new:IdleAnimations $IdleAnimations_8021860C
.Status:Normal    00420003
.Status:Stone     0042000D
.Status:Sleep     0042000D
.Status:Poison    0042000F
.Status:Stop      00420001
.Status:Static    00420003
.Status:Paralyze  00420001
.Status:Dizzy     0042000F
.Status:Fear      0042000F
.Status:End

#new:IdleAnimations $IdleAnimations_80218658
.Status:Normal    00420014
.Status:End

#new:IdleAnimations $IdleAnimations_80218664
.Status:Normal    00420019
.Status:End

#new:DefenseTable $DefenseTable_80218670
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End

#new:DefenseTable $DefenseTable_80218684
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End

#new:StatusTable $StatusTable_80218698
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_80218744
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802187F0
00800000 02000000 001600FF $IdleAnimations_802185C0 $DefenseTable_80218670 00010000 00000000 FDF80000 00000000 
00022001 01000000 001800FF $IdleAnimations_8021BF40 $DefenseTable_80218684 00000000 00000000 FFF60000 00000000 
00122001 03000000 000000FF $IdleAnimations_80218658 $DefenseTable_80218684 00000000 00000000 00000000 00000000 
00122001 04000000 000000FF $IdleAnimations_80218664 $DefenseTable_80218684 00000000 00000000 00000000 00000000 

#new:Actor $SpearGuy
% stats
[Index]        2Ab 
[Level]        16`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218698 
% ai
[SpriteCount]   4`s 
[SpriteTable] $SpriteTable_802187F0 
[Script]      $Script_Init_80218980 
% move effectiveness
[Escape]       50`b 
[Item]         70`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_SetSpearStance
    0:  Switch  *Var[0] 
    C:  	Case  ==  00000002 
   18:  	Case  ==  00000000 
   24:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   3C:  		Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_802185C0 )
   54:  		Call     SetSpriteEventFlags 	( .Actor:Self 00000002 00010000 )
   6C:  	Case  ==  00000001 
   78:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   90:  		Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021860C )
   A8:  		Call     SetSpriteEventFlags 	( .Actor:Self 00000002 00000010 )
   C0:  EndSwitch
   C8:  Return
   D0:  End

#new:Script $Script_Init_80218980
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  		ExecWait $Script_SetSpearStance 
   3C:  		Call     SetAnimation 	( .Actor:Self 00000002 00420004 )
   54:  	Case  ==  00000001 
   60:  		ExecWait $Script_SetSpearStance 
   6C:  		Call     SetSpriteEventFlags 	( .Actor:Self 00000002 00000010 )
   84:  		Call     SetAnimation 	( .Actor:Self 00000002 00420003 )
   9C:  EndSwitch
   A4:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021BCB4 )
   B8:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80218E3C )
   CC:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80218B24 )
   E0:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   F8:  Call     8027D7C4 ( *Var[0] )
  108:  Switch  *Var[0] 
  114:  	Case  ==  00000002 
  120:  	CaseOR  ==  00000004 
  12C:  	CaseOR  ==  00000006 
  138:  		Call     SetSpriteEventBits 	( .Actor:Self 00000002 00010000 .False )
  154:  		Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021860C )
  16C:  		Call     SetAnimation 	( .Actor:Self 00000002 00420003 )
  184:  	EndCaseGroup
  18C:  EndSwitch
  194:  Return
  19C:  End

#new:Script $Script_NextTurn_80218B24
    0:  Call     BindNextTurn 	( .Actor:Self 00000000 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80218BE0 )
   28:  Return
   30:  End

#new:Script $Script_80218B5C
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   18:  If  *Var[A]  ==  00000000 
   28:  	Call     GetStatusFlags ( .Actor:Self *Var[B] )
   3C:  	If  *Var[B]  &  00049000 
   4C:  	Else
   54:  		Set  *Var[1]  *Var[2] 
   64:  	EndIf
   6C:  EndIf
   74:  Return
   7C:  End

#new:Script $Script_Idle_80218BE0
    0:  Label    00000000 
    C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   24:  Switch  *Var[0] 
   30:  	Case  ==  00000000 
   3C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
   50:  		If  *Var[0]  &  00049000 
   60:  			Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021860C )
   78:  			Call     SetSpriteEventBits 	( .Actor:Self 00000002 00000010 .True )
   94:  			Call     SetSpriteEventBits 	( .Actor:Self 00000002 00010000 .False )
   B0:  		Else
   B8:  			Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_802185C0 )
   D0:  			Call     SetSpriteEventBits 	( .Actor:Self 00000002 00000010 .False )
   EC:  			Call     SetSpriteEventBits 	( .Actor:Self 00000002 00010000 .True )
  108:  		EndIf
  110:  	Case  ==  00000001 
  11C:  		Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021860C )
  134:  		Call     SetSpriteEventBits 	( .Actor:Self 00000002 00000010 .True )
  150:  		Call     SetSpriteEventBits 	( .Actor:Self 00000002 00010000 .False )
  16C:  EndSwitch
  174:  Wait     00000001 
  180:  Goto     00000000 
  18C:  Return
  194:  End

#new:Script $Script_80218D7C
    0:  Call     UseCamPreset 	( 00000002 )
   10:  SetConst  *Var[0]  00000002 
   20:  SetConst  *Var[1]  00420006 
   30:  ExecWait DoReturnHome 
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  Switch  *Var[0] 
   60:  	Case  ==  00000000 
   6C:  		Call     SetAnimation 	( .Actor:Self 00000002 00420004 )
   84:  	Case  ==  00000001 
   90:  		Call     SetAnimation 	( .Actor:Self 00000002 00420003 )
   A8:  EndSwitch
   B0:  Return
   B8:  End

#new:Script $Script_HandleEvent_80218E3C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00420007 
   80:  		SetConst  *Var[2]  00420008 
   90:  		ExecWait $Script_80218B5C 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   D4:  		If  *Var[0]  ==  00000000 
   E4:  			Call     GetStatusFlags ( .Actor:Self *Var[B] )
   F8:  			If  *Var[B]  &  00049000 
  108:  				SetConst  *Var[0]  00000002 
  118:  				SetConst  *Var[1]  0042000A 
  128:  				SetConst  *Var[2]  0042000C 
  138:  			Else
  140:  				SetConst  *Var[0]  00000002 
  150:  				SetConst  *Var[1]  0042000B 
  160:  				SetConst  *Var[2]  FFFFFFFF 
  170:  			EndIf
  178:  		Else
  180:  			SetConst  *Var[0]  00000002 
  190:  			SetConst  *Var[1]  0042000A 
  1A0:  			SetConst  *Var[2]  0042000C 
  1B0:  		EndIf
  1B8:  		ExecWait DoBurnHit 
  1C4:  	Case  ==  .Event:BurnDeath
  1D0:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  1E8:  		If  *Var[0]  ==  00000000 
  1F8:  			Call     GetStatusFlags ( .Actor:Self *Var[B] )
  20C:  			If  *Var[B]  &  00049000 
  21C:  				SetConst  *Var[0]  00000002 
  22C:  				SetConst  *Var[1]  0042000A 
  23C:  				SetConst  *Var[2]  0042000C 
  24C:  				ExecWait DoBurnHit 
  258:  				SetConst  *Var[0]  00000002 
  268:  				SetConst  *Var[1]  0042000C 
  278:  				ExecWait DoDeath 
  284:  			Else
  28C:  				SetConst  *Var[0]  00000002 
  29C:  				SetConst  *Var[1]  0042000B 
  2AC:  				SetConst  *Var[2]  FFFFFFFF 
  2BC:  				ExecWait DoBurnHit 
  2C8:  				SetConst  *Var[0]  00000002 
  2D8:  				SetConst  *Var[1]  0042000B 
  2E8:  				ExecWait DoDeath 
  2F4:  			EndIf
  2FC:  		Else
  304:  			SetConst  *Var[0]  00000002 
  314:  			SetConst  *Var[1]  0042000A 
  324:  			SetConst  *Var[2]  0042000C 
  334:  			ExecWait DoBurnHit 
  340:  			SetConst  *Var[0]  00000002 
  350:  			SetConst  *Var[1]  0042000C 
  360:  			ExecWait DoDeath 
  36C:  		EndIf
  374:  		Return
  37C:  	Case  ==  .Event:MultibounceHit
  388:  		SetConst  *Var[0]  00000002 
  398:  		SetConst  *Var[1]  00420007 
  3A8:  		SetConst  *Var[2]  00420008 
  3B8:  		ExecWait $Script_80218B5C 
  3C4:  		ExecWait 8029B998 
  3D0:  	Case  ==  .Event:MultibounceDeath
  3DC:  		SetConst  *Var[0]  00000002 
  3EC:  		SetConst  *Var[1]  00420007 
  3FC:  		SetConst  *Var[2]  00420008 
  40C:  		ExecWait $Script_80218B5C 
  418:  		ExecWait 8029B998 
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00420009 
  444:  		SetConst  *Var[2]  00420008 
  454:  		ExecWait $Script_80218B5C 
  460:  		ExecWait DoDeath 
  46C:  		Return
  474:  	Case  ==  .Event:ShockHit
  480:  		SetConst  *Var[0]  00000002 
  490:  		SetConst  *Var[1]  00420007 
  4A0:  		SetConst  *Var[2]  00420008 
  4B0:  		ExecWait $Script_80218B5C 
  4BC:  		ExecWait DoShockHit 
  4C8:  		SetConst  *Var[0]  00000002 
  4D8:  		SetConst  *Var[1]  00420007 
  4E8:  		SetConst  *Var[2]  00420008 
  4F8:  		ExecWait $Script_80218B5C 
  504:  		ExecWait 8029BD70 
  510:  		ExecWait $Script_80218D7C 
  51C:  	Case  ==  .Event:ShockDeath
  528:  		SetConst  *Var[0]  00000002 
  538:  		SetConst  *Var[1]  00420007 
  548:  		ExecWait DoShockHit 
  554:  		SetConst  *Var[0]  00000002 
  564:  		SetConst  *Var[1]  00420009 
  574:  		ExecWait DoDeath 
  580:  		Return
  588:  	CaseOR  ==  00000017
  594:  	CaseOR  ==  .Event:Immune
  5A0:  	CaseOR  ==  .Event:AirLiftFailed
  5AC:  		SetConst  *Var[0]  00000002 
  5BC:  		SetConst  *Var[1]  00420003 
  5CC:  		SetConst  *Var[2]  00420004 
  5DC:  		ExecWait $Script_80218B5C 
  5E8:  		ExecWait DoImmune 
  5F4:  	EndCaseGroup
  5FC:  	Case  ==  .Event:Death
  608:  		SetConst  *Var[0]  00000002 
  618:  		SetConst  *Var[1]  00420007 
  628:  		SetConst  *Var[2]  00420008 
  638:  		ExecWait $Script_80218B5C 
  644:  		ExecWait DoNormalHit 
  650:  		Wait     0000000A 
  65C:  		SetConst  *Var[0]  00000002 
  66C:  		SetConst  *Var[1]  00420009 
  67C:  		SetConst  *Var[2]  00420008 
  68C:  		ExecWait $Script_80218B5C 
  698:  		ExecWait DoDeath 
  6A4:  		Return
  6AC:  	Case  ==  .Event:RecoverStatus
  6B8:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  6D0:  		Switch  *Var[0] 
  6DC:  			Case  ==  00000000 
  6E8:  				SetConst  *Var[0]  00000002 
  6F8:  				SetConst  *Var[1]  00420004 
  708:  				ExecWait DoRecover 
  714:  			Case  ==  00000001 
  720:  				SetConst  *Var[0]  00000002 
  730:  				SetConst  *Var[1]  00420003 
  740:  				ExecWait DoRecover 
  74C:  		EndSwitch
  754:  	Case  ==  .Event:ScareAway
  760:  		SetConst  *Var[0]  00000002 
  770:  		SetConst  *Var[1]  00420006 
  780:  		SetConst  *Var[2]  00420007 
  790:  		ExecWait DoScareAway 
  79C:  		Return
  7A4:  	Case  ==  .Event:BeginAirLift
  7B0:  		SetConst  *Var[0]  00000002 
  7C0:  		SetConst  *Var[1]  00420004 
  7D0:  		ExecWait DoAirLift 
  7DC:  	Case  ==  .Event:BlowAway
  7E8:  		SetConst  *Var[0]  00000002 
  7F8:  		SetConst  *Var[1]  00420004 
  808:  		ExecWait DoBlowAway 
  814:  		Return
  81C:  	Case  ==  .Event:SpikeTaunt
  828:  		Wait     0000000A 
  834:  		Set  *Flag[00]  00000000 
  844:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  860:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  874:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  88C:  		Switch  *Var[A] 
  898:  			Case  ==  00000000 
  8A4:  				If  *Var[3]  &  00080000 
  8B4:  					Add  *Var[0]  FFFFFFF5 
  8C4:  					Add  *Var[1]  00000003 
  8D4:  					Set  *Flag[00]  00000001 
  8E4:  				EndIf
  8EC:  				If  *Var[3]  &  00040000 
  8FC:  					Add  *Var[0]  FFFFFFFC 
  90C:  					Add  *Var[1]  00000024 
  91C:  					Set  *Flag[00]  00000001 
  92C:  				EndIf
  934:  				If  *Var[3]  &  00001000 
  944:  					Add  *Var[0]  FFFFFFF8 
  954:  					Add  *Var[1]  00000024 
  964:  					Set  *Flag[00]  00000001 
  974:  				EndIf
  97C:  				If  *Flag[00]  ==  00000000 
  98C:  					Add  *Var[0]  FFFFFFE4 
  99C:  					Add  *Var[1]  00000008 
  9AC:  				EndIf
  9B4:  			Case  ==  00000001 
  9C0:  				If  *Var[3]  &  00080000 
  9D0:  					Add  *Var[0]  FFFFFFFC 
  9E0:  					Add  *Var[1]  0000000F 
  9F0:  					Set  *Flag[00]  00000001 
  A00:  				EndIf
  A08:  				If  *Var[3]  &  00040000 
  A18:  					Add  *Var[0]  FFFFFFFC 
  A28:  					Add  *Var[1]  00000024 
  A38:  					Set  *Flag[00]  00000001 
  A48:  				EndIf
  A50:  				If  *Var[3]  &  00001000 
  A60:  					Add  *Var[0]  FFFFFFF8 
  A70:  					Add  *Var[1]  00000024 
  A80:  					Set  *Flag[00]  00000001 
  A90:  				EndIf
  A98:  				If  *Flag[00]  ==  00000000 
  AA8:  					Add  *Var[0]  FFFFFFF6 
  AB8:  					Add  *Var[1]  00000026 
  AC8:  				EndIf
  AD0:  		EndSwitch
  AD8:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B1C:  		Wait     00000014 
  B28:  	Default
  B30:  EndSwitch
  B38:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B4C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B60:  Return
  B68:  End

#new:Script $Script_SpearStab
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000002 00420006 )
   8C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   A0:  Call     SetGoalToTarget 	( .Actor:Self )
   B0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   CC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   E0:  If  *Var[A]  &  00080000 
   F0:  	Add  *Var[0]  0000000A 
  100:  Else
  108:  	Add  *Var[0]  00000019 
  118:  EndIf
  120:  Set  *Var[1]  00000000 
  130:  Add  *Var[2]  00000001 
  140:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  15C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  174:  Call     SetAnimation 	( .Actor:Self 00000002 00420004 )
  18C:  Wait     00000005 
  198:  Call     SetAnimation 	( .Actor:Self 00000002 0042001A )
  1B0:  Wait     0000000F 
  1BC:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1E0:  Switch  *Var[0] 
  1EC:  	CaseOR  ==  00000006 
  1F8:  	CaseOR  ==  00000005 
  204:  		Set  *Var[A]  *Var[0] 
  214:  		Call     PlaySoundAtActor 	( .Actor:Self 00000309 )
  228:  		Call     SetAnimation 	( .Actor:Self 00000002 0042001B )
  240:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  254:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  270:  		Sub  *Var[0]  0000001E 
  280:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  29C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2BC:  		If  *Var[A]  ==  00000005 
  2CC:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  2F0:  		EndIf
  2F8:  		Sub  *Var[0]  00000014 
  308:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  324:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  344:  		Wait     0000000F 
  350:  		Wait     00000014 
  35C:  		Call     UseCamPreset 	( 00000002 )
  36C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  380:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  39C:  		ExecWait $Script_80218D7C 
  3A8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3C0:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  3D4:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3E8:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3FC:  		Return
  404:  	EndCaseGroup
  40C:  EndSwitch
  414:  Call     PlaySoundAtActor 	( .Actor:Self 00000309 )
  428:  Call     SetAnimation 	( .Actor:Self 00000002 0042001B )
  440:  Wait     00000005 
  44C:  Wait     00000002 
  458:  Call     SetGoalToTarget 	( .Actor:Self )
  468:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  490:  Switch  *Var[0] 
  49C:  	CaseOR  ==  00000000 
  4A8:  	CaseOR  ==  00000002 
  4B4:  		Call     UseCamPreset 	( 00000002 )
  4C4:  		Wait     00000014 
  4D0:  		ExecWait $Script_80218D7C 
  4DC:  	EndCaseGroup
  4E4:  EndSwitch
  4EC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  500:  Call     UseIdleAnimation 	( .Actor:Self .True )
  514:  Return
  51C:  End

#new:Script $Script_SummonBackup
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseCamPreset 	( 0000000E )
   38:  Call     CamTargetActor ( .Actor:Self )
   48:  Call     MoveCamOver 	( 0000000F )
   58:  Wait     0000000F 
   64:  Call     UseCamPreset 	( 00000001 )
   74:  Call     SetAnimation 	( .Actor:Self 00000002 00420005 )
   8C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   A0:  Thread
   A8:  	Wait     00000005 
   B4:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FA )
   C8:  	Wait     0000000F 
   D4:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FB )
   E8:  EndThread
   F0:  Call     SetActorAngle 	( .Actor:Self 00000000 )
  104:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  120:  Sub  *Var[0]  0000000A 
  130:  Call     SetAnimation 	( .Actor:Self 00000002 00420005 )
  148:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  164:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  17C:  Call     SetAnimation 	( .Actor:Self 00000002 00420010 )
  194:  Wait     00000019 
  1A0:  Thread
  1A8:  	Wait     00000005 
  1B4:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FA )
  1C8:  	Wait     0000000F 
  1D4:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FB )
  1E8:  EndThread
  1F0:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  204:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  220:  Add  *Var[0]  00000014 
  230:  Call     SetAnimation 	( .Actor:Self 00000002 00420005 )
  248:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  27C:  Call     SetAnimation 	( .Actor:Self 00000002 00420010 )
  294:  Wait     0000001E 
  2A0:  Call     SetActorAngle 	( .Actor:Self 00000000 )
  2B4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  Sub  *Var[0]  0000000A 
  2E0:  Call     SetAnimation 	( .Actor:Self 00000002 00420005 )
  2F8:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  314:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  32C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  348:  Add  *Var[1]  0000000F 
  358:  Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  39C:  Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  3B0:  Call     SetAnimation 	( .Actor:Self 00000002 0042000E )
  3C8:  Wait     00000014 
  3D4:  Call     GetActorType 	( .Actor:Self *Var[0] )
  3E8:  Call     CreateTargetList 	( 00008004 )
  3F8:  Call     InitTargetIterator 	( )
  404:  Label    00000000 
  410:  Call     GetOwnerTarget ( *Var[1] *Var[2] )
  424:  Call     GetActorType 	( *Var[1] *Var[2] )
  438:  If  *Var[0]  ==  *Var[2] 
  448:  	Call     SetAnimation 	( *Var[1] 00000002 00420004 )
  460:  	Call     GetIndexFromHome 	( *Var[1] *Var[3] )
  474:  	If  *Var[A]  <  *Var[3] 
  484:  		Call     GetActorVar 	( *Var[1] 00000000 *Var[4] )
  49C:  		If  *Var[4]  ==  00000000 
  4AC:  			Call     SetActorVar 	( *Var[1] 00000000 00000001 )
  4C4:  			Call     SetIdleAnimations 	( *Var[1] 00000002 $IdleAnimations_8021860C )
  4DC:  			Call     SetSpriteEventFlags 	( *Var[1] 00000002 00000010 )
  4F4:  			Call     SetAnimation 	( *Var[1] 00000002 00420003 )
  50C:  		EndIf
  514:  	EndIf
  51C:  EndIf
  524:  Call     ChooseNextTarget 	( .Iter:Next *Var[1] )
  538:  If  *Var[1]  !=  FFFFFFFF 
  548:  	Goto     00000000 
  554:  EndIf
  55C:  Set  *Flag[00]  00000000 
  56C:  Call     CreateTargetList 	( 00008004 )
  57C:  Call     InitTargetIterator 	( )
  588:  Label    00000001 
  594:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  5A8:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
  5BC:  If  *Var[1]  <  *Var[A] 
  5CC:  	Set  *Flag[00]  00000001 
  5DC:  EndIf
  5E4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  5F8:  If  *Var[0]  !=  FFFFFFFF 
  608:  	Goto     00000001 
  614:  EndIf
  61C:  If  *Flag[00]  ==  00000000 
  62C:  	Call     SummonEnemy 	( $SpecialFormation_8021A8C0 00000000 )
  640:  Else
  648:  	Call     SummonEnemy 	( $SpecialFormation_8021A8DC 00000000 )
  65C:  EndIf
  664:  Set  *Var[B]  *Var[0] 
  674:  Call     UseCamPreset 	( 00000002 )
  684:  Call     SetAnimation 	( *Var[B] 00000002 00420010 )
  69C:  Call     SetGoalToIndex ( *Var[B] *Var[A] )
  6B0:  Call     GetGoalPos  	( *Var[B] *Var[0] *Var[1] *Var[2] )
  6CC:  Add  *Var[0]  000000DC 
  6DC:  Call     SetActorPos 	( *Var[B] *Var[0] 00000000 00000000 )
  6F8:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  714:  Thread
  71C:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FA )
  730:  	Wait     0000000F 
  73C:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FA )
  750:  	Wait     0000000F 
  75C:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FB )
  770:  	Wait     0000000F 
  77C:  	Call     PlaySoundAtActor 	( .Actor:Self 000002FB )
  790:  	Wait     0000000F 
  79C:  EndThread
  7A4:  Call     SetActorSpeed 	( *Var[B] *Fixed[4.0] )
  7B8:  Call     RunToGoal   	( *Var[B] 00000000 .False )
  7D0:  Call     8026F6EC ( FFFFFF81 )
  7E0:  Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  7F4:  Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  810:  Add  *Var[1]  0000000F 
  820:  Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  864:  Call     SetAnimation 	( *Var[B] 00000002 0042000E )
  87C:  Wait     00000014 
  888:  If  *Flag[00]  ==  00000000 
  898:  	Call     SetAnimation 	( *Var[B] 00000002 00420004 )
  8B0:  Else
  8B8:  	Call     SetAnimation 	( *Var[B] 00000002 00420003 )
  8D0:  EndIf
  8D8:  Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  8F4:  Call     ForceHomePos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  910:  Call     HPBarToHome 	( *Var[B] )
  920:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  938:  Switch  *Var[0] 
  944:  	Case  ==  00000000 
  950:  		Call     SetActorVar 	( *Var[B] 00000001 00000001 )
  968:  	Case  ==  00000001 
  974:  		Call     SetActorVar 	( *Var[B] 00000001 00000002 )
  98C:  EndSwitch
  994:  Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
  9AC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  9C0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  9D4:  Return
  9DC:  End

#new:Vector3D $Vector3D_8021A8B4
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021A8C0
$SpearGuy $Vector3D_8021A8B4 00000064 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_8021A8DC
$SpearGuy $Vector3D_8021A8B4 00000064 00000001 00000000 00000000 00000000 

#new:Script $Script_BecomeShyGuy
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
   18:  Wait     0000000A 
   24:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   40:  Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   5C:  Call     SetAnimation 	( .Actor:Self 00000002 00420013 )
   74:  Wait     00000005 
   80:  Call     SetAnimation 	( .Actor:Self 00000002 00420018 )
   98:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B4:  Sub  *Var[0]  0000000A 
   C4:  Add  *Var[1]  0000000F 
   D4:  Sub  *Var[2]  00000001 
   E4:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  104:  Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .False )
  120:  Call     SetSpriteJumpscale 	( .Actor:Self 00000004 *Fixed[0.5] )
  138:  Add  *Var[0]  00000032 
  148:  Sub  *Var[2]  0000001E 
  158:  Thread
  160:  	Loop     0000000F 
  16C:  		Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 0000000A )
  18C:  		Wait     00000001 
  198:  		Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 FFFFFFF6 )
  1B8:  		Wait     00000001 
  1C4:  	EndLoop
  1CC:  EndThread
  1D4:  Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  1E8:  Thread
  1F0:  	Loop     0000000A 
  1FC:  		Call     GetSpriteOffset 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  21C:  		Call     PlayEffect  	( 00000011 00000003 *Var[0] *Var[1] *Var[2] 00000005 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  260:  		Wait     00000003 
  26C:  	EndLoop
  274:  EndThread
  27C:  Call     PlaySoundAtSprite 	( .Actor:Self 00000004 000002FC )
  294:  Call     8026FA00 ( FFFFFF81 00000004 00000002 00000000 00000000 )
  2B4:  Call     JumpSpriteA 	( .Actor:Self 00000004 *Var[0] 00000000 *Var[2] 0000001E .True )
  2DC:  Wait     00000005 
  2E8:  Call     SetSpriteFlags ( .Actor:Self 00000002 00022005 )
  300:  Call     SetSpriteFlags ( .Actor:Self 00000001 00800004 )
  318:  Call     SetSpriteFlags ( .Actor:Self 00000003 00022005 )
  330:  Call     SetSpriteFlags ( .Actor:Self 00000004 00022005 )
  348:  ExecWait $Script_8021BF8C 
  354:  Call     SetActorType 	( FFFFFF81 0000001F )
  368:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  380:  Call     SetStatusTable ( .Actor:Self $StatusTable_80218744 )
  394:  Call     HPBarToHome 	( .Actor:Self )
  3A4:  Call     8026F6EC ( FFFFFF81 )
  3B4:  Return
  3BC:  End

#new:Script $Script_SpearThrow
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   50:  Call     SetAnimation 	( .Actor:Self 00000002 00420006 )
   68:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   84:  Add  *Var[0]  000000C8 
   94:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   A8:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   DC:  Call     SetAnimation 	( .Actor:Self 00000002 00420015 )
   F4:  Call     SetActorAngle 	( .Actor:Self 00000000 )
  108:  Sub  *Var[0]  00000064 
  118:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  12C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  148:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  160:  Sub  *Var[0]  00000046 
  170:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  184:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1A0:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1B8:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  1CC:  If  *Var[0]  &  00080000 
  1DC:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  1FC:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  21C:  Else
  224:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  244:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  264:  EndIf
  26C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  290:  Switch  *Var[0] 
  29C:  	CaseOR  ==  00000006 
  2A8:  	CaseOR  ==  00000005 
  2B4:  		Set  *Var[A]  *Var[0] 
  2C4:  		Call     SetAnimation 	( .Actor:Self 00000002 00420011 )
  2DC:  		Wait     00000005 
  2E8:  		Thread
  2F0:  			Call     SetAnimation 	( .Actor:Self 00000002 00420017 )
  308:  			Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  31C:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  338:  			Sub  *Var[0]  00000014 
  348:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  364:  			Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  384:  			Sub  *Var[0]  0000000A 
  394:  			Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B0:  			Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  3D0:  			Call     SetAnimation 	( .Actor:Self 00000002 00420012 )
  3E8:  		EndThread
  3F0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  40C:  		Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] 00000014 *Var[2] )
  42C:  		Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
  44C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  468:  		Thread
  470:  			Call     MakeLerp    	( FFFFFFE2 0000002D 00000014 00000000 )
  48C:  			Label    00000000 
  498:  			Call     UpdateLerp  	( )
  4A4:  			Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
  4C4:  			Wait     00000001 
  4D0:  			If  *Var[1]  ==  00000001 
  4E0:  				Goto     00000000 
  4EC:  			EndIf
  4F4:  		EndThread
  4FC:  		Call     PlaySoundAtSprite 	( .Actor:Self 00000003 0000030A )
  514:  		Call     8026FA00 ( FFFFFF81 00000003 00000002 00000000 00000000 )
  534:  		Call     SetGoalToTarget 	( .Actor:Self )
  544:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  560:  		Sub  *Var[0]  00000014 
  570:  		Set  *Var[1]  0000000A 
  580:  		Add  *Var[2]  00000002 
  590:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.7001953] )
  5A8:  		Call     JumpSpriteA 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
  5D0:  		Wait     0000000A 
  5DC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  5F8:  		If  *Var[A]  ==  00000005 
  608:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  62C:  		EndIf
  634:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  650:  		Wait     0000001E 
  65C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  674:  		Wait     0000000A 
  680:  		ExecWait $Script_BecomeShyGuy 
  68C:  		Call     8027D7F0 ( )
  698:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6AC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  6C0:  		Return
  6C8:  	EndCaseGroup
  6D0:  EndSwitch
  6D8:  Call     SetAnimation 	( .Actor:Self 00000002 00420011 )
  6F0:  Wait     00000005 
  6FC:  Thread
  704:  	Call     SetAnimation 	( .Actor:Self 00000002 00420017 )
  71C:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  730:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  74C:  	Sub  *Var[0]  00000014 
  75C:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  778:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  798:  	Sub  *Var[0]  0000000A 
  7A8:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C4:  	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  7E4:  	Call     SetAnimation 	( .Actor:Self 00000002 00420012 )
  7FC:  EndThread
  804:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  820:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] 00000014 *Var[2] )
  840:  Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 FFFFFFE2 )
  860:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  87C:  Thread
  884:  	Call     MakeLerp    	( FFFFFFE2 0000002D 00000014 00000000 )
  8A0:  	Label    00000000 
  8AC:  	Call     UpdateLerp  	( )
  8B8:  	Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
  8D8:  	Wait     00000001 
  8E4:  	If  *Var[1]  ==  00000001 
  8F4:  		Goto     00000000 
  900:  	EndIf
  908:  EndThread
  910:  Call     PlaySoundAtSprite 	( .Actor:Self 00000003 0000030A )
  928:  Call     8026FA00 ( FFFFFF81 00000003 00000002 00000000 00000000 )
  948:  Call     SetGoalToTarget 	( .Actor:Self )
  958:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  974:  Sub  *Var[2]  00000002 
  984:  Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.7001953] )
  99C:  Call     JumpSpriteA 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000014 .True )
  9C4:  Wait     00000002 
  9D0:  Call     SetGoalToTarget 	( .Actor:Self )
  9E0:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  A08:  Wait     00000003 
  A14:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  A30:  Wait     00000014 
  A3C:  ExecWait $Script_BecomeShyGuy 
  A48:  Switch  *Var[0] 
  A54:  	CaseOR  ==  00000000 
  A60:  	CaseOR  ==  00000002 
  A6C:  	EndCaseGroup
  A74:  EndSwitch
  A7C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A90:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AA4:  Return
  AAC:  End

#new:Script $Script_8021B770
    0:  Call     CreateTargetList 	( 00008002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000000 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[5] )
   3C:  Call     GetIndexFromHome 	( *Var[0] *Var[5] )
   50:  Mod  *Var[5]  00000004 
   60:  Switch  *Var[5] 
   6C:  	Case  ==  00000000 
   78:  		Set  *Flag[01]  00000001 
   88:  	Case  ==  00000001 
   94:  		Set  *Flag[02]  00000001 
   A4:  	Case  ==  00000002 
   B0:  		Set  *Flag[03]  00000001 
   C0:  	Case  ==  00000003 
   CC:  		Set  *Flag[04]  00000001 
   DC:  EndSwitch
   E4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   F8:  If  *Var[0]  !=  FFFFFFFF 
  108:  	Goto     00000000 
  114:  EndIf
  11C:  If  *Flag[01]  ==  00000000 
  12C:  	Set  *Var[A]  00000000 
  13C:  	Return
  144:  EndIf
  14C:  If  *Flag[02]  ==  00000000 
  15C:  	Set  *Var[A]  00000001 
  16C:  	Return
  174:  EndIf
  17C:  If  *Flag[03]  ==  00000000 
  18C:  	Set  *Var[A]  00000002 
  19C:  	Return
  1A4:  EndIf
  1AC:  If  *Flag[04]  ==  00000000 
  1BC:  	Set  *Var[A]  00000003 
  1CC:  	Return
  1D4:  EndIf
  1DC:  Set  *Var[A]  FFFFFFFF 
  1EC:  Return
  1F4:  End

#new:Script $Script_8021B96C
    0:  Set  *Var[9]  00000000 
   10:  Call     CreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	Case  ==  00000029 
   78:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   8C:  		If  *Var[3]  !&  0035D000 
   9C:  			Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
   B4:  			If  *Var[3]  !=  00000002 
   C4:  				Add  *Var[9]  00000001 
   D4:  			EndIf
   DC:  		EndIf
   E4:  	Case  ==  0000002A 
   F0:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
  104:  		If  *Var[3]  !&  0035D000 
  114:  			Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
  12C:  			If  *Var[3]  <  00000002 
  13C:  				Add  *Var[9]  00000001 
  14C:  			EndIf
  154:  		EndIf
  15C:  EndSwitch
  164:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  178:  If  *Var[0]  !=  FFFFFFFF 
  188:  	Goto     00000000 
  194:  EndIf
  19C:  Return
  1A4:  End

#new:Script $Script_8021BB18
    0:  Call     GetIndexFromHome 	( .Actor:Self *Var[A] )
   14:  Set  *Flag[00]  00000000 
   24:  Call     CreateTargetList 	( 00008004 )
   34:  Call     InitTargetIterator 	( )
   40:  Label    00000000 
   4C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   60:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   74:  If  *Var[1]  <  *Var[A] 
   84:  	Set  *Flag[00]  00000001 
   94:  EndIf
   9C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   B0:  If  *Var[0]  !=  FFFFFFFF 
   C0:  	Goto     00000000 
   CC:  EndIf
   D4:  If  *Flag[00]  ==  00000001 
   E4:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   FC:  	If  *Var[0]  ==  00000000 
  10C:  		Set  *Var[0]  00000001 
  11C:  		ExecWait $Script_SetSpearStance 
  128:  	EndIf
  130:  Else
  138:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  150:  	If  *Var[0]  ==  00000001 
  160:  		Set  *Var[0]  00000000 
  170:  		ExecWait $Script_SetSpearStance 
  17C:  	EndIf
  184:  EndIf
  18C:  Return
  194:  End

#new:Script $Script_TakeTurn_8021BCB4
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_SpearStab 
   2C:  	ExecWait $Script_8021BB18 
   38:  	Return
   40:  EndIf
   48:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   60:  Switch  *Var[0] 
   6C:  	CaseOR  ==  00000000 
   78:  	CaseOR  ==  00000001 
   84:  		ExecWait $Script_8021B770 
   90:  		If  *Var[A]  ==  FFFFFFFF 
   A0:  			ExecWait $Script_SpearStab 
   AC:  			ExecWait $Script_8021BB18 
   B8:  			Return
   C0:  		EndIf
   C8:  		ExecWait $Script_8021B96C 
   D4:  		Switch  *Var[9] 
   E0:  			Case  ==  00000001 
   EC:  				Call     RandInt     	( 000003E8 *Var[0] )
  100:  				If  *Var[0]  <  0000012C 
  110:  					ExecWait $Script_SummonBackup 
  11C:  					Return
  124:  				EndIf
  12C:  			Case  ==  00000002 
  138:  				Call     RandInt     	( 000003E8 *Var[0] )
  14C:  				If  *Var[0]  <  00000096 
  15C:  					ExecWait $Script_SummonBackup 
  168:  					Return
  170:  				EndIf
  178:  			Case  ==  00000003 
  184:  				Call     RandInt     	( 000003E8 *Var[0] )
  198:  				If  *Var[0]  <  00000064 
  1A8:  					ExecWait $Script_SummonBackup 
  1B4:  					Return
  1BC:  				EndIf
  1C4:  		EndSwitch
  1CC:  		ExecWait $Script_SpearStab 
  1D8:  		ExecWait $Script_8021BB18 
  1E4:  	EndCaseGroup
  1EC:  	Case  ==  00000002 
  1F8:  		Call     CreateTargetList 	( 00008002 )
  208:  		Call     GetTargetListLength 	( *Var[0] )
  218:  		If  *Var[0]  ==  00000001 
  228:  			ExecWait $Script_SpearThrow 
  234:  			Return
  23C:  		EndIf
  244:  		ExecWait $Script_SpearStab 
  250:  		ExecWait $Script_8021BB18 
  25C:  	Case  ==  00000003 
  268:  		ExecWait $Script_SpearThrow 
  274:  EndSwitch
  27C:  Return
  284:  End

#new:IdleAnimations $IdleAnimations_8021BF40
.Status:Normal    003B0001
.Status:Stone     003B0000
.Status:Sleep     003B0012
.Status:Poison    003B0001
.Status:Stop      003B0000
.Status:Static    003B0001
.Status:Paralyze  003B0000
.Status:Dizzy     003B0013
.Status:Fear      003B0013
.Status:End

#new:Script $Script_8021BF8C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D8D8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021BFD8 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021C14C )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021BFD8
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 0000000E )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   68:  	Call     $Function_80218000 ( FFFFFFF6 0000000D 0000000A 0000000D )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   C4:  	Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_8021C0E8
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  SetConst  *Var[0]  00000001 
   20:  SetConst  *Var[1]  003B0003 
   30:  ExecWait DoReturnHome 
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
   54:  Return
   5C:  End

#new:Script $Script_HandleEvent_8021C14C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  003B000C 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  003B000D 
   AC:  		SetConst  *Var[2]  003B000E 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  003B000D 
   F4:  		SetConst  *Var[2]  003B000E 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  003B000E 
  130:  		ExecWait DoDeath 
  13C:  		Return
  144:  	Case  ==  .Event:MultibounceHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  003B000C 
  170:  		ExecWait 8029B998 
  17C:  	Case  ==  .Event:MultibounceDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  003B000C 
  1A8:  		ExecWait 8029B998 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  003B000C 
  1D4:  		ExecWait DoDeath 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  003B000C 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  003B000C 
  240:  		ExecWait 8029BD70 
  24C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait $Script_8021C0E8 
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  003B000C 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  003B000C 
  2C4:  		ExecWait DoDeath 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  003B0001 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  003B000C 
  35C:  		ExecWait DoNormalHit 
  368:  		Wait     0000000A 
  374:  		SetConst  *Var[0]  00000001 
  384:  		SetConst  *Var[1]  003B000C 
  394:  		ExecWait DoDeath 
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus
  3B4:  		SetConst  *Var[0]  00000001 
  3C4:  		SetConst  *Var[1]  003B0001 
  3D4:  		ExecWait DoRecover 
  3E0:  	Case  ==  .Event:ScareAway
  3EC:  		SetConst  *Var[0]  00000001 
  3FC:  		SetConst  *Var[1]  003B0003 
  40C:  		SetConst  *Var[2]  003B0014 
  41C:  		ExecWait DoScareAway 
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift
  43C:  		SetConst  *Var[0]  00000001 
  44C:  		SetConst  *Var[1]  003B000C 
  45C:  		ExecWait DoAirLift 
  468:  	Case  ==  .Event:BlowAway
  474:  		SetConst  *Var[0]  00000001 
  484:  		SetConst  *Var[1]  003B000C 
  494:  		ExecWait DoBlowAway 
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4CC:  Return
  4D4:  End

#new:Script $Script_8021C628
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 00000014 )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
   9C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   B0:  Call     SetGoalToTarget 	( .Actor:Self )
   C0:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Add  *Var[0]  00000032 
   EC:  Set  *Var[1]  00000000 
   FC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  118:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  130:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  154:  Switch  *Var[0] 
  160:  	CaseOR  ==  00000006 
  16C:  	CaseOR  ==  00000005 
  178:  		Set  *Var[A]  *Var[0] 
  188:  		Call     8026F740 ( FFFFFF81 00000002 000002EF 00000000 )
  1A4:  		Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  1C0:  		Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  1DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  1F0:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  208:  		Call     SetGoalToTarget 	( .Actor:Self )
  218:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  230:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  248:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  25C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  270:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  28C:  		Sub  *Var[0]  0000001E 
  29C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  2D8:  		If  *Var[A]  ==  00000005 
  2E8:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call     8026F6EC ( FFFFFF81 )
  324:  		Sub  *Var[0]  00000014 
  334:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  350:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  370:  		Wait     0000000F 
  37C:  		Call     UseCamPreset 	( 00000002 )
  38C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D0:  		SetConst  *Var[0]  00000001 
  3E0:  		SetConst  *Var[1]  003B0004 
  3F0:  		ExecWait DoReturnHome 
  3FC:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  414:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  428:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  440:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  454:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait     00000003 
  494:  	Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  4CC:  Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  4E8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  4FC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  514:  Call     SetGoalToTarget 	( .Actor:Self )
  524:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  Add  *Var[0]  0000000A 
  550:  Set  *Var[1]  00000000 
  560:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  594:  Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  5AC:  Wait     00000002 
  5B8:  Call     SetGoalToTarget 	( .Actor:Self )
  5C8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  5F0:  Call     8026F6EC ( FFFFFF81 )
  600:  Call     UseCamPreset 	( 00000002 )
  610:  Call     MoveCamOver 	( 0000000F )
  620:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  63C:  Add  *Var[0]  0000001E 
  64C:  Set  *Var[1]  00000000 
  65C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  670:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  68C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  6AC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  6C4:  Wait     00000008 
  6D0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  6E4:  ExecWait $Script_8021C0E8 
  6F0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  704:  Call     UseIdleAnimation 	( .Actor:Self .True )
  718:  Return
  720:  End

#new:Script $Script_8021CD50
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 00000014 )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     PlaySoundAtActor 	( .Actor:Self 00000234 )
   98:  Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
   B0:  Wait     00000014 
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
   D4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
   E8:  Call     SetGoalToTarget 	( .Actor:Self )
   F8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  114:  Add  *Var[0]  00000050 
  124:  Set  *Var[1]  00000000 
  134:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  150:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  168:  Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
  184:  Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
  1A0:  Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
  1B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1CC:  Sub  *Var[0]  00000028 
  1DC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  210:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  234:  Switch  *Var[0] 
  240:  	CaseOR  ==  00000006 
  24C:  	CaseOR  ==  00000005 
  258:  		Set  *Var[A]  *Var[0] 
  268:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  27C:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  294:  		Thread
  29C:  			Wait     0000000C 
  2A8:  			Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
  2C0:  		EndThread
  2C8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  2DC:  		Call     SetGoalToTarget 	( .Actor:Self )
  2EC:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  308:  		Sub  *Var[0]  0000000A 
  318:  		Set  *Var[1]  00000000 
  328:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  344:  		Call     JumpToGoal  	( .Actor:Self 00000018 00000000 00000001 00000000 )
  364:  		If  *Var[A]  ==  00000005 
  374:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
  3B8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  3CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  3E0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3FC:  		Sub  *Var[0]  0000001E 
  40C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  428:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  448:  		Sub  *Var[0]  00000014 
  458:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  474:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  494:  		Wait     0000000F 
  4A0:  		Call     UseCamPreset 	( 00000002 )
  4B0:  		Call     MoveCamOver 	( 0000000F )
  4C0:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  4D4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  504:  		SetConst  *Var[0]  00000001 
  514:  		SetConst  *Var[1]  003B0004 
  524:  		ExecWait DoReturnHome 
  530:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  548:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  55C:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  574:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  5C8:  Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  5E0:  Thread
  5E8:  	Wait     00000009 
  5F4:  	Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
  60C:  EndThread
  614:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  628:  Call     SetGoalToTarget 	( .Actor:Self )
  638:  Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  658:  Wait     00000002 
  664:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var[0] 
  698:  	CaseOR  ==  00000000 
  6A4:  	CaseOR  ==  00000002 
  6B0:  		Call     UseCamPreset 	( 00000002 )
  6C0:  		Call     MoveCamOver 	( 0000000F )
  6D0:  		Thread
  6D8:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set  *Var[3]  00000000 
  704:  			Loop     00000014 
  710:  				Sub  *Var[3]  0000001E 
  720:  				If  *Var[3]  <  00000000 
  730:  					Add  *Var[3]  00000168 
  740:  				EndIf
  748:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[3] )
  764:  				Wait     00000001 
  770:  			EndLoop
  778:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call     GetBattleFlags ( *Var[0] )
  7C8:  		If  *Var[0]  &  80000000 
  7D8:  			Goto     00000001 
  7E4:  		EndIf
  7EC:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  800:  		If  *Var[0]  ==  00000000 
  810:  			Goto     00000001 
  81C:  		EndIf
  824:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  840:  		Add  *Var[0]  00000028 
  850:  		Set  *Var[1]  00000000 
  860:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  874:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  890:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  8B0:  		Call     PlaySoundAtActor 	( .Actor:Self 00000349 )
  8C4:  		Call     PlaySoundAtActor 	( .Actor:Self 00000749 )
  8D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
  8F0:  		Wait     0000000A 
  8FC:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0007 )
  914:  		Wait     0000000F 
  920:  		Goto     00000002 
  92C:  		Label    00000001 
  938:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  954:  		Add  *Var[0]  00000028 
  964:  		Set  *Var[1]  00000000 
  974:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  988:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9A4:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  9C4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E4 )
  9D8:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0010 )
  9F0:  		Wait     0000000A 
  9FC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020C3 )
  A10:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call     RandInt     	( 00000064 *Var[0] )
  A40:  		If  *Var[0]  <  00000032 
  A50:  			Call     SetAnimation 	( .Actor:Self 00000001 003B0011 )
  A68:  		Else
  A70:  			Call     SetAnimation 	( .Actor:Self 00000001 003B0013 )
  A88:  		EndIf
  A90:  		Wait     00000019 
  A9C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  AB4:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  AC8:  		Label    00000002 
  AD4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var[0]  00000001 
  AF8:  		SetConst  *Var[1]  003B0004 
  B08:  		ExecWait DoReturnHome 
  B14:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  B28:  		Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B64:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B78:  Return
  B80:  End

#new:Script $Script_TakeTurn_8021D8D8
    0:  Call     RandInt     	( 00000001 *Var[0] )
   14:  If  *Var[0]  ==  00000000 
   24:  	ExecWait $Script_8021C628 
   30:  Else
   38:  	ExecWait $Script_8021CD50 
   44:  EndIf
   4C:  Return
   54:  End

PADDING: 8021D934 to 8021D940 (00579254 to 00579260)
00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021D940
.Status:Normal    00440002
.Status:Stone     00440000
.Status:Sleep     0044000C
.Status:Poison    00440002
.Status:Stop      00440000
.Status:Static    00440002
.Status:Paralyze  00440000
.Status:Dizzy     00440009
.Status:Fear      00440009
.Status:End

#new:DefenseTable $DefenseTable_8021D98C
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End

#new:StatusTable $StatusTable_8021D9A0
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021DA4C
00800000 01000000 F61800FF $IdleAnimations_8021D940 $DefenseTable_8021D98C 00000000 00000000 F8FB0000 00000000 

#new:Actor $HurtPlant
% stats
[Index]        26b 
[Level]        16`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D9A0 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021DA4C 
[Script]      $Script_Init_8021DA98 
% move effectiveness
[Escape]       70`b 
[Item]         70`b 
[AirLift]      20`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         40`b  35`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -18`b  23`b % dx dy
[StatusIcon]    1`b  20`b % dx dy

#new:Script $Script_Init_8021DA98
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021E33C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021DAE4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021DCF4 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021DAE4
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  Switch  *Var[0] 
   2C:  	Case  &  00001000 
   38:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFA 0000000E )
   54:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFE FFFFFFFB )
   70:  		Call     $Function_802180D0 ( FFFFFFEC 00000008 00000000 0000000E )
   8C:  	Default
   94:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF6 00000018 )
   B0:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFF8 FFFFFFFB )
   CC:  		Call     $Function_802180D0 ( FFFFFFEE 00000017 00000001 00000014 )
   E8:  EndSwitch
   F0:  Wait     00000001 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_8021DBFC
    0:  Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
   18:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
   2C:  Call     SetAnimation 	( .Actor:Self 00000001 00440004 )
   44:  Wait     0000000A 
   50:  Call     SetGoalToHome 	( .Actor:Self )
   60:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   7C:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   98:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 00440003 )
   C4:  Wait     0000000A 
   D0:  Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
   E8:  Return
   F0:  End

#new:Script $Script_HandleEvent_8021DCF4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		Call     SetAnimation 	( .Actor:Self 00000001 0044000D )
   78:  		Wait     00000003 
   84:  		SetConst  *Var[0]  00000001 
   94:  		SetConst  *Var[1]  0044000E 
   A4:  		ExecWait DoNormalHit 
   B0:  	EndCaseGroup
   B8:  	Case  ==  .Event:BurnHit
   C4:  		SetConst  *Var[0]  00000001 
   D4:  		SetConst  *Var[1]  0044000A 
   E4:  		SetConst  *Var[2]  FFFFFFFF 
   F4:  		ExecWait DoBurnHit 
  100:  	Case  ==  .Event:BurnDeath
  10C:  		SetConst  *Var[0]  00000001 
  11C:  		SetConst  *Var[1]  0044000A 
  12C:  		SetConst  *Var[2]  FFFFFFFF 
  13C:  		ExecWait DoBurnHit 
  148:  		SetConst  *Var[0]  00000001 
  158:  		SetConst  *Var[1]  0044000A 
  168:  		ExecWait DoDeath 
  174:  		Return
  17C:  	Case  ==  .Event:MultibounceHit
  188:  		Call     SetAnimation 	( .Actor:Self 00000001 0044000D )
  1A0:  		Wait     00000003 
  1AC:  		SetConst  *Var[0]  00000001 
  1BC:  		SetConst  *Var[1]  0044000E 
  1CC:  		ExecWait 8029B998 
  1D8:  	Case  ==  .Event:MultibounceDeath
  1E4:  		Call     SetAnimation 	( .Actor:Self 00000001 0044000D )
  1FC:  		Wait     00000003 
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  0044000E 
  228:  		ExecWait 8029B998 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  0044000E 
  254:  		ExecWait DoDeath 
  260:  		Return
  268:  	Case  ==  .Event:ShockHit
  274:  		Call     SetAnimation 	( .Actor:Self 00000001 0044000D )
  28C:  		Wait     00000003 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  0044000E 
  2B8:  		ExecWait DoShockHit 
  2C4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  2D8:  		ExecWait $Script_8021DBFC 
  2E4:  	Case  ==  .Event:ShockDeath
  2F0:  		Call     SetAnimation 	( .Actor:Self 00000001 0044000D )
  308:  		Wait     00000003 
  314:  		SetConst  *Var[0]  00000001 
  324:  		SetConst  *Var[1]  0044000E 
  334:  		ExecWait DoShockHit 
  340:  		SetConst  *Var[0]  00000001 
  350:  		SetConst  *Var[1]  0044000E 
  360:  		ExecWait DoDeath 
  36C:  		Return
  374:  	CaseOR  ==  00000017
  380:  	CaseOR  ==  .Event:Immune
  38C:  	CaseOR  ==  .Event:AirLiftFailed
  398:  		SetConst  *Var[0]  00000001 
  3A8:  		SetConst  *Var[1]  00440002 
  3B8:  		ExecWait DoImmune 
  3C4:  	EndCaseGroup
  3CC:  	Case  ==  .Event:Death
  3D8:  		Call     SetAnimation 	( .Actor:Self 00000001 0044000D )
  3F0:  		Wait     00000003 
  3FC:  		SetConst  *Var[0]  00000001 
  40C:  		SetConst  *Var[1]  0044000E 
  41C:  		ExecWait DoNormalHit 
  428:  		Wait     0000000A 
  434:  		SetConst  *Var[0]  00000001 
  444:  		SetConst  *Var[1]  0044000E 
  454:  		ExecWait DoDeath 
  460:  		Return
  468:  	Case  ==  .Event:RecoverStatus
  474:  		SetConst  *Var[0]  00000001 
  484:  		SetConst  *Var[1]  00440002 
  494:  		ExecWait DoRecover 
  4A0:  	Case  ==  .Event:ScareAway
  4AC:  		Call     SetAnimation 	( .Actor:Self 00000001 0044000D )
  4C4:  		Wait     00000003 
  4D0:  		SetConst  *Var[0]  00000001 
  4E0:  		SetConst  *Var[1]  0044000E 
  4F0:  		ExecWait DoNormalHit 
  4FC:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  510:  		Call     SetAnimation 	( .Actor:Self 00000001 00440004 )
  528:  		Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  540:  		Wait     00000014 
  54C:  		Call     8027D32C ( FFFFFF81 )
  55C:  		Call     UseIdleAnimation 	( .Actor:Self .False )
  570:  		Call     RemoveActor 	( .Actor:Self )
  580:  		Return
  588:  	Case  ==  .Event:BeginAirLift
  594:  		SetConst  *Var[0]  00000001 
  5A4:  		SetConst  *Var[1]  00440002 
  5B4:  		ExecWait DoAirLift 
  5C0:  	Case  ==  .Event:BlowAway
  5CC:  		SetConst  *Var[0]  00000001 
  5DC:  		SetConst  *Var[1]  00440002 
  5EC:  		ExecWait DoBlowAway 
  5F8:  		Return
  600:  	Default
  608:  EndSwitch
  610:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  624:  Call     UseIdleAnimation 	( .Actor:Self .True )
  638:  Return
  640:  End

#new:Script $Script_TakeTurn_8021E33C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00440004 )
   74:  	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
   8C:  	Call     UseCamPreset 	( 0000003F )
   9C:  	Call     CamTargetActor ( .Actor:Self )
   AC:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   C4:  	Call     MoveCamOver 	( 00000001 )
   D4:  	Call     SetGoalToTarget 	( .Actor:Self )
   E4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  100:  	Add  *Var[0]  0000001B 
  110:  	Set  *Var[1]  00000000 
  120:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  13C:  	Wait     0000000F 
  148:  	Goto     0000007B 
  154:  EndIf
  15C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  170:  Call     SetAnimation 	( .Actor:Self 00000001 00440004 )
  188:  Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  1A0:  Wait     00000008 
  1AC:  Call     UseCamPreset 	( 00000013 )
  1BC:  Call     SetGoalToTarget 	( .Actor:Self )
  1CC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E8:  Add  *Var[0]  0000001B 
  1F8:  Set  *Var[1]  00000000 
  208:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  220:  Call     SetCamZoom  	( 0000015E )
  230:  Call     SetCamOffsetZ 	( 0000002D )
  240:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  258:  Call     MoveCamOver 	( 00000014 )
  268:  Call     SetGoalToTarget 	( .Actor:Self )
  278:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  294:  Add  *Var[0]  0000001B 
  2A4:  Set  *Var[1]  00000000 
  2B4:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  2C8:  Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  2E4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  300:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  320:  Label    0000007B 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  340:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  35C:  Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
  374:  Call     SetAnimation 	( .Actor:Self 00000001 00440003 )
  38C:  Wait     0000000A 
  398:  Call     SetAnimation 	( .Actor:Self 00000001 00440005 )
  3B0:  Wait     0000000A 
  3BC:  Call     PlaySoundAtActor 	( .Actor:Self 000002C4 )
  3D0:  Call     SetAnimation 	( .Actor:Self 00000001 00440006 )
  3E8:  Wait     00000006 
  3F4:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  418:  Switch  *Var[0] 
  424:  	CaseOR  ==  00000006 
  430:  	CaseOR  ==  00000005 
  43C:  		Set  *Var[A]  *Var[0] 
  44C:  		Call     SetAnimation 	( .Actor:Self 00000001 00440007 )
  464:  		Wait     00000005 
  470:  		If  *Var[A]  ==  00000005 
  480:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4A4:  		EndIf
  4AC:  		Wait     0000000F 
  4B8:  		Call     UseCamPreset 	( 00000002 )
  4C8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  4DC:  		ExecWait $Script_8021DBFC 
  4E8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  510:  		Return
  518:  	EndCaseGroup
  520:  EndSwitch
  528:  Call     SetGoalToTarget 	( .Actor:Self )
  538:  Wait     00000002 
  544:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  558:  If  *Var[0]  &  00020000 
  568:  	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  590:  Else
  598:  	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020364 00000002 00000020 )
  5C0:  EndIf
  5C8:  Switch  *Var[0] 
  5D4:  	CaseOR  ==  00000000 
  5E0:  	CaseOR  ==  00000002 
  5EC:  		Call     UseCamPreset 	( 00000002 )
  5FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00440007 )
  614:  		Wait     00000005 
  620:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  634:  		ExecWait $Script_8021DBFC 
  640:  	EndCaseGroup
  648:  EndSwitch
  650:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  664:  Call     UseIdleAnimation 	( .Actor:Self .True )
  678:  Return
  680:  End

PADDING: 8021E9C4 to 8021E9D0 (0057A2E4 to 0057A2F0)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_8021E9D0
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End

#new:StatusTable $StatusTable_8021E9E4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021EA90
00800000 01000000 001400FF $IdleAnimations_8021EADC $DefenseTable_8021E9D0 00000000 00000000 00F60000 00000000 

#new:Actor $JungleFuzzy
% stats
[Index]        29b 
[Level]        16`b 
[MaxHP]         7`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E9E4 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021EA90 
[Script]      $Script_Init_8021EB28 
% move effectiveness
[Escape]       30`b 
[Item]         75`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021EADC
.Status:Normal    002B0301
.Status:Stone     002B0300
.Status:Sleep     002B030E
.Status:Poison    002B0301
.Status:Stop      002B0300
.Status:Static    002B0301
.Status:Paralyze  002B0300
.Status:Dizzy     002B030F
.Status:Fear      002B030F
.Status:End

#new:Script $Script_Init_8021EB28
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80221628 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021EB8C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021EB9C )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_8021EB8C
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021EB9C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
   60:  Call     GetEventType 	( .Actor:Self *Var[0] )
   74:  Switch  *Var[0] 
   80:  	CaseOR  ==  .Event:HitCombo
   8C:  	CaseOR  ==  .Event:Hit
   98:  		Call     GetLastElement ( *Var[0] )
   A8:  		If  *Var[0]  &  00000020 
   B8:  			SetConst  *Var[0]  00000001 
   C8:  			SetConst  *Var[1]  002B0313 
   D8:  		Else
   E0:  			SetConst  *Var[0]  00000001 
   F0:  			SetConst  *Var[1]  002B0308 
  100:  		EndIf
  108:  		ExecWait DoNormalHit 
  114:  	EndCaseGroup
  11C:  	Case  ==  .Event:BurnHit
  128:  		SetConst  *Var[0]  00000001 
  138:  		SetConst  *Var[1]  002B0310 
  148:  		SetConst  *Var[2]  002B0312 
  158:  		ExecWait DoBurnHit 
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000001 
  180:  		SetConst  *Var[1]  002B0310 
  190:  		SetConst  *Var[2]  002B0312 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000001 
  1BC:  		SetConst  *Var[1]  002B0312 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000001 
  1FC:  		SetConst  *Var[1]  002B0308 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  002B0308 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  002B0308 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	Case  ==  .Event:ShockHit
  290:  		Call     80269470 ( )
  29C:  		SetConst  *Var[0]  00000001 
  2AC:  		SetConst  *Var[1]  002B0313 
  2BC:  		ExecWait DoShockHit 
  2C8:  		SetConst  *Var[0]  00000001 
  2D8:  		SetConst  *Var[1]  002B0313 
  2E8:  		ExecWait 8029BD70 
  2F4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  314:  		SetConst  *Var[0]  00000001 
  324:  		SetConst  *Var[1]  002B0303 
  334:  		ExecWait 8029C0A4 
  340:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  354:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  374:  	Case  ==  .Event:ShockDeath
  380:  		Call     80269470 ( )
  38C:  		SetConst  *Var[0]  00000001 
  39C:  		SetConst  *Var[1]  002B0313 
  3AC:  		ExecWait DoShockHit 
  3B8:  		SetConst  *Var[0]  00000001 
  3C8:  		SetConst  *Var[1]  002B0313 
  3D8:  		ExecWait DoDeath 
  3E4:  		Return
  3EC:  	CaseOR  ==  00000017
  3F8:  	CaseOR  ==  .Event:Immune
  404:  		SetConst  *Var[0]  00000001 
  414:  		SetConst  *Var[1]  002B0301 
  424:  		ExecWait DoImmune 
  430:  	EndCaseGroup
  438:  	Case  ==  .Event:Death
  444:  		Call     GetLastElement ( *Var[0] )
  454:  		If  *Var[0]  &  00000020 
  464:  			SetConst  *Var[0]  00000001 
  474:  			SetConst  *Var[1]  002B0313 
  484:  			ExecWait DoNormalHit 
  490:  			Wait     0000000A 
  49C:  			SetConst  *Var[0]  00000001 
  4AC:  			SetConst  *Var[1]  002B0313 
  4BC:  			ExecWait DoDeath 
  4C8:  		Else
  4D0:  			SetConst  *Var[0]  00000001 
  4E0:  			SetConst  *Var[1]  002B0308 
  4F0:  			ExecWait DoNormalHit 
  4FC:  			Wait     0000000A 
  508:  			SetConst  *Var[0]  00000001 
  518:  			SetConst  *Var[1]  002B0308 
  528:  			ExecWait DoDeath 
  534:  		EndIf
  53C:  		Return
  544:  	Case  ==  .Event:RecoverStatus
  550:  		SetConst  *Var[0]  00000001 
  560:  		SetConst  *Var[1]  002B0301 
  570:  		ExecWait DoRecover 
  57C:  	Case  ==  .Event:ScareAway
  588:  		SetConst  *Var[0]  00000001 
  598:  		SetConst  *Var[1]  002B0303 
  5A8:  		SetConst  *Var[2]  002B0309 
  5B8:  		ExecWait DoScareAway 
  5C4:  		Return
  5CC:  	Case  ==  .Event:BeginAirLift
  5D8:  		SetConst  *Var[0]  00000001 
  5E8:  		SetConst  *Var[1]  002B0303 
  5F8:  		ExecWait DoAirLift 
  604:  	Case  ==  .Event:BlowAway
  610:  		SetConst  *Var[0]  00000001 
  620:  		SetConst  *Var[1]  002B0303 
  630:  		ExecWait DoBlowAway 
  63C:  		Return
  644:  	Case  ==  .Event:AirLiftFailed
  650:  		SetConst  *Var[0]  00000001 
  660:  		SetConst  *Var[1]  002B0301 
  670:  		ExecWait DoImmune 
  67C:  	Default
  684:  EndSwitch
  68C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B4:  Return
  6BC:  End

#new:Script $Script_Divide
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseCamPreset 	( 00000013 )
   38:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   54:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   6C:  Call     SetCamZoom  	( 0000014A )
   7C:  Call     SetCamOffsetZ 	( 0000001E )
   8C:  Call     MoveCamOver 	( 00000014 )
   9C:  Wait     00000014 
   A8:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
   C4:  Call     UseCamPreset 	( 00000001 )
   D4:  Thread
   DC:  	Wait     0000001E 
   E8:  	Call     PlaySoundAtActor 	( .Actor:Self 0000206E )
   FC:  	Wait     0000001E 
  108:  	Loop     00000004 
  114:  		Call     PlaySoundAtActor 	( .Actor:Self 0000206F )
  128:  		Wait     0000000B 
  134:  	EndLoop
  13C:  	Call     PlaySoundAtActor 	( .Actor:Self 00002070 )
  150:  EndThread
  158:  Call     SetAnimation 	( .Actor:Self 00000001 002B030D )
  170:  Wait     00000082 
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 002B0302 )
  194:  Call     SummonEnemy 	( $SpecialFormation_8022180C 00000000 )
  1A8:  Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  1C4:  Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  1E0:  Call     SetGoalToIndex ( *Var[0] *Var[A] )
  1F4:  Call     UseCamPreset 	( 00000002 )
  204:  Call     MoveCamOver 	( 00000014 )
  214:  Thread
  21C:  	Call     SetAnimation 	( .Actor:Self 00000001 002B0302 )
  234:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.4003906] )
  248:  	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  264:  	Call     SetGoalToPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  280:  	Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  2A0:  EndThread
  2A8:  Wait     00000001 
  2B4:  Call     SetAnimation 	( *Var[0] 00000001 002B0302 )
  2CC:  Call     SetActorJumpscale 	( *Var[0] *Fixed[1.4003906] )
  2E0:  Call     JumpToGoal  	( *Var[0] 0000000E 00000000 00000001 00000000 )
  300:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  31C:  Call     ForceHomePos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  338:  Call     HPBarToHome 	( *Var[0] )
  348:  Call     SetAnimation 	( *Var[0] 00000001 002B0301 )
  360:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
  378:  Switch  *Var[1] 
  384:  	Case  ==  00000000 
  390:  		Call     SetActorVar 	( *Var[0] 00000000 00000001 )
  3A8:  	Case  ==  00000001 
  3B4:  		Call     SetActorVar 	( *Var[0] 00000000 00000002 )
  3CC:  EndSwitch
  3D4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3E8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  3FC:  Return
  404:  End

#new:Script $Script_LeechAttack
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     UseCamPreset 	( 0000003F )
   38:  Call     CamTargetActor ( .Actor:Self )
   48:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   60:  Call     GetBattlePhase ( *Var[0] )
   70:  If  *Var[0]  ==  .Phase:FirstStrike
   80:  	Call     SetGoalToTarget 	( .Actor:Self )
   90:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   AC:  	Add  *Var[0]  00000032 
   BC:  	Set  *Var[1]  00000000 
   CC:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E8:  	Goto     00000064 
   F4:  EndIf
   FC:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  110:  Call     SetAnimation 	( .Actor:Self 00000001 002B0303 )
  128:  Call     SetGoalToTarget 	( .Actor:Self )
  138:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  154:  Add  *Var[0]  00000032 
  164:  Set  *Var[1]  00000000 
  174:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  188:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  19C:  ExecWait 8029C12C 
  1A8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0301 )
  1C0:  Label    00000064 
  1CC:  Call     8026BA04 ( FFFFFF81 00000000 0000000A 00000000 )
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 002B0304 )
  200:  Call     8026BA04 ( FFFFFF81 00000000 00000009 00000000 )
  21C:  Wait     00000001 
  228:  Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
  244:  Wait     00000005 
  250:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000002 00000010 )
  274:  Switch  *Var[0] 
  280:  	CaseOR  ==  00000006 
  28C:  	CaseOR  ==  00000005 
  298:  		Set  *Var[A]  *Var[0] 
  2A8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2B8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D4:  		Sub  *Var[0]  00000005 
  2E4:  		Set  *Var[1]  00000000 
  2F4:  		Sub  *Var[2]  00000005 
  304:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  318:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0305 )
  330:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  34C:  		Call     JumpToGoal  	( .Actor:Self 0000000B 00000000 00000001 00000000 )
  36C:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  388:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0309 )
  3A0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3BC:  		Sub  *Var[0]  00000014 
  3CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  3E0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3FC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  41C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  438:  		Sub  *Var[0]  0000000F 
  448:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  45C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  478:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  498:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B4:  		Wait     00000004 
  4C0:  		Wait     00000005 
  4CC:  		If  *Var[A]  ==  00000005 
  4DC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  500:  		EndIf
  508:  		Wait     00000005 
  514:  		Call     UseCamPreset 	( 00000002 )
  524:  		Call     8027D7F0 ( )
  530:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  544:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  560:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0303 )
  578:  		Call     SetGoalToHome 	( .Actor:Self )
  588:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5A4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5B8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  5CC:  		ExecWait 8029C12C 
  5D8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5F0:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  604:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  618:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  62C:  		Return
  634:  	EndCaseGroup
  63C:  	Case  ==  00000007 
  648:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  65C:  		If  *Var[0]  &  00002000 
  66C:  			Set  *Flag[00]  00000000 
  67C:  		Else
  684:  			Set  *Flag[00]  00000001 
  694:  		EndIf
  69C:  EndSwitch
  6A4:  Call     SetGoalToTarget 	( .Actor:Self )
  6B4:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
  6D0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  6E4:  Call     SetAnimation 	( .Actor:Self 00000001 002B0305 )
  6FC:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  71C:  If  *Flag[00]  ==  00000001 
  72C:  	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
  754:  	Return
  75C:  EndIf
  764:  Call     GetStatusFlags ( .Actor:Player *Var[1] )
  778:  If  *Var[1]  &  00100000 
  788:  	Wait     0000000A 
  794:  	Loop     00000002 
  7A0:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  7B4:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0307 )
  7CC:  		Wait     00000015 
  7D8:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0300 )
  7F0:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  80C:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  820:  		Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFE 00000000 )
  83C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  858:  		Wait     00000001 
  864:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  880:  		Wait     00000001 
  88C:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  8A8:  		Wait     00000001 
  8B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  8D0:  		Wait     00000001 
  8DC:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  8F8:  		Wait     00000002 
  904:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  920:  		Wait     0000000A 
  92C:  		Wait     00000002 
  938:  		Call     DamageTarget 	( .Actor:Self *Var[A] 08000000 00000000 00000000 00000002 00000040 )
  960:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  97C:  		Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
  998:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  9B4:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0305 )
  9CC:  		Wait     0000001E 
  9D8:  	EndLoop
  9E0:  Else
  9E8:  	Call     ShowMessageBox ( 00000031 00007FFF )
  9FC:  	Call     802694A4 ( 00000001 )
  A0C:  	Call     LoadActionCommand 	( 00000006 )
  A1C:  	Call     802A9000 ( )
  A28:  	Call     802691C8 ( 00000001 00000017 00000000 00000000 00000000 00000000 )
  A4C:  	Wait     0000000A 
  A58:  	Call     SetBattleFlagBits 	( 00004000 .False )
  A6C:  	Call     802A9110 ( 00000000 00007FFF 00000003 )
  A84:  	Set  *Var[D]  00000000 
  A94:  	Loop     00000005 
  AA0:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  AB4:  		Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  ACC:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  AE0:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0307 )
  AF8:  		Set  *Flag[00]  00000000 
  B08:  		Loop     00000015 
  B14:  			Call     802694F8 ( *Var[1] )
  B24:  			If  *Var[1]  ==  00000001 
  B34:  				Set  *Flag[00]  00000001 
  B44:  				BreakLoop
  B4C:  			EndIf
  B54:  			Wait     00000001 
  B60:  		EndLoop
  B68:  		If  *Flag[00]  ==  00000001 
  B78:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  B8C:  			BreakLoop
  B94:  		EndIf
  B9C:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0300 )
  BB4:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
  BD0:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  BE4:  		Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFE 00000000 )
  C00:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  C1C:  		Set  *Flag[00]  00000000 
  C2C:  		Loop     00000001 
  C38:  			Call     802694F8 ( *Var[1] )
  C48:  			If  *Var[1]  ==  00000001 
  C58:  				Set  *Flag[00]  00000001 
  C68:  				BreakLoop
  C70:  			EndIf
  C78:  			Wait     00000001 
  C84:  		EndLoop
  C8C:  		If  *Flag[00]  ==  00000001 
  C9C:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  CB0:  			BreakLoop
  CB8:  		EndIf
  CC0:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  CDC:  		Set  *Flag[00]  00000000 
  CEC:  		Loop     00000001 
  CF8:  			Call     802694F8 ( *Var[1] )
  D08:  			If  *Var[1]  ==  00000001 
  D18:  				Set  *Flag[00]  00000001 
  D28:  				BreakLoop
  D30:  			EndIf
  D38:  			Wait     00000001 
  D44:  		EndLoop
  D4C:  		If  *Flag[00]  ==  00000001 
  D5C:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  D70:  			BreakLoop
  D78:  		EndIf
  D80:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  D9C:  		Set  *Flag[00]  00000000 
  DAC:  		Loop     00000001 
  DB8:  			Call     802694F8 ( *Var[1] )
  DC8:  			If  *Var[1]  ==  00000001 
  DD8:  				Set  *Flag[00]  00000001 
  DE8:  				BreakLoop
  DF0:  			EndIf
  DF8:  			Wait     00000001 
  E04:  		EndLoop
  E0C:  		If  *Flag[00]  ==  00000001 
  E1C:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  E30:  			BreakLoop
  E38:  		EndIf
  E40:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  E5C:  		Set  *Flag[00]  00000000 
  E6C:  		Loop     00000001 
  E78:  			Call     802694F8 ( *Var[1] )
  E88:  			If  *Var[1]  ==  00000001 
  E98:  				Set  *Flag[00]  00000001 
  EA8:  				BreakLoop
  EB0:  			EndIf
  EB8:  			Wait     00000001 
  EC4:  		EndLoop
  ECC:  		If  *Flag[00]  ==  00000001 
  EDC:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  EF0:  			BreakLoop
  EF8:  		EndIf
  F00:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  F1C:  		Set  *Flag[00]  00000000 
  F2C:  		Loop     00000002 
  F38:  			Call     802694F8 ( *Var[1] )
  F48:  			If  *Var[1]  ==  00000001 
  F58:  				Set  *Flag[00]  00000001 
  F68:  				BreakLoop
  F70:  			EndIf
  F78:  			Wait     00000001 
  F84:  		EndLoop
  F8C:  		If  *Flag[00]  ==  00000001 
  F9C:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  FB0:  			BreakLoop
  FB8:  		EndIf
  FC0:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  FDC:  		Set  *Flag[00]  00000000 
  FEC:  		Loop     0000000A 
  FF8:  			Call     802694F8 ( *Var[1] )
 1008:  			If  *Var[1]  ==  00000001 
 1018:  				Set  *Flag[00]  00000001 
 1028:  				BreakLoop
 1030:  			EndIf
 1038:  			Wait     00000001 
 1044:  		EndLoop
 104C:  		If  *Flag[00]  ==  00000001 
 105C:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1070:  			BreakLoop
 1078:  		EndIf
 1080:  		Set  *Flag[00]  00000000 
 1090:  		Loop     00000002 
 109C:  			Call     802694F8 ( *Var[1] )
 10AC:  			If  *Var[1]  ==  00000001 
 10BC:  				Set  *Flag[00]  00000001 
 10CC:  				BreakLoop
 10D4:  			EndIf
 10DC:  			Wait     00000001 
 10E8:  		EndLoop
 10F0:  		If  *Flag[00]  ==  00000001 
 1100:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1114:  			BreakLoop
 111C:  		EndIf
 1124:  		Call     UseIdleAnimation 	( .Actor:Player .True )
 1138:  		Call     DamageTarget 	( .Actor:Self *Var[A] 0A000000 00000000 00000000 00000002 00000040 )
 1160:  		Call     GetLastDamage 	( .Actor:Player *Var[3] )
 1174:  		If  *Var[3]  !=  00000000 
 1184:  			Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
 1198:  			Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
 11AC:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 11C8:  			Add  *Var[1]  0000000A 
 11D8:  			Call     $Function_802181A0 ( *Var[0] *Var[1] *Var[2] *Var[3] )
 11F4:  			Thread
 11FC:  				Wait     0000000F 
 1208:  				Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
 121C:  				Call     $Function_80218254 ( *Var[0] *Var[1] *Var[2] *Var[3] )
 1238:  			EndThread
 1240:  			Add  *Var[0]  00000014 
 1250:  			Add  *Var[1]  00000014 
 1260:  			Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 12A4:  			Call     GetActorHP  	( .Actor:Self *Var[0] )
 12B8:  			Add  *Var[0]  *Var[3] 
 12C8:  			Call     SetEnemyHP  	( .Actor:Self *Var[0] )
 12DC:  		Else
 12E4:  			Add  *Var[D]  00000001 
 12F4:  			If  *Var[D]  >  00000001 
 1304:  				Call     80269470 ( )
 1310:  				BreakLoop
 1318:  			EndIf
 1320:  		EndIf
 1328:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
 1344:  		Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
 1360:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 137C:  		Call     SetAnimation 	( .Actor:Self 00000001 002B0305 )
 1394:  		Call     GetPlayerHP 	( *Var[1] )
 13A4:  		If  *Var[1]  ==  00000000 
 13B4:  			Call     80269470 ( )
 13C0:  			BreakLoop
 13C8:  		EndIf
 13D0:  		Set  *Flag[00]  00000000 
 13E0:  		Loop     00000023 
 13EC:  			Call     802694F8 ( *Var[1] )
 13FC:  			If  *Var[1]  ==  00000001 
 140C:  				Set  *Flag[00]  00000001 
 141C:  				BreakLoop
 1424:  			EndIf
 142C:  			Wait     00000001 
 1438:  		EndLoop
 1440:  		If  *Flag[00]  ==  00000001 
 1450:  			BreakLoop
 1458:  		EndIf
 1460:  	EndLoop
 1468:  	Call     80269470 ( )
 1474:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
 1490:  	Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
 14AC:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 14C8:  	Call     SetAnimation 	( .Actor:Self 00000001 002B0305 )
 14E0:  EndIf
 14E8:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
 1504:  Call     SetAnimation 	( .Actor:Self 00000001 002B0301 )
 151C:  Call     UseCamPreset 	( 00000002 )
 152C:  Thread
 1534:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.6005859] *Fixed[0.60058594] *Fixed[1.0] )
 1550:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
 156C:  	Wait     00000001 
 1578:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
 1594:  	Wait     00000001 
 15A0:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
 15BC:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000012C )
 15D8:  	Wait     00000001 
 15E4:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000010E )
 1600:  	Wait     00000001 
 160C:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
 1628:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000F0 )
 1644:  	Wait     00000001 
 1650:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000D2 )
 166C:  	Wait     00000001 
 1678:  	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
 1694:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
 16B0:  	Wait     00000002 
 16BC:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
 16D8:  	Wait     00000002 
 16E4:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
 1700:  EndThread
 1708:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1724:  Add  *Var[0]  00000028 
 1734:  Set  *Var[1]  00000000 
 1744:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
 1758:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1774:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
 1794:  Call     SetActorScale 	( .Actor:Self *Fixed[1.4003906] *Fixed[0.20019531] *Fixed[1.0] )
 17B0:  Wait     00000001 
 17BC:  Thread
 17C4:  	Wait     00000001 
 17D0:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
 17EC:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000096 )
 1808:  	Wait     00000001 
 1814:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1830:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000078 )
 184C:  	Wait     00000001 
 1858:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000005A )
 1874:  	Wait     00000001 
 1880:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000003C )
 189C:  	Wait     00000001 
 18A8:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
 18C4:  	Wait     00000001 
 18D0:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
 18EC:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
 1908:  EndThread
 1910:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 192C:  Add  *Var[0]  0000001E 
 193C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1958:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
 1978:  Wait     00000005 
 1984:  Call     8027D7F0 ( )
 1990:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
 19AC:  Call     SetAnimation 	( .Actor:Self 00000001 002B0303 )
 19C4:  Call     SetGoalToHome 	( .Actor:Self )
 19D4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 19F0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 1A04:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
 1A18:  ExecWait 8029C12C 
 1A24:  Call     SetAnimation 	( .Actor:Self 00000001 002B0301 )
 1A3C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 1A50:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1A64:  Return
 1A6C:  End

#new:Script $Script_802210E0
    0:  Set  *Flag[01]  00000000 
   10:  Set  *Flag[02]  00000000 
   20:  Set  *Flag[03]  00000000 
   30:  Set  *Flag[04]  00000000 
   40:  Call     CreateTargetList 	( 00008002 )
   50:  Call     InitTargetIterator 	( )
   5C:  Label    00000000 
   68:  Call     GetOwnerTarget ( *Var[0] *Var[5] )
   7C:  Call     GetIndexFromHome 	( *Var[0] *Var[5] )
   90:  Mod  *Var[5]  00000004 
   A0:  Switch  *Var[5] 
   AC:  	Case  ==  00000000 
   B8:  		Set  *Flag[01]  00000001 
   C8:  	Case  ==  00000001 
   D4:  		Set  *Flag[02]  00000001 
   E4:  	Case  ==  00000002 
   F0:  		Set  *Flag[03]  00000001 
  100:  	Case  ==  00000003 
  10C:  		Set  *Flag[04]  00000001 
  11C:  EndSwitch
  124:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  138:  If  *Var[0]  !=  FFFFFFFF 
  148:  	Goto     00000000 
  154:  EndIf
  15C:  Set  *Var[A]  FFFFFFFF 
  16C:  Set  *Var[B]  FFFFFFFF 
  17C:  Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
  190:  Switch  *Var[0] 
  19C:  	Case  ==  00000000 
  1A8:  		If  *Flag[02]  ==  00000000 
  1B8:  			Set  *Var[A]  00000001 
  1C8:  		EndIf
  1D0:  	Case  ==  00000001 
  1DC:  		If  *Flag[01]  ==  00000000 
  1EC:  			Set  *Var[A]  00000000 
  1FC:  		EndIf
  204:  		If  *Flag[03]  ==  00000000 
  214:  			If  *Var[A]  ==  FFFFFFFF 
  224:  				Set  *Var[A]  00000002 
  234:  			Else
  23C:  				Set  *Var[B]  00000002 
  24C:  			EndIf
  254:  		EndIf
  25C:  	Case  ==  00000002 
  268:  		If  *Flag[02]  ==  00000000 
  278:  			Set  *Var[A]  00000001 
  288:  		EndIf
  290:  		If  *Flag[04]  ==  00000000 
  2A0:  			If  *Var[A]  ==  FFFFFFFF 
  2B0:  				Set  *Var[A]  00000003 
  2C0:  			Else
  2C8:  				Set  *Var[B]  00000003 
  2D8:  			EndIf
  2E0:  		EndIf
  2E8:  	Case  ==  00000003 
  2F4:  		If  *Flag[03]  ==  00000000 
  304:  			Set  *Var[A]  00000002 
  314:  		EndIf
  31C:  EndSwitch
  324:  If  *Var[B]  !=  FFFFFFFF 
  334:  	Call     RandInt     	( 000003E8 *Var[0] )
  348:  	If  *Var[0]  <  000001F4 
  358:  		Set  *Var[A]  *Var[B] 
  368:  	EndIf
  370:  EndIf
  378:  Return
  380:  End

#new:Script $Script_80221468
    0:  Set  *Var[9]  00000000 
   10:  Call     CreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	CaseOR  ==  0000001A 
   78:  	CaseOR  ==  00000029 
   84:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   98:  		If  *Var[3]  !&  0035D000 
   A8:  			Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
   C0:  			If  *Var[3]  !=  00000002 
   D0:  				Add  *Var[9]  00000001 
   E0:  			EndIf
   E8:  		EndIf
   F0:  	EndCaseGroup
   F8:  	Case  ==  0000002A 
  104:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
  118:  		If  *Var[3]  !&  0035D000 
  128:  			Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
  140:  			If  *Var[3]  <  00000002 
  150:  				Add  *Var[9]  00000001 
  160:  			EndIf
  168:  		EndIf
  170:  EndSwitch
  178:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  18C:  If  *Var[0]  !=  FFFFFFFF 
  19C:  	Goto     00000000 
  1A8:  EndIf
  1B0:  Return
  1B8:  End

#new:Script $Script_TakeTurn_80221628
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_LeechAttack 
   2C:  	Return
   34:  EndIf
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  If  *Var[0]  ==  00000002 
   64:  	ExecWait $Script_LeechAttack 
   70:  	Return
   78:  EndIf
   80:  ExecWait $Script_802210E0 
   8C:  If  *Var[A]  ==  FFFFFFFF 
   9C:  	ExecWait $Script_LeechAttack 
   A8:  	Return
   B0:  EndIf
   B8:  ExecWait $Script_80221468 
   C4:  Switch  *Var[9] 
   D0:  	Case  ==  00000001 
   DC:  		Call     RandInt     	( 000003E8 *Var[0] )
   F0:  		If  *Var[0]  <  00000190 
  100:  			ExecWait $Script_Divide 
  10C:  			Return
  114:  		EndIf
  11C:  	Case  ==  00000002 
  128:  		Call     RandInt     	( 000003E8 *Var[0] )
  13C:  		If  *Var[0]  <  00000096 
  14C:  			ExecWait $Script_Divide 
  158:  			Return
  160:  		EndIf
  168:  	Case  ==  00000003 
  174:  		Call     RandInt     	( 000003E8 *Var[0] )
  188:  		If  *Var[0]  <  00000046 
  198:  			ExecWait $Script_Divide 
  1A4:  			Return
  1AC:  		EndIf
  1B4:  EndSwitch
  1BC:  ExecWait $Script_LeechAttack 
  1C8:  Return
  1D0:  End

#new:Vector3D $Vector3D_80221800
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8022180C
$JungleFuzzy $Vector3D_80221800 00000000 00000000 00000000 00000000 00000000 

PADDING: 80221828 to 80221830 (0057D148 to 0057D150)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_80221830
.Status:Normal    00450002
.Status:Stone     00450001
.Status:Sleep     00450008
.Status:Poison    00450002
.Status:Stop      00450001
.Status:Static    00450002
.Status:Paralyze  00450001
.Status:Dizzy     00450009
.Status:Fear      00450009
.Status:End

#new:DefenseTable $DefenseTable_8022187C
.Element:Normal 00000000
.Element:Fire   00000000
.Element:End

#new:StatusTable $StatusTable_80221890
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022193C
00800000 01000000 FE1600FF $IdleAnimations_80221830 $DefenseTable_8022187C 00000000 00000000 00F60000 00000000 

#new:Actor $MBush
% stats
[Index]        27b 
[Level]        16`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80221890 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022193C 
[Script]      $Script_Init_80221988 
% move effectiveness
[Escape]       70`b 
[Item]         60`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  30`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_80221988
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80221F78 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802219D4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80221A74 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_802219D4
    0:  Return
    8:  End

#new:Script $Script_802219E4
    0:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   14:  Call     SetAnimation 	( .Actor:Self 00000001 00450005 )
   2C:  Call     SetGoalToHome 	( .Actor:Self )
   3C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   54:  Call     SetAnimation 	( .Actor:Self 00000001 00450002 )
   6C:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   80:  Return
   88:  End

#new:Script $Script_HandleEvent_80221A74
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00450007 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  0045000A 
   C0:  		SetConst  *Var[2]  0045000B 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  0045000A 
  108:  		SetConst  *Var[2]  0045000B 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  0045000B 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00450007 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00450007 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00450007 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  00450007 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  00450007 
  254:  		ExecWait 8029BD70 
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait $Script_802219E4 
  280:  	Case  ==  .Event:ShockDeath
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  00450007 
  2AC:  		ExecWait DoShockHit 
  2B8:  		SetConst  *Var[0]  00000001 
  2C8:  		SetConst  *Var[1]  00450007 
  2D8:  		ExecWait DoDeath 
  2E4:  		Return
  2EC:  	CaseOR  ==  00000017
  2F8:  	CaseOR  ==  .Event:Immune
  304:  	CaseOR  ==  .Event:AirLiftFailed
  310:  		SetConst  *Var[0]  00000001 
  320:  		SetConst  *Var[1]  00450002 
  330:  		ExecWait DoImmune 
  33C:  	EndCaseGroup
  344:  	Case  ==  .Event:Death
  350:  		SetConst  *Var[0]  00000001 
  360:  		SetConst  *Var[1]  00450007 
  370:  		ExecWait DoNormalHit 
  37C:  		Wait     0000000A 
  388:  		SetConst  *Var[0]  00000001 
  398:  		SetConst  *Var[1]  00450007 
  3A8:  		ExecWait DoDeath 
  3B4:  		Return
  3BC:  	Case  ==  .Event:RecoverStatus
  3C8:  		SetConst  *Var[0]  00000001 
  3D8:  		SetConst  *Var[1]  00450002 
  3E8:  		ExecWait DoRecover 
  3F4:  	Case  ==  .Event:ScareAway
  400:  		SetConst  *Var[0]  00000001 
  410:  		SetConst  *Var[1]  00450005 
  420:  		SetConst  *Var[2]  00450009 
  430:  		ExecWait DoScareAway 
  43C:  		Return
  444:  	Case  ==  .Event:BeginAirLift
  450:  		SetConst  *Var[0]  00000001 
  460:  		SetConst  *Var[1]  00450005 
  470:  		ExecWait DoAirLift 
  47C:  	Case  ==  .Event:BlowAway
  488:  		SetConst  *Var[0]  00000001 
  498:  		SetConst  *Var[1]  00450005 
  4A8:  		ExecWait DoBlowAway 
  4B4:  		Return
  4BC:  	Default
  4C4:  EndSwitch
  4CC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4E0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4F4:  Return
  4FC:  End

#new:Script $Script_TakeTurn_80221F78
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00450004 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B8:  Add  *Var[0]  00000032 
   C8:  Set  *Var[1]  00000000 
   D8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   EC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  108:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  120:  Call     8026F740 ( FFFFFF81 00000002 000020C9 00000000 )
  13C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  160:  Switch  *Var[0] 
  16C:  	CaseOR  ==  00000006 
  178:  	CaseOR  ==  00000005 
  184:  		Set  *Var[A]  *Var[0] 
  194:  		Call     SetAnimation 	( .Actor:Self 00000001 00450006 )
  1AC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  1C0:  		Call     SetGoalToTarget 	( .Actor:Self )
  1D0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1EC:  		Sub  *Var[0]  0000001E 
  1FC:  		Set  *Var[1]  00000000 
  20C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  228:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  248:  		Call     8026F6EC ( FFFFFF81 )
  258:  		If  *Var[A]  ==  00000005 
  268:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  28C:  		EndIf
  294:  		Sub  *Var[0]  00000014 
  2A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  2E0:  		Wait     0000000F 
  2EC:  		Call     SetAnimation 	( .Actor:Self 00000001 00450002 )
  304:  		Wait     0000000F 
  310:  		Call     UseCamPreset 	( 00000002 )
  320:  		Call     8027D7F0 ( )
  32C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  348:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  35C:  		ExecWait $Script_802219E4 
  368:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  380:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  394:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3A8:  		Return
  3B0:  	EndCaseGroup
  3B8:  EndSwitch
  3C0:  Call     SetAnimation 	( .Actor:Self 00000001 00450006 )
  3D8:  Call     SetGoalToTarget 	( .Actor:Self )
  3E8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  404:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  418:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  438:  Call     8026F6EC ( FFFFFF81 )
  448:  Wait     00000002 
  454:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020219 00000003 00000020 )
  47C:  Switch  *Var[0] 
  488:  	CaseOR  ==  00000000 
  494:  	CaseOR  ==  00000002 
  4A0:  		Call     UseCamPreset 	( 00000002 )
  4B0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4CC:  		Add  *Var[0]  0000001E 
  4DC:  		Set  *Var[1]  00000000 
  4EC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  500:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  51C:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  53C:  		Call     SetAnimation 	( .Actor:Self 00000001 00450002 )
  554:  		Wait     00000008 
  560:  		Call     8027D7F0 ( )
  56C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  580:  		ExecWait $Script_802219E4 
  58C:  	EndCaseGroup
  594:  EndSwitch
  59C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5B0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5C4:  Return
  5CC:  End

PADDING: 8022254C to 80222550 (0057DE6C to 0057DE70)
00000000 

#new:IdleAnimations $IdleAnimations_80222550
.Status:Normal    00400001
.Status:Stone     00400000
.Status:Sleep     00400004
.Status:Poison    00400001
.Status:Stop      00400000
.Status:Static    00400001
.Status:Paralyze  00400000
.Status:Dizzy     0040000A
.Status:Fear      0040000A
.Status:End

#new:DefenseTable $DefenseTable_8022259C
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End

#new:StatusTable $StatusTable_802225B0
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022265C
00800000 01000000 FE2600FF $IdleAnimations_80222550 $DefenseTable_8022259C 00000000 00000000 FFFB0000 00000000 

#new:Actor $MediGuy
% stats
[Index]        22b 
[Level]        14`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802225B0 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022265C 
[Script]      $Script_Init_802226A8 
% move effectiveness
[Escape]       60`b 
[Item]         70`b 
[AirLift]      90`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   12`b  31`b % dx dy

#new:Script $Script_Init_802226A8
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80223A8C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022274C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80222920 )
   3C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   58:  Sub  *Var[1]  00000005 
   68:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   84:  Call     HPBarToHome 	( .Actor:Self )
   94:  Return
   9C:  End

#new:Script $Script_Idle_8022274C
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000018 )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   68:  	Call     $Function_80218310 ( FFFFFFF6 00000014 0000000A 00000014 )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000026 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   C4:  	Call     $Function_80218310 ( FFFFFFF6 00000014 0000000C 0000001F )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_8022285C
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
   30:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   44:  Call     SetAnimation 	( .Actor:Self 00000001 00400003 )
   5C:  Call     SetGoalToHome 	( .Actor:Self )
   6C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
   88:  Call     SetAnimation 	( .Actor:Self 00000001 00400001 )
   A0:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   B4:  Return
   BC:  End

#new:Script $Script_HandleEvent_80222920
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00400006 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00400008 
   C0:  		SetConst  *Var[2]  00400009 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00400008 
  108:  		SetConst  *Var[2]  00400009 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00400009 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00400006 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00400006 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00400007 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  00400006 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  00400006 
  254:  		ExecWait 8029BD70 
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait $Script_8022285C 
  280:  	Case  ==  .Event:ShockDeath
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  00400006 
  2AC:  		ExecWait DoShockHit 
  2B8:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00400007 
  2F8:  		ExecWait DoDeath 
  304:  		Return
  30C:  	CaseOR  ==  00000017
  318:  	CaseOR  ==  .Event:Immune
  324:  	CaseOR  ==  .Event:AirLiftFailed
  330:  		SetConst  *Var[0]  00000001 
  340:  		SetConst  *Var[1]  00400001 
  350:  		ExecWait DoImmune 
  35C:  	EndCaseGroup
  364:  	Case  ==  .Event:Death
  370:  		SetConst  *Var[0]  00000001 
  380:  		SetConst  *Var[1]  00400006 
  390:  		ExecWait DoNormalHit 
  39C:  		Wait     0000000A 
  3A8:  		SetConst  *Var[0]  00000001 
  3B8:  		SetConst  *Var[1]  00400007 
  3C8:  		ExecWait DoDeath 
  3D4:  		Return
  3DC:  	Case  ==  .Event:BeginFirstStrike
  3E8:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  404:  		Call     HPBarToCurrent ( .Actor:Self )
  414:  	Case  ==  .Event:EndFirstStrike
  420:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  434:  		ExecWait $Script_8022285C 
  440:  		Call     HPBarToHome 	( .Actor:Self )
  450:  	Case  ==  .Event:RecoverStatus
  45C:  		SetConst  *Var[0]  00000001 
  46C:  		SetConst  *Var[1]  00400001 
  47C:  		ExecWait DoRecover 
  488:  	Case  ==  .Event:ScareAway
  494:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4AC:  		SetConst  *Var[0]  00000001 
  4BC:  		SetConst  *Var[1]  00400003 
  4CC:  		SetConst  *Var[2]  0040000B 
  4DC:  		ExecWait DoScareAway 
  4E8:  		Return
  4F0:  	Case  ==  .Event:BeginAirLift
  4FC:  		SetConst  *Var[0]  00000001 
  50C:  		SetConst  *Var[1]  00400006 
  51C:  		ExecWait DoAirLift 
  528:  	Case  ==  .Event:BlowAway
  534:  		SetConst  *Var[0]  00000001 
  544:  		SetConst  *Var[1]  00400006 
  554:  		ExecWait DoBlowAway 
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  58C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5A0:  Return
  5A8:  End

#new:Script $Script_FlyingAttack
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Thread
   7C:  	SetF  *Var[0]  *Fixed[0.0] 
   8C:  	Loop     0000000F 
   98:  		AddF  *Var[0]  *Fixed[2.0] 
   A8:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
   C8:  		Wait     00000001 
   D4:  	EndLoop
   DC:  EndThread
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00400003 )
   FC:  Call     SetGoalToTarget 	( .Actor:Self )
  10C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  128:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  13C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
  158:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  17C:  Switch  *Var[A] 
  188:  	CaseOR  ==  00000006 
  194:  	CaseOR  ==  00000005 
  1A0:  		Wait     0000000A 
  1AC:  		Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
  1C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1D4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1E8:  		Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  200:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  21C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  238:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  258:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  274:  		Call     PlaySoundAtActor 	( .Actor:Self 000002F9 )
  288:  		Thread
  290:  			Wait     00000005 
  29C:  			Set  *Var[0]  00000000 
  2AC:  			Loop     0000003C 
  2B8:  				Call     $Function_802183DC ( *Var[0] *Var[1] 0000000F 0000003C *Fixed[30.0] )
  2D8:  				Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[1] )
  2F8:  				Add  *Var[0]  00000001 
  308:  				Wait     00000001 
  314:  			EndLoop
  31C:  		EndThread
  324:  		Call     SetGoalToTarget 	( .Actor:Self )
  334:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  350:  		Sub  *Var[0]  00000032 
  360:  		Add  *Var[2]  00000001 
  370:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  38C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  3B8:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  3D4:  		If  *Var[A]  ==  00000005 
  3E4:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  408:  		EndIf
  410:  		Wait     0000001E 
  41C:  		Call     8026F6EC ( FFFFFF81 )
  42C:  		Call     UseCamPreset 	( 00000002 )
  43C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  458:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  46C:  		ExecWait $Script_8022285C 
  478:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  490:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4A4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  4B8:  		Return
  4C0:  	EndCaseGroup
  4C8:  EndSwitch
  4D0:  Wait     0000000A 
  4DC:  Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
  4F0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  504:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  518:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  530:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  54C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  568:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  588:  Set  *Var[A]  *Var[0] 
  598:  Set  *Var[B]  *Var[1] 
  5A8:  Set  *Var[C]  *Var[2] 
  5B8:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  5D4:  Call     PlaySoundAtActor 	( .Actor:Self 000002F9 )
  5E8:  Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  614:  Add  *Var[2]  00000001 
  624:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  640:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  654:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  66C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  688:  Wait     00000002 
  694:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  6BC:  Switch  *Var[0] 
  6C8:  	CaseOR  ==  00000000 
  6D4:  	CaseOR  ==  00000002 
  6E0:  		Call     8026F6EC ( FFFFFF81 )
  6F0:  		Call     UseCamPreset 	( 00000002 )
  700:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  71C:  		Add  *Var[0]  0000001E 
  72C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  740:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  75C:  		Call     80279728 ( FFFFFF81 0000000A *Fixed[2.0] )
  774:  		Wait     00000014 
  780:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  794:  		ExecWait $Script_8022285C 
  7A0:  	EndCaseGroup
  7A8:  EndSwitch
  7B0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7C4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7D8:  Return
  7E0:  End

#new:Script $Script_HealOneAlly
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     UseIdleAnimation 	( .Actor:Self .False )
   24:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   38:  Call     UseCamPreset 	( 0000003F )
   48:  Call     CamTargetActor ( .Actor:Self )
   58:  Call     GetOwnerID  	( *Var[0] )
   68:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
   98:  Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
   AC:  Call     PlaySoundAtActor 	( .Actor:Self 00000000 )
   C0:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
   D8:  Add  *Var[2]  00000032 
   E8:  Call     PlayEffect  	( {FX:Sparkles:Random} *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  Call     PlayEffect  	( {FX:Recover:LittleHeart} *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  Wait     0000001E 
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 00400001 )
  194:  Wait     0000000A 
  1A0:  Call     UseCamPreset 	( 0000003F )
  1B0:  Call     CamTargetActor ( *Var[A] )
  1C0:  Call     GetEnemyMaxHP 	( *Var[A] *Var[4] )
  1D4:  Mul  *Var[4]  0000003C 
  1E4:  Div  *Var[4]  00000064 
  1F4:  Thread
  1FC:  	Wait     00000005 
  208:  	Call     PlaySoundAtActor 	( *Var[A] 0000206D )
  21C:  	Call     PlaySoundAtActor 	( *Var[A] 00000214 )
  230:  	Wait     0000001E 
  23C:  	Call     PlaySoundAtActor 	( *Var[A] 0000025C )
  250:  EndThread
  258:  Thread
  260:  	Call     8026BF48 ( 00000001 )
  270:  	Call     HealActor   	( *Var[A] *Var[4] 00000000 )
  288:  	Call     8026BF48 ( 00000000 )
  298:  EndThread
  2A0:  Call     8027114C ( )
  2AC:  Call     UseCamPreset 	( 00000002 )
  2BC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  2E4:  Return
  2EC:  End

#new:Script $Script_802239AC
    0:  Call     CreateTargetList 	( 00000002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000000 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   3C:  Call     GetActorHP  	( *Var[0] *Var[2] )
   50:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
   64:  If  *Var[2]  !=  *Var[3] 
   74:  	Call     GetOwnerTarget ( *Var[0] *Var[1] )
   88:  	Return
   90:  EndIf
   98:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   AC:  If  *Var[0]  !=  FFFFFFFF 
   BC:  	Goto     00000000 
   C8:  EndIf
   D0:  Return
   D8:  End

#new:Script $Script_TakeTurn_80223A8C
    0:  ExecWait $Script_802239AC 
    C:  If  *Var[0]  ==  FFFFFFFF 
   1C:  	ExecWait $Script_FlyingAttack 
   28:  Else
   30:  	Call     RandInt     	( 000003E8 *Var[A] )
   44:  	If  *Var[A]  <  00000258 
   54:  		ExecWait $Script_HealOneAlly 
   60:  	Else
   68:  		ExecWait $Script_FlyingAttack 
   74:  	EndIf
   7C:  EndIf
   84:  Return
   8C:  End

#new:DefenseTable $DefenseTable_80223B20
.Element:Normal 00000004
.Element:Fire   00000063
.Element:Blast  00000063
.Element:End

#new:DefenseTable $DefenseTable_80223B3C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80223B48
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80223BF4
00800000 01000000 001800FF $IdleAnimations_80223C8C $DefenseTable_80223B20 00001010 00000000 000E0000 00000000 

#new:Actor $SpikeTop
% stats
[Index]        2Cb 
[Level]        17`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_80223B48 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80223BF4 
[Script]      $Script_Init_80223D1C 
% move effectiveness
[Escape]       60`b 
[Item]         60`b 
[AirLift]      70`b 
[Hurricane]    65`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]   -8`b  16`b % dx dy
[StatusIcon]    8`b  13`b % dx dy

#new:IdleAnimations $IdleAnimations_80223C40
.Status:Normal    004D0003
.Status:Stone     004D0000
.Status:Sleep     004D001B
.Status:Poison    004D0003
.Status:Stop      004D0000
.Status:Static    004D0003
.Status:Paralyze  004D0000
.Status:Dizzy     004D001E
.Status:Fear      004D001E
.Status:End

#new:IdleAnimations $IdleAnimations_80223C8C
.Status:Normal    004D0004
.Status:Stone     004D0001
.Status:Sleep     004D001C
.Status:Poison    004D0004
.Status:Stop      004D0001
.Status:Static    004D0004
.Status:Paralyze  004D0001
.Status:Dizzy     004D001F
.Status:Fear      004D001F
.Status:End

#new:IdleAnimations $IdleAnimations_80223CD8
.Status:Normal    004D0005
.Status:Stone     004D0002
.Status:Sleep     004D001D
.Status:Poison    004D0005
.Status:Stop      004D0002
.Status:Static    004D0005
.Status:Dizzy     004D0020
.Status:Fear      004D0020
.Status:End

#new:Script $Script_Init_80223D1C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80223EEC )
   14:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   2C:  If  *Var[0]  ==  00000001 
   3C:  	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  	Call     $Function_802184F0 ( FFFFFFF6 00000000 0000000A 00000000 )
   70:  	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80225624 )
   84:  	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224330 )
   98:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .False )
   B4:  Else
   BC:  	Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
   D4:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   F0:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  10C:  	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802260DC )
  120:  	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224888 )
  134:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223C40 )
  14C:  	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  164:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  180:  EndIf
  188:  Call     HPBarToHome 	( .Actor:Self )
  198:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  1AC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  1C0:  Return
  1C8:  End

#new:Script $Script_Idle_80223EEC
    0:  Return
    8:  End

#new:Script $Script_80223EFC
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
   28:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000001 00000014 )
   44:  Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
   60:  Call     $Function_802184F0 ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802260DC )
   90:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224888 )
   A4:  Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
   BC:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80223B3C )
   D4:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223CD8 )
   EC:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  104:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  120:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  13C:  Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  154:  Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  16C:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  180:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  19C:  Sub  *Var[1]  00000018 
  1AC:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C8:  Set  *Var[1]  00000000 
  1D8:  Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
  1F4:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  208:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  224:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  244:  Call     GetIndexFromPos 	( .Actor:Self *Var[A] )
  258:  Mod  *Var[A]  00000004 
  268:  Call     SetGoalToIndex ( .Actor:Self *Var[A] )
  27C:  Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  298:  Call     SetHomePos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  2B4:  Set  *Var[D]  *Var[A] 
  2C4:  Set  *Var[E]  *Var[B] 
  2D4:  Set  *Var[F]  *Var[C] 
  2E4:  Sub  *Var[D]  *Var[0] 
  2F4:  Sub  *Var[E]  *Var[1] 
  304:  Sub  *Var[F]  *Var[2] 
  314:  Div  *Var[D]  00000002 
  324:  Div  *Var[E]  00000002 
  334:  Div  *Var[F]  00000002 
  344:  Add  *Var[0]  *Var[D] 
  354:  Add  *Var[1]  *Var[E] 
  364:  Add  *Var[2]  *Var[F] 
  374:  Call     8026F6EC ( FFFFFF81 )
  384:  Call     SetAnimation 	( .Actor:Self 00000001 004D0005 )
  39C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B8:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D8:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  3F4:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  414:  Call     HPBarToHome 	( .Actor:Self )
  424:  Return
  42C:  End

#new:Script $Script_HandleEvent_80224330
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		SetConst  *Var[0]  00000001 
   64:  		SetConst  *Var[1]  004D0014 
   74:  		ExecWait DoNormalHit 
   80:  	Case  ==  .Event:Hit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  004D0014 
   AC:  		ExecWait DoNormalHit 
   B8:  		ExecWait $Script_80223EFC 
   C4:  	Case  ==  .Event:FlipTrigger
   D0:  		SetConst  *Var[0]  00000001 
   E0:  		SetConst  *Var[1]  004D0014 
   F0:  		ExecWait DoNormalHit 
   FC:  		ExecWait $Script_80223EFC 
  108:  	Case  ==  .Event:BurnHit
  114:  		SetConst  *Var[0]  00000001 
  124:  		SetConst  *Var[1]  004D0019 
  134:  		SetConst  *Var[2]  004D001A 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_80223EFC 
  15C:  	Case  ==  .Event:BurnDeath
  168:  		SetConst  *Var[0]  00000001 
  178:  		SetConst  *Var[1]  004D0019 
  188:  		SetConst  *Var[2]  004D001A 
  198:  		ExecWait DoBurnHit 
  1A4:  		SetConst  *Var[0]  00000001 
  1B4:  		SetConst  *Var[1]  004D001A 
  1C4:  		ExecWait DoDeath 
  1D0:  		Return
  1D8:  	Case  ==  .Event:ShockHit
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  004D0014 
  204:  		ExecWait DoShockHit 
  210:  		SetConst  *Var[0]  00000001 
  220:  		SetConst  *Var[1]  004D0013 
  230:  		ExecWait 8029BD70 
  23C:  		SetConst  *Var[0]  00000001 
  24C:  		SetConst  *Var[1]  004D0008 
  25C:  		ExecWait DoReturnHome 
  268:  	Case  ==  .Event:ShockDeath
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  004D0014 
  294:  		ExecWait DoShockHit 
  2A0:  		SetConst  *Var[0]  00000001 
  2B0:  		SetConst  *Var[1]  004D0013 
  2C0:  		ExecWait DoDeath 
  2CC:  		Return
  2D4:  	Case  ==  00000017
  2E0:  		SetConst  *Var[0]  00000001 
  2F0:  		SetConst  *Var[1]  004D000D 
  300:  		ExecWait DoImmune 
  30C:  	Case  ==  .Event:Immune
  318:  		SetConst  *Var[0]  00000001 
  328:  		SetConst  *Var[1]  004D000D 
  338:  		ExecWait DoImmune 
  344:  		Wait     00000002 
  350:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  364:  		If  *Var[0]  !&  00200000 
  374:  			ExecWait $Script_80223EFC 
  380:  		EndIf
  388:  	Case  ==  .Event:Death
  394:  		SetConst  *Var[0]  00000001 
  3A4:  		SetConst  *Var[1]  004D0014 
  3B4:  		ExecWait DoNormalHit 
  3C0:  		Wait     0000000A 
  3CC:  		SetConst  *Var[0]  00000001 
  3DC:  		SetConst  *Var[1]  004D0014 
  3EC:  		ExecWait DoDeath 
  3F8:  		Return
  400:  	Case  ==  .Event:RecoverStatus
  40C:  	Case  ==  .Event:ScareAway
  418:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  430:  		SetConst  *Var[0]  00000001 
  440:  		SetConst  *Var[1]  004D0009 
  450:  		SetConst  *Var[2]  004D0014 
  460:  		ExecWait DoScareAway 
  46C:  		Return
  474:  	Default
  47C:  EndSwitch
  484:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  498:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4AC:  Return
  4B4:  End

#new:Script $Script_802247EC
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[3] )
   18:  If  *Var[3]  ==  00000002 
   28:  	Set  *Var[1]  *Var[2] 
   38:  EndIf
   40:  Return
   48:  End

#new:IntTable $IntTable_8022483C
00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015 
00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004 
00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80224888
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  004D0013 
   80:  		SetConst  *Var[2]  004D0015 
   90:  		ExecWait $Script_802247EC 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   D4:  		If  *Var[0]  !=  00000002 
   E4:  			SetConst  *Var[0]  00000001 
   F4:  			SetConst  *Var[1]  004D0016 
  104:  			SetConst  *Var[2]  004D0017 
  114:  			ExecWait DoBurnHit 
  120:  		Else
  128:  			SetConst  *Var[0]  00000001 
  138:  			SetConst  *Var[1]  004D0018 
  148:  			SetConst  *Var[2]  004D0018 
  158:  			ExecWait DoBurnHit 
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath
  178:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  190:  		If  *Var[0]  !=  00000002 
  1A0:  			SetConst  *Var[0]  00000001 
  1B0:  			SetConst  *Var[1]  004D0016 
  1C0:  			SetConst  *Var[2]  004D0017 
  1D0:  			ExecWait DoBurnHit 
  1DC:  			SetConst  *Var[0]  00000001 
  1EC:  			SetConst  *Var[1]  004D0017 
  1FC:  			ExecWait DoDeath 
  208:  		Else
  210:  			SetConst  *Var[0]  00000001 
  220:  			SetConst  *Var[1]  004D0018 
  230:  			SetConst  *Var[2]  004D0018 
  240:  			ExecWait DoBurnHit 
  24C:  			SetConst  *Var[0]  00000001 
  25C:  			SetConst  *Var[1]  004D0018 
  26C:  			ExecWait DoDeath 
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:MultibounceHit
  294:  		SetConst  *Var[0]  00000001 
  2A4:  		SetConst  *Var[1]  004D0013 
  2B4:  		SetConst  *Var[2]  004D0015 
  2C4:  		ExecWait $Script_802247EC 
  2D0:  		ExecWait 8029B998 
  2DC:  	Case  ==  .Event:FlipTrigger
  2E8:  		Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
  300:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000001 00000014 )
  31C:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF8 )
  338:  		Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
  350:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80223B3C )
  368:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223CD8 )
  380:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  39C:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  3B4:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0013 )
  3CC:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  3E8:  		Thread
  3F0:  			Wait     00000001 
  3FC:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  418:  			Wait     00000001 
  424:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD3 )
  440:  			Wait     00000001 
  44C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFA6 )
  468:  			Wait     00000001 
  474:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF79 )
  490:  			Wait     00000001 
  49C:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF4C )
  4B8:  			Wait     00000001 
  4C4:  		EndThread
  4CC:  		UseIntBuffer $IntTable_8022483C 
  4D8:  		Loop     00000013 
  4E4:  			Get1Int  *Var[0] 
  4F0:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  50C:  			Wait     00000001 
  518:  		EndLoop
  520:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  53C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  574:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  58C:  	Case  ==  .Event:ShockHit
  598:  		SetConst  *Var[0]  00000001 
  5A8:  		SetConst  *Var[1]  004D0013 
  5B8:  		ExecWait DoShockHit 
  5C4:  		SetConst  *Var[0]  00000001 
  5D4:  		SetConst  *Var[1]  004D0013 
  5E4:  		ExecWait 8029BD70 
  5F0:  		SetConst  *Var[0]  00000001 
  600:  		SetConst  *Var[1]  004D0008 
  610:  		ExecWait DoReturnHome 
  61C:  	Case  ==  .Event:ShockDeath
  628:  		SetConst  *Var[0]  00000001 
  638:  		SetConst  *Var[1]  004D0013 
  648:  		ExecWait DoShockHit 
  654:  		SetConst  *Var[0]  00000001 
  664:  		SetConst  *Var[1]  004D0013 
  674:  		ExecWait DoDeath 
  680:  		Return
  688:  	Case  ==  00000017
  694:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  6AC:  		If  *Var[0]  ==  00000001 
  6BC:  			SetConst  *Var[0]  00000001 
  6CC:  			SetConst  *Var[1]  004D000B 
  6DC:  			ExecWait DoImmune 
  6E8:  			Call     SetAnimation 	( .Actor:Self 00000001 004D000E )
  700:  			Wait     00000008 
  70C:  		Else
  714:  			SetConst  *Var[0]  00000001 
  724:  			SetConst  *Var[1]  004D0005 
  734:  			ExecWait DoImmune 
  740:  		EndIf
  748:  	Case  ==  .Event:Immune
  754:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  76C:  		If  *Var[0]  ==  00000001 
  77C:  			SetConst  *Var[0]  00000001 
  78C:  			SetConst  *Var[1]  004D000B 
  79C:  			ExecWait DoImmune 
  7A8:  			Call     SetAnimation 	( .Actor:Self 00000001 004D000C )
  7C0:  			Wait     00000008 
  7CC:  		Else
  7D4:  			SetConst  *Var[0]  00000001 
  7E4:  			SetConst  *Var[1]  004D0005 
  7F4:  			ExecWait DoImmune 
  800:  		EndIf
  808:  	Case  ==  .Event:SpikeTaunt
  814:  		Wait     0000000A 
  820:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  83C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  850:  		If  *Var[3]  &  00080000 
  860:  			Add  *Var[1]  00000009 
  870:  		Else
  878:  			Add  *Var[1]  00000018 
  888:  		EndIf
  890:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8D4:  		Wait     00000014 
  8E0:  	Case  ==  .Event:Death
  8EC:  		SetConst  *Var[0]  00000001 
  8FC:  		SetConst  *Var[1]  004D0013 
  90C:  		SetConst  *Var[2]  004D0015 
  91C:  		ExecWait $Script_802247EC 
  928:  		ExecWait DoNormalHit 
  934:  		Wait     0000000A 
  940:  		SetConst  *Var[0]  00000001 
  950:  		SetConst  *Var[1]  004D0013 
  960:  		SetConst  *Var[2]  004D0015 
  970:  		ExecWait $Script_802247EC 
  97C:  		ExecWait DoDeath 
  988:  		Return
  990:  	Case  ==  .Event:MultibounceDeath
  99C:  		SetConst  *Var[0]  00000001 
  9AC:  		SetConst  *Var[1]  004D0013 
  9BC:  		SetConst  *Var[2]  004D0015 
  9CC:  		ExecWait $Script_802247EC 
  9D8:  		ExecWait 8029B998 
  9E4:  		SetConst  *Var[0]  00000001 
  9F4:  		SetConst  *Var[1]  004D0013 
  A04:  		SetConst  *Var[2]  004D0015 
  A14:  		ExecWait $Script_802247EC 
  A20:  		ExecWait DoDeath 
  A2C:  		Return
  A34:  	Case  ==  .Event:RecoverStatus
  A40:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  A58:  		If  *Var[0]  ==  00000001 
  A68:  			SetConst  *Var[0]  00000001 
  A78:  			SetConst  *Var[1]  004D0003 
  A88:  			ExecWait DoRecover 
  A94:  		EndIf
  A9C:  	Case  ==  .Event:ScareAway
  AA8:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  AC0:  		If  *Var[0]  ==  00000001 
  AD0:  			SetConst  *Var[0]  00000001 
  AE0:  			SetConst  *Var[1]  004D0008 
  AF0:  			SetConst  *Var[2]  004D0013 
  B00:  			ExecWait DoScareAway 
  B0C:  			Return
  B14:  		Else
  B1C:  			SetConst  *Var[0]  00000001 
  B2C:  			SetConst  *Var[1]  004D0005 
  B3C:  			ExecWait DoImmune 
  B48:  		EndIf
  B50:  	Case  ==  .Event:BeginAirLift
  B5C:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  B74:  		If  *Var[0]  ==  00000001 
  B84:  			SetConst  *Var[0]  00000001 
  B94:  			SetConst  *Var[1]  004D0008 
  BA4:  		Else
  BAC:  			SetConst  *Var[0]  00000001 
  BBC:  			SetConst  *Var[1]  004D0005 
  BCC:  		EndIf
  BD4:  		ExecWait DoAirLift 
  BE0:  	Case  ==  .Event:BlowAway
  BEC:  		Call     8026BA04 ( FFFFFF81 00000007 00000000 00000000 )
  C08:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  C20:  		If  *Var[0]  ==  00000001 
  C30:  			SetConst  *Var[0]  00000001 
  C40:  			SetConst  *Var[1]  004D0013 
  C50:  		Else
  C58:  			SetConst  *Var[0]  00000001 
  C68:  			SetConst  *Var[1]  004D0015 
  C78:  		EndIf
  C80:  		ExecWait DoBlowAway 
  C8C:  		Return
  C94:  	Case  ==  .Event:AirLiftFailed
  CA0:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  CB8:  		If  *Var[0]  ==  00000001 
  CC8:  			SetConst  *Var[0]  00000001 
  CD8:  			SetConst  *Var[1]  004D000B 
  CE8:  			ExecWait DoImmune 
  CF4:  			Call     SetAnimation 	( .Actor:Self 00000001 004D000C )
  D0C:  			Wait     00000008 
  D18:  		Else
  D20:  			SetConst  *Var[0]  00000001 
  D30:  			SetConst  *Var[1]  004D0005 
  D40:  			ExecWait DoImmune 
  D4C:  		EndIf
  D54:  	Default
  D5C:  EndSwitch
  D64:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D78:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D8C:  Return
  D94:  End

#new:Script $Script_TakeTurn_80225624
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
   54:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
   70:  Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
   8C:  Call     $Function_802184F0 ( FFFFFFF6 00000014 0000000A 00000014 )
   A8:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802260DC )
   BC:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224888 )
   D0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223C40 )
   E8:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  100:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
  11C:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  130:  Mod  *Var[0]  00000004 
  140:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  154:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  170:  Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  18C:  Call     HPBarToHome 	( .Actor:Self )
  19C:  Call     UseCamPreset 	( 0000003F )
  1AC:  Call     CamTargetActor ( .Actor:Self )
  1BC:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  1D4:  Call     GetBattlePhase ( *Var[0] )
  1E4:  If  *Var[0]  ==  .Phase:FirstStrike
  1F4:  	Call     SetGoalToTarget 	( .Actor:Self )
  204:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  220:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  23C:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[4] *Var[2] )
  258:  	Call     SetAnimation 	( .Actor:Self 00000001 004D0001 )
  270:  Else
  278:  	Call     SetAnimation 	( .Actor:Self 00000001 004D0009 )
  290:  	Call     SetGoalToTarget 	( .Actor:Self )
  2A0:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2BC:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D8:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[4] *Var[2] )
  2F4:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  308:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  320:  	Call     SetAnimation 	( .Actor:Self 00000001 004D0001 )
  338:  	Wait     00000008 
  344:  EndIf
  34C:  Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
  368:  Call     GetBattlePhase ( *Var[0] )
  378:  If  *Var[0]  ==  .Phase:FirstStrike
  388:  	Call     UseCamPreset 	( 00000005 )
  398:  	Call     SetCamZoom  	( 000001AE )
  3A8:  	Call     SetCamOffsetZ 	( 00000014 )
  3B8:  	Call     MoveCamOver 	( 0000000A )
  3C8:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  3E0:  EndIf
  3E8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
  40C:  Switch  *Var[0] 
  418:  	CaseOR  ==  00000006 
  424:  	CaseOR  ==  00000005 
  430:  		Set  *Var[A]  *Var[0] 
  440:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  454:  		Call     8026B438 ( FFFFFF81 00000001 000000B4 )
  46C:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  484:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A0:  		Sub  *Var[1]  00000018 
  4B0:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4CC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  4E0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4FC:  		Set  *Var[1]  00000000 
  50C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  528:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  548:  		If  *Var[A]  ==  00000005 
  558:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call     8026F6EC ( FFFFFF81 )
  594:  		Add  *Var[0]  0000001E 
  5A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  5E0:  		Thread
  5E8:  			Wait     00000005 
  5F4:  			Call     SetAnimation 	( .Actor:Self 00000001 004D0000 )
  60C:  		EndThread
  614:  		Add  *Var[0]  00000014 
  624:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  640:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  660:  		Wait     00000008 
  66C:  		Call     UseCamPreset 	( 00000002 )
  67C:  		Call     8027D7F0 ( )
  688:  		Call     SetGoalToHome 	( .Actor:Self )
  698:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  6AC:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0008 )
  6C4:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6E0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  6F8:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  710:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  728:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  73C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  750:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  764:  		Return
  76C:  	EndCaseGroup
  774:  EndSwitch
  77C:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  790:  Call     SetAnimation 	( .Actor:Self 00000001 004D0015 )
  7A8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7C4:  Sub  *Var[1]  00000018 
  7D4:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  804:  Call     SetGoalToTarget 	( .Actor:Self )
  814:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  830:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  84C:  Set  *Var[1]  *Var[4] 
  85C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  878:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  898:  Call     8026F6EC ( FFFFFF81 )
  8A8:  Wait     00000002 
  8B4:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
  8DC:  Switch  *Var[0] 
  8E8:  	CaseOR  ==  00000000 
  8F4:  	CaseOR  ==  00000002 
  900:  		Call     UseCamPreset 	( 00000002 )
  910:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  92C:  		Add  *Var[0]  0000001E 
  93C:  		Set  *Var[1]  00000000 
  94C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  968:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  988:  		Thread
  990:  			Wait     00000005 
  99C:  			Call     SetAnimation 	( .Actor:Self 00000001 004D0000 )
  9B4:  		EndThread
  9BC:  		Add  *Var[0]  00000014 
  9CC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9E8:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  A08:  		Wait     00000008 
  A14:  		Call     8027D7F0 ( )
  A20:  		SetConst  *Var[0]  00000001 
  A30:  		SetConst  *Var[1]  004D0008 
  A40:  		ExecWait DoReturnHome 
  A4C:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  A64:  	EndCaseGroup
  A6C:  EndSwitch
  A74:  Label    0000000A 
  A80:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A94:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AA8:  Return
  AB0:  End

#new:Script $Script_TakeTurn_802260DC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   40:  If  *Var[0]  ==  00000002 
   50:  	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   68:  	Sub  *Var[0]  00000001 
   78:  	If  *Var[0]  >  00000000 
   88:  		Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   BC:  		Wait     0000001E 
   C8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   E0:  		Call     UseCamPreset 	( 00000002 )
   F0:  	Else
   F8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  114:  		Wait     00000014 
  120:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  138:  		SetConst  *Var[0]  00000001 
  148:  		SetConst  *Var[1]  004D0005 
  158:  		SetConst  *Var[2]  004D0003 
  168:  		ExecWait 8029BBB4 
  174:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  188:  		Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  1A0:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
  1BC:  		Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
  1D8:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80223B20 )
  1F0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223C40 )
  208:  		Call     BindIdle    	( .Actor:Self $Script_Idle_80223EEC )
  21C:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  234:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  250:  	EndIf
  258:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  26C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  280:  	Return
  288:  EndIf
  290:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  2A4:  Call     UseCamPreset 	( 0000003F )
  2B4:  Call     CamTargetActor ( .Actor:Self )
  2C4:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  2DC:  Call     SetAnimation 	( .Actor:Self 00000001 004D000B )
  2F4:  Wait     0000000A 
  300:  Call     SetAnimation 	( .Actor:Self 00000001 004D000F )
  318:  Thread
  320:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  33C:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  380:  	Wait     0000000A 
  38C:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3D0:  	Wait     00000005 
  3DC:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  420:  EndThread
  428:  Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
  43C:  Call     SetAnimation 	( .Actor:Self 00000001 004D000A )
  454:  Wait     00000014 
  460:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  47C:  Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
  490:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
  4B4:  Switch  *Var[0] 
  4C0:  	CaseOR  ==  00000006 
  4CC:  	CaseOR  ==  00000005 
  4D8:  		Set  *Var[A]  *Var[0] 
  4E8:  		Thread
  4F0:  			Loop     
  4FC:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  518:  				Add  *Var[0]  0000001E 
  528:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  544:  				If  *Var[0]  >  *Var[3] 
  554:  					BreakLoop
  55C:  				EndIf
  564:  				Wait     00000001 
  570:  			EndLoop
  578:  			Call     UseCamPreset 	( 00000001 )
  588:  			If  *Var[A]  ==  00000005 
  598:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  5BC:  			EndIf
  5C4:  			Wait     0000000F 
  5D0:  			Call     UseCamPreset 	( 00000002 )
  5E0:  		EndThread
  5E8:  		Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  		Call     AddToGoalPos 	( .Actor:Self FFFFFF6A 00000000 00000000 )
  614:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  628:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  640:  		Wait     0000000F 
  64C:  		Call     8027D7F0 ( )
  658:  		Call     8026F6EC ( FFFFFF81 )
  668:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  684:  		Call     SetGoalToHome 	( .Actor:Self )
  694:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B0:  		Add  *Var[0]  000000C8 
  6C0:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  6F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  708:  		Wait     0000000A 
  714:  		Call     SetAnimation 	( .Actor:Self 00000001 004D000C )
  72C:  		Wait     0000000A 
  738:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  750:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  764:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  778:  		Return
  780:  	EndCaseGroup
  788:  EndSwitch
  790:  Call     SetGoalToTarget 	( .Actor:Self )
  7A0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
  7B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  7CC:  Wait     00000002 
  7D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
  800:  Switch  *Var[0] 
  80C:  	CaseOR  ==  00000000 
  818:  	CaseOR  ==  00000002 
  824:  		Call     UseCamPreset 	( 00000002 )
  834:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  850:  		Add  *Var[0]  00000028 
  860:  		Set  *Var[1]  00000000 
  870:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  884:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8A0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8C0:  		Add  *Var[0]  0000001E 
  8D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8EC:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  90C:  		Add  *Var[0]  00000014 
  91C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  938:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  958:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  970:  		Wait     00000008 
  97C:  		Call     8027D7F0 ( )
  988:  		Call     8026F6EC ( FFFFFF81 )
  998:  		SetConst  *Var[0]  00000001 
  9A8:  		SetConst  *Var[1]  004D0008 
  9B8:  		ExecWait DoReturnHome 
  9C4:  		Call     SetAnimation 	( .Actor:Self 00000001 004D0003 )
  9DC:  	EndCaseGroup
  9E4:  EndSwitch
  9EC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  A00:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A14:  Return
  A1C:  End

#new:Script $Script_80226B00
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80226C18
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_802271C4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  00000020 
   3C:  Exec     $Script_80226B00 
   48:  Set  *Var[0]  0000002B 
   58:  Exec     $Script_80226B00 
   64:  Set  *Var[0]  00000035 
   74:  Exec     $Script_80226C18 
   80:  Call     PlayEffect  	( {FX:SunRays:RightCorner} 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C4:  Return
   CC:  End

#new:Script $Script_AfterBattle_80227298
    0:  Return
    8:  End

#new:Stage $Stage_802272A8
$ASCII_80228CD8  % jan_tex
$ASCII_80228CC8  % jan_bt00_shape
$ASCII_80228CB8  % jan_bt00_hit
$Script_BeforeBattle_802271C4 
$Script_AfterBattle_80227298 
$ASCII_80228CB0  % yos_bg
00000000 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_802272D0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_802273E8
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_80227994
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 0000003F 00000000 )
   40:  Thread
   48:  	Wait     00000005 
   54:  	Set  *Var[0]  00000009 
   64:  	Exec     $Script_802273E8 
   70:  	Wait     00000005 
   7C:  	Set  *Var[0]  0000000A 
   8C:  	Exec     $Script_802273E8 
   98:  	Wait     00000005 
   A4:  	Set  *Var[0]  0000000B 
   B4:  	Exec     $Script_802273E8 
   C0:  EndThread
   C8:  Return
   D0:  End

#new:Script $Script_AfterBattle_80227A6C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80227A7C
00000012 00000000 

#new:Stage $Stage_80227A84
$ASCII_80228D08  % jan_tex
$ASCII_80228CF8  % jan_bt01_shape
$ASCII_80228CE8  % jan_bt01_hit
$Script_BeforeBattle_80227994 
$Script_AfterBattle_80227A6C 
$ASCII_80228CE0  % yos_bg
$ForegroundModelList_80227A7C 
00000000 
00000000 
00000000 

PADDING: 80227AAC to 80227AB0 (005833CC to 005833D0)
00000000 

% Origin: HEURISTIC
#new:Script $Script_80227AB0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80227BC8
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_80228174
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000028 00000000 )
   40:  Thread
   48:  	Wait     00000005 
   54:  	Set  *Var[0]  00000009 
   64:  	Exec     $Script_80227BC8 
   70:  	Wait     00000005 
   7C:  	Set  *Var[0]  0000000A 
   8C:  	Exec     $Script_80227BC8 
   98:  	Wait     00000005 
   A4:  	Set  *Var[0]  0000000B 
   B4:  	Exec     $Script_80227BC8 
   C0:  EndThread
   C8:  Return
   D0:  End

#new:Script $Script_AfterBattle_8022824C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8022825C
00000012 00000000 

#new:Stage $Stage_80228264
$ASCII_80228D38  % jan_tex
$ASCII_80228D28  % jan_bt01_shape
$ASCII_80228D18  % jan_bt01_hit
$Script_BeforeBattle_80228174 
$Script_AfterBattle_8022824C 
$ASCII_80228D10  % yos_bg
$ForegroundModelList_8022825C 
00000000 
00000000 
00000000 

PADDING: 8022828C to 80228290 (00583BAC to 00583BB0)
00000000 

#new:Script $Script_BeforeBattle_80228290
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_802282CC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802282DC
00000005 00000006 00000007 00000000 

#new:Stage $Stage_802282EC
$ASCII_80228D68  % jan_tex
$ASCII_80228D58  % jan_bt02_shape
$ASCII_80228D48  % jan_bt02_hit
$Script_BeforeBattle_80228290 
$Script_AfterBattle_802282CC 
$ASCII_80228D40  % yos_bg
$ForegroundModelList_802282DC 
00000000 
00000000 
00000000 

PADDING: 80228314 to 80228320 (00583C34 to 00583C40)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_80228320
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000016 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_80228370
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80228380
00000040 0000003F 0000003E 00000000 

#new:Stage $Stage_80228390
$ASCII_80228D98  % jan_tex
$ASCII_80228D88  % jan_bt03_shape
$ASCII_80228D78  % jan_bt03_hit
$Script_BeforeBattle_80228320 
$Script_AfterBattle_80228370 
$ASCII_80228D70  % jan_bg
$ForegroundModelList_80228380 
00000000 
00000000 
00000000 

PADDING: 802283B8 to 802283C0 (00583CD8 to 00583CE0)
00000000 00000000 

#new:Script $Script_BeforeBattle_802283C0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000042 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_80228410
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80228420
00000040 0000003F 0000003E 00000000 

#new:Stage $Stage_80228430
$ASCII_80228DC8  % jan_tex
$ASCII_80228DB8  % jan_bt03_shape
$ASCII_80228DA8  % jan_bt03_hit
$Script_BeforeBattle_802283C0 
$Script_AfterBattle_80228410 
$ASCII_80228DA0  % jan_bg
$ForegroundModelList_80228420 
00000000 
00000000 
00000000 

PADDING: 80228458 to 80228460 (00583D78 to 00583D80)
00000000 00000000 

#new:Script $Script_BeforeBattle_80228460
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000041 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_802284B0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802284C0
00000025 00000000 

#new:Stage $Stage_802284C8
$ASCII_80228DF8  % jan_tex
$ASCII_80228DE8  % jan_bt04_shape
$ASCII_80228DD8  % jan_bt04_hit
$Script_BeforeBattle_80228460 
$Script_AfterBattle_802284B0 
$ASCII_80228DD0  % jan_bg
$ForegroundModelList_802284C0 
00000000 
00000000 
00000000 

#new:Script $Script_BeforeBattle_802284F0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000021 00000000 )
   40:  Return
   48:  End

#new:Script $Script_AfterBattle_80228540
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80228550
00000025 00000000 

#new:Stage $Stage_80228558
$ASCII_80228E28  % jan_tex
$ASCII_80228E18  % jan_bt04_shape
$ASCII_80228E08  % jan_bt04_hit
$Script_BeforeBattle_802284F0 
$Script_AfterBattle_80228540 
$ASCII_80228E00  % jan_bg
$ForegroundModelList_80228550 
00000000 
00000000 
00000000 

#new:Formation $Formation_00
$SpearGuy 00000001 0000000A 00000000 00000000 00000000 00000000 
$SpearGuy 00000002 00000009 00000001 00000000 00000000 00000000 

#new:Formation $Formation_01
$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpearGuy 00000001 00000009 00000001 00000000 00000000 00000000 
$SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000 

#new:Formation $Formation_02
$SpearGuy 00000001 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000 

#new:Formation $Formation_06
$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$SpearGuy 00000002 00000008 00000001 00000000 00000000 00000000 
$JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$SpearGuy 00000000 0000000A 00000000 00000000 00000000 00000000 
$MediGuy 00000005 00000009 00000000 00000000 00000000 00000000 
$SpikeTop 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$HurtPlant 00000001 0000000A 00000000 00000000 00000000 00000000 
$HurtPlant 00000002 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$HurtPlant 00000000 0000000A 00000000 00000000 00000000 00000000 
$HurtPlant 00000001 00000009 00000000 00000000 00000000 00000000 
$HurtPlant 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$JungleFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$JungleFuzzy 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$JungleFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$SpearGuy 00000001 00000009 00000001 00000000 00000000 00000000 
$JungleFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$MBush 00000001 0000000A 00000000 00000000 00000000 00000000 
$MBush 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$MBush 00000000 0000000A 00000000 00000000 00000000 00000000 
$MBush 00000001 00000009 00000000 00000000 00000000 00000000 
$MBush 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$MBush 00000000 0000000A 00000000 00000000 00000000 00000000 
$MBush 00000001 00000009 00000000 00000000 00000000 00000000 
$MBush 00000002 00000008 00000000 00000000 00000000 00000000 
$MBush 00000003 00000007 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80228FC8 00000002 $Formation_00 $Stage_80227A84 00000000 
$SJIS_80228FB8 00000003 $Formation_01 $Stage_80227A84 00000000 
$SJIS_80228FA0 00000002 $Formation_02 $Stage_80227A84 00000000 
$SJIS_80228F84 00000004 $Formation_03 $Stage_80227A84 00000000 
$SJIS_80228F68 00000003 $Formation_04 $Stage_80227A84 00000000 % unused
$SJIS_80228F40 00000003 $Formation_05 $Stage_80227A84 00000000 % unused
$SJIS_80228F10 00000004 $Formation_06 $Stage_80227A84 00000000 
$SJIS_80228EE4 00000003 $Formation_07 $Stage_80227A84 00000000 % unused
$SJIS_80228ECC 00000002 $Formation_08 $Stage_80227A84 00000000 
$SJIS_80228EB4 00000003 $Formation_09 $Stage_80227A84 00000000 % unused
$SJIS_80228EA4 00000002 $Formation_0A $Stage_80227A84 00000000 
$SJIS_80228E94 00000003 $Formation_0B $Stage_80227A84 00000000 
$SJIS_80228E84 00000004 $Formation_0C $Stage_80227A84 00000000 % unused
$SJIS_80228E60 00000003 $Formation_0D $Stage_80227A84 00000000 
$SJIS_80228E50 00000002 $Formation_0E $Stage_80227A84 00000000 
$SJIS_80228E40 00000003 $Formation_0F $Stage_80227A84 00000000 % unused
$SJIS_80228E30 00000004 $Formation_10 $Stage_80227A84 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_80229010 $Stage_802272A8 
$ASCII_80229008 $Stage_80227A84 
$ASCII_80229000 $Stage_80228264 
$ASCII_80228FF8 $Stage_802282EC 
$ASCII_80228FF0 $Stage_80228390 
$ASCII_80228FE8 $Stage_80228430 
$ASCII_80228FE0 $Stage_802284C8 
$ASCII_80228FD8 $Stage_80228558 
00000000 00000000 

PADDING: 80228CA8 to 80228CB0 (005845C8 to 005845D0)
00000000 00000000 

#new:ASCII $ASCII_80228CB0
yos_bg

#new:ASCII $ASCII_80228CB8
jan_bt00_hit

#new:ASCII $ASCII_80228CC8
jan_bt00_shape

#new:ASCII $ASCII_80228CD8
jan_tex

#new:ASCII $ASCII_80228CE0
yos_bg

#new:ASCII $ASCII_80228CE8
jan_bt01_hit

#new:ASCII $ASCII_80228CF8
jan_bt01_shape

#new:ASCII $ASCII_80228D08
jan_tex

#new:ASCII $ASCII_80228D10
yos_bg

#new:ASCII $ASCII_80228D18
jan_bt01_hit

#new:ASCII $ASCII_80228D28
jan_bt01_shape

#new:ASCII $ASCII_80228D38
jan_tex

#new:ASCII $ASCII_80228D40
yos_bg

#new:ASCII $ASCII_80228D48
jan_bt02_hit

#new:ASCII $ASCII_80228D58
jan_bt02_shape

#new:ASCII $ASCII_80228D68
jan_tex

#new:ASCII $ASCII_80228D70
jan_bg

#new:ASCII $ASCII_80228D78
jan_bt03_hit

#new:ASCII $ASCII_80228D88
jan_bt03_shape

#new:ASCII $ASCII_80228D98
jan_tex

#new:ASCII $ASCII_80228DA0
jan_bg

#new:ASCII $ASCII_80228DA8
jan_bt03_hit

#new:ASCII $ASCII_80228DB8
jan_bt03_shape

#new:ASCII $ASCII_80228DC8
jan_tex

#new:ASCII $ASCII_80228DD0
jan_bg

#new:ASCII $ASCII_80228DD8
jan_bt04_hit

#new:ASCII $ASCII_80228DE8
jan_bt04_shape

#new:ASCII $ASCII_80228DF8
jan_tex

#new:ASCII $ASCII_80228E00
jan_bg

#new:ASCII $ASCII_80228E08
jan_bt04_hit

#new:ASCII $ASCII_80228E18
jan_bt04_shape

#new:ASCII $ASCII_80228E28
jan_tex

#new:SJIS $SJIS_80228E30
% gitaisoux4
82AC82BD 82A282BB 82A47834 00000000 

#new:SJIS $SJIS_80228E40
% gitaisoux3
82AC82BD 82A282BB 82A47833 00000000 

#new:SJIS $SJIS_80228E50
% gitaisoux2
82AC82BD 82A282BB 82A47832 00000000 

#new:SJIS $SJIS_80228E60
% toropikaru,yaridansa-,toropikaru
8367838D 8373834A 838B2C83 84838A83 5F839383 54815B2C 8367838D 8373834A 
838B0000 

#new:SJIS $SJIS_80228E84
% toropikarux4
8367838D 8373834A 838B7834 00000000 

#new:SJIS $SJIS_80228E94
% toropikarux3
8367838D 8373834A 838B7833 00000000 

#new:SJIS $SJIS_80228EA4
% toropikarux2
8367838D 8373834A 838B7832 00000000 

#new:SJIS $SJIS_80228EB4
% pirorinsoudamashix3
8373838D 838A8393 82BB82A4 82BE82DC 82B57833 00000000 

#new:SJIS $SJIS_80228ECC
% pirorinsoudamashix2
8373838D 838A8393 82BB82A4 82BE82DC 82B57832 00000000 

#new:SJIS $SJIS_80228EE4
% yaridansa-,kaifukuheiho-,togemeto
8384838A 835F8393 8354815B 2C82A982 A282D382 AD837783 43837A81 5B2C8367 
83518381 83628367 00000000 

#new:SJIS $SJIS_80228F10
% yaridansa-,toropikaru,yaridansa-,toropikaru
8384838A 835F8393 8354815B 2C836783 8D837383 4A838B2C 8384838A 835F8393 
8354815B 2C836783 8D837383 4A838B00 

#new:SJIS $SJIS_80228F40
% yaridansa-,toropikaru,yaridansa-
8384838A 835F8393 8354815B 2C836783 8D837383 4A838B2C 8384838A 835F8393 
8354815B 00000000 

#new:SJIS $SJIS_80228F68
% yaridansa-,toropikarux2
8384838A 835F8393 8354815B 2C836783 8D837383 4A838B78 82510000 

#new:SJIS $SJIS_80228F84
% yaridansa-,toropikarux3
8384838A 835F8393 8354815B 2C836783 8D837383 4A838B78 82520000 

#new:SJIS $SJIS_80228FA0
% yaridansa-,toropikaru
8384838A 835F8393 8354815B 2C836783 8D837383 4A838B00 

#new:SJIS $SJIS_80228FB8
% yaridansa-x3
8384838A 835F8393 8354815B 78330000 

#new:SJIS $SJIS_80228FC8
% yaridansa-x2
8384838A 835F8393 8354815B 78320000 

#new:ASCII $ASCII_80228FD8
jan_04b

#new:ASCII $ASCII_80228FE0
jan_04

#new:ASCII $ASCII_80228FE8
jan_03b

#new:ASCII $ASCII_80228FF0
jan_03

#new:ASCII $ASCII_80228FF8
jan_02

#new:ASCII $ASCII_80229000
jan_01b

#new:ASCII $ASCII_80229008
jan_01

#new:ASCII $ASCII_80229010
jan_00

PADDING: 80229018 to 80229020 (00584938 to 00584940)
00000000 00000000 

