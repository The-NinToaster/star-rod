% Script File: 0A Area SBK.bscr
% Decoded from: 4DA5E0 to 4E2740 (0A Area SBK)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 802180CC to 802180D0 (004DA6AC to 004DA6B0)
00000000 

#new:Function $Function_802180D0
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 60 (SP)
   10:  SW        S3, 5C (SP)
   14:  SW        S2, 58 (SP)
   18:  SW        S0, 50 (SP)
   1C:  SDC1      F26, 80 (SP)
   20:  SDC1      F24, 78 (SP)
   24:  SDC1      F22, 70 (SP)
   28:  SDC1      F20, 68 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetVariable}
   38:  ADDIU     S0, S0, 4
   3C:  MTC1      V0, F20
   40:  NOP
   44:  CVT.D.W   F20, F20
   48:  LIF       F1, 2.5625
   50:  MTC1      R0, F0
   54:  LW        S2, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  DIV.D     F20, F20, F0
   60:  LIO       AT, 40C90FD0
   68:  MTC1      AT, F0
   6C:  CVT.S.D   F20, F20
   70:  MUL.S     F20, F20, F0
   74:  NOP
   78:  LW        S3, 0 (S0)
   7C:  LW        S0, 4 (S0)
   80:  LIF       F0, 360.0
   88:  LIF       F24, 150.0
   90:  DIV.S     F20, F20, F0
   94:  JAL       {Func:SinRad}
   98:  MOV.S     F12, F20
   9C:  MUL.S     F22, F0, F24
   A0:  NOP
   A4:  MTC1      R0, F26
   A8:  NOP
   AC:  ADD.S     F22, F22, F26
   B0:  JAL       {Func:CosRad}
   B4:  MOV.S     F12, F20
   B8:  MUL.S     F20, F0, F24
   BC:  NOP
   C0:  LIF       F24, -252.0
   C8:  LWC1      F0, B8 (S1)
   CC:  CVT.S.W   F0, F0
   D0:  SUB.S     F24, F24, F0
   D4:  LWC1      F0, B0 (S1)
   D8:  CVT.S.W   F0, F0
   DC:  SUB.S     F22, F22, F0
   E0:  DADDU     A0, S1, R0
   E4:  DADDU     A1, S2, R0
   E8:  ADD.S     F20, F20, F26
   EC:  LWC1      F0, B4 (S1)
   F0:  CVT.S.W   F0, F0
   F4:  MFC1      A2, F22
   F8:  JAL       {Func:SetFloatVariable}
   FC:  SUB.S     F20, F20, F0
  100:  DADDU     A0, S1, R0
  104:  MFC1      A2, F20
  108:  JAL       {Func:SetFloatVariable}
  10C:  DADDU     A1, S3, R0
  110:  DADDU     A0, S1, R0
  114:  MFC1      A2, F24
  118:  JAL       {Func:SetFloatVariable}
  11C:  DADDU     A1, S0, R0
  120:  LW        RA, 60 (SP)
  124:  LW        S3, 5C (SP)
  128:  LW        S2, 58 (SP)
  12C:  LW        S1, 54 (SP)
  130:  LW        S0, 50 (SP)
  134:  LDC1      F26, 80 (SP)
  138:  LDC1      F24, 78 (SP)
  13C:  LDC1      F22, 70 (SP)
  140:  LDC1      F20, 68 (SP)
  144:  ADDIU     V0, R0, 2
  148:  JR        RA
  14C:  ADDIU     SP, SP, 88

#new:Function $Function_80218220
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  JAL       8011B010
   14:  LW        A0, AC (S0)
   18:  JAL       8011AD30
   1C:  DADDU     A0, V0, R0
   20:  LWC1      F0, 98 (V0)
   24:  TRUNC.W.S F2, F0
   28:  SWC1      F2, B0 (S0)
   2C:  LWC1      F0, 9C (V0)
   30:  TRUNC.W.S F2, F0
   34:  SWC1      F2, B4 (S0)
   38:  LWC1      F0, A0 (V0)
   3C:  TRUNC.W.S F2, F0
   40:  SWC1      F2, B8 (S0)
   44:  LW        RA, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 18

PADDING: 80218278 to 80218280 (004DA858 to 004DA860)
00000000 00000000 

#new:DefenseTable $DefenseTable_80218280
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021828C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80218338
00020000 01000000 001400FF $IdleAnimations_80218438 $DefenseTable_80218280 00200010 00000000 00000000 00000000 
00800001 02000000 004800FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000 
00020001 03000000 003600FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000 
00020001 04000000 002400FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000 
00020001 05000000 001000FF 00000000 $DefenseTable_80218280 00200010 00000000 00F80000 00000000 
00120001 06000000 000000FF $IdleAnimations_80218528 $DefenseTable_80218280 00200010 00000000 00000000 00000000 

#new:Actor $Pokey
% stats
[Index]        14b 
[Level]         9`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021828C 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_80218338 
[Script]      $Script_Init_80218534 
% move effectiveness
[Escape]       70`b 
[Item]         70`b 
[AirLift]      90`b 
[Hurricane]    85`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  80`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  75`b % dx dy
[StatusIcon]   10`b  65`b % dx dy

#new:IdleAnimations $IdleAnimations_80218438
.Status:Normal    00310004
.Status:Stone     00310000
.Status:Sleep     00310025
.Status:Stop      00310000
.Status:Paralyze  00310000
.Status:Dizzy     00310021
.Status:Fear      00310021
.Status:End

#new:IdleAnimations $IdleAnimations_80218474
.Status:Normal    00310005
.Status:Stone     00310001
.Status:Sleep     00310026
.Status:Stop      00310001
.Status:Paralyze  00310001
.Status:Dizzy     00310022
.Status:Fear      00310022
.Status:End

#new:IdleAnimations $IdleAnimations_802184B0
.Status:Normal    00310006
.Status:Stone     00310002
.Status:Sleep     00310027
.Status:Stop      00310002
.Status:Paralyze  00310002
.Status:Dizzy     00310023
.Status:Fear      00310023
.Status:End

#new:IdleAnimations $IdleAnimations_802184EC
.Status:Normal    00310007
.Status:Stone     00310003
.Status:Sleep     00310028
.Status:Stop      00310003
.Status:Paralyze  00310003
.Status:Dizzy     00310024
.Status:Fear      00310024
.Status:End

#new:IdleAnimations $IdleAnimations_80218528
.Status:Normal    00310016
.Status:End

#new:Script $Script_Init_80218534
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021A018 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802186B0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802186C0 )
   3C:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   54:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   6C:  Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
   84:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   9C:  Call     SetActorVar 	( .Actor:Self 00000001 00310004 )
   B4:  Call     SetActorVar 	( .Actor:Self 00000002 00310008 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000003 0031000C )
   E4:  Call     SetActorVar 	( .Actor:Self 00000004 00310010 )
   FC:  Call     SetActorVar 	( .Actor:Self 00000005 00310011 )
  114:  Call     SetActorVar 	( .Actor:Self 00000006 00310018 )
  12C:  Call     SetActorVar 	( .Actor:Self 00000007 00310019 )
  144:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  158:  Call     UseIdleAnimation 	( .Actor:Self .True )
  16C:  Return
  174:  End

#new:Script $Script_Idle_802186B0
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_802186C0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		SetConst  *Var[0]  00000001 
   64:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   7C:  		ExecWait DoNormalHit 
   88:  	Case  ==  .Event:Hit
   94:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
   A8:  		If  *Var[0]  &  00080000 
   B8:  			SetConst  *Var[0]  00000001 
   C8:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   E0:  			ExecWait DoNormalHit 
   EC:  		Else
   F4:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  10C:  			If  *Var[A]  ==  00000003 
  11C:  				SetConst  *Var[0]  00000001 
  12C:  				Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  144:  				ExecWait DoNormalHit 
  150:  			Else
  158:  				Call     80269E80 ( *Var[0] )
  168:  				Switch  *Var[0] 
  174:  					CaseOR  ==  00000006 
  180:  					CaseOR  ==  00000007 
  18C:  					CaseOR  ==  00000009 
  198:  						ExecWait $Script_8021CCAC 
  1A4:  					EndCaseGroup
  1AC:  					Default
  1B4:  						SetConst  *Var[0]  00000001 
  1C4:  						Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  1DC:  						ExecWait DoNormalHit 
  1E8:  				EndSwitch
  1F0:  			EndIf
  1F8:  		EndIf
  200:  	Case  ==  .Event:Death
  20C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  220:  		If  *Var[0]  &  00080000 
  230:  			SetConst  *Var[0]  00000001 
  240:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  258:  			ExecWait DoNormalHit 
  264:  			Wait     0000000A 
  270:  		Else
  278:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  290:  			If  *Var[A]  ==  00000003 
  2A0:  				SetConst  *Var[0]  00000001 
  2B0:  				Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  2C8:  				ExecWait DoNormalHit 
  2D4:  				Wait     0000000A 
  2E0:  			Else
  2E8:  				Call     80269E80 ( *Var[0] )
  2F8:  				Switch  *Var[0] 
  304:  					CaseOR  ==  00000006 
  310:  					CaseOR  ==  00000007 
  31C:  					CaseOR  ==  00000009 
  328:  						ExecWait $Script_8021CCAC 
  334:  					EndCaseGroup
  33C:  					Default
  344:  						SetConst  *Var[0]  00000001 
  354:  						Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  36C:  						ExecWait DoNormalHit 
  378:  						Wait     0000000A 
  384:  				EndSwitch
  38C:  			EndIf
  394:  		EndIf
  39C:  		SetConst  *Var[0]  00000001 
  3AC:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  3C4:  		ExecWait DoDeath 
  3D0:  		Return
  3D8:  	Case  ==  .Event:BurnHit
  3E4:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  3FC:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  414:  		SetConst  *Var[0]  00000001 
  424:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  438:  		If  *Var[3]  &  00080000 
  448:  			ExecWait DoBurnHit 
  454:  		Else
  45C:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  474:  			If  *Var[A]  ==  00000003 
  484:  				ExecWait DoBurnHit 
  490:  			Else
  498:  				Call     80269E80 ( *Var[A] )
  4A8:  				Switch  *Var[A] 
  4B4:  					CaseOR  ==  00000006 
  4C0:  					CaseOR  ==  00000007 
  4CC:  					CaseOR  ==  00000009 
  4D8:  						ExecWait $Script_8021CCAC 
  4E4:  					EndCaseGroup
  4EC:  					Default
  4F4:  						ExecWait DoBurnHit 
  500:  				EndSwitch
  508:  			EndIf
  510:  		EndIf
  518:  	CaseOR  ==  .Event:BurnDeath
  524:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  53C:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
  554:  		SetConst  *Var[0]  00000001 
  564:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  578:  		If  *Var[3]  &  00080000 
  588:  			ExecWait DoBurnHit 
  594:  		Else
  59C:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  5B4:  			If  *Var[A]  ==  00000003 
  5C4:  				ExecWait DoBurnHit 
  5D0:  			Else
  5D8:  				Call     80269E80 ( *Var[A] )
  5E8:  				Switch  *Var[A] 
  5F4:  					CaseOR  ==  00000006 
  600:  					CaseOR  ==  00000007 
  60C:  					CaseOR  ==  00000009 
  618:  						ExecWait $Script_8021CCAC 
  624:  					EndCaseGroup
  62C:  					Default
  634:  						ExecWait DoBurnHit 
  640:  				EndSwitch
  648:  			EndIf
  650:  		EndIf
  658:  		SetConst  *Var[0]  00000001 
  668:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
  680:  		ExecWait DoDeath 
  68C:  		Return
  694:  	Case  ==  .Event:MultibounceHit
  6A0:  		ExecWait $Script_8021BF50 
  6AC:  	Case  ==  .Event:MultibounceDeath
  6B8:  		ExecWait $Script_8021BF50 
  6C4:  		SetConst  *Var[0]  00000001 
  6D4:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  6EC:  		ExecWait DoDeath 
  6F8:  		Return
  700:  	Case  ==  00000011
  70C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  720:  		If  *Var[3]  &  00080000 
  730:  			SetConst  *Var[0]  00000001 
  740:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  758:  			ExecWait DoNormalHit 
  764:  		Else
  76C:  			ExecWait $Script_8021CCAC 
  778:  		EndIf
  780:  	Case  ==  00000025
  78C:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  7A0:  		If  *Var[3]  &  00080000 
  7B0:  			SetConst  *Var[0]  00000001 
  7C0:  			Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  7D8:  			ExecWait DoNormalHit 
  7E4:  		Else
  7EC:  			ExecWait $Script_8021CCAC 
  7F8:  		EndIf
  800:  		SetConst  *Var[0]  00000001 
  810:  		SetConst  *Var[1]  FFFFFFFF 
  820:  		ExecWait DoDeath 
  82C:  		Return
  834:  	Case  ==  .Event:ShockHit
  840:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  85C:  		SetConst  *Var[0]  00000001 
  86C:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  884:  		ExecWait DoShockHit 
  890:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  8A8:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  8C0:  		Call     SetGoalToHome 	( .Actor:Self )
  8D0:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8EC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  900:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  914:  		ExecWait 8029C12C 
  920:  	Case  ==  .Event:ShockDeath
  92C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  948:  		SetConst  *Var[0]  00000001 
  958:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  970:  		ExecWait DoShockHit 
  97C:  		SetConst  *Var[0]  00000001 
  98C:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  9A4:  		ExecWait DoDeath 
  9B0:  		Return
  9B8:  	CaseOR  ==  00000017
  9C4:  	CaseOR  ==  .Event:Immune
  9D0:  		SetConst  *Var[0]  00000001 
  9E0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  9F8:  		ExecWait DoImmune 
  A04:  	EndCaseGroup
  A0C:  	Case  ==  .Event:SpikeTaunt
  A18:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  A30:  		Switch  *Var[0] 
  A3C:  			Case  ==  00000000 
  A48:  				Set  *Var[0]  00000000 
  A58:  				Set  *Var[1]  0000004D 
  A68:  				SetConst  *Var[2]  00310021 
  A78:  			Case  ==  00000001 
  A84:  				Set  *Var[0]  00000000 
  A94:  				Set  *Var[1]  0000003B 
  AA4:  				SetConst  *Var[2]  00310022 
  AB4:  			Case  ==  00000002 
  AC0:  				Set  *Var[0]  00000000 
  AD0:  				Set  *Var[1]  00000029 
  AE0:  				SetConst  *Var[2]  00310023 
  AF0:  			Case  ==  00000003 
  AFC:  				Set  *Var[0]  00000000 
  B0C:  				Set  *Var[1]  00000017 
  B1C:  				SetConst  *Var[2]  00310024 
  B2C:  		EndSwitch
  B34:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  B48:  		If  *Var[3]  !&  00001000 
  B58:  			Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
  B70:  		EndIf
  B78:  		Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  B94:  		Call     GetStatusFlags ( .Actor:Self *Var[6] )
  BA8:  		If  *Var[6]  &  00080000 
  BB8:  			MulF  *Var[0]  *Fixed[0.40039062] 
  BC8:  			MulF  *Var[1]  *Fixed[0.40039062] 
  BD8:  		EndIf
  BE0:  		AddF  *Var[3]  *Var[0] 
  BF0:  		AddF  *Var[4]  *Var[1] 
  C00:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[3] *Var[4] *Var[5] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C44:  		Wait     0000001E 
  C50:  	Case  ==  .Event:RecoverStatus
  C5C:  		SetConst  *Var[0]  00000001 
  C6C:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  C84:  		ExecWait DoRecover 
  C90:  	Case  ==  .Event:ScareAway
  C9C:  		ExecWait $Script_8021D184 
  CA8:  		Return
  CB0:  	Default
  CB8:  EndSwitch
  CC0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CD4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CE8:  Return
  CF0:  End

#new:Script $Script_802193B8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetGoalToTarget 	( .Actor:Self )
   84:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   9C:  Switch  *Var[0] 
   A8:  	Case  ==  00000000 
   B4:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
   C8:  		If  *Var[0]  !&  00080000 
   D8:  			Call     AddToGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
   F4:  		Else
   FC:  			Call     AddToGoalPos 	( .Actor:Self 00000018 00000000 00000000 )
  118:  		EndIf
  120:  		Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
  138:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  14C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  164:  		Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  17C:  	Case  ==  00000001 
  188:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  19C:  		If  *Var[0]  !&  00080000 
  1AC:  			Call     AddToGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
  1C8:  		Else
  1D0:  			Call     AddToGoalPos 	( .Actor:Self 00000010 00000000 00000000 )
  1EC:  		EndIf
  1F4:  		Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
  20C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  220:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  238:  		Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
  250:  	Case  ==  00000002 
  25C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  270:  		If  *Var[0]  !&  00080000 
  280:  			Call     AddToGoalPos 	( .Actor:Self 00000014 00000000 00000000 )
  29C:  		Else
  2A4:  			Call     AddToGoalPos 	( .Actor:Self 00000008 00000000 00000000 )
  2C0:  		EndIf
  2C8:  		Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
  2E0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  2F4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  30C:  		Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
  324:  EndSwitch
  32C:  Call     PlaySoundAtActor 	( .Actor:Self 00000342 )
  340:  Call     MakeLerp    	( 00000000 FFFFFFD8 00000014 0000000A )
  35C:  Label    00000000 
  368:  Call     UpdateLerp  	( )
  374:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  390:  Wait     00000001 
  39C:  If  *Var[1]  ==  00000001 
  3AC:  	Goto     00000000 
  3B8:  EndIf
  3C0:  ChildThread
  3C8:  	Wait     00000003 
  3D4:  	Call     PlaySoundAtActor 	( .Actor:Self 000002ED )
  3E8:  EndChildThread
  3F0:  Call     MakeLerp    	( FFFFFFD8 0000005A 00000005 00000001 )
  40C:  Label    00000003 
  418:  Call     UpdateLerp  	( )
  424:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  440:  Wait     00000001 
  44C:  If  *Var[1]  ==  00000001 
  45C:  	Goto     00000003 
  468:  EndIf
  470:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000000 00000020 )
  494:  Switch  *Var[0] 
  4A0:  	CaseOR  ==  00000006 
  4AC:  	CaseOR  ==  00000005 
  4B8:  		Set  *Var[A]  *Var[0] 
  4C8:  		Call     MakeLerp    	( 0000005A 00000000 00000005 00000000 )
  4E4:  		Label    00000004 
  4F0:  		Call     UpdateLerp  	( )
  4FC:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  518:  		Wait     00000001 
  524:  		If  *Var[1]  ==  00000001 
  534:  			Goto     00000004 
  540:  		EndIf
  548:  		If  *Var[A]  ==  00000005 
  558:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  57C:  		EndIf
  584:  		Call     8027D7F0 ( )
  590:  		Call     UseCamPreset 	( 00000002 )
  5A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5BC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  5D4:  		Switch  *Var[0] 
  5E0:  			Case  ==  00000000 
  5EC:  				Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
  604:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  618:  				Call     SetGoalToHome 	( .Actor:Self )
  628:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  640:  				Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  658:  			Case  ==  00000001 
  664:  				Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
  67C:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  690:  				Call     SetGoalToHome 	( .Actor:Self )
  6A0:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  6B8:  				Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
  6D0:  			Case  ==  00000002 
  6DC:  				Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
  6F4:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  708:  				Call     SetGoalToHome 	( .Actor:Self )
  718:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  730:  				Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
  748:  		EndSwitch
  750:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  768:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  77C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  790:  		Return
  798:  EndSwitch
  7A0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  7B8:  Switch  *Var[0] 
  7C4:  	Case  ==  00000000 
  7D0:  		Set  *Var[1]  00000002 
  7E0:  	Case  ==  00000001 
  7EC:  		Set  *Var[1]  00000002 
  7FC:  	Default
  804:  		Set  *Var[1]  00000002 
  814:  EndSwitch
  81C:  Call     SetGoalToTarget 	( .Actor:Self )
  82C:  Wait     00000002 
  838:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 *Var[1] 00000020 )
  860:  Switch  *Var[0] 
  86C:  	CaseOR  ==  00000000 
  878:  	CaseOR  ==  00000002 
  884:  		Call     UseCamPreset 	( 00000002 )
  894:  		Call     MakeLerp    	( 0000005A 00000000 0000000A 00000000 )
  8B0:  		Label    00000005 
  8BC:  		Call     UpdateLerp  	( )
  8C8:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  8E4:  		Wait     00000001 
  8F0:  		If  *Var[1]  ==  00000001 
  900:  			Goto     00000005 
  90C:  		EndIf
  914:  		Call     8027D7F0 ( )
  920:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  938:  		Switch  *Var[0] 
  944:  			Case  ==  00000000 
  950:  				Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
  968:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  97C:  				Call     SetGoalToHome 	( .Actor:Self )
  98C:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  9A4:  				Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  9BC:  			Case  ==  00000001 
  9C8:  				Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
  9E0:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  9F4:  				Call     SetGoalToHome 	( .Actor:Self )
  A04:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A1C:  				Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
  A34:  			Case  ==  00000002 
  A40:  				Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
  A58:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  A6C:  				Call     SetGoalToHome 	( .Actor:Self )
  A7C:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A94:  				Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
  AAC:  		EndSwitch
  AB4:  	EndCaseGroup
  ABC:  EndSwitch
  AC4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  AD8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  AEC:  Return
  AF4:  End

#new:Script $Script_80219EB4
    0:  Set  *Var[9]  00000000 
   10:  Call     CreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	Case  ==  00000014 
   78:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   8C:  		If  *Var[3]  !&  003DD000 
   9C:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[3] )
   B4:  			If  *Var[3]  ==  00000000 
   C4:  				Call     GetActorVar 	( *Var[0] 0000000A *Var[3] )
   DC:  				If  *Var[3]  !=  00000002 
   EC:  					Add  *Var[9]  00000001 
   FC:  				EndIf
  104:  			EndIf
  10C:  		EndIf
  114:  EndSwitch
  11C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  130:  If  *Var[0]  !=  FFFFFFFF 
  140:  	Goto     00000000 
  14C:  EndIf
  154:  Return
  15C:  End

#new:Script $Script_TakeTurn_8021A018
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   18:  If  *Var[A]  ==  00000003 
   28:  	ExecWait $Script_8021B590 
   34:  	Return
   3C:  EndIf
   44:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   5C:  If  *Var[0]  ==  00000000 
   6C:  	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
   84:  	If  *Var[0]  ==  00000002 
   94:  		Goto     0000007B 
   A0:  	EndIf
   A8:  	ExecWait $Script_8021AB44 
   B4:  	If  *Var[E]  ==  FFFFFFFF 
   C4:  		Goto     0000007B 
   D0:  	EndIf
   D8:  	ExecWait $Script_80219EB4 
   E4:  	Switch  *Var[9] 
   F0:  		Case  ==  00000001 
   FC:  			Call     RandInt     	( 000003E8 *Var[0] )
  110:  			If  *Var[0]  <  00000190 
  120:  				ExecWait $Script_8021AE2C 
  12C:  				Return
  134:  			EndIf
  13C:  		Case  ==  00000002 
  148:  			Call     RandInt     	( 000003E8 *Var[0] )
  15C:  			If  *Var[0]  <  000000C8 
  16C:  				ExecWait $Script_8021AE2C 
  178:  				Return
  180:  			EndIf
  188:  		Case  ==  00000003 
  194:  			Call     RandInt     	( 000003E8 *Var[0] )
  1A8:  			If  *Var[0]  <  00000064 
  1B8:  				ExecWait $Script_8021AE2C 
  1C4:  				Return
  1CC:  			EndIf
  1D4:  	EndSwitch
  1DC:  EndIf
  1E4:  Label    0000007B 
  1F0:  Call     RandInt     	( 000003E8 *Var[0] )
  204:  If  *Var[0]  <  000001F4 
  214:  	ExecWait $Script_802193B8 
  220:  	Return
  228:  EndIf
  230:  Call     UseIdleAnimation 	( .Actor:Self .False )
  244:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  258:  Call     GetBattlePhase ( *Var[0] )
  268:  If  *Var[0]  ==  .Phase:FirstStrike
  278:  	Call     UseCamPreset 	( 00000002 )
  288:  	Call     MoveCamOver 	( 00000001 )
  298:  EndIf
  2A0:  Call     8026FA00 ( FFFFFF81 00000006 00000002 00000000 00000000 )
  2C0:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  2D4:  If  *Var[0]  !&  00080000 
  2E4:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  304:  Else
  30C:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
  32C:  EndIf
  334:  ChildThread
  33C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
  358:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  394:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[2.2001953] )
  3AC:  	Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
  3C4:  	Call     GetStatusFlags ( .Actor:Self *Var[5] )
  3D8:  	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  3F0:  	Switch  *Var[A] 
  3FC:  		Case  ==  00000000 
  408:  			If  *Var[5]  !&  00080000 
  418:  				Add  *Var[1]  00000026 
  428:  			Else
  430:  				Add  *Var[1]  0000000F 
  440:  				Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
  458:  			EndIf
  460:  			Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
  488:  		Case  ==  00000001 
  494:  			If  *Var[5]  !&  00080000 
  4A4:  				Add  *Var[1]  00000014 
  4B4:  			Else
  4BC:  				Add  *Var[1]  00000008 
  4CC:  				Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
  4E4:  			EndIf
  4EC:  			Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
  514:  		Case  ==  00000002 
  520:  			If  *Var[5]  !&  00080000 
  530:  				Add  *Var[1]  00000008 
  540:  			Else
  548:  				Add  *Var[1]  00000003 
  558:  				Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
  570:  			EndIf
  578:  			Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
  5A0:  		Case  ==  00000003 
  5AC:  	EndSwitch
  5B4:  EndChildThread
  5BC:  Call     PlaySoundAtActor 	( .Actor:Self 00000342 )
  5D0:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  5E8:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  600:  Wait     0000000C 
  60C:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
  624:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  63C:  Wait     00000001 
  648:  Call     PlaySoundAtActor 	( .Actor:Self 000002CE )
  65C:  Wait     00000003 
  668:  ExecWait $Script_8021C07C 
  674:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  688:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000020 )
  6AC:  Switch  *Var[0] 
  6B8:  	CaseOR  ==  00000006 
  6C4:  	CaseOR  ==  00000005 
  6D0:  		If  *Var[0]  ==  00000005 
  6E0:  			ChildThread
  6E8:  				Wait     00000005 
  6F4:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  718:  			EndChildThread
  720:  		EndIf
  728:  		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  73C:  		Call     SetGoalToTarget 	( .Actor:Self )
  74C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  768:  		Sub  *Var[0]  00000050 
  778:  		Sub  *Var[1]  00000005 
  788:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
  7A0:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  7B8:  		Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
  7D0:  		Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
  7F8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  814:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  82C:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  844:  		Return
  84C:  	EndCaseGroup
  854:  EndSwitch
  85C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  870:  Call     SetGoalToTarget 	( .Actor:Self )
  880:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  89C:  Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
  8B4:  Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  8CC:  Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
  8E4:  Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
  90C:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80020300 00000002 00000020 )
  934:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
  94C:  Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  964:  Switch  *Var[0] 
  970:  	CaseOR  ==  00000000 
  97C:  	CaseOR  ==  00000002 
  988:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  9A4:  		Sub  *Var[0]  00000037 
  9B4:  		Set  *Var[1]  00000000 
  9C4:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
  9DC:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  9F4:  		Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
  A20:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[4.0] )
  A38:  		Sub  *Var[0]  00000018 
  A48:  		Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
  A74:  		Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
  A8C:  		Sub  *Var[0]  00000014 
  A9C:  		Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
  AC8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  AE4:  	EndCaseGroup
  AEC:  EndSwitch
  AF4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B08:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B1C:  Return
  B24:  End

#new:Script $Script_8021AB44
    0:  Set  *Var[E]  FFFFFFFF 
   10:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   24:  If  *Var[0]  &  00080000 
   34:  	Return
   3C:  EndIf
   44:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   5C:  If  *Var[0]  !=  00000000 
   6C:  	Return
   74:  EndIf
   7C:  Set  *Flag[01]  00000000 
   8C:  Set  *Flag[02]  00000000 
   9C:  Set  *Flag[03]  00000000 
   AC:  Set  *Flag[04]  00000000 
   BC:  Call     CreateTargetList 	( 00008002 )
   CC:  Call     InitTargetIterator 	( )
   D8:  Label    00000000 
   E4:  Call     GetOwnerTarget ( *Var[0] *Var[5] )
   F8:  Call     GetIndexFromHome 	( *Var[0] *Var[5] )
  10C:  Mod  *Var[5]  00000004 
  11C:  Switch  *Var[5] 
  128:  	Case  ==  00000000 
  134:  		Set  *Flag[01]  00000001 
  144:  	Case  ==  00000001 
  150:  		Set  *Flag[02]  00000001 
  160:  	Case  ==  00000002 
  16C:  		Set  *Flag[03]  00000001 
  17C:  	Case  ==  00000003 
  188:  		Set  *Flag[04]  00000001 
  198:  EndSwitch
  1A0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1B4:  If  *Var[0]  !=  FFFFFFFF 
  1C4:  	Goto     00000000 
  1D0:  EndIf
  1D8:  Call     GetIndexFromHome 	( .Actor:Self *Var[1] )
  1EC:  Switch  *Var[1] 
  1F8:  	Case  ==  00000000 
  204:  		Return
  20C:  	Case  ==  00000001 
  218:  		If  *Flag[01]  ==  00000000 
  228:  			Set  *Var[E]  00000000 
  238:  		EndIf
  240:  	Case  ==  00000002 
  24C:  		If  *Flag[02]  ==  00000000 
  25C:  			Set  *Var[E]  00000001 
  26C:  		EndIf
  274:  	Case  ==  00000003 
  280:  		If  *Flag[03]  ==  00000000 
  290:  			Set  *Var[E]  00000002 
  2A0:  		EndIf
  2A8:  EndSwitch
  2B0:  Return
  2B8:  End

#new:Vector3D $Vector3D_8021AE04
400` -100` 0`

#new:SpecialFormation $SpecialFormation_8021AE10
$Pokey $Vector3D_8021AE04 00000064 00000000 00000000 00000000 00000000 

#new:Script $Script_8021AE2C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000000E )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     MoveCamOver 	( 0000001E )
   6C:  Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
   84:  Call     MakeLerp    	( 00000000 FFFFFFEC 00000014 0000000A )
   A0:  Label    00000000 
   AC:  Call     UpdateLerp  	( )
   B8:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   D4:  Wait     00000001 
   E0:  If  *Var[1]  ==  00000001 
   F0:  	Goto     00000000 
   FC:  EndIf
  104:  ChildThread
  10C:  	Wait     00000008 
  118:  	Call     PlaySoundAtActor 	( .Actor:Self 00000344 )
  12C:  EndChildThread
  134:  Call     MakeLerp    	( FFFFFFEC 0000001E 00000014 0000000A )
  150:  Label    00000001 
  15C:  Call     UpdateLerp  	( )
  168:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  184:  Wait     00000001 
  190:  If  *Var[1]  ==  00000001 
  1A0:  	Goto     00000001 
  1AC:  EndIf
  1B4:  ChildThread
  1BC:  	Wait     00000006 
  1C8:  	Call     PlaySoundAtActor 	( .Actor:Self 00000345 )
  1DC:  EndChildThread
  1E4:  Call     MakeLerp    	( 0000001E FFFFFFD8 00000014 0000000A )
  200:  Label    00000002 
  20C:  Call     UpdateLerp  	( )
  218:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  234:  Wait     00000001 
  240:  If  *Var[1]  ==  00000001 
  250:  	Goto     00000002 
  25C:  EndIf
  264:  ChildThread
  26C:  	Wait     00000004 
  278:  	Call     PlaySoundAtActor 	( .Actor:Self 000002EE )
  28C:  EndChildThread
  294:  Call     MakeLerp    	( FFFFFFD8 0000005A 0000000A 0000000A )
  2B0:  Label    00000003 
  2BC:  Call     UpdateLerp  	( )
  2C8:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2E4:  Wait     00000001 
  2F0:  If  *Var[1]  ==  00000001 
  300:  	Goto     00000003 
  30C:  EndIf
  314:  Wait     00000014 
  320:  Call     PlaySoundAtActor 	( .Actor:Self 00000346 )
  334:  Call     80254218 ( 00000009 )
  344:  Thread
  34C:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.0] )
  368:  EndThread
  370:  Call     SummonEnemy 	( $SpecialFormation_8021AE10 00000000 )
  384:  Set  *Var[B]  *Var[0] 
  394:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B0:  Sub  *Var[0]  00000028 
  3C0:  Sub  *Var[1]  00000050 
  3D0:  Call     SetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  3EC:  ChildThread
  3F4:  	Call     PlayEffect  	( {FX:ShockWave:Sand} *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  438:  	Call     UseIdleAnimation 	( *Var[B] .False )
  44C:  	Call     SetAnimation 	( *Var[B] 00000001 0031000C )
  464:  	Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  480:  	Call     SetActorJumpscale 	( *Var[B] *Fixed[1.2001953] )
  494:  	Call     SetGoalToPos 	( *Var[B] *Var[0] 00000000 *Var[2] )
  4B0:  	Call     JumpToGoal  	( *Var[B] 00000014 00000000 00000001 00000000 )
  4D0:  	Wait     00000014 
  4DC:  	Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  4F8:  	Call     SetAnimation 	( *Var[B] 00000001 00310004 )
  510:  	Call     SetHomePos  	( *Var[B] *Var[0] *Var[1] *Var[2] )
  52C:  	Call     HPBarToHome 	( *Var[B] )
  53C:  	Call     UseIdleAnimation 	( *Var[B] .True )
  550:  EndChildThread
  558:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[1] )
  570:  Switch  *Var[1] 
  57C:  	Case  ==  00000000 
  588:  		Call     SetActorVar 	( *Var[B] 0000000A 00000001 )
  5A0:  	Case  ==  00000001 
  5AC:  		Call     SetActorVar 	( *Var[B] 0000000A 00000002 )
  5C4:  EndSwitch
  5CC:  Call     UseCamPreset 	( 00000002 )
  5DC:  Call     MoveCamOver 	( 00000014 )
  5EC:  Set  *Var[A]  *Var[0] 
  5FC:  Call     MakeLerp    	( 0000005A FFFFFFE2 00000007 00000004 )
  618:  Label    00000004 
  624:  Call     UpdateLerp  	( )
  630:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  64C:  Wait     00000001 
  658:  If  *Var[1]  ==  00000001 
  668:  	Goto     00000004 
  674:  EndIf
  67C:  Wait     00000014 
  688:  Call     MakeLerp    	( FFFFFFE2 00000000 0000000A 0000000A )
  6A4:  Label    00000005 
  6B0:  Call     UpdateLerp  	( )
  6BC:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  6D8:  Wait     00000001 
  6E4:  If  *Var[1]  ==  00000001 
  6F4:  	Goto     00000005 
  700:  EndIf
  708:  Wait     00000014 
  714:  Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
  72C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  740:  Call     UseIdleAnimation 	( .Actor:Self .True )
  754:  Return
  75C:  End

#new:Script $Script_8021B590
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8026F740 ( FFFFFF81 00000000 000002EC 000002EC )
   44:  Call     8026F740 ( FFFFFF81 00000002 000002EC 00000000 )
   60:  Call     UseCamPreset 	( 0000003F )
   70:  Call     CamTargetActor ( .Actor:Self )
   80:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   98:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   AC:  Call     SetGoalToTarget 	( .Actor:Self )
   BC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D8:  Add  *Var[0]  00000032 
   E8:  Set  *Var[1]  00000000 
   F8:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  10C:  Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  124:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  138:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  14C:  ExecWait 8029C12C 
  158:  Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  170:  Wait     00000004 
  17C:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  198:  Wait     00000001 
  1A4:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  1C0:  Wait     00000004 
  1CC:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  1E8:  Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  200:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
  224:  Switch  *Var[0] 
  230:  	CaseOR  ==  00000006 
  23C:  	CaseOR  ==  00000005 
  248:  		Set  *Var[A]  *Var[0] 
  258:  		Call     SetGoalToTarget 	( .Actor:Self )
  268:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  284:  		Sub  *Var[0]  00000005 
  294:  		Set  *Var[1]  0000000A 
  2A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
  2D4:  		ChildThread
  2DC:  			Wait     00000002 
  2E8:  			Set  *Var[0]  00000000 
  2F8:  			Loop     00000005 
  304:  				Add  *Var[0]  0000001E 
  314:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  330:  				Wait     00000001 
  33C:  			EndLoop
  344:  		EndChildThread
  34C:  		Call     JumpToGoal  	( .Actor:Self 00000016 00000000 00000001 00000000 )
  36C:  		If  *Var[A]  ==  00000005 
  37C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3A0:  		EndIf
  3A8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  3C4:  		ChildThread
  3CC:  			Wait     00000002 
  3D8:  			Set  *Var[0]  000000B4 
  3E8:  			Loop     00000006 
  3F4:  				Add  *Var[0]  0000001E 
  404:  				If  *Var[0]  ==  00000168 
  414:  					Set  *Var[0]  00000000 
  424:  				EndIf
  42C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  448:  				Wait     00000001 
  454:  			EndLoop
  45C:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  478:  		EndChildThread
  480:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  494:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4B0:  		Sub  *Var[0]  0000001E 
  4C0:  		Set  *Var[1]  00000000 
  4D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4EC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  50C:  		Wait     0000000F 
  518:  		Call     UseCamPreset 	( 00000002 )
  528:  		Call     8027D7F0 ( )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Call     SetGoalToHome 	( .Actor:Self )
  560:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  590:  		Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  5A8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  5BC:  		ExecWait 8029C12C 
  5C8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5E0:  		Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  5F8:  		Return
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call     SetGoalToTarget 	( .Actor:Self )
  620:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
  634:  ChildThread
  63C:  	Wait     00000002 
  648:  	Set  *Var[0]  00000000 
  658:  	Loop     00000005 
  664:  		Add  *Var[0]  0000001E 
  674:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  690:  		Wait     00000001 
  69C:  	EndLoop
  6A4:  EndChildThread
  6AC:  Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 00000002 00000020 )
  700:  Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  718:  Switch  *Var[0] 
  724:  	CaseOR  ==  00000000 
  730:  	CaseOR  ==  00000002 
  73C:  		Call     UseCamPreset 	( 00000002 )
  74C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  768:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  784:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7A0:  		Add  *Var[0]  00000028 
  7B0:  		Set  *Var[1]  00000000 
  7C0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  7D4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  810:  		Add  *Var[0]  0000001E 
  820:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  83C:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  85C:  		Add  *Var[0]  00000014 
  86C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  888:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  8A8:  		Sub  *Var[0]  0000000A 
  8B8:  		Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  8D8:  		Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  8F0:  		Call     SetGoalToHome 	( .Actor:Self )
  900:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  91C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  930:  		Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
  948:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  95C:  		ExecWait 8029C12C 
  968:  		Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
  980:  EndSwitch
  988:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  99C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  9B0:  Return
  9B8:  End

#new:Script $Script_8021BF50
    0:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   14:  If  *Var[A]  &  00080000 
   24:  	SetConst  *Var[0]  00000001 
   34:  	Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   4C:  	ExecWait 8029B998 
   58:  	Return
   60:  EndIf
   68:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   80:  Switch  *Var[A] 
   8C:  	Case  ==  00000000 
   98:  		ExecWait $Script_8021C860 
   A4:  	Case  ==  00000001 
   B0:  		ExecWait $Script_8021C860 
   BC:  	Case  ==  00000002 
   C8:  		ExecWait $Script_8021C860 
   D4:  	Case  ==  00000003 
   E0:  		SetConst  *Var[0]  00000001 
   F0:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  108:  		ExecWait 8029B998 
  114:  EndSwitch
  11C:  Return
  124:  End

#new:Script $Script_8021C07C
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   18:  Switch  *Var[A] 
   24:  	Case  ==  00000000 
   30:  		Call     SetActorVar 	( .Actor:Self 00000001 00310005 )
   48:  		Call     SetActorVar 	( .Actor:Self 00000002 00310009 )
   60:  		Call     SetActorVar 	( .Actor:Self 00000003 0031000D )
   78:  		Call     SetActorVar 	( .Actor:Self 00000004 00310012 )
   90:  		Call     SetActorVar 	( .Actor:Self 00000005 00310013 )
   A8:  		Call     SetActorVar 	( .Actor:Self 00000006 0031001A )
   C0:  		Call     SetActorVar 	( .Actor:Self 00000007 0031001B )
   D8:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218474 )
   F0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  10C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
  128:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .False )
  144:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .True )
  160:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  178:  		Call     8027D810 ( FFFFFF81 0000003E *Unknown[0] )
  190:  		Call     8027D970 ( FFFFFF81 00000001 0000003E *Unknown[0] )
  1AC:  		Call     $Function_80218000 ( FFFFFFF1 00000037 0000000A 0000002D )
  1C8:  	Case  ==  00000001 
  1D4:  		Call     SetActorVar 	( .Actor:Self 00000001 00310006 )
  1EC:  		Call     SetActorVar 	( .Actor:Self 00000002 0031000A )
  204:  		Call     SetActorVar 	( .Actor:Self 00000003 0031000E )
  21C:  		Call     SetActorVar 	( .Actor:Self 00000004 00310014 )
  234:  		Call     SetActorVar 	( .Actor:Self 00000005 00310015 )
  24C:  		Call     SetActorVar 	( .Actor:Self 00000006 0031001C )
  264:  		Call     SetActorVar 	( .Actor:Self 00000007 0031001D )
  27C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802184B0 )
  294:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .False )
  2B0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .True )
  2CC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .False )
  2E8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .True )
  304:  		Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
  31C:  		Call     8027D810 ( FFFFFF81 0000002C *Unknown[0] )
  334:  		Call     8027D970 ( FFFFFF81 00000001 0000002C *Unknown[0] )
  350:  		Call     $Function_80218000 ( FFFFFFF1 00000023 0000000A 00000019 )
  36C:  	Case  ==  00000002 
  378:  		Call     SetActorVar 	( .Actor:Self 00000001 00310007 )
  390:  		Call     SetActorVar 	( .Actor:Self 00000002 0031000B )
  3A8:  		Call     SetActorVar 	( .Actor:Self 00000003 0031000F )
  3C0:  		Call     SetActorVar 	( .Actor:Self 00000006 0031001E )
  3D8:  		Call     SetActorVar 	( .Actor:Self 00000007 0031001F )
  3F0:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802184EC )
  408:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .False )
  424:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .True )
  440:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00020000 .False )
  45C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00800000 .True )
  478:  		Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
  490:  		Call     8027D810 ( FFFFFF81 0000001A *Unknown[0] )
  4A8:  		Call     8027D970 ( FFFFFF81 00000001 0000001A *Unknown[0] )
  4C4:  		Call     $Function_80218000 ( FFFFFFF1 0000000F 0000000A 00000005 )
  4E0:  EndSwitch
  4E8:  Return
  4F0:  End

#new:Script $Script_8021C574
    0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   1C:  Add  *Var[1]  00000012 
   2C:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   48:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   64:  Set  *Var[3]  *Var[1] 
   74:  Wait     00000002 
   80:  Sub  *Var[3]  00000001 
   90:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
   AC:  Wait     00000003 
   B8:  Sub  *Var[3]  00000002 
   C8:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
   E4:  Wait     00000002 
   F0:  Sub  *Var[3]  00000003 
  100:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  11C:  Wait     00000001 
  128:  Sub  *Var[3]  00000005 
  138:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  154:  Wait     00000001 
  160:  Sub  *Var[3]  00000007 
  170:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  18C:  Wait     00000001 
  198:  Add  *Var[3]  00000002 
  1A8:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  1C4:  Wait     00000001 
  1D0:  Add  *Var[3]  00000003 
  1E0:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  1FC:  Wait     00000001 
  208:  Add  *Var[3]  00000003 
  218:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  234:  Wait     00000001 
  240:  Sub  *Var[3]  00000003 
  250:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  26C:  Wait     00000001 
  278:  Sub  *Var[3]  00000003 
  288:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  2A4:  Wait     00000001 
  2B0:  Sub  *Var[3]  00000002 
  2C0:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
  2DC:  Return
  2E4:  End

#new:Script $Script_8021C860
    0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   1C:  Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
   3C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
   58:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   6C:  If  *Var[0]  !&  00080000 
   7C:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   9C:  Else
   A4:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
   C4:  EndIf
   CC:  ExecWait $Script_8021C07C 
   D8:  SetConst  *Var[0]  00000001 
   E8:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  100:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
  118:  ChildThread
  120:  	Wait     00000004 
  12C:  	ExecWait $Script_8021C574 
  138:  EndChildThread
  140:  Call     CreateTargetList 	( 00018004 )
  150:  Call     InitTargetIterator 	( )
  15C:  Label    00000000 
  168:  Call     GetOwnerID  	( *Var[1] )
  178:  Call     GetOwnerTarget ( *Var[0] *Var[9] )
  18C:  If  *Var[1]  !=  *Var[0] 
  19C:  	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1B0:  	Goto     00000000 
  1BC:  EndIf
  1C4:  Label    00000001 
  1D0:  Add  *Var[F]  00000001 
  1E0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1F4:  If  *Var[0]  ==  FFFFFFFF 
  204:  	Goto     0000000A 
  210:  EndIf
  218:  Call     GetOwnerTarget ( *Var[0] *Var[9] )
  22C:  Call     GetActorFlags 	( *Var[0] *Var[1] )
  240:  If  *Var[1]  &  00004000 
  250:  	Goto     00000001 
  25C:  EndIf
  264:  Call     GetOwnerID  	( *Var[0] )
  274:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  288:  Call     SetGoalToTarget 	( .Actor:Self )
  298:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B4:  Set  *Var[1]  00000000 
  2C4:  Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  2DC:  Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[7.0] )
  2F4:  Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
  31C:  ChildThread
  324:  	Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
  340:  EndChildThread
  348:  Call     SetGoalToTarget 	( .Actor:Self )
  358:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  36C:  Call     8027D1BC ( *Var[0] 00000001 00000011 )
  384:  Goto     00000001 
  390:  Label    0000000A 
  39C:  Call     UseCamPreset 	( 00000003 )
  3AC:  Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
  3C4:  Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
  3DC:  Call     JumpSpriteA 	( .Actor:Self 00000006 00000128 00000000 00000000 00000000 .True )
  404:  Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
  420:  Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  43C:  Return
  444:  End

#new:Script $Script_8021CCAC
    0:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   14:  If  *Var[0]  !&  00080000 
   24:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Else
   4C:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
   6C:  EndIf
   74:  ExecWait $Script_8021C07C 
   80:  SetConst  *Var[0]  00000001 
   90:  Call     GetEventType 	( .Actor:Self *Var[1] )
   A4:  Switch  *Var[1] 
   B0:  	CaseOR  ==  .Event:BurnHit
   BC:  	CaseOR  ==  .Event:BurnDeath
   C8:  		Call     SetAnimation 	( .Actor:Self 00000006 00310020 )
   E0:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
   F8:  	EndCaseGroup
  100:  	Default
  108:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
  120:  EndSwitch
  128:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
  140:  ChildThread
  148:  	Wait     00000004 
  154:  	ExecWait $Script_8021C574 
  160:  EndChildThread
  168:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  180:  If  *Var[A]  !=  00000003 
  190:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1AC:  	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  1CC:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
  1E8:  	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
  200:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  21C:  	Add  *Var[0]  0000001E 
  22C:  	Set  *Var[1]  00000000 
  23C:  	Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000A 00000012 .Easing:Linear )
  268:  	Add  *Var[0]  00000014 
  278:  	Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000008 0000000A .Easing:Linear )
  2A4:  	Loop     00000014 
  2B0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  2CC:  		Wait     00000001 
  2D8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
  2F4:  		Wait     00000001 
  300:  	EndLoop
  308:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
  324:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  340:  Else
  348:  	Wait     0000001E 
  354:  EndIf
  35C:  Call     GetEventType 	( .Actor:Self *Var[0] )
  370:  Switch  *Var[0] 
  37C:  	Case  ==  .Event:BurnHit
  388:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  3B8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3D4:  		Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  3EC:  		Div  *Var[3]  00000002 
  3FC:  		Add  *Var[1]  *Var[3] 
  40C:  		Add  *Var[2]  00000005 
  41C:  		DivF  *Var[3]  *Fixed[10.0] 
  42C:  		Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  470:  	Case  ==  .Event:BurnDeath
  47C:  		Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
  494:  		Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
  4AC:  		Wait     0000000A 
  4B8:  	Default
  4C0:  EndSwitch
  4C8:  Return
  4D0:  End

#new:Script $Script_8021D184
    0:  SetConst  *Var[0]  00000001 
   10:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
   28:  Call     UseCamPreset 	( 00000002 )
   38:  Call     GetActorFlags 	( .Actor:Self *Var[9] )
   4C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.05078125] )
   60:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   7C:  Set  *Var[D]  *Var[B] 
   8C:  Add  *Var[D]  00000028 
   9C:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[D] *Var[C] )
   B8:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
   D8:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   F0:  Wait     00000014 
   FC:  Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  118:  Call     80279BEC ( FFFFFF81 0000000A )
  12C:  Wait     00000014 
  138:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  14C:  Wait     00000005 
  158:  Call     SetActorVar 	( .Actor:Self 00000000 *Var[2] )
  170:  Switch  *Var[2] 
  17C:  	Case  ==  00000000 
  188:  		Set  *Var[2]  00000060 
  198:  		Set  *Var[6]  00000004 
  1A8:  	Case  ==  00000001 
  1B4:  		Set  *Var[2]  00000048 
  1C4:  		Set  *Var[6]  00000003 
  1D4:  	Case  ==  00000002 
  1E0:  		Set  *Var[2]  00000030 
  1F0:  		Set  *Var[6]  00000002 
  200:  	Default
  208:  		Set  *Var[2]  00000018 
  218:  		Set  *Var[6]  00000001 
  228:  EndSwitch
  230:  ChildThread
  238:  	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  254:  	Loop     *Var[6] 
  260:  		Call     PlayEffect  	( {FX:ShockWave:Sand} *Var[A] 00000000 *Var[C] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2A4:  		Wait     0000000A 
  2B0:  	EndLoop
  2B8:  EndChildThread
  2C0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  2D4:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2F0:  Sub  *Var[4]  *Var[2] 
  300:  Call     SetGoalToPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  31C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  338:  Wait     00000008 
  344:  Call     8027D32C ( FFFFFF81 )
  354:  Call     UseIdleAnimation 	( .Actor:Self .False )
  368:  Call     RemoveActor 	( .Actor:Self )
  378:  Return
  380:  End

PADDING: 8021D50C to 8021D510 (004DFAEC to 004DFAF0)
00000000 

#new:IdleAnimations $IdleAnimations_8021D510
.Status:Normal    00320001
.Status:Stone     00320000
.Status:Sleep     00320010
.Status:Poison    00320001
.Status:Stop      00320000
.Status:Static    00320001
.Status:Paralyze  00320000
.Status:Dizzy     00320011
.Status:Fear      00320011
.Status:End

#new:IdleAnimations $IdleAnimations_8021D55C
.Status:Normal    00320002
.Status:Stone     00320004
.Status:Sleep     00320010
.Status:Poison    00320002
.Status:Stop      00320004
.Status:Static    00320002
.Status:Paralyze  00320004
.Status:Dizzy     00320011
.Status:Fear      00320011
.Status:End

#new:IdleAnimations $IdleAnimations_8021D5A8
.Status:Normal    00320014
.Status:End

#new:DefenseTable $DefenseTable_8021D5B4
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021D5C0
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     20`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear       50`
.Status:Static     30`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021D66C
00800000 01000000 FE1C00FF $IdleAnimations_8021D510 $DefenseTable_8021D5B4 00000000 00000000 00F40000 00000000 
00020001 02001E00 000000FF $IdleAnimations_8021D5A8 $DefenseTable_8021D5B4 00000000 00000000 00000000 00000000 

#new:SpriteTable $SpriteTable_8021D6B4
00020000 02000000 000000FF $IdleAnimations_8021D5A8 $DefenseTable_8021D5B4 00000000 00000000 00000000 00000000 

#new:Actor $BanditA
% stats
[Index]        13b 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D5C0 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8021D66C 
[Script]      $Script_Init_8021D750 
% move effectiveness
[Escape]       40`b 
[Item]         90`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  25`b % dx dy
[StatusIcon]   10`b  25`b % dx dy

#new:Actor $BanditB
% stats
[Index]        13b 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00600000 
[StatusTable] $StatusTable_8021D5C0 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021D6B4 
[Script]      $Script_Init_8021D7C4 
% move effectiveness
[Escape]       40`b 
[Item]         90`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  25`b % dx dy
[StatusIcon]   10`b  25`b % dx dy

#new:Vector3D $Vector3D_8021D728
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021D734
$BanditB $Vector3D_8021D728 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_8021D750
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021E900 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021D810 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021DF88 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_HandleEvent_8021D7B4
    0:  Return
    8:  End

#new:Script $Script_Init_8021D7C4
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_HandleEvent_8021D7B4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_HandleEvent_8021D7B4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D7B4 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021D810
    0:  Return
    8:  End

#new:Script $Script_8021D820
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  	Case  ==  00000001 
   3C:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D510 )
   6C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00100000 .False )
   88:  		Call     SummonEnemy 	( $SpecialFormation_8021D734 00000000 )
   9C:  		Set  *Var[A]  *Var[0] 
   AC:  		Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[1] *Var[2] *Var[3] )
   CC:  		Call     SetActorPos 	( *Var[A] *Var[1] *Var[2] *Var[3] )
   E8:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  104:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  11C:  		Call     SetActorVar 	( *Var[A] 00000001 *Var[0] )
  134:  		Call     SetActorJumpscale 	( *Var[A] *Fixed[1.0] )
  148:  		Call     RandInt     	( 00000168 *Var[0] )
  15C:  		Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
  178:  		Add  *Var[2]  0000001E 
  188:  		Call     SetActorPos 	( *Var[A] *Var[1] *Var[2] *Var[3] )
  1A4:  		Call     8026F740 ( *Var[A] 00000002 00000000 00000000 )
  1C0:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[40.0] *Var[0] )
  1DC:  		Call     SetGoalToPos 	( *Var[A] *Var[1] 00000000 *Var[3] )
  1F8:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000001 00000000 )
  218:  		Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  22C:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[0] )
  248:  		Call     SetGoalToPos 	( *Var[A] *Var[1] 00000000 *Var[3] )
  264:  		Call     JumpToGoal  	( *Var[A] 0000000A 00000000 00000001 00000000 )
  284:  		Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  298:  		Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[10.0] *Var[0] )
  2B4:  		Call     SetGoalToPos 	( *Var[A] *Var[1] 00000000 *Var[3] )
  2D0:  		Call     JumpToGoal  	( *Var[A] 00000005 00000000 00000001 00000000 )
  2F0:  		Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  304:  		Loop     
  310:  			Call     GetBattleFlags ( *Var[1] )
  320:  			If  *Var[1]  &  00080000 
  330:  				BreakLoop
  338:  			EndIf
  340:  			If  *Var[1]  !&  00000100 
  350:  				BreakLoop
  358:  			EndIf
  360:  			Wait     00000001 
  36C:  		EndLoop
  374:  		Wait     0000000F 
  380:  		Call     SetActorJumpscale 	( *Var[A] *Fixed[1.0] )
  394:  		Call     SetActorSpeed 	( *Var[A] *Fixed[6.0] )
  3A8:  		Set  *Var[0]  FFFFFFBA 
  3B8:  		Set  *Var[1]  00000000 
  3C8:  		Set  *Var[2]  0000000A 
  3D8:  		Label    00000005 
  3E4:  		Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  400:  		If  *Var[3]  ==  *Var[0] 
  410:  			Goto     0000000A 
  41C:  		EndIf
  424:  		If  *Var[3]  <  *Var[0] 
  434:  			Set  *Var[4]  *Var[0] 
  444:  			Sub  *Var[4]  *Var[3] 
  454:  			If  *Var[4]  <  0000001E 
  464:  				Call     SetGoalToPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  480:  				Call     JumpToGoal  	( *Var[A] 00000005 00000000 00000001 00000000 )
  4A0:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  4B4:  			Else
  4BC:  				Set  *Var[4]  *Var[3] 
  4CC:  				Add  *Var[3]  0000001E 
  4DC:  				Call     SetGoalToPos 	( *Var[A] *Var[3] *Var[1] *Var[2] )
  4F8:  				Call     JumpToGoal  	( *Var[A] 00000000 00000000 00000001 00000000 )
  518:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  52C:  			EndIf
  534:  		Else
  53C:  			Set  *Var[4]  *Var[3] 
  54C:  			Sub  *Var[4]  *Var[0] 
  55C:  			If  *Var[4]  <  0000001E 
  56C:  				Call     SetGoalToPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  588:  				Call     JumpToGoal  	( *Var[A] 00000005 00000000 00000001 00000000 )
  5A8:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  5BC:  			Else
  5C4:  				Sub  *Var[3]  0000001E 
  5D4:  				Call     SetGoalToPos 	( *Var[A] *Var[3] *Var[1] *Var[2] )
  5F0:  				Call     JumpToGoal  	( *Var[A] 00000000 00000000 00000001 00000000 )
  610:  				Call     PlaySoundAtActor 	( *Var[A] 00000212 )
  624:  			EndIf
  62C:  		EndIf
  634:  		Goto     00000005 
  640:  		Label    0000000A 
  64C:  		Call     EnableActorBlur 	( *Var[A] 00000001 )
  660:  		Call     SetTargetActor ( *Var[A] .Actor:Player )
  674:  		Call     SetGoalToTarget 	( *Var[A] )
  684:  		Call     JumpToGoal  	( *Var[A] 0000000F 00000000 00000000 00000000 )
  6A4:  		Call     GetGoalPos  	( *Var[A] *Var[0] *Var[1] *Var[2] )
  6C0:  		Call     PlayEffect  	( {FX:SmallGoldSparkle} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  704:  		Call     PlaySoundAtActor 	( *Var[A] 00000211 )
  718:  		Call     GetActorVar 	( *Var[A] 00000001 *Var[0] )
  730:  		Call     AddCoin     	( *Var[0] )
  740:  		Call     RemoveActor 	( *Var[A] )
  750:  EndSwitch
  758:  Return
  760:  End

#new:Script $Script_HandleEvent_8021DF88
    0:  UseArray $End[0] 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   34:  Call     GetEventType 	( .Actor:Self *Var[0] )
   48:  Switch  *Var[0] 
   54:  	Case  ==  .Event:HitCombo
   60:  		Exec     $Script_8021D820 *Array[0] 
   70:  		SetConst  *Var[0]  00000001 
   80:  		SetConst  *Var[1]  00320009 
   90:  		ExecWait DoNormalHit 
   9C:  		Loop     
   A8:  			DoesScriptExist *Array[0] *Var[0] 
   B8:  			If  *Var[0]  ==  00000000 
   C8:  				BreakLoop
   D0:  			EndIf
   D8:  			Wait     00000001 
   E4:  		EndLoop
   EC:  	CaseOR  ==  .Event:Hit
   F8:  	CaseOR  ==  00000011
  104:  		Exec     $Script_8021D820 *Array[0] 
  114:  		SetConst  *Var[0]  00000001 
  124:  		SetConst  *Var[1]  00320009 
  134:  		ExecWait DoNormalHit 
  140:  		Loop     
  14C:  			DoesScriptExist *Array[0] *Var[0] 
  15C:  			If  *Var[0]  ==  00000000 
  16C:  				BreakLoop
  174:  			EndIf
  17C:  			Wait     00000001 
  188:  		EndLoop
  190:  	EndCaseGroup
  198:  	Case  ==  .Event:BurnHit
  1A4:  		Exec     $Script_8021D820 *Array[0] 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  0032000A 
  1D4:  		SetConst  *Var[2]  0032000B 
  1E4:  		ExecWait DoBurnHit 
  1F0:  		Loop     
  1FC:  			DoesScriptExist *Array[0] *Var[0] 
  20C:  			If  *Var[0]  ==  00000000 
  21C:  				BreakLoop
  224:  			EndIf
  22C:  			Wait     00000001 
  238:  		EndLoop
  240:  	Case  ==  .Event:BurnDeath
  24C:  		Exec     $Script_8021D820 *Array[0] 
  25C:  		SetConst  *Var[0]  00000001 
  26C:  		SetConst  *Var[1]  0032000A 
  27C:  		SetConst  *Var[2]  0032000B 
  28C:  		ExecWait DoBurnHit 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  0032000B 
  2B8:  		ExecWait DoDeath 
  2C4:  		Loop     
  2D0:  			DoesScriptExist *Array[0] *Var[0] 
  2E0:  			If  *Var[0]  ==  00000000 
  2F0:  				BreakLoop
  2F8:  			EndIf
  300:  			Wait     00000001 
  30C:  		EndLoop
  314:  		Return
  31C:  	Case  ==  .Event:MultibounceHit
  328:  		Exec     $Script_8021D820 *Array[0] 
  338:  		SetConst  *Var[0]  00000001 
  348:  		SetConst  *Var[1]  00320009 
  358:  		ExecWait 8029B998 
  364:  		Loop     
  370:  			DoesScriptExist *Array[0] *Var[0] 
  380:  			If  *Var[0]  ==  00000000 
  390:  				BreakLoop
  398:  			EndIf
  3A0:  			Wait     00000001 
  3AC:  		EndLoop
  3B4:  	Case  ==  .Event:MultibounceDeath
  3C0:  		Exec     $Script_8021D820 *Array[0] 
  3D0:  		SetConst  *Var[0]  00000001 
  3E0:  		SetConst  *Var[1]  00320009 
  3F0:  		ExecWait 8029B998 
  3FC:  		SetConst  *Var[0]  00000001 
  40C:  		SetConst  *Var[1]  00320009 
  41C:  		ExecWait DoDeath 
  428:  		Loop     
  434:  			DoesScriptExist *Array[0] *Var[0] 
  444:  			If  *Var[0]  ==  00000000 
  454:  				BreakLoop
  45C:  			EndIf
  464:  			Wait     00000001 
  470:  		EndLoop
  478:  		Return
  480:  	Case  ==  .Event:ShockHit
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00320009 
  4AC:  		ExecWait DoShockHit 
  4B8:  		SetConst  *Var[0]  00000001 
  4C8:  		SetConst  *Var[1]  00320009 
  4D8:  		ExecWait 8029BD70 
  4E4:  		SetConst  *Var[0]  00000001 
  4F4:  		SetConst  *Var[1]  00320007 
  504:  		ExecWait DoReturnHome 
  510:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  524:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  544:  	Case  ==  .Event:ShockDeath
  550:  		SetConst  *Var[0]  00000001 
  560:  		SetConst  *Var[1]  00320009 
  570:  		ExecWait DoShockHit 
  57C:  		SetConst  *Var[0]  00000001 
  58C:  		SetConst  *Var[1]  00320009 
  59C:  		ExecWait DoDeath 
  5A8:  		Return
  5B0:  	CaseOR  ==  00000017
  5BC:  	CaseOR  ==  .Event:Immune
  5C8:  	CaseOR  ==  .Event:AirLiftFailed
  5D4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  5EC:  		Switch  *Var[0] 
  5F8:  			Case  ==  00000000 
  604:  				SetConst  *Var[1]  00320001 
  614:  			Case  ==  00000001 
  620:  				SetConst  *Var[1]  00320002 
  630:  		EndSwitch
  638:  		SetConst  *Var[0]  00000001 
  648:  		ExecWait DoImmune 
  654:  	EndCaseGroup
  65C:  	CaseOR  ==  .Event:Death
  668:  	CaseOR  ==  00000025
  674:  		Exec     $Script_8021D820 *Array[0] 
  684:  		SetConst  *Var[0]  00000001 
  694:  		SetConst  *Var[1]  00320009 
  6A4:  		ExecWait DoNormalHit 
  6B0:  		Wait     0000000A 
  6BC:  		SetConst  *Var[0]  00000001 
  6CC:  		SetConst  *Var[1]  00320009 
  6DC:  		ExecWait DoDeath 
  6E8:  		Loop     
  6F4:  			DoesScriptExist *Array[0] *Var[0] 
  704:  			If  *Var[0]  ==  00000000 
  714:  				BreakLoop
  71C:  			EndIf
  724:  			Wait     00000001 
  730:  		EndLoop
  738:  		Return
  740:  	EndCaseGroup
  748:  	Case  ==  .Event:RecoverStatus
  754:  		SetConst  *Var[0]  00000001 
  764:  		SetConst  *Var[1]  00320001 
  774:  		ExecWait DoRecover 
  780:  	Case  ==  .Event:ScareAway
  78C:  		Exec     $Script_8021D820 *Array[0] 
  79C:  		SetConst  *Var[0]  00000001 
  7AC:  		SetConst  *Var[1]  00320007 
  7BC:  		SetConst  *Var[2]  00320009 
  7CC:  		ExecWait DoScareAway 
  7D8:  		Loop     
  7E4:  			DoesScriptExist *Array[0] *Var[0] 
  7F4:  			If  *Var[0]  ==  00000000 
  804:  				BreakLoop
  80C:  			EndIf
  814:  			Wait     00000001 
  820:  		EndLoop
  828:  		Return
  830:  	Case  ==  .Event:BeginAirLift
  83C:  		Exec     $Script_8021D820 *Array[0] 
  84C:  		SetConst  *Var[0]  00000001 
  85C:  		SetConst  *Var[1]  00320009 
  86C:  		ExecWait DoAirLift 
  878:  		Loop     
  884:  			DoesScriptExist *Array[0] *Var[0] 
  894:  			If  *Var[0]  ==  00000000 
  8A4:  				BreakLoop
  8AC:  			EndIf
  8B4:  			Wait     00000001 
  8C0:  		EndLoop
  8C8:  	Case  ==  .Event:BlowAway
  8D4:  		SetConst  *Var[0]  00000001 
  8E4:  		SetConst  *Var[1]  00320009 
  8F4:  		SetConst  *Var[2]  00040000 
  904:  		ExecWait DoBlowAway 
  910:  		Return
  918:  	Default
  920:  EndSwitch
  928:  Call     SetAnimation 	( .Actor:Self 00000001 00320001 )
  940:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  954:  Call     UseIdleAnimation 	( .Actor:Self .True )
  968:  Return
  970:  End

#new:Script $Script_TakeTurn_8021E900
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   54:  If  *Var[0]  ==  00000001 
   64:  	Call     SetActorAngle 	( .Actor:Self 000000B4 )
   78:  	Call     SetAnimation 	( .Actor:Self 00000001 00320008 )
   90:  	Wait     0000001E 
   9C:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
   B0:  	Call     SetGoalToPos 	( .Actor:Self 0000012C 00000000 00000000 )
   CC:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  	Call     SetBattleFlagBits 	( 00040000 .True )
   F8:  	Call     8027D32C ( FFFFFF81 )
  108:  	Call     RemoveActor 	( .Actor:Self )
  118:  	Return
  120:  EndIf
  128:  Call     UseCamPreset 	( 0000003F )
  138:  Call     CamTargetActor ( .Actor:Self )
  148:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  160:  Call     GetBattlePhase ( *Var[0] )
  170:  If  *Var[0]  ==  .Phase:FirstStrike
  180:  	Call     SetGoalToTarget 	( .Actor:Self )
  190:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1AC:  	Add  *Var[0]  00000032 
  1BC:  	Set  *Var[1]  00000000 
  1CC:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E8:  Else
  1F0:  	Call     SetAnimation 	( .Actor:Self 00000001 00320007 )
  208:  	Call     SetGoalToTarget 	( .Actor:Self )
  218:  	Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  234:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  248:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  260:  	Call     SetAnimation 	( .Actor:Self 00000001 00320001 )
  278:  	Wait     00000006 
  284:  EndIf
  28C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
  2A0:  Call     SetAnimation 	( .Actor:Self 00000001 00320005 )
  2B8:  Call     SetGoalToTarget 	( .Actor:Self )
  2C8:  Call     AddToGoalPos 	( .Actor:Self 00000023 00000000 00000000 )
  2E4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2FC:  Call     PlaySoundAtActor 	( .Actor:Self 000020C2 )
  310:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  32C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  350:  Switch  *Var[0] 
  35C:  	CaseOR  ==  00000006 
  368:  	CaseOR  ==  00000005 
  374:  		Set  *Var[A]  *Var[0] 
  384:  		Call     SetAnimation 	( .Actor:Self 00000001 0032000D )
  39C:  		Call     SetGoalToTarget 	( .Actor:Self )
  3AC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  3C0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3D8:  		Call     8026F6EC ( FFFFFF81 )
  3E8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  3FC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  410:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  42C:  		Sub  *Var[0]  0000001E 
  43C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  458:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  478:  		Sub  *Var[0]  00000014 
  488:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  4C4:  		Wait     00000005 
  4D0:  		If  *Var[A]  ==  00000005 
  4E0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Wait     00000005 
  518:  		Call     UseCamPreset 	( 00000002 )
  528:  		Call     8027D7F0 ( )
  534:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  548:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  564:  		Call     SetAnimation 	( .Actor:Self 00000001 00320007 )
  57C:  		Call     SetGoalToHome 	( .Actor:Self )
  58C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5A0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5B8:  		Call     SetAnimation 	( .Actor:Self 00000001 00320001 )
  5D0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5E8:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  5FC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  610:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  624:  		Return
  62C:  	EndCaseGroup
  634:  EndSwitch
  63C:  Call     SetAnimation 	( .Actor:Self 00000001 0032000D )
  654:  Call     SetGoalToTarget 	( .Actor:Self )
  664:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  678:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  690:  Call     8026F6EC ( FFFFFF81 )
  6A0:  Wait     00000002 
  6AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  6D4:  Switch  *Var[0] 
  6E0:  	CaseOR  ==  00000000 
  6EC:  	CaseOR  ==  00000002 
  6F8:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  70C:  		If  *Var[0]  <=  00000000 
  71C:  			Set  *Var[0]  00000001 
  72C:  			Goto     0000000A 
  738:  		EndIf
  740:  		Call     GetBattleFlags ( *Var[0] )
  750:  		If  *Var[0]  &  80000000 
  760:  			Set  *Var[0]  00000001 
  770:  			Goto     0000000A 
  77C:  		EndIf
  784:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  798:  		If  *Var[0]  &  00080000 
  7A8:  			Set  *Var[0]  00000000 
  7B8:  			Goto     0000000A 
  7C4:  		EndIf
  7CC:  		Call     GetStatusFlags ( .Actor:Player *Var[0] )
  7E0:  		If  *Var[0]  &  00100000 
  7F0:  			Set  *Var[0]  00000000 
  800:  			Goto     0000000A 
  80C:  		EndIf
  814:  		Call     AddCoin     	( 00000000 )
  824:  		Switch  *Var[0] 
  830:  			Case  ==  00000000 
  83C:  				Set  *Var[0]  00000001 
  84C:  			Case  <  0000000A 
  858:  				Call     SetActorVar 	( .Actor:Self 00000001 *Var[0] )
  870:  				Set  *Var[0]  00000002 
  880:  			Case  >=  0000000A 
  88C:  				Call     SetActorVar 	( .Actor:Self 00000001 0000000A )
  8A4:  				Set  *Var[0]  00000002 
  8B4:  		EndSwitch
  8BC:  		Label    0000000A 
  8C8:  		Switch  *Var[0] 
  8D4:  			Case  ==  00000000 
  8E0:  				Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8FC:  				Add  *Var[0]  0000001E 
  90C:  				Set  *Var[1]  00000000 
  91C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  930:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  94C:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  96C:  				Call     SetAnimation 	( .Actor:Self 00000001 00320001 )
  984:  				Wait     00000014 
  990:  				Call     SetAnimation 	( .Actor:Self 00000001 00320007 )
  9A8:  			Case  ==  00000001 
  9B4:  				Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9D0:  				Add  *Var[0]  0000001E 
  9E0:  				Set  *Var[1]  00000000 
  9F0:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  A04:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A20:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  A40:  				Call     SetAnimation 	( .Actor:Self 00000001 0032000E )
  A58:  				Wait     00000014 
  A64:  				Call     PlaySoundAtActor 	( .Actor:Self 000020C3 )
  A78:  				Call     SetAnimation 	( .Actor:Self 00000001 00320010 )
  A90:  				Wait     00000014 
  A9C:  				Call     SetAnimation 	( .Actor:Self 00000001 00320007 )
  AB4:  			Default
  ABC:  				Call     SetGoalToTarget 	( .Actor:Self )
  ACC:  				Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  AE8:  				Add  *Var[A]  0000001E 
  AF8:  				Set  *Var[B]  00000000 
  B08:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  B20:  				Mul  *Var[0]  FFFFFFFF 
  B30:  				Call     AddCoin     	( *Var[0] )
  B40:  				Thread
  B48:  					Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00100000 .True )
  B64:  					Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  B80:  					Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  B9C:  					Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  BBC:  					Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.0] )
  BD4:  					Add  *Var[B]  0000001E 
  BE4:  					Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[A] *Var[B] *Var[C] 00000016 .True )
  C0C:  					Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00100000 .False )
  C28:  				EndThread
  C30:  				Thread
  C38:  					Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  C50:  					Loop     *Var[0] 
  C5C:  						Call     PlaySoundAtActor 	( .Actor:Self 00000212 )
  C70:  						Wait     00000001 
  C7C:  					EndLoop
  C84:  				EndThread
  C8C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  CA0:  				Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  CBC:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  CDC:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D55C )
  CF4:  				Call     SetAnimation 	( .Actor:Self 00000001 0032000E )
  D0C:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  D24:  				Wait     00000007 
  D30:  				Call     SetAnimation 	( .Actor:Self 00000001 0032000F )
  D48:  				Wait     00000014 
  D54:  				Call     SetAnimation 	( .Actor:Self 00000001 00320008 )
  D6C:  		EndSwitch
  D74:  		Call     UseCamPreset 	( 00000002 )
  D84:  		Call     8027D7F0 ( )
  D90:  		Call     SetGoalToHome 	( .Actor:Self )
  DA0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  DB4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  DCC:  	EndCaseGroup
  DD4:  EndSwitch
  DDC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DF0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  E04:  Return
  E0C:  End

PADDING: 8021F714 to 8021F720 (004E1CF4 to 004E1D00)
00000000 00000000 00000000 

#new:Script $Script_8021F720
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[7]  *Var[1] 
   20:  Mul  *Var[7]  0000000A 
   30:  Call     $Function_80218220 ( )
   3C:  Label    00000000 
   48:  Add  *Var[7]  00000001 
   58:  If  *Var[7]  >  00000E0F 
   68:  	Sub  *Var[7]  00000E10 
   78:  EndIf
   80:  Call     $Function_802180D0 ( *Var[7] *Var[0] *Var[1] *Var[2] )
   9C:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   B8:  Wait     00000001 
   C4:  Goto     00000000 
   D0:  Return
   D8:  End

#new:Script $Script_BeforeBattle_8021F800
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Set  *Var[0]  00000001 
   20:  Set  *Var[1]  00000000 
   30:  Exec     $Script_8021F720 
   3C:  Set  *Var[0]  00000003 
   4C:  Set  *Var[1]  00000078 
   5C:  Exec     $Script_8021F720 
   68:  Set  *Var[0]  00000005 
   78:  Set  *Var[1]  000000F0 
   88:  Exec     $Script_8021F720 
   94:  Call     PlayEffect  	( {FX:SunRays:RightCorner} 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   D8:  Return
   E0:  End

#new:Script $Script_AfterBattle_8021F8E8
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8021F8F8
00000028 00000027 00000026 00000025 00000000 

#new:Stage $Stage_8021F90C
$ASCII_80220028  % sbk_tex
$ASCII_80220018  % sbk_bt02_shape
$ASCII_80220008  % sbk_bt02_hit
$Script_BeforeBattle_8021F800 
$Script_AfterBattle_8021F8E8 
$ASCII_80220000  % sbk_bg
$ForegroundModelList_8021F8F8 
00000000 
00000000 
00000000 

PADDING: 8021F934 to 8021F940 (004E1F14 to 004E1F20)
00000000 00000000 00000000 

#new:Formation $Formation_00
$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000001 00000009 00000000 00000000 00000000 00000000 
$Pokey 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000001 00000009 00000000 00000000 00000000 00000000 
$Pokey 00000002 00000008 00000000 00000000 00000000 00000000 
$Pokey 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000001 00000009 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000001 00000009 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000008 00000000 00000000 00000000 00000000 
$BanditA 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000 
$BanditA 00000001 00000009 00000000 00000000 00000000 00000000 
$Pokey 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000001 00000009 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000008 00000000 00000000 00000000 00000000 
$Pokey 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000 
$BanditA 00000001 00000009 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000 
$BanditA 00000001 00000009 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000008 00000000 00000000 00000000 00000000 
$BanditA 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000 
$BanditA 00000001 00000009 00000000 00000000 00000000 00000000 
$Pokey 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000 
$BanditA 00000001 00000009 00000000 00000000 00000000 00000000 
$Pokey 00000002 00000008 00000000 00000000 00000000 00000000 
$Pokey 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000 
$Pokey 00000001 00000009 00000000 00000000 00000000 00000000 
$BanditA 00000002 00000008 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80220148 00000001 $Formation_00 $Stage_8021F90C 00000000 
$SJIS_8022013C 00000002 $Formation_01 $Stage_8021F90C 00000000 
$SJIS_80220130 00000003 $Formation_02 $Stage_8021F90C 00000000 
$SJIS_80220120 00000004 $Formation_03 $Stage_8021F90C 00000000 
$SJIS_80220110 00000002 $Formation_04 $Stage_8021F90C 00000000 
$SJIS_802200FC 00000003 $Formation_05 $Stage_8021F90C 00000000 
$SJIS_802200E8 00000004 $Formation_06 $Stage_8021F90C 00000000 
$SJIS_802200D0 00000003 $Formation_07 $Stage_8021F90C 00000000 
$SJIS_802200B4 00000004 $Formation_08 $Stage_8021F90C 00000000 
$SJIS_802200A8 00000001 $Formation_09 $Stage_8021F90C 00000000 
$SJIS_8022009C 00000002 $Formation_0A $Stage_8021F90C 00000000 
$SJIS_80220090 00000003 $Formation_0B $Stage_8021F90C 00000000 
$SJIS_80220084 00000004 $Formation_0C $Stage_8021F90C 00000000 
$SJIS_80220074 00000002 $Formation_0D $Stage_8021F90C 00000000 
$SJIS_80220060 00000003 $Formation_0E $Stage_8021F90C 00000000 
$SJIS_8022004C 00000004 $Formation_0F $Stage_8021F90C 00000000 % unused
$SJIS_80220030 00000003 $Formation_10 $Stage_8021F90C 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_80220150 $Stage_8021F90C 
00000000 00000000 

PADDING: 8021FFF8 to 80220000 (004E25D8 to 004E25E0)
00000000 00000000 

#new:ASCII $ASCII_80220000
sbk_bg

#new:ASCII $ASCII_80220008
sbk_bt02_hit

#new:ASCII $ASCII_80220018
sbk_bt02_shape

#new:ASCII $ASCII_80220028
sbk_tex

#new:SJIS $SJIS_80220030
% borodo-,sanbo,borodo-
837B838D 8368815B 2C835483 93837B2C 837B838D 8368815B 00000000 

#new:SJIS $SJIS_8022004C
% borodo-x2,sanbox2
837B838D 8368815B 78322C83 54839383 7B783200 

#new:SJIS $SJIS_80220060
% borodo-x2,sanbo
837B838D 8368815B 78322C83 54839383 7B000000 

#new:SJIS $SJIS_80220074
% borodo-,sanbo
837B838D 8368815B 2C835483 93837B00 

#new:SJIS $SJIS_80220084
% borodo-x4
837B838D 8368815B 78340000 

#new:SJIS $SJIS_80220090
% borodo-x3
837B838D 8368815B 78330000 

#new:SJIS $SJIS_8022009C
% borodo-x2
837B838D 8368815B 78320000 

#new:SJIS $SJIS_802200A8
% borodo-
837B838D 8368815B 00000000 

#new:SJIS $SJIS_802200B4
% sanbox2,borodo-,sanbo
83548393 837B7832 2C837B83 8D836881 5B2C8354 8393837B 00000000 

#new:SJIS $SJIS_802200D0
% sanbo,borodo-,sanbo
83548393 837B2C83 7B838D83 68815B2C 83548393 837B0000 

#new:SJIS $SJIS_802200E8
% sanbox2,borodo-x2
83548393 837B7832 2C837B83 8D836881 5B783200 

#new:SJIS $SJIS_802200FC
% sanbox2,borodo-
83548393 837B7832 2C837B83 8D836881 5B000000 

#new:SJIS $SJIS_80220110
% sanbo,borodo-
83548393 837B2C83 7B838D83 68815B00 

#new:SJIS $SJIS_80220120
% kiirosanbox4
82AB82A2 82EB8354 8393837B 78340000 

#new:SJIS $SJIS_80220130
% sanbox3
83548393 837B7833 00000000 

#new:SJIS $SJIS_8022013C
% sanbox2
83548393 837B7832 00000000 

#new:SJIS $SJIS_80220148
% sanbo
83548393 837B0000 

#new:ASCII $ASCII_80220150
sbk_01

PADDING: 80220158 to 80220160 (004E2738 to 004E2740)
00000000 00000000 

