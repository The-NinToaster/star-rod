% Automatically dumped from section 16

#new:Actor $16_WMagikoopa
% stats
[Index]        59b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80223B38_16 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80223C90_16 
[Script]      $Script_Init_80225F58_16 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:DefenseTable $DefenseTable_80223B20_16
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80223B38_16
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80223C90_16
00800000 01000000 022300FF $IdleAnimations_80223D70_16 $DefenseTable_80223B20_16 00000000 00000000 FBF40000 00000000 

#new:IdleAnimations $IdleAnimations_80223D70_16
.Status:Normal    00560301
.Status:Stone     00560300
.Status:Sleep     00560308
.Status:Poison    00560301
.Status:Stop      00560300
.Status:Static    00560301
.Status:Paralyze  00560300
.Status:Dizzy     00560307
.Status:Fear      00560307
.Status:End

#new:Script $Script_Idle_80223E14_16
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80223E24_16
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560304 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560305 
   C0:  		SetConst  *Var[2]  00560306 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560305 
  108:  		SetConst  *Var[2]  00560306 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560306 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560304 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560304 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560304 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560301 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560304 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560304 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560301 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  3B8:  		ExecWait $Script_WMagikoopa_RunAway_16 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560302 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560304 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

#new:Script $Script_Init_80225F58_16
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80223E14_16 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802274E4_16 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80223E24_16 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_TakeTurn_802274E4_16
    0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_WMagikoopa_RunAway_16 
   34:  	Return
   3C:  EndIf
   44:  Set  *Var[A]  00000000 
   54:  Set  *Var[B]  00000000 
   64:  Call     CreateTargetList 	( 00008002 )
   74:  Call     InitTargetIterator 	( )
   80:  Label    00000000 
   8C:  Set  *Flag[00]  00000000 
   9C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   B0:  Call     GetActorType 	( *Var[0] *Var[1] )
   C4:  If  *Var[1]  ==  00000047 
   D4:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
   EC:  	If  *Var[1]  ==  00000001 
   FC:  		Set  *Flag[00]  00000001 
  10C:  	EndIf
  114:  EndIf
  11C:  If  *Flag[00]  ==  00000000 
  12C:  	Call     GetActorHP  	( *Var[0] *Var[2] )
  140:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  154:  	If  *Var[2]  !=  *Var[3] 
  164:  		Add  *Var[A]  00000001 
  174:  	EndIf
  17C:  	Add  *Var[B]  00000001 
  18C:  EndIf
  194:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1A8:  If  *Var[0]  !=  FFFFFFFF 
  1B8:  	Goto     00000000 
  1C4:  EndIf
  1CC:  Mul  *Var[A]  00000064 
  1DC:  Div  *Var[A]  *Var[B] 
  1EC:  Switch  *Var[A] 
  1F8:  	Case  >=  0000003C 
  204:  		ExecWait $Script_HealAll_16 
  210:  	Case  ==  00000000 
  21C:  		Call     GetActorFlags 	( .Actor:Self *Var[0] )
  230:  		If  *Var[0]  &  00000200 
  240:  			ExecWait $Script_WMagikoopa_ShapeSpell_16 
  24C:  		Else
  254:  			ExecWait $Script_WMagikoopa_WandStrike_16 
  260:  		EndIf
  268:  	Default
  270:  		ExecWait $Script_HealOne_16 
  27C:  EndSwitch
  284:  Return
  28C:  End

