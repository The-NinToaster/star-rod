% Automatically dumped from section 25

#new:Actor $25_FlyingMagikoopa
% stats
[Index]        4Eb 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021E894_25 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8021E964_25 
[Script]      $Script_Init_8021F7D0_25 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      85`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:Function $Function_80218438_25
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_80218464_25
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218530_25
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:DefenseTable $DefenseTable_8021E7DC_25
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021E7E8_25
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:StatusTable $StatusTable_8021E894_25
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_8021E964_25
00020001 01000000 022300FF $IdleAnimations_8021EA20_25 $DefenseTable_8021E7DC_25 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8021EA6C_25 $DefenseTable_8021E7DC_25 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8021EAB8_25 $DefenseTable_8021E7DC_25 00000000 00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021EA20_25
.Status:Normal    00560001
.Status:Stone     00560000
.Status:Sleep     00560008
.Status:Poison    00560001
.Status:Stop      00560000
.Status:Static    00560001
.Status:Paralyze  00560000
.Status:Dizzy     00560007
.Status:Fear      00560007
.Status:End

#new:IdleAnimations $IdleAnimations_8021EA6C_25
.Status:Normal    00570001
.Status:Stone     00570000
.Status:Sleep     00570008
.Status:Poison    00570001
.Status:Stop      00570000
.Status:Static    00570001
.Status:Paralyze  00570000
.Status:Dizzy     00570007
.Status:Fear      00570007
.Status:End

#new:IdleAnimations $IdleAnimations_8021EAB8_25
.Status:Normal    0057000A
.Status:End

#new:Script $Script_Idle_8021EAC4_25
    0:  Set  *Var[F]  00000000 
   10:  Label    00000000 
   1C:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   34:  Call     ActorExists 	( *Var[0] *Var[1] )
   48:  If  *Var[1]  ==  00000001 
   58:  	Call     $Function_802182A8_25 ( *Var[F] *Var[1] *Fixed[254.0] *Fixed[100.0] 00000014 00000000 00000000 )
   80:  	Add  *Var[F]  00000001 
   90:  	Call     GetActorFlags 	( .Actor:Self *Var[2] )
   A4:  	If  *Var[2]  &  00000200 
   B4:  		Call     SetSpriteAlpha ( .Actor:Self 00000002 *Var[1] )
   CC:  		Call     SetSpriteAlpha ( *Var[0] 00000001 *Var[1] )
   E4:  	Else
   EC:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[1] )
  104:  		Call     SetSpriteAlpha ( *Var[0] 00000001 *Var[1] )
  11C:  	EndIf
  124:  Else
  12C:  	Set  *Var[F]  00000000 
  13C:  	Call     GetActorFlags 	( .Actor:Self *Var[2] )
  150:  	If  *Var[2]  &  00000200 
  160:  		Call     SetSpriteAlpha ( .Actor:Self 00000002 000000FF )
  178:  	Else
  180:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  198:  	EndIf
  1A0:  EndIf
  1A8:  Wait     00000001 
  1B4:  Goto     00000000 
  1C0:  Return
  1C8:  End

#new:Script $Script_8021EC94_25
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218438_25 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_8021EDA0_25
    0:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218530_25 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021FBE8_25 )
  4D4:  Call     SetActorType 	( FFFFFF81 0000004D )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021E7E8_25 )
  4FC:  Call     $Function_80218464_25 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_RunAway_25
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_8021F7D0_25
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021EAC4_25 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80225034_25 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220300_25 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   AC:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   C4:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   DC:  Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
   F4:  Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
  10C:  Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
  124:  Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
  13C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
  154:  Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
  16C:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
  184:  Call     SetActorVar 	( .Actor:Self 0000000B FFFFFFFF )
  19C:  Return
  1A4:  End

#new:Script $Script_8021F97C_25
    0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Return
   30:  EndIf
   38:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
   50:  Call     ActorExists 	( *Var[0] *Var[1] )
   64:  If  *Var[1]  ==  00000000 
   74:  	Return
   7C:  EndIf
   84:  Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
   9C:  Call     GetLastElement ( *Var[A] )
   AC:  If  *Var[A]  &  20000000 
   BC:  	Label    00000000 
   C8:  	Call     GetBattleFlags ( *Var[A] )
   D8:  	If  *Var[A]  &  00000100 
   E8:  		Wait     00000001 
   F4:  		Goto     00000000 
  100:  	EndIf
  108:  EndIf
  110:  Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
  128:  Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
  140:  Call     GetActorFlags 	( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00000200 
  164:  	Call     SetSpriteEventBits 	( .Actor:Self 00000002 00400000 .False )
  180:  Else
  188:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
  1A4:  EndIf
  1AC:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
  1C8:  Call     RemoveActor 	( *Var[0] )
  1D8:  Thread
  1E0:  	Add  *Var[3]  00000002 
  1F0:  	Loop     00000002 
  1FC:  		Call     PlayEffect  	( {FX:BigSmokePuff} *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  240:  		Wait     00000002 
  24C:  	EndLoop
  254:  EndThread
  25C:  Return
  264:  End

#new:Script $Script_HandleEvent_8021FBE8_25
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
   40:  Call     GetEventType 	( .Actor:Self *Var[0] )
   54:  Switch  *Var[0] 
   60:  	Case  ==  .Event:HitCombo
   6C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   84:  		ConstOR  *Var[0] 00000001 
   94:  		Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
   AC:  		SetConst  *Var[0]  00000001 
   BC:  		SetConst  *Var[1]  00560004 
   CC:  		ExecWait DoNormalHit 
   D8:  	CaseOR  ==  .Event:Hit
   E4:  	CaseOR  ==  .Event:UpAndAway
   F0:  		SetConst  *Var[0]  00000001 
  100:  		SetConst  *Var[1]  00560004 
  110:  		ExecWait DoNormalHit 
  11C:  		ExecWait $Script_8021F97C_25 
  128:  	EndCaseGroup
  130:  	Case  ==  .Event:BurnHit
  13C:  		SetConst  *Var[0]  00000001 
  14C:  		SetConst  *Var[1]  00560005 
  15C:  		SetConst  *Var[2]  00560006 
  16C:  		ExecWait DoBurnHit 
  178:  		ExecWait $Script_8021F97C_25 
  184:  	Case  ==  .Event:BurnDeath
  190:  		SetConst  *Var[0]  00000001 
  1A0:  		SetConst  *Var[1]  00560005 
  1B0:  		SetConst  *Var[2]  00560006 
  1C0:  		ExecWait DoBurnHit 
  1CC:  		ExecWait $Script_8021F97C_25 
  1D8:  		SetConst  *Var[0]  00000001 
  1E8:  		SetConst  *Var[1]  00560006 
  1F8:  		ExecWait DoDeath 
  204:  		Return
  20C:  	Case  ==  .Event:MultibounceHit
  218:  		SetConst  *Var[0]  00000001 
  228:  		SetConst  *Var[1]  00560004 
  238:  		ExecWait 8029B998 
  244:  		ExecWait $Script_8021F97C_25 
  250:  	Case  ==  .Event:MultibounceDeath
  25C:  		SetConst  *Var[0]  00000001 
  26C:  		SetConst  *Var[1]  00560004 
  27C:  		ExecWait 8029B998 
  288:  		ExecWait $Script_8021F97C_25 
  294:  		SetConst  *Var[0]  00000001 
  2A4:  		SetConst  *Var[1]  00560004 
  2B4:  		ExecWait DoDeath 
  2C0:  		Return
  2C8:  	Case  ==  00000017
  2D4:  		SetConst  *Var[0]  00000001 
  2E4:  		SetConst  *Var[1]  00560001 
  2F4:  		ExecWait DoImmune 
  300:  	Case  ==  .Event:Immune
  30C:  		SetConst  *Var[0]  00000001 
  31C:  		SetConst  *Var[1]  00560001 
  32C:  		ExecWait DoImmune 
  338:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  350:  		If  *Var[0]  &  00000001 
  360:  			ExecWait $Script_8021F97C_25 
  36C:  			Return
  374:  		EndIf
  37C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  390:  		If  *Var[0]  !=  00000000 
  3A0:  			ExecWait $Script_8021F97C_25 
  3AC:  		EndIf
  3B4:  	Case  ==  .Event:Death
  3C0:  		SetConst  *Var[0]  00000001 
  3D0:  		SetConst  *Var[1]  00560004 
  3E0:  		ExecWait DoNormalHit 
  3EC:  		ExecWait $Script_8021F97C_25 
  3F8:  		Wait     0000000A 
  404:  		SetConst  *Var[0]  00000001 
  414:  		SetConst  *Var[1]  00560004 
  424:  		ExecWait DoDeath 
  430:  		Return
  438:  	Case  ==  .Event:RecoverStatus
  444:  		SetConst  *Var[0]  00000001 
  454:  		SetConst  *Var[1]  00560001 
  464:  		ExecWait DoRecover 
  470:  	Case  ==  .Event:ScareAway
  47C:  		ExecWait $Script_8021F97C_25 
  488:  		Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
  4A0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  4B4:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4D0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4EC:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  50C:  		Wait     0000000F 
  518:  		Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
  530:  		ExecWait $Script_RunAway_25 
  53C:  		Return
  544:  	Case  ==  .Event:BeginAirLift
  550:  		SetConst  *Var[0]  00000001 
  560:  		SetConst  *Var[1]  00560002 
  570:  		ExecWait DoAirLift 
  57C:  	Case  ==  .Event:BlowAway
  588:  		ExecWait $Script_8021F97C_25 
  594:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  5A8:  		If  *Var[0]  !&  0035D000 
  5B8:  			If  *Var[0]  &  00080000 
  5C8:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  5E8:  			Else
  5F0:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  610:  			EndIf
  618:  		EndIf
  620:  		SetConst  *Var[0]  00000001 
  630:  		SetConst  *Var[1]  00560004 
  640:  		ExecWait DoBlowAway 
  64C:  		Return
  654:  	Case  ==  .Event:AirLiftFailed
  660:  		SetConst  *Var[0]  00000001 
  670:  		SetConst  *Var[1]  00560001 
  680:  		ExecWait DoImmune 
  68C:  	Case  ==  .Event:StarBeam
  698:  		SetConst  *Var[0]  00000001 
  6A8:  		SetConst  *Var[1]  00560004 
  6B8:  		ExecWait DoNormalHit 
  6C4:  		ExecWait $Script_8021F97C_25 
  6D0:  	Default
  6D8:  EndSwitch
  6E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  708:  Return
  710:  End

#new:Script $Script_HandleEvent_80220300_25
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetSpriteAlpha ( .Actor:Self 00000002 000000FF )
   40:  Call     GetEventType 	( .Actor:Self *Var[0] )
   54:  Switch  *Var[0] 
   60:  	Case  ==  .Event:HitCombo
   6C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   84:  		ConstOR  *Var[0] 00000001 
   94:  		Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
   AC:  		ExecWait $Script_8021EC94_25 
   B8:  		SetConst  *Var[0]  00000002 
   C8:  		SetConst  *Var[1]  00570004 
   D8:  		ExecWait DoNormalHit 
   E4:  	CaseOR  ==  .Event:Hit
   F0:  	CaseOR  ==  .Event:FallTrigger
   FC:  		ExecWait $Script_8021EC94_25 
  108:  		SetConst  *Var[0]  00000002 
  118:  		SetConst  *Var[1]  00570004 
  128:  		ExecWait DoNormalHit 
  134:  		ExecWait $Script_8021F97C_25 
  140:  		ExecWait $Script_8021EDA0_25 
  14C:  	EndCaseGroup
  154:  	Case  ==  .Event:UpAndAway
  160:  		SetConst  *Var[0]  00000002 
  170:  		SetConst  *Var[1]  00570004 
  180:  		ExecWait DoNormalHit 
  18C:  		ExecWait $Script_8021F97C_25 
  198:  	CaseOR  ==  .Event:BurnHit
  1A4:  	CaseOR  ==  0000000F
  1B0:  		ExecWait $Script_8021EC94_25 
  1BC:  		SetConst  *Var[0]  00000002 
  1CC:  		SetConst  *Var[1]  00570005 
  1DC:  		SetConst  *Var[2]  00570006 
  1EC:  		ExecWait DoBurnHit 
  1F8:  		ExecWait $Script_8021F97C_25 
  204:  		ExecWait $Script_8021EDA0_25 
  210:  	EndCaseGroup
  218:  	Case  ==  .Event:BurnDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570005 
  244:  		SetConst  *Var[2]  00570006 
  254:  		ExecWait DoBurnHit 
  260:  		ExecWait $Script_8021F97C_25 
  26C:  		SetConst  *Var[0]  00000002 
  27C:  		SetConst  *Var[1]  00570006 
  28C:  		ExecWait DoDeath 
  298:  		Return
  2A0:  	Case  ==  .Event:MultibounceHit
  2AC:  		SetConst  *Var[0]  00000002 
  2BC:  		SetConst  *Var[1]  00570004 
  2CC:  		ExecWait 8029B998 
  2D8:  		ExecWait $Script_8021F97C_25 
  2E4:  	Case  ==  .Event:MultibounceDeath
  2F0:  		SetConst  *Var[0]  00000002 
  300:  		SetConst  *Var[1]  00570004 
  310:  		ExecWait 8029B998 
  31C:  		ExecWait $Script_8021F97C_25 
  328:  		SetConst  *Var[0]  00000002 
  338:  		SetConst  *Var[1]  00570004 
  348:  		ExecWait DoDeath 
  354:  		Return
  35C:  	Case  ==  00000017
  368:  		SetConst  *Var[0]  00000002 
  378:  		SetConst  *Var[1]  00570001 
  388:  		ExecWait DoImmune 
  394:  	Case  ==  .Event:Immune
  3A0:  		SetConst  *Var[0]  00000002 
  3B0:  		SetConst  *Var[1]  00570001 
  3C0:  		ExecWait DoImmune 
  3CC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  3E4:  		If  *Var[0]  &  00000001 
  3F4:  			ExecWait $Script_8021F97C_25 
  400:  			Return
  408:  		EndIf
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !=  00000000 
  434:  			ExecWait $Script_8021F97C_25 
  440:  		EndIf
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000002 
  464:  		SetConst  *Var[1]  00570004 
  474:  		ExecWait DoNormalHit 
  480:  		ExecWait $Script_8021F97C_25 
  48C:  		Wait     0000000A 
  498:  		SetConst  *Var[0]  00000002 
  4A8:  		SetConst  *Var[1]  00570004 
  4B8:  		ExecWait DoDeath 
  4C4:  		Return
  4CC:  	Case  ==  .Event:BeginFirstStrike
  4D8:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  4F4:  		Call     HPBarToCurrent ( .Actor:Self )
  504:  	Case  ==  .Event:EndFirstStrike
  510:  		Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  528:  		Call     SetGoalToHome 	( .Actor:Self )
  538:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  54C:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  568:  		Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
  580:  		Call     HPBarToHome 	( .Actor:Self )
  590:  	Case  ==  .Event:RecoverStatus
  59C:  		SetConst  *Var[0]  00000002 
  5AC:  		SetConst  *Var[1]  00570001 
  5BC:  		ExecWait DoRecover 
  5C8:  	Case  ==  .Event:ScareAway
  5D4:  		ExecWait $Script_8021F97C_25 
  5E0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570004 )
  5F8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  60C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  628:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  644:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  664:  		Wait     0000000F 
  670:  		Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
  688:  		ExecWait $Script_RunAway_25 
  694:  		Return
  69C:  	Case  ==  .Event:BeginAirLift
  6A8:  		SetConst  *Var[0]  00000002 
  6B8:  		SetConst  *Var[1]  00570002 
  6C8:  		ExecWait DoAirLift 
  6D4:  	Case  ==  .Event:BlowAway
  6E0:  		ExecWait $Script_8021F97C_25 
  6EC:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  700:  		If  *Var[0]  !&  0035D000 
  710:  			If  *Var[0]  &  00080000 
  720:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  740:  			Else
  748:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  768:  			EndIf
  770:  		EndIf
  778:  		SetConst  *Var[0]  00000002 
  788:  		SetConst  *Var[1]  00570004 
  798:  		ExecWait DoBlowAway 
  7A4:  		Return
  7AC:  	Case  ==  .Event:AirLiftFailed
  7B8:  		SetConst  *Var[0]  00000002 
  7C8:  		SetConst  *Var[1]  00570001 
  7D8:  		ExecWait DoImmune 
  7E4:  	Case  ==  .Event:StarBeam
  7F0:  		SetConst  *Var[0]  00000002 
  800:  		SetConst  *Var[1]  00570004 
  810:  		ExecWait DoNormalHit 
  81C:  		ExecWait $Script_8021F97C_25 
  828:  	Default
  830:  EndSwitch
  838:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  84C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  860:  Return
  868:  End

#new:Script $Script_TakeTurn_80225034_25
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_ShapeSpell_25 
   2C:  	Return
   34:  EndIf
   3C:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
   54:  If  *Var[0]  ==  00000001 
   64:  	Goto     00000014 
   70:  EndIf
   78:  Set  *Var[A]  00000000 
   88:  Call     CreateTargetList 	( 00008002 )
   98:  Call     InitTargetIterator 	( )
   A4:  Label    00000000 
   B0:  Set  *Flag[00]  00000000 
   C0:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   D4:  Call     GetActorType 	( *Var[0] *Var[1] )
   E8:  If  *Var[1]  ==  00000047 
   F8:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  110:  	If  *Var[1]  ==  00000001 
  120:  		Set  *Flag[00]  00000001 
  130:  	EndIf
  138:  EndIf
  140:  Call     GetActorHP  	( *Var[0] *Var[2] )
  154:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  168:  MulF  *Var[2]  *Fixed[100.0] 
  178:  DivF  *Var[2]  *Var[3] 
  188:  If  *Flag[00]  ==  00000000 
  198:  	If  *Var[2]  <=  00000019 
  1A8:  		Call     RandInt     	( 00000063 *Var[4] )
  1BC:  		Add  *Var[4]  00000001 
  1CC:  		If  *Var[4]  <  0000004B 
  1DC:  			Add  *Var[A]  00000001 
  1EC:  			Set  *Var[B]  *Var[0] 
  1FC:  		EndIf
  204:  	EndIf
  20C:  EndIf
  214:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  228:  If  *Var[0]  !=  FFFFFFFF 
  238:  	Goto     00000000 
  244:  EndIf
  24C:  If  *Var[A]  >  00000000 
  25C:  	Goto     0000000A 
  268:  EndIf
  270:  Set  *Var[A]  00000000 
  280:  Call     CreateTargetList 	( 00008002 )
  290:  Call     InitTargetIterator 	( )
  29C:  Label    00000001 
  2A8:  Set  *Flag[00]  00000000 
  2B8:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2CC:  Call     GetActorType 	( *Var[0] *Var[1] )
  2E0:  If  *Var[1]  ==  00000047 
  2F0:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  308:  	If  *Var[1]  ==  00000001 
  318:  		Set  *Flag[00]  00000001 
  328:  	EndIf
  330:  EndIf
  338:  Call     GetActorHP  	( *Var[0] *Var[2] )
  34C:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  360:  MulF  *Var[2]  *Fixed[100.0] 
  370:  DivF  *Var[2]  *Var[3] 
  380:  If  *Flag[00]  ==  00000000 
  390:  	If  *Var[2]  <=  00000014 
  3A0:  		Call     RandInt     	( 00000063 *Var[4] )
  3B4:  		Add  *Var[4]  00000001 
  3C4:  		If  *Var[4]  <  00000050 
  3D4:  			Add  *Var[A]  00000001 
  3E4:  			Set  *Var[B]  *Var[0] 
  3F4:  		EndIf
  3FC:  	EndIf
  404:  EndIf
  40C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  420:  If  *Var[0]  !=  FFFFFFFF 
  430:  	Goto     00000001 
  43C:  EndIf
  444:  If  *Var[A]  >  00000000 
  454:  	Goto     0000000A 
  460:  EndIf
  468:  Set  *Var[A]  00000000 
  478:  Call     CreateTargetList 	( 00008002 )
  488:  Call     InitTargetIterator 	( )
  494:  Label    00000002 
  4A0:  Set  *Flag[00]  00000000 
  4B0:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  4C4:  Call     GetActorType 	( *Var[0] *Var[1] )
  4D8:  If  *Var[1]  ==  00000047 
  4E8:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  500:  	If  *Var[1]  ==  00000001 
  510:  		Set  *Flag[00]  00000001 
  520:  	EndIf
  528:  EndIf
  530:  Call     GetActorHP  	( *Var[0] *Var[2] )
  544:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  558:  MulF  *Var[2]  *Fixed[100.0] 
  568:  DivF  *Var[2]  *Var[3] 
  578:  If  *Flag[00]  ==  00000000 
  588:  	If  *Var[2]  <=  0000000F 
  598:  		Call     RandInt     	( 00000063 *Var[4] )
  5AC:  		Add  *Var[4]  00000001 
  5BC:  		If  *Var[4]  <  00000064 
  5CC:  			Add  *Var[A]  00000001 
  5DC:  			Set  *Var[B]  *Var[0] 
  5EC:  		EndIf
  5F4:  	EndIf
  5FC:  EndIf
  604:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  618:  If  *Var[0]  !=  FFFFFFFF 
  628:  	Goto     00000002 
  634:  EndIf
  63C:  If  *Var[A]  >  00000000 
  64C:  	Goto     0000000A 
  658:  EndIf
  660:  Goto     00000014 
  66C:  Label    0000000A 
  678:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  690:  If  *Var[0]  ==  00000001 
  6A0:  	ExecWait $Script_RunAway_25 
  6AC:  	Return
  6B4:  EndIf
  6BC:  If  *Var[A]  ==  00000001 
  6CC:  	Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  6E4:  	If  *Var[0]  <  00000002 
  6F4:  		Call     RandInt     	( 000003E8 *Var[0] )
  708:  		If  *Var[0]  <  000001F4 
  718:  			ExecWait $Script_HealOne_25 
  724:  			Return
  72C:  		EndIf
  734:  	Else
  73C:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  754:  		If  *Var[0]  <  00000002 
  764:  			Call     RandInt     	( 000003E8 *Var[0] )
  778:  			If  *Var[0]  <  000001F4 
  788:  				ExecWait $Script_HealAll_25 
  794:  				Return
  79C:  			EndIf
  7A4:  		EndIf
  7AC:  	EndIf
  7B4:  Else
  7BC:  	Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  7D4:  	If  *Var[0]  <  00000002 
  7E4:  		Call     RandInt     	( 000003E8 *Var[0] )
  7F8:  		If  *Var[0]  <  000001F4 
  808:  			ExecWait $Script_HealAll_25 
  814:  			Return
  81C:  		EndIf
  824:  	Else
  82C:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  844:  		If  *Var[0]  <  00000002 
  854:  			SetF  *Var[9]  *Fixed[100.0] 
  864:  			Call     CreateTargetList 	( 00008002 )
  874:  			Call     InitTargetIterator 	( )
  880:  			Label    0000000B 
  88C:  			Set  *Flag[00]  00000000 
  89C:  			Call     GetOwnerTarget ( *Var[0] *Var[1] )
  8B0:  			Call     GetActorType 	( *Var[0] *Var[1] )
  8C4:  			If  *Var[1]  ==  00000047 
  8D4:  				Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  8EC:  				If  *Var[1]  ==  00000001 
  8FC:  					Set  *Flag[00]  00000001 
  90C:  				EndIf
  914:  			EndIf
  91C:  			Call     GetActorHP  	( *Var[0] *Var[2] )
  930:  			Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  944:  			MulF  *Var[2]  *Fixed[100.0] 
  954:  			DivF  *Var[2]  *Var[3] 
  964:  			If  *Flag[00]  ==  00000000 
  974:  				If  *Var[2]  <=  *Var[9] 
  984:  					SetF  *Var[9]  *Var[2] 
  994:  					Set  *Var[B]  *Var[0] 
  9A4:  				EndIf
  9AC:  			EndIf
  9B4:  			Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  9C8:  			If  *Var[0]  !=  FFFFFFFF 
  9D8:  				Goto     0000000B 
  9E4:  			EndIf
  9EC:  			Call     RandInt     	( 000003E8 *Var[0] )
  A00:  			If  *Var[0]  <  000001F4 
  A10:  				ExecWait $Script_HealOne_25 
  A1C:  				Return
  A24:  			EndIf
  A2C:  		EndIf
  A34:  	EndIf
  A3C:  EndIf
  A44:  Label    00000014 
  A50:  Set  *Var[A]  0000000A 
  A60:  Set  *Var[B]  0000000A 
  A70:  Set  *Var[C]  0000000A 
  A80:  Set  *Var[D]  0000000A 
  A90:  Set  *Var[E]  0000000A 
  AA0:  Set  *Var[F]  0000000A 
  AB0:  Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
  AC8:  If  *Var[0]  ==  00000001 
  AD8:  	Set  *Var[A]  00000064 
  AE8:  	Set  *Var[B]  00000000 
  AF8:  	Set  *Var[C]  00000000 
  B08:  	Set  *Var[D]  00000000 
  B18:  	Set  *Var[E]  00000000 
  B28:  	Set  *Var[F]  00000000 
  B38:  	Goto     0000007B 
  B44:  Else
  B4C:  	ExecWait $Script_80222654_25 
  B58:  	If  *Var[0]  ==  FFFFFFFF 
  B68:  		Set  *Var[B]  00000000 
  B78:  	EndIf
  B80:  EndIf
  B88:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  B9C:  If  *Var[0]  !=  00000000 
  BAC:  	Set  *Var[B]  00000000 
  BBC:  EndIf
  BC4:  Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
  BDC:  Switch  *Var[0] 
  BE8:  	Case  ==  00000004 
  BF4:  		Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
  C0C:  		If  *Var[1]  <  00000003 
  C1C:  			Call     RandInt     	( 00000063 *Var[0] )
  C30:  			Add  *Var[0]  00000001 
  C40:  			If  *Var[0]  <=  00000032 
  C50:  				Set  *Var[A]  00000000 
  C60:  				Set  *Var[B]  00000000 
  C70:  				Set  *Var[C]  00000064 
  C80:  				Set  *Var[D]  00000000 
  C90:  				Set  *Var[E]  00000000 
  CA0:  				Set  *Var[F]  00000000 
  CB0:  			EndIf
  CB8:  		EndIf
  CC0:  	Case  ==  00000005 
  CCC:  		Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
  CE4:  		If  *Var[1]  <  00000003 
  CF4:  			Call     RandInt     	( 00000063 *Var[0] )
  D08:  			Add  *Var[0]  00000001 
  D18:  			If  *Var[0]  <=  00000032 
  D28:  				Set  *Var[A]  00000000 
  D38:  				Set  *Var[B]  00000000 
  D48:  				Set  *Var[C]  00000000 
  D58:  				Set  *Var[D]  00000064 
  D68:  				Set  *Var[E]  00000000 
  D78:  				Set  *Var[F]  00000000 
  D88:  			EndIf
  D90:  		EndIf
  D98:  EndSwitch
  DA0:  Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  DB8:  If  *Var[0]  >=  00000003 
  DC8:  	Set  *Var[C]  00000000 
  DD8:  EndIf
  DE0:  Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
  DF8:  If  *Var[0]  >=  00000003 
  E08:  	Set  *Var[D]  00000000 
  E18:  EndIf
  E20:  Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
  E38:  If  *Var[0]  >=  00000003 
  E48:  	Set  *Var[E]  00000000 
  E58:  EndIf
  E60:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
  E78:  If  *Var[0]  >=  00000003 
  E88:  	Set  *Var[F]  00000000 
  E98:  EndIf
  EA0:  Label    0000007B 
  EAC:  Set  *Var[9]  00000000 
  EBC:  Add  *Var[9]  *Var[A] 
  ECC:  Add  *Var[9]  *Var[B] 
  EDC:  Add  *Var[9]  *Var[C] 
  EEC:  Add  *Var[9]  *Var[D] 
  EFC:  Add  *Var[9]  *Var[E] 
  F0C:  Add  *Var[9]  *Var[F] 
  F1C:  Sub  *Var[9]  00000001 
  F2C:  Call     RandInt     	( *Var[9] *Var[0] )
  F40:  Add  *Var[0]  00000001 
  F50:  If  *Var[0]  <=  *Var[A] 
  F60:  	ExecWait $Script_ShapeSpell_25 
  F6C:  	Return
  F74:  EndIf
  F7C:  Add  *Var[A]  *Var[B] 
  F8C:  If  *Var[0]  <=  *Var[A] 
  F9C:  	ExecWait $Script_MakeCopy_25 
  FA8:  	Return
  FB0:  EndIf
  FB8:  Add  *Var[A]  *Var[C] 
  FC8:  If  *Var[0]  <=  *Var[A] 
  FD8:  	ExecWait $Script_BoostAttack_25 
  FE4:  	Return
  FEC:  EndIf
  FF4:  Add  *Var[A]  *Var[D] 
 1004:  If  *Var[0]  <=  *Var[A] 
 1014:  	ExecWait $Script_BoostDefense_25 
 1020:  	Return
 1028:  EndIf
 1030:  Add  *Var[A]  *Var[E] 
 1040:  If  *Var[0]  <=  *Var[A] 
 1050:  	ExecWait $Script_Electrify_25 
 105C:  	Return
 1064:  EndIf
 106C:  ExecWait $Script_Vanish_25 
 1078:  Return
 1080:  End

