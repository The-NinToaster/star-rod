% Automatically dumped from section 05

#new:Actor $05_KentCKoopa
% stats
[Index]        B9b 
[Level]        55`b 
[MaxHP]        70`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80227A08_05 
% ai
[SpriteCount]   9`s 
[SpriteTable] $SpriteTable_80227AB4_05 
[Script]      $Script_Init_80227C20_05 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         90`b  70`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -26`b  38`b % dx dy
[StatusIcon]    2`b  63`b % dx dy

#new:Function $Function_80218B50_05
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218BA8_05
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218C74_05
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        S0, C (S1)
   34:  LW        A1, 0 (S0)
   38:  JAL       {Func:GetVariable}
   3C:  ADDIU     S0, S0, 4
   40:  DADDU     A0, S1, R0
   44:  LW        A1, 0 (S0)
   48:  JAL       {Func:GetVariable}
   4C:  DADDU     S2, V0, R0
   50:  ADDIU     A0, R0, 168
   54:  JAL       {Func:GetRandom}
   58:  DADDU     S3, V0, R0
   5C:  MTC1      V0, F22
   60:  NOP
   64:  CVT.S.W   F22, F22
   68:  LIF       F24, 46.0
   70:  JAL       {Func:CosDeg}
   74:  MOV.S     F12, F22
   78:  MUL.S     F0, F0, F24
   7C:  NOP
   80:  MTC1      S2, F20
   84:  NOP
   88:  CVT.S.W   F20, F20
   8C:  ADD.S     F0, F20, F0
   90:  TRUNC.W.S F2, F0
   94:  MFC1      S2, F2
   98:  JAL       {Func:SinDeg}
   9C:  MOV.S     F12, F22
   A0:  MUL.S     F0, F0, F24
   A4:  NOP
   A8:  MTC1      S3, F24
   AC:  NOP
   B0:  CVT.S.W   F24, F24
   B4:  ADD.S     F0, F24, F0
   B8:  LIF       F26, 62.0
   C0:  TRUNC.W.S F2, F0
   C4:  MFC1      S3, F2
   C8:  JAL       {Func:CosDeg}
   CC:  MOV.S     F12, F22
   D0:  MUL.S     F0, F0, F26
   D4:  NOP
   D8:  ADD.S     F20, F20, F0
   DC:  TRUNC.W.S F2, F20
   E0:  MFC1      S4, F2
   E4:  JAL       {Func:SinDeg}
   E8:  MOV.S     F12, F22
   EC:  MUL.S     F0, F0, F26
   F0:  NOP
   F4:  ADDIU     S0, S0, 4
   F8:  LW        A1, 0 (S0)
   FC:  ADDIU     S0, S0, 4
  100:  ADD.S     F24, F24, F0
  104:  DADDU     A2, S2, R0
  108:  TRUNC.W.S F2, F24
  10C:  MFC1      S2, F2
  110:  JAL       {Func:SetVariable}
  114:  DADDU     A0, S1, R0
  118:  LW        A1, 0 (S0)
  11C:  ADDIU     S0, S0, 4
  120:  DADDU     A0, S1, R0
  124:  JAL       {Func:SetVariable}
  128:  DADDU     A2, S3, R0
  12C:  LW        A1, 0 (S0)
  130:  ADDIU     S0, S0, 4
  134:  DADDU     A0, S1, R0
  138:  JAL       {Func:SetVariable}
  13C:  DADDU     A2, S4, R0
  140:  DADDU     A0, S1, R0
  144:  LW        A1, 0 (S0)
  148:  JAL       {Func:SetVariable}
  14C:  DADDU     A2, S2, R0
  150:  LW        RA, 24 (SP)
  154:  LW        S4, 20 (SP)
  158:  LW        S3, 1C (SP)
  15C:  LW        S2, 18 (SP)
  160:  LW        S1, 14 (SP)
  164:  LW        S0, 10 (SP)
  168:  LDC1      F26, 40 (SP)
  16C:  LDC1      F24, 38 (SP)
  170:  LDC1      F22, 30 (SP)
  174:  LDC1      F20, 28 (SP)
  178:  ADDIU     V0, R0, 2
  17C:  JR        RA
  180:  ADDIU     SP, SP, 48

#new:IntTable $IntTable_80227910_05
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:IdleAnimations $IdleAnimations_80227968_05
.Status:Normal    00470001
.Status:Stone     00470000
.Status:Sleep     00470013
.Status:Poison    00470001
.Status:Stop      00470000
.Status:Static    00470000
.Status:Paralyze  00470000
.Status:Dizzy     00470014
.Status:Fear      00470000
.Status:End

#new:IdleAnimations $IdleAnimations_802279B4_05
.Status:Normal    0047001A
.Status:Stop      00470019
.Status:Paralyze  00470019
.Status:End

#new:IdleAnimations $IdleAnimations_802279D0_05
.Status:Normal    00D50000
.Status:End

#new:DefenseTable $DefenseTable_802279DC_05
.Element:Normal 00000006
.Element:Blast  00000006
.Element:End

#new:DefenseTable $DefenseTable_802279F0_05
.Element:Normal 00000003
.Element:End

#new:DefenseTable $DefenseTable_802279FC_05
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80227A08_05
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   30`
.Status:Shrink     40`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80227AB4_05
00800000 01000000 003C00FF $IdleAnimations_80227968_05 $DefenseTable_802279DC_05 00001000 00000000 00000000 00000000 
00020000 020C3D00 00EC00FF 00000000 $DefenseTable_802279F0_05 00000000 00000000 00000000 00000000 
00020000 032D0000 BA1A00FF 00000000 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 04000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 05000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 06000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 07000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 08000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 
00120003 09000000 000000FF $IdleAnimations_802279D0_05 $DefenseTable_802279FC_05 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_80227C20_05
    0:  Call     8027D434 ( FFFFFF81 00000003 00000046 )
   18:  Call     8027D970 ( FFFFFF81 00000003 0000001E 0000001E )
   34:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80228A7C_05 )
   48:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227DD4_05 )
   5C:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227E08_05 )
   70:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80227D2C_05 )
   84:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   9C:  Call     SetActorVar 	( .Actor:Self 00000001 0047001C )
   B4:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000003 00000014 )
   E4:  Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   FC:  Return
  104:  End

#new:Script $Script_NextTurn_80227D2C_05
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetBattlePhase ( *Var[0] )
   38:  Switch  *Var[0] 
   44:  	Case  ==  .Phase:PlayerBegin
   50:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   68:  EndSwitch
   70:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
   84:  Call     UseIdleAnimation 	( .Actor:Self .True )
   98:  Return
   A0:  End

#new:Script $Script_Idle_80227DD4_05
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Goto     00000000 
   24:  Return
   2C:  End

#new:Script $Script_HandleEvent_80227E08_05
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastElement ( *Var[E] )
   38:  Call     GetEventType 	( .Actor:Self *Var[D] )
   4C:  Switch  *Var[D] 
   58:  	Case  ==  .Event:BeginFirstStrike
   64:  	Case  ==  .Event:HitCombo
   70:  		SetConst  *Var[0]  00000001 
   80:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
   98:  		ExecWait DoNormalHit 
   A4:  	Case  ==  .Event:Hit
   B0:  		SetConst  *Var[0]  00000001 
   C0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
   D8:  		ExecWait DoNormalHit 
   E4:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   FC:  	Case  ==  .Event:Death
  108:  		SetConst  *Var[0]  00000001 
  118:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  130:  		ExecWait DoNormalHit 
  13C:  		Wait     0000000A 
  148:  		SetConst  *Var[0]  00000001 
  158:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  170:  		ExecWait DoDeath 
  17C:  		Return
  184:  	Case  ==  .Event:BurnHit
  190:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  1A8:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  1C0:  		If  *Var[0]  ==  00000000 
  1D0:  			Set  *Var[0]  00000001 
  1E0:  			Set  *Var[1]  00470015 
  1F0:  			Set  *Var[2]  00470016 
  200:  			ExecWait DoBurnHit 
  20C:  		Else
  214:  			Set  *Var[0]  00000001 
  224:  			Set  *Var[1]  00470017 
  234:  			Set  *Var[2]  00470018 
  244:  			ExecWait DoBurnHit 
  250:  		EndIf
  258:  	Case  ==  .Event:BurnDeath
  264:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  27C:  		If  *Var[0]  ==  00000000 
  28C:  			Set  *Var[0]  00000001 
  29C:  			Set  *Var[1]  00470015 
  2AC:  			Set  *Var[2]  00470016 
  2BC:  		Else
  2C4:  			Set  *Var[0]  00000001 
  2D4:  			Set  *Var[1]  00470017 
  2E4:  			Set  *Var[2]  00470018 
  2F4:  		EndIf
  2FC:  		ExecWait DoBurnHit 
  308:  		Wait     0000000A 
  314:  		SetConst  *Var[0]  00000001 
  324:  		SetConst  *Var[1]  *Var[2] 
  334:  		ExecWait DoDeath 
  340:  		Return
  348:  	Case  ==  .Event:MultibounceHit
  354:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  36C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  384:  		If  *Var[0]  ==  00000000 
  394:  			SetConst  *Var[0]  00000001 
  3A4:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  3BC:  			ExecWait DoNormalHit 
  3C8:  		Else
  3D0:  			SetConst  *Var[0]  00000001 
  3E0:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  3F8:  			ExecWait $Script_8022B158_05 
  404:  		EndIf
  40C:  	Case  ==  .Event:MultibounceDeath
  418:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  430:  		If  *Var[0]  ==  00000000 
  440:  			SetConst  *Var[0]  00000001 
  450:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  468:  			ExecWait DoNormalHit 
  474:  			SetConst  *Var[0]  00000001 
  484:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  49C:  			ExecWait DoDeath 
  4A8:  			Return
  4B0:  		Else
  4B8:  			SetConst  *Var[0]  00000001 
  4C8:  			Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  4E0:  			ExecWait $Script_8022B204_05 
  4EC:  			Return
  4F4:  		EndIf
  4FC:  	Case  ==  .Event:ShockHit
  508:  		SetConst  *Var[0]  00000001 
  518:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  530:  		ExecWait DoShockHit 
  53C:  		SetConst  *Var[0]  00000001 
  54C:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  564:  		ExecWait 8029BD70 
  570:  		SetConst  *Var[0]  00000001 
  580:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  598:  		ExecWait DoReturnHome 
  5A4:  	Case  ==  .Event:ShockDeath
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  5D8:  		ExecWait DoShockHit 
  5E4:  		SetConst  *Var[0]  00000001 
  5F4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  60C:  		ExecWait 8029BD70 
  618:  		SetConst  *Var[0]  00000001 
  628:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
  640:  		ExecWait DoDeath 
  64C:  		Return
  654:  	Case  ==  00000017
  660:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  678:  		If  *Var[0]  ==  00000000 
  688:  			SetConst  *Var[0]  00000001 
  698:  			SetConst  *Var[1]  00470009 
  6A8:  			ExecWait DoImmune 
  6B4:  		Else
  6BC:  			SetConst  *Var[0]  00000001 
  6CC:  			SetConst  *Var[1]  0047001A 
  6DC:  			ExecWait DoImmune 
  6E8:  		EndIf
  6F0:  	Case  ==  .Event:Immune
  6FC:  		Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  714:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  72C:  		If  *Var[0]  ==  00000000 
  73C:  			SetConst  *Var[0]  00000001 
  74C:  			SetConst  *Var[1]  00470009 
  75C:  			ExecWait DoImmune 
  768:  			Call     GetStatusFlags ( .Actor:Self *Var[2] )
  77C:  			If  *Var[2]  ==  00000000 
  78C:  				Wait     00000014 
  798:  				Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  7B0:  				Wait     00000008 
  7BC:  			EndIf
  7C4:  		Else
  7CC:  			SetConst  *Var[0]  00000001 
  7DC:  			SetConst  *Var[1]  0047001A 
  7EC:  			ExecWait DoImmune 
  7F8:  		EndIf
  800:  	Case  ==  .Event:AirLiftFailed
  80C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  824:  		If  *Var[0]  ==  00000000 
  834:  			Set  *Var[1]  00470001 
  844:  		Else
  84C:  			Set  *Var[1]  0047001A 
  85C:  		EndIf
  864:  		Set  *Var[0]  00000001 
  874:  		ExecWait DoImmune 
  880:  	Case  ==  .Event:EndFirstStrike
  88C:  		ExecWait $Script_8022AD84_05 
  898:  		Call     HPBarToHome 	( .Actor:Self )
  8A8:  	Case  ==  .Event:RecoverStatus
  8B4:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  8CC:  		If  *Var[0]  ==  00000000 
  8DC:  			SetConst  *Var[1]  00470001 
  8EC:  			SetConst  *Var[0]  00000001 
  8FC:  			ExecWait DoRecover 
  908:  		Else
  910:  			SetConst  *Var[0]  00000001 
  920:  			SetConst  *Var[1]  0047001A 
  930:  			ExecWait DoImmune 
  93C:  		EndIf
  944:  	Case  ==  .Event:FlipTrigger
  950:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  968:  		If  *Var[0]  ==  00000001 
  978:  			SetConst  *Var[0]  00000001 
  988:  			SetConst  *Var[1]  00470012 
  998:  			ExecWait DoNormalHit 
  9A4:  			Return
  9AC:  		EndIf
  9B4:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  9CC:  		If  *Var[0]  >  00000000 
  9DC:  			Sub  *Var[0]  00000001 
  9EC:  			Call     SetActorVar 	( .Actor:Self 00000004 *Var[0] )
  A04:  		EndIf
  A0C:  		Call     80269E80 ( *Var[0] )
  A1C:  		If  *Var[0]  ==  00000016 
  A2C:  			Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
  A44:  		EndIf
  A4C:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  A64:  		If  *Var[0]  ==  00000000 
  A74:  			Call     GetBattleFlags ( *Var[D] )
  A84:  			If  *Var[D]  &  00000020 
  A94:  				Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  AAC:  			EndIf
  AB4:  			ExecWait $Script_FlipOver_KentC_05 
  AC0:  		Else
  AC8:  			Call     GetBattleFlags ( *Var[D] )
  AD8:  			If  *Var[D]  &  00000020 
  AE8:  				Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
  B00:  				Call     GetLastDamage 	( .Actor:Self *Var[0] )
  B14:  				If  *Var[0]  >  00000000 
  B24:  					SetConst  *Var[0]  00000001 
  B34:  					SetConst  *Var[1]  0047001C 
  B44:  					ExecWait DoNormalHit 
  B50:  				Else
  B58:  					SetConst  *Var[0]  00000001 
  B68:  					SetConst  *Var[1]  00470009 
  B78:  					ExecWait DoImmune 
  B84:  					Call     GetStatusFlags ( .Actor:Self *Var[2] )
  B98:  					If  *Var[2]  ==  00000000 
  BA8:  						Wait     00000014 
  BB4:  						Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  BCC:  						Wait     00000008 
  BD8:  					EndIf
  BE0:  				EndIf
  BE8:  			Else
  BF0:  				SetConst  *Var[0]  00000001 
  C00:  				SetConst  *Var[1]  0047001C 
  C10:  				ExecWait DoNormalHit 
  C1C:  			EndIf
  C24:  		EndIf
  C2C:  	Default
  C34:  EndSwitch
  C3C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  C50:  Call     UseIdleAnimation 	( .Actor:Self .True )
  C64:  Return
  C6C:  End

#new:Script $Script_TakeTurn_80228A7C_05
    0:  Call     SetActorVar 	( .Actor:Self 00000004 00000002 )
   18:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   30:  If  *Var[0]  ==  00000001 
   40:  	Call     UseIdleAnimation 	( .Actor:Self .False )
   54:  	Call     EnableIdleScript 	( .Actor:Self 00000000 )
   68:  	Call     UseCamPreset 	( 0000000E )
   78:  	Call     SetCamZoom  	( 000000C8 )
   88:  	Call     SetCamOffsetZ 	( 00000014 )
   98:  	Call     CamTargetActor ( .Actor:Self )
   A8:  	Call     MoveCamOver 	( 00000019 )
   B8:  	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   D0:  	Sub  *Var[0]  00000001 
   E0:  	Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
   F8:  	If  *Var[0]  >  00000000 
  108:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  124:  		Add  *Var[0]  00000024 
  134:  		Add  *Var[1]  00000012 
  144:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  15C:  		Loop     00000005 
  168:  			Call     PlayEffect  	( {FX:Sweat:Large} *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  1AC:  			Wait     00000005 
  1B8:  		EndLoop
  1C0:  		Wait     0000001E 
  1CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  1E4:  		Call     UseCamPreset 	( 00000002 )
  1F4:  		Call     MoveCamOver 	( 00000014 )
  204:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  218:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  22C:  		Return
  234:  	Else
  23C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  258:  		Add  *Var[0]  00000024 
  268:  		Add  *Var[1]  00000012 
  278:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  290:  		Loop     00000005 
  29C:  			Call     PlayEffect  	( {FX:Sweat:Large} *Var[0] *Var[1] *Var[2] 00000001 000000E1 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E0:  			Wait     00000005 
  2EC:  		EndLoop
  2F4:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
  30C:  		Wait     0000001E 
  318:  		Call     UseCamPreset 	( 00000002 )
  328:  		Call     MoveCamOver 	( 0000000F )
  338:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  350:  		Call     SetAnimation 	( .Actor:Self 00000001 00470019 )
  368:  		Thread
  370:  			Wait     00000003 
  37C:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  390:  			If  *Var[0]  !&  00080000 
  3A0:  				Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000001B 00000000 )
  3BC:  			Else
  3C4:  				Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
  3E0:  			EndIf
  3E8:  			Set  *Var[0]  00000000 
  3F8:  			Loop     00000005 
  404:  				Add  *Var[0]  00000024 
  414:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  430:  				Wait     00000001 
  43C:  			EndLoop
  444:  		EndThread
  44C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  460:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  47C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  498:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4B8:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  4CC:  		If  *Var[3]  !&  00080000 
  4DC:  			Call     $Function_80218B50_05 ( 00000050 0000000E )
  4F0:  			Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[0.5] )
  50C:  		EndIf
  514:  		Wait     00000003 
  520:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  53C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  558:  		Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  570:  		Wait     0000000A 
  57C:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_802279DC_05 )
  594:  		Call     SetEnemyTargetOffset 	( .Actor:Self 00000001 00000000 0000003C )
  5B0:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .True )
  5CC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .False )
  5E8:  		Call     SetSpriteFlags ( .Actor:Self 00000002 00020004 )
  600:  		Call     SetSpriteFlags ( .Actor:Self 00000001 00800004 )
  618:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80227968_05 )
  630:  		Call     $Function_80218BA8_05 ( FFFFFFE6 00000026 00000002 0000003F )
  64C:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  664:  		Call     SetActorVar 	( .Actor:Self 00000001 0047001C )
  67C:  	EndIf
  684:  EndIf
  68C:  Call     RandInt     	( 00000064 *Var[0] )
  6A0:  If  *Var[0]  <  00000032 
  6B0:  	Call     GetStatusFlags ( .Actor:Partner *Var[0] )
  6C4:  	If  *Var[0]  !&  01000000 
  6D4:  		ExecWait $Script_ShellToss_KentC_05 
  6E0:  	Else
  6E8:  		ExecWait $Script_Tackle_KentC_05 
  6F4:  	EndIf
  6FC:  Else
  704:  	ExecWait $Script_Tackle_KentC_05 
  710:  EndIf
  718:  Return
  720:  End

#new:Script $Script_ShellToss_KentC_05
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000000E )
   4C:  Call     SetCamZoom  	( 000000C8 )
   5C:  Call     SetCamOffsetZ 	( 00000014 )
   6C:  Call     CamTargetActor ( .Actor:Self )
   7C:  Call     MoveCamOver 	( 00000019 )
   8C:  Wait     00000014 
   98:  Call     SetAnimation 	( .Actor:Self 00000001 0047000B )
   B0:  Wait     0000000A 
   BC:  Thread
   C4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  	Add  *Var[1]  00000004 
   F0:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  134:  	Wait     00000003 
  140:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  184:  	Wait     00000002 
  190:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  1D4:  EndThread
  1DC:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  1F8:  Call     PlaySoundAtActor 	( .Actor:Self 00000370 )
  20C:  Call     SetAnimation 	( .Actor:Self 00000001 0047000A )
  224:  Wait     0000000A 
  230:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000003 00000010 )
  254:  Switch  *Var[A] 
  260:  	CaseOR  ==  00000006 
  26C:  	CaseOR  ==  00000005 
  278:  		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  28C:  		Call     CheckPlayerHit ( .Actor:Self *Var[B] 00000000 00000000 00000003 00000010 )
  2B0:  		Switch  *Var[B] 
  2BC:  			Case  ==  00000006 
  2C8:  				Call     UseCamPreset 	( 00000002 )
  2D8:  				Call     MoveCamOver 	( 0000001E )
  2E8:  				Call     SetGoalToTarget 	( .Actor:Self )
  2F8:  				Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  314:  				Sub  *Var[0]  00000028 
  324:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  340:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  354:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF10 00000000 *Var[2] )
  370:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  388:  				Call     SetActorPos 	( .Actor:Self 000000F0 00000000 *Var[2] )
  3A4:  				Call     SetGoalToHome 	( .Actor:Self )
  3B4:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3CC:  				Call     8026F6EC ( FFFFFF81 )
  3DC:  				Call     802D62B8 ( 00000370 )
  3EC:  				Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  404:  				Wait     00000008 
  410:  				Call     8027D7F0 ( )
  41C:  				Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  434:  				Call     EnableIdleScript 	( .Actor:Self 00000001 )
  448:  				Call     UseIdleAnimation 	( .Actor:Self .True )
  45C:  				Return
  464:  			Default
  46C:  				Call     GetStatusFlags ( .Actor:Player *Var[0] )
  480:  				If  *Var[0]  !&  0435D000 
  490:  					Call     UseIdleAnimation 	( .Actor:Player .False )
  4A4:  					Call     SetAnimation 	( .Actor:Player 00000000 0001002B )
  4BC:  				EndIf
  4C4:  				Call     UseCamPreset 	( 00000013 )
  4D4:  				Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
  4EC:  				Call     SetCamZoom  	( 000001CC )
  4FC:  				Call     SetCamOffsetZ 	( 00000000 )
  50C:  				Call     MoveCamOver 	( 00000032 )
  51C:  				Call     SetTargetActor ( .Actor:Self .Actor:Player )
  530:  				Call     SetGoalToTarget 	( .Actor:Self )
  540:  				Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  55C:  				Call     GetStatusFlags ( .Actor:Self *Var[3] )
  570:  				If  *Var[3]  !&  00080000 
  580:  					Add  *Var[0]  00000020 
  590:  				Else
  598:  					Add  *Var[0]  0000000C 
  5A8:  				EndIf
  5B0:  				Set  *Var[1]  00000000 
  5C0:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  5D4:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5F0:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
  608:  				If  *Var[A]  ==  00000005 
  618:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  63C:  				EndIf
  644:  				Set  *Var[A]  00000001 
  654:  		EndSwitch
  65C:  	EndCaseGroup
  664:  	Default
  66C:  		Call     UseCamPreset 	( 00000013 )
  67C:  		Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
  694:  		Call     SetCamZoom  	( 000001CC )
  6A4:  		Call     SetCamOffsetZ 	( 00000000 )
  6B4:  		Call     MoveCamOver 	( 00000032 )
  6C4:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  6D8:  		Call     GetStatusFlags ( .Actor:Player *Var[0] )
  6EC:  		If  *Var[0]  !&  0435D000 
  6FC:  			Call     SetAnimation 	( .Actor:Player 00000000 0001002B )
  714:  		EndIf
  71C:  		Call     SetGoalToTarget 	( .Actor:Self )
  72C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  748:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  75C:  		If  *Var[3]  !&  00080000 
  76C:  			Add  *Var[0]  00000020 
  77C:  		Else
  784:  			Add  *Var[0]  0000000C 
  794:  		EndIf
  79C:  		Set  *Var[1]  00000000 
  7AC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  7C0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7DC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  7F4:  		Call     SetGoalToTarget 	( .Actor:Self )
  804:  		Call     GetStatusFlags ( .Actor:Self *Var[E] )
  818:  		If  *Var[E]  !&  00080000 
  828:  			Call     80269EAC ( 00000018 )
  838:  		EndIf
  840:  		Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 0000FFFF 00000000 00000003 00000020 )
  868:  		Set  *Var[A]  00000000 
  878:  		If  *Var[E]  !&  00080000 
  888:  			Call     GetBattleFlags ( *Var[0] )
  898:  			If  *Var[0]  !&  80000000 
  8A8:  				Call     GetStatusFlags ( .Actor:Player *Var[0] )
  8BC:  				If  *Var[0]  !&  00100000 
  8CC:  					Set  *Var[A]  00000001 
  8DC:  				EndIf
  8E4:  			EndIf
  8EC:  		EndIf
  8F4:  EndSwitch
  8FC:  If  *Var[A]  !=  00000000 
  90C:  	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  920:  	Call     SetGoalToTarget 	( .Actor:Self )
  930:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  94C:  	Add  *Var[0]  00000020 
  95C:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  970:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  98C:  	Call     RunToGoal   	( .Actor:Self 00000000 .False )
  9A4:  	Call     SetGoalToTarget 	( .Actor:Self )
  9B4:  	Call     80269EAC ( 00000019 )
  9C4:  	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
  9EC:  	Call     GetBattleFlags ( *Var[0] )
  9FC:  	If  *Var[0]  !&  80000000 
  A0C:  		Call     SetGoalToTarget 	( .Actor:Self )
  A1C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A38:  		Call     SetGoalToPos 	( .Actor:Self FFFFFF10 00000000 *Var[2] )
  A54:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  A6C:  		Call     UseCamPreset 	( 00000002 )
  A7C:  		Call     MoveCamOver 	( 00000014 )
  A8C:  		Call     SetActorPos 	( .Actor:Self 000000F0 00000000 *Var[2] )
  AA8:  		Call     SetGoalToHome 	( .Actor:Self )
  AB8:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  AD0:  		Call     8026F6EC ( FFFFFF81 )
  AE0:  		Call     802D62B8 ( 00000370 )
  AF0:  		Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  B08:  		Wait     00000008 
  B14:  		Call     8027D7F0 ( )
  B20:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  B38:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B4C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  B60:  		Return
  B68:  	Else
  B70:  		Call     UseCamPreset 	( 00000013 )
  B80:  		Call     SetCamTarget 	( FFFFFFD3 0000003C 00000000 )
  B98:  		Call     SetCamZoom  	( 000001CC )
  BA8:  		Call     SetCamOffsetZ 	( 00000000 )
  BB8:  		Call     MoveCamOver 	( 0000001E )
  BC8:  	EndIf
  BD0:  EndIf
  BD8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BF4:  Add  *Var[0]  0000001E 
  C04:  Set  *Var[1]  00000000 
  C14:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  C28:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  C44:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  C64:  Thread
  C6C:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  C80:  	If  *Var[3]  !&  00080000 
  C90:  		Call     $Function_80218B50_05 ( 00000050 0000000E )
  CA4:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  CC0:  	EndIf
  CC8:  EndThread
  CD0:  Add  *Var[0]  00000010 
  CE0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  CFC:  Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  D1C:  Thread
  D24:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  D38:  	If  *Var[3]  !&  00080000 
  D48:  		Call     $Function_80218B50_05 ( 00000050 0000000E )
  D5C:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  D78:  	EndIf
  D80:  EndThread
  D88:  Add  *Var[0]  0000000A 
  D98:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DB4:  Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  DD4:  Thread
  DDC:  	Call     GetStatusFlags ( .Actor:Self *Var[3] )
  DF0:  	If  *Var[3]  !&  00080000 
  E00:  		Call     $Function_80218B50_05 ( 00000050 0000000E )
  E14:  		Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  E30:  	EndIf
  E38:  EndThread
  E40:  Call     8026F6EC ( FFFFFF81 )
  E50:  Call     802D62B8 ( 00000370 )
  E60:  Call     SetAnimation 	( .Actor:Self 00000001 0047000C )
  E78:  Wait     00000008 
  E84:  Call     8027D7F0 ( )
  E90:  Call     UseCamPreset 	( 00000002 )
  EA0:  Call     MoveCamOver 	( 00000014 )
  EB0:  SetConst  *Var[0]  00000001 
  EC0:  SetConst  *Var[1]  00470004 
  ED0:  ExecWait DoReturnHome 
  EDC:  Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  EF4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  F08:  Call     UseIdleAnimation 	( .Actor:Self .True )
  F1C:  Return
  F24:  End

#new:Script $Script_Tackle_KentC_05
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     SetCamZoom  	( 00000118 )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     MoveCamOver 	( 00000014 )
   7C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   94:  Call     SetGoalToTarget 	( .Actor:Self )
   A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C0:  Add  *Var[0]  00000032 
   D0:  Set  *Var[1]  00000000 
   E0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
   F4:  Call     SetAnimation 	( .Actor:Self 00000001 00470003 )
  10C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  128:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  140:  Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  158:  Wait     00000008 
  164:  Call     PlaySoundAtActor 	( .Actor:Self 000003E7 )
  178:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  19C:  Switch  *Var[0] 
  1A8:  	CaseOR  ==  00000006 
  1B4:  	CaseOR  ==  00000005 
  1C0:  		Set  *Var[A]  *Var[0] 
  1D0:  		Call     SetAnimation 	( .Actor:Self 00000001 00470006 )
  1E8:  		Thread
  1F0:  			Wait     00000007 
  1FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00470007 )
  214:  			Wait     00000004 
  220:  			Call     SetAnimation 	( .Actor:Self 00000001 00470008 )
  238:  		EndThread
  240:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  254:  		Call     SetGoalToTarget 	( .Actor:Self )
  264:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  280:  		Sub  *Var[0]  00000014 
  290:  		Set  *Var[1]  00000000 
  2A0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2BC:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  2DC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  2F0:  		Thread
  2F8:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  30C:  			If  *Var[3]  !&  00080000 
  31C:  				Call     $Function_80218B50_05 ( 00000050 0000000E )
  330:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  34C:  			EndIf
  354:  		EndThread
  35C:  		Sub  *Var[0]  0000000F 
  36C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  380:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  39C:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  3BC:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  3D0:  		Thread
  3D8:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  3EC:  			If  *Var[3]  !&  00080000 
  3FC:  				Call     $Function_80218B50_05 ( 00000050 0000000E )
  410:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  42C:  			EndIf
  434:  		EndThread
  43C:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  454:  		Sub  *Var[0]  0000000A 
  464:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  4A0:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  4B4:  		Thread
  4BC:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  4D0:  			If  *Var[3]  !&  00080000 
  4E0:  				Call     $Function_80218B50_05 ( 00000050 0000000E )
  4F4:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  510:  			EndIf
  518:  		EndThread
  520:  		Wait     00000008 
  52C:  		If  *Var[A]  ==  00000005 
  53C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  560:  		EndIf
  568:  		Call     UseCamPreset 	( 00000002 )
  578:  		Call     MoveCamOver 	( 00000014 )
  588:  		Set  *Var[3]  00000000 
  598:  		Loop     0000000C 
  5A4:  			Add  *Var[3]  0000000F 
  5B4:  			Call     SetActorAngle 	( .Actor:Self *Var[3] )
  5C8:  			Wait     00000001 
  5D4:  		EndLoop
  5DC:  		Call     SetGoalToHome 	( .Actor:Self )
  5EC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  600:  		Call     SetAnimation 	( .Actor:Self 00000001 00470004 )
  618:  		Call     8026B438 ( FFFFFF81 00000001 000000B4 )
  630:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  64C:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  664:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  67C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  694:  		Set  *Var[3]  000000B4 
  6A4:  		Loop     0000000F 
  6B0:  			Sub  *Var[3]  0000000C 
  6C0:  			Call     SetActorAngle 	( .Actor:Self *Var[3] )
  6D4:  			Wait     00000001 
  6E0:  		EndLoop
  6E8:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  6FC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  710:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  724:  		Return
  72C:  	EndCaseGroup
  734:  EndSwitch
  73C:  Call     SetAnimation 	( .Actor:Self 00000001 00470006 )
  754:  Thread
  75C:  	Wait     00000005 
  768:  	Call     SetAnimation 	( .Actor:Self 00000001 00470007 )
  780:  	Wait     00000002 
  78C:  	Call     SetAnimation 	( .Actor:Self 00000001 00470008 )
  7A4:  EndThread
  7AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
  7C0:  Call     SetGoalToTarget 	( .Actor:Self )
  7D0:  Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
  7F0:  Wait     00000002 
  7FC:  Call     SetGoalToTarget 	( .Actor:Self )
  80C:  Call     GetStatusFlags ( .Actor:Self *Var[F] )
  820:  If  *Var[F]  !&  00080000 
  830:  	Call     80269EAC ( 00000018 )
  840:  EndIf
  848:  Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 0000FFFF 00000000 0000000A 00000020 )
  870:  Switch  *Var[F] 
  87C:  	CaseOR  ==  00000000 
  888:  	CaseOR  ==  00000002 
  894:  	CaseOR  ==  0000000A 
  8A0:  		Call     UseCamPreset 	( 00000002 )
  8B0:  		Call     MoveCamOver 	( 0000001E )
  8C0:  		Call     GetBattleFlags ( *Var[0] )
  8D0:  		If  *Var[0]  !&  80000000 
  8E0:  			Call     GetStatusFlags ( .Actor:Player *Var[0] )
  8F4:  			If  *Var[0]  !&  00100000 
  904:  				Call     GetStatusFlags ( .Actor:Self *Var[E] )
  918:  				If  *Var[E]  !&  00080000 
  928:  					Call     80279AD4 ( FFFFFF81 )
  938:  					Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  94C:  				EndIf
  954:  			EndIf
  95C:  		EndIf
  964:  		Thread
  96C:  			Call     $Function_80218B50_05 ( 00000050 0000000E )
  980:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  994:  			If  *Var[3]  !&  00080000 
  9A4:  				Call     $Function_80218B50_05 ( 00000050 0000000E )
  9B8:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  9D4:  			EndIf
  9DC:  		EndThread
  9E4:  		Thread
  9EC:  			Wait     00000005 
  9F8:  			Call     SetAnimation 	( .Actor:Self 00000001 00470006 )
  A10:  		EndThread
  A18:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A34:  		Add  *Var[0]  00000028 
  A44:  		Set  *Var[1]  00000000 
  A54:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  A68:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A84:  		Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
  AA4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  AB8:  		Thread
  AC0:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  AD4:  			If  *Var[3]  !&  00080000 
  AE4:  				Call     $Function_80218B50_05 ( 00000050 0000000E )
  AF8:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  B14:  			EndIf
  B1C:  		EndThread
  B24:  		Call     SetAnimation 	( .Actor:Self 00000001 00470001 )
  B3C:  		Add  *Var[0]  00000014 
  B4C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B68:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B88:  		Call     PlaySoundAtActor 	( .Actor:Self 000020EC )
  B9C:  		Thread
  BA4:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  BB8:  			If  *Var[3]  !&  00080000 
  BC8:  				Call     $Function_80218B50_05 ( 00000050 0000000E )
  BDC:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  BF8:  			EndIf
  C00:  		EndThread
  C08:  		Wait     00000008 
  C14:  		If  *Var[F]  ==  0000000A 
  C24:  			Return
  C2C:  		EndIf
  C34:  		Call     UseCamPreset 	( 00000002 )
  C44:  		Call     MoveCamOver 	( 00000014 )
  C54:  		ExecWait $Script_8022AD84_05 
  C60:  	Case  ==  00000003 
  C6C:  	EndCaseGroup
  C74:  EndSwitch
  C7C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  C90:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CA4:  Return
  CAC:  End

#new:Script $Script_8022AD84_05
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00470004 
   20:  ExecWait DoReturnHome 
   2C:  Return
   34:  End

#new:Script $Script_FlipOver_KentC_05
    0:  Call     SetEnemyTargetOffset 	( .Actor:Self 00000001 00000000 00000028 )
   1C:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_802279F0_05 )
   34:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802279B4_05 )
   4C:  Call     $Function_80218BA8_05 ( FFFFFFE8 0000002F 00000017 00000025 )
   68:  Call     SetAnimation 	( .Actor:Self 00000001 0047001C )
   80:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   98:  Call     SetActorVar 	( .Actor:Self 00000001 00470012 )
   B0:  Thread
   B8:  	Wait     00000004 
   C4:  	Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  	If  *Var[0]  !&  00080000 
   E8:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000023 00000000 )
  104:  	Else
  10C:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
  128:  	EndIf
  130:  	Set  *Var[0]  00000000 
  140:  	Loop     00000005 
  14C:  		Sub  *Var[0]  00000012 
  15C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  178:  		Wait     00000001 
  184:  	EndLoop
  18C:  EndThread
  194:  UseIntBuffer $IntTable_80227910_05 
  1A0:  Loop     00000016 
  1AC:  	Get1Int  *Var[0] 
  1B8:  	Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  1D4:  	If  *Var[0]  ==  00000000 
  1E4:  		Thread
  1EC:  			Call     GetStatusFlags ( .Actor:Self *Var[3] )
  200:  			If  *Var[3]  !&  00080000 
  210:  				Call     $Function_80218B50_05 ( 00000050 0000000E )
  224:  				Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
  240:  			EndIf
  248:  		EndThread
  250:  	EndIf
  258:  	Wait     00000001 
  264:  EndLoop
  26C:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  288:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  2A4:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  2C0:  Call     SetAnimation 	( .Actor:Self 00000001 0047001D )
  2D8:  Wait     00000001 
  2E4:  Call     SetAnimation 	( .Actor:Self 00000001 0047001E )
  2FC:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .False )
  318:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .True )
  334:  Call     SetSpriteFlags ( .Actor:Self 00000002 00000004 )
  34C:  Call     SetSpriteFlags ( .Actor:Self 00000001 00020004 )
  364:  Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
  37C:  Wait     00000008 
  388:  Return
  390:  End

#new:Script $Script_8022B158_05
    0:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   18:  Set  *Var[A]  00000005 
   28:  ExecWait $Script_8022B2E8_05 
   34:  Set  *Var[2]  00000000 
   44:  Loop     00000024 
   50:  	Add  *Var[2]  0000001E 
   60:  	Call     SetActorAngle 	( .Actor:Self *Var[2] )
   74:  	Wait     00000001 
   80:  EndLoop
   88:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   9C:  Return
   A4:  End

#new:Script $Script_8022B204_05
    0:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   18:  Set  *Var[A]  00000000 
   28:  ExecWait $Script_8022B2E8_05 
   34:  Set  *Var[2]  00000000 
   44:  Loop     00000030 
   50:  	Add  *Var[2]  0000001E 
   60:  	Call     SetActorAngle 	( .Actor:Self *Var[2] )
   74:  	Wait     00000001 
   80:  EndLoop
   88:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   9C:  Wait     0000000A 
   A8:  Set  *Var[0]  00000001 
   B8:  Set  *Var[1]  FFFFFFFF 
   C8:  ExecWait DoDeath 
   D4:  Return
   DC:  End

#new:Script $Script_8022B2E8_05
    0:  Call     GetStatusFlags ( .Actor:Self *Var[3] )
   14:  If  *Var[3]  &  00080000 
   24:  	Return
   2C:  EndIf
   34:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[3] )
   4C:  Call     GetLastDamage 	( .Actor:Self *Var[4] )
   60:  If  *Var[4]  >  *Var[3] 
   70:  	Set  *Var[4]  *Var[3] 
   80:  EndIf
   88:  If  *Var[4]  >  00000006 
   98:  	Set  *Var[4]  00000006 
   A8:  EndIf
   B0:  If  *Var[4]  >  00000000 
   C0:  	Thread
   C8:  		Sub  *Var[3]  *Var[4] 
   D8:  		Call     SetActorVar 	( .Actor:Self 00000003 *Var[3] )
   F0:  		Set  *Var[5]  00000004 
  100:  		Loop     *Var[4] 
  10C:  			Exec     $Script_8022B444_05 
  118:  			Add  *Var[5]  00000001 
  128:  			Wait     *Var[A] 
  134:  		EndLoop
  13C:  	EndThread
  144:  EndIf
  14C:  Return
  154:  End

#new:Script $Script_8022B444_05
    0:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[5] 00000212 )
   18:  Call     GetActorPos 	( .Actor:Self *Var[6] *Var[7] *Var[8] )
   34:  Call     SetSpritePos 	( .Actor:Self *Var[5] *Var[6] 00000023 *Var[8] )
   54:  Call     $Function_80218C74_05 ( *Var[6] *Var[8] *Var[0] *Var[1] *Var[2] *Var[3] )
   78:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[5] 00000001 .False )
   94:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[5] *Fixed[1.0] )
   AC:  Call     JumpSpriteA 	( .Actor:Self *Var[5] *Var[0] 00000000 *Var[1] 00000012 .True )
   D4:  Call     JumpSpriteA 	( .Actor:Self *Var[5] *Var[2] 00000000 *Var[3] 00000009 .True )
   FC:  Wait     0000000A 
  108:  Loop     0000000A 
  114:  	Call     SetSpriteFlagBits 	( .Actor:Self *Var[5] 00000001 .False )
  130:  	Wait     00000001 
  13C:  	Call     SetSpriteFlagBits 	( .Actor:Self *Var[5] 00000001 .True )
  158:  	Wait     00000001 
  164:  EndLoop
  16C:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[5] 00000211 )
  184:  Call     AddCoin     	( 00000001 )
  194:  Return
  19C:  End

