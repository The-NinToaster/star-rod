% Automatically dumped from section 03

#new:Actor $03_LeeGoombario
% stats
[Index]        7Fb 
[Level]         0`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E9A4_03 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021EA50_03 
[Script]      $Script_Init_Goombario_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         29`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Function $Function_80218300_03
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        S0, 10 (SP)
   10:  SW        RA, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SDC1      F26, 40 (SP)
   24:  SDC1      F24, 38 (SP)
   28:  SDC1      F22, 30 (SP)
   2C:  SDC1      F20, 28 (SP)
   30:  LW        A0, 148 (S4)
   34:  LW        S2, C (S4)
   38:  JAL       {Func:GetActor}
   3C:  DADDU     S0, A1, R0
   40:  DADDU     S3, V0, R0
   44:  BEQ       S0, R0, .o8C
   48:  ADDIU     S1, S3, C
   4C:  LW        A1, 0 (S2)
   50:  ADDIU     S2, S2, 4
   54:  JAL       {Func:GetVariable}
   58:  DADDU     A0, S4, R0
   5C:  SH        V0, 70 (S3)
   60:  LW        A1, 0 (S2)
   64:  JAL       {Func:GetVariable}
   68:  DADDU     A0, S4, R0
   6C:  SH        V0, 72 (S3)
   70:  SW        R0, 74 (S4)
   74:  SW        R0, 70 (S4)
   78:  LH        V1, 72 (S3)
   7C:  ADDIU     V0, R0, 1
   80:  BNE       V1, V0, .o8C
   84:  ADDIU     V0, R0, 2
   88:  SW        V0, 70 (S4)
        .o8C
   8C:  LW        V0, 70 (S4)
   90:  BNE       V0, R0, .o470
   94:  NOP
   98:  LWC1      F0, 144 (S3)
   9C:  LWC1      F24, C (S1)
   A0:  LWC1      F26, 14 (S1)
   A4:  SWC1      F0, 0 (S1)
   A8:  LWC1      F0, 148 (S3)
   AC:  MFC1      A2, F24
   B0:  MFC1      A3, F26
   B4:  LWC1      F22, 0 (S1)
   B8:  SWC1      F0, 4 (S1)
   BC:  LWC1      F20, 14C (S3)
   C0:  MOV.S     F12, F22
   C4:  MOV.S     F14, F20
   C8:  JAL       80029C80
   CC:  SWC1      F20, 8 (S1)
   D0:  MOV.S     F12, F22
   D4:  MFC1      A2, F24
   D8:  MFC1      A3, F26
   DC:  MOV.S     F14, F20
   E0:  JAL       {Func:Dist2D}
   E4:  SWC1      F0, 48 (S1)
   E8:  LH        V0, 64 (S1)
   EC:  MOV.S     F4, F0
   F0:  BNE       V0, R0, .o13C
   F4:  SWC1      F4, 4C (S1)
   F8:  LWC1      F0, 40 (S1)
   FC:  LWC1      F2, 40 (S1)
  100:  DIV.S     F0, F4, F0
  104:  TRUNC.W.S F10, F0
  108:  MFC1      V1, F10
  10C:  NOP
  110:  SLL       V0, V1, 10
  114:  SRA       V0, V0, 10
  118:  MTC1      V0, F0
  11C:  NOP
  120:  CVT.S.W   F0, F0
  124:  MUL.S     F0, F0, F2
  128:  NOP
  12C:  MOV.S     F2, F4
  130:  SH        V1, 64 (S1)
  134:  BEQ       R0, R0, .o170
  138:  SUB.S     F8, F2, F0
        .o13C
  13C:  MTC1      V0, F2
  140:  NOP
  144:  CVT.S.W   F2, F2
  148:  LH        V0, 64 (S1)
  14C:  DIV.S     F2, F4, F2
  150:  MTC1      V0, F0
  154:  NOP
  158:  CVT.S.W   F0, F0
  15C:  MUL.S     F0, F0, F2
  160:  NOP
  164:  LWC1      F4, 4C (S1)
  168:  SWC1      F2, 40 (S1)
  16C:  SUB.S     F8, F4, F0
        .o170
  170:  LH        V1, 64 (S1)
  174:  BEQ       V1, R0, .o860
  178:  ADDIU     V0, R0, 2
  17C:  LH        V0, 64 (S1)
  180:  LWC1      F2, C (S1)
  184:  LIO       AT, 40490FD0
  18C:  MTC1      AT, F0
  190:  LWC1      F4, 0 (S1)
  194:  MTC1      V0, F6
  198:  NOP
  19C:  CVT.S.W   F6, F6
  1A0:  DIV.S     F0, F0, F6
  1A4:  SUB.S     F2, F2, F4
  1A8:  SWC1      F0, 3C (S1)
  1AC:  MTC1      V1, F0
  1B0:  NOP
  1B4:  CVT.S.W   F0, F0
  1B8:  DIV.S     F2, F2, F0
  1BC:  LWC1      F0, 10 (S1)
  1C0:  SWC1      F2, 30 (S1)
  1C4:  LWC1      F2, 4 (S1)
  1C8:  SW        R0, 44 (S1)
  1CC:  SUB.S     F0, F0, F2
  1D0:  LWC1      F4, 14 (S1)
  1D4:  MOV.S     F2, F6
  1D8:  DIV.S     F0, F0, F2
  1DC:  SWC1      F0, 34 (S1)
  1E0:  MOV.S     F0, F6
  1E4:  DIV.S     F0, F8, F0
  1E8:  LWC1      F2, 8 (S1)
  1EC:  LH        V0, 66 (S1)
  1F0:  SUB.S     F4, F4, F2
  1F4:  LWC1      F2, 40 (S1)
  1F8:  SLTI      V0, V0, 3
  1FC:  ADD.S     F2, F2, F0
  200:  DIV.S     F4, F4, F6
  204:  SWC1      F4, 38 (S1)
  208:  BEQ       V0, R0, .o320
  20C:  SWC1      F2, 40 (S1)
  210:  LH        V0, 64 (S1)
  214:  ADDIU     V1, R0, 168
  218:  BNE       V0, R0, .o224
  21C:  DIV       V1, V0
  220:  BREAK     1C00
        .o224
  224:  ADDIU     AT, R0, FFFF
  228:  BNE       V0, AT, .o23C
  22C:  LUI       AT, 8000
  230:  BNE       V1, AT, .o23C
  234:  NOP
  238:  BREAK     1800
        .o23C
  23C:  MFLO      V1
  240:  LWC1      F8, 4C (S1)
  244:  LIF       F3, 2.8125
  24C:  MTC1      R0, F2
  250:  CVT.D.S   F0, F8
  254:  SUB.D     F0, F0, F2
  258:  LIF       F3, 2.375
  260:  MTC1      R0, F2
  264:  CVT.S.D   F8, F0
  268:  CVT.D.S   F0, F8
  26C:  DIV.D     F0, F0, F2
  270:  CVT.S.D   F8, F0
  274:  LAD       F2, $ConstDouble_80232AF0_03
  27C:  CVT.D.S   F0, F8
  280:  ADD.D     F0, F0, F2
  284:  LIF       F2, 90.0
  28C:  CVT.S.D   F8, F0
  290:  MTC1      V1, F0
  294:  NOP
  298:  CVT.S.W   F0, F0
  29C:  LH        V1, 66 (S1)
  2A0:  ADDIU     V0, R0, 2
  2A4:  SWC1      F2, 24 (S1)
  2A8:  SWC1      F8, 50 (S1)
  2AC:  BNE       V1, V0, .o2D0
  2B0:  SWC1      F0, 28 (S1)
  2B4:  LAD       F2, $ConstDouble_80232AF8_03
  2BC:  CVT.D.S   F0, F8
  2C0:  MUL.D     F0, F0, F2
  2C4:  NOP
  2C8:  CVT.S.D   F0, F0
  2CC:  SWC1      F0, 50 (S1)
        .o2D0
  2D0:  LWC1      F12, 24 (S1)
  2D4:  LIO       AT, 40C90FD0
  2DC:  MTC1      AT, F0
  2E0:  LWC1      F20, 44 (S1)
  2E4:  LWC1      F22, 3C (S1)
  2E8:  SW        R0, 18 (S1)
  2EC:  MUL.S     F12, F12, F0
  2F0:  NOP
  2F4:  SW        R0, 1C (S1)
  2F8:  CVT.D.S   F20, F20
  2FC:  LIF       F0, 360.0
  304:  CVT.D.S   F22, F22
  308:  JAL       {Func:SinRad}
  30C:  DIV.S     F12, F12, F0
  310:  LAD       F2, $ConstDouble_80232B00_03
  318:  BEQ       R0, R0, .o430
  31C:  CVT.D.S   F0, F0
        .o320
  320:  LH        V0, 64 (S1)
  324:  ADDIU     V1, R0, 168
  328:  BNE       V0, R0, .o334
  32C:  DIV       V1, V0
  330:  BREAK     1C00
        .o334
  334:  ADDIU     AT, R0, FFFF
  338:  BNE       V0, AT, .o34C
  33C:  LUI       AT, 8000
  340:  BNE       V1, AT, .o34C
  344:  NOP
  348:  BREAK     1800
        .o34C
  34C:  MFLO      V1
  350:  LWC1      F8, 4C (S1)
  354:  LIF       F3, 2.8125
  35C:  MTC1      R0, F2
  360:  CVT.D.S   F0, F8
  364:  SUB.D     F0, F0, F2
  368:  LIF       F3, 2.375
  370:  MTC1      R0, F2
  374:  CVT.S.D   F8, F0
  378:  CVT.D.S   F0, F8
  37C:  DIV.D     F0, F0, F2
  380:  CVT.S.D   F8, F0
  384:  LAD       F2, $ConstDouble_80232B08_03
  38C:  CVT.D.S   F0, F8
  390:  ADD.D     F0, F0, F2
  394:  LIF       F2, 90.0
  39C:  CVT.S.D   F8, F0
  3A0:  MTC1      V1, F0
  3A4:  NOP
  3A8:  CVT.S.W   F0, F0
  3AC:  LH        V1, 66 (S1)
  3B0:  ADDIU     V0, R0, 4
  3B4:  SWC1      F2, 24 (S1)
  3B8:  SWC1      F8, 50 (S1)
  3BC:  BNE       V1, V0, .o3E4
  3C0:  SWC1      F0, 28 (S1)
  3C4:  LIF       F3, 1.90625
  3CC:  MTC1      R0, F2
  3D0:  CVT.D.S   F0, F8
  3D4:  MUL.D     F0, F0, F2
  3D8:  NOP
  3DC:  CVT.S.D   F0, F0
  3E0:  SWC1      F0, 50 (S1)
        .o3E4
  3E4:  LWC1      F12, 24 (S1)
  3E8:  LIO       AT, 40C90FD0
  3F0:  MTC1      AT, F0
  3F4:  LWC1      F20, 44 (S1)
  3F8:  LWC1      F22, 3C (S1)
  3FC:  SW        R0, 18 (S1)
  400:  MUL.S     F12, F12, F0
  404:  NOP
  408:  SW        R0, 1C (S1)
  40C:  CVT.D.S   F20, F20
  410:  LIF       F0, 360.0
  418:  CVT.D.S   F22, F22
  41C:  JAL       {Func:SinRad}
  420:  DIV.S     F12, F12, F0
  424:  LAD       F2, $ConstDouble_80232B10_03
  42C:  CVT.D.S   F0, F0
        .o430
  430:  MUL.D     F0, F0, F2
  434:  NOP
  438:  MUL.D     F0, F0, F22
  43C:  NOP
  440:  ADD.D     F0, F0, F22
  444:  ADD.D     F20, F20, F0
  448:  CVT.S.D   F20, F20
  44C:  SWC1      F20, 44 (S1)
  450:  ADDIU     A0, R0, FF81
  454:  LW        A2, 58 (S1)
  458:  JAL       80263CFC
  45C:  ADDIU     A1, R0, 1
  460:  JAL       80149CB4
  464:  ADDIU     A0, R0, 2081
  468:  ADDIU     V0, R0, 1
  46C:  SW        V0, 70 (S4)
        .o470
  470:  LW        V1, 70 (S4)
  474:  ADDIU     V0, R0, 2
  478:  BEQ       V1, V0, .o6D0
  47C:  ADDIU     V0, R0, 1
  480:  SLTI      V0, V1, 3
  484:  BEQ       V0, R0, .o49C
  488:  ADDIU     V0, R0, 1
  48C:  BEQ       V1, V0, .o4B0
  490:  DADDU     V0, R0, R0
  494:  BEQ       R0, R0, .o860
  498:  NOP
        .o49C
  49C:  ADDIU     V0, R0, 3
  4A0:  BEQ       V1, V0, .o78C
  4A4:  DADDU     V0, R0, R0
  4A8:  BEQ       R0, R0, .o860
  4AC:  NOP
        .o4B0
  4B0:  LWC1      F2, 44 (S1)
  4B4:  LIO       AT, 3FC90FD0
  4BC:  MTC1      AT, F0
  4C0:  NOP
  4C4:  C.LT.S    F0, F2
  4C8:  NOP
  4CC:  BC1F      .o4E0
  4D0:  ADDIU     A0, R0, FF81
  4D4:  LW        A2, 5C (S1)
  4D8:  JAL       80263CFC
  4DC:  ADDIU     A1, R0, 1
        .o4E0
  4E0:  LWC1      F6, 0 (S1)
  4E4:  LWC1      F0, 30 (S1)
  4E8:  LWC1      F4, 4 (S1)
  4EC:  LWC1      F22, 144 (S3)
  4F0:  ADD.S     F6, F6, F0
  4F4:  LWC1      F0, 34 (S1)
  4F8:  LWC1      F2, 38 (S1)
  4FC:  ADD.S     F4, F4, F0
  500:  LWC1      F0, 8 (S1)
  504:  LWC1      F20, 148 (S3)
  508:  ADD.S     F0, F0, F2
  50C:  SWC1      F6, 0 (S1)
  510:  SWC1      F4, 4 (S1)
  514:  SWC1      F0, 8 (S1)
  518:  LWC1      F0, 148 (S3)
  51C:  MOV.S     F2, F6
  520:  SWC1      F0, 18 (S1)
  524:  SWC1      F2, 144 (S3)
  528:  JAL       {Func:SinRad}
  52C:  LWC1      F12, 44 (S1)
  530:  LWC1      F2, 50 (S1)
  534:  MUL.S     F2, F2, F0
  538:  NOP
  53C:  LWC1      F0, 4 (S1)
  540:  ADD.S     F0, F0, F2
  544:  SWC1      F0, 148 (S3)
  548:  LWC1      F0, 8 (S1)
  54C:  SWC1      F0, 14C (S3)
  550:  LWC1      F2, 10 (S1)
  554:  LWC1      F0, 148 (S3)
  558:  C.LT.S    F0, F2
  55C:  NOP
  560:  BC1F      .o580
  564:  MOV.S     F12, F22
  568:  LH        V0, 64 (S1)
  56C:  SLTI      V0, V0, 3
  570:  BNEL      V0, R0, .o57C
  574:  SWC1      F2, 148 (S3)
  578:  MOV.S     F12, F22
        .o57C
  57C:  LWC1      F0, 148 (S3)
        .o580
  580:  LW        A2, 144 (S3)
  584:  NEG.S     F0, F0
  588:  MFC1      A3, F0
  58C:  JAL       80029C80
  590:  NEG.S     F14, F20
  594:  NEG.S     F0, F0
  598:  SWC1      F0, 164 (S3)
  59C:  LH        V0, 66 (S1)
  5A0:  LWC1      F0, 148 (S3)
  5A4:  SLTI      V0, V0, 3
  5A8:  BEQ       V0, R0, .o5F8
  5AC:  SWC1      F0, 1C (S1)
  5B0:  LWC1      F12, 24 (S1)
  5B4:  LIO       AT, 40C90FD0
  5BC:  MTC1      AT, F0
  5C0:  LWC1      F20, 44 (S1)
  5C4:  MUL.S     F12, F12, F0
  5C8:  NOP
  5CC:  LWC1      F22, 3C (S1)
  5D0:  CVT.D.S   F20, F20
  5D4:  LIF       F0, 360.0
  5DC:  CVT.D.S   F22, F22
  5E0:  JAL       {Func:SinRad}
  5E4:  DIV.S     F12, F12, F0
  5E8:  LAD       F2, $ConstDouble_80232B18_03
  5F0:  BEQ       R0, R0, .o63C
  5F4:  CVT.D.S   F0, F0
        .o5F8
  5F8:  LWC1      F12, 24 (S1)
  5FC:  LIO       AT, 40C90FD0
  604:  MTC1      AT, F0
  608:  LWC1      F20, 44 (S1)
  60C:  MUL.S     F12, F12, F0
  610:  NOP
  614:  LWC1      F22, 3C (S1)
  618:  CVT.D.S   F20, F20
  61C:  LIF       F0, 360.0
  624:  CVT.D.S   F22, F22
  628:  JAL       {Func:SinRad}
  62C:  DIV.S     F12, F12, F0
  630:  LAD       F2, $ConstDouble_80232B20_03
  638:  CVT.D.S   F0, F0
        .o63C
  63C:  MUL.D     F0, F0, F2
  640:  NOP
  644:  MUL.D     F0, F0, F22
  648:  NOP
  64C:  ADD.D     F0, F0, F22
  650:  ADD.D     F20, F20, F0
  654:  CVT.S.D   F20, F20
  658:  SWC1      F20, 44 (S1)
  65C:  LWC1      F12, 24 (S1)
  660:  LWC1      F0, 28 (S1)
  664:  ADD.S     F12, F12, F0
  668:  JAL       80029B24
  66C:  SWC1      F12, 24 (S1)
  670:  LHU       V0, 64 (S1)
  674:  SWC1      F0, 24 (S1)
  678:  ADDIU     V0, V0, FFFF
  67C:  SH        V0, 64 (S1)
  680:  SLL       V0, V0, 10
  684:  BNE       V0, R0, .o860
  688:  DADDU     V0, R0, R0
  68C:  LWC1      F0, 10 (S1)
  690:  ADDIU     A0, R0, FF81
  694:  SWC1      F0, 148 (S3)
  698:  LWC1      F0, 18 (S1)
  69C:  LWC1      F2, 1C (S1)
  6A0:  LW        A2, 60 (S1)
  6A4:  SUB.S     F0, F0, F2
  6A8:  LIO       AT, 3FE66666
  6B0:  MTC1      AT, F2
  6B4:  ADDIU     A1, R0, 1
  6B8:  SWC1      F2, 3C (S1)
  6BC:  NEG.S     F0, F0
  6C0:  JAL       80263CFC
  6C4:  SWC1      F0, 44 (S1)
  6C8:  BEQ       R0, R0, .o860
  6CC:  ADDIU     V0, R0, 1
        .o6D0
  6D0:  SH        V0, 64 (S1)
  6D4:  LH        V0, 64 (S1)
  6D8:  ADDIU     V1, R0, 168
  6DC:  BNE       V0, R0, .o6E8
  6E0:  DIV       V1, V0
  6E4:  BREAK     1C00
        .o6E8
  6E8:  ADDIU     AT, R0, FFFF
  6EC:  BNE       V0, AT, .o700
  6F0:  LUI       AT, 8000
  6F4:  BNE       V1, AT, .o700
  6F8:  NOP
  6FC:  BREAK     1800
        .o700
  700:  MFLO      V1
  704:  LWC1      F2, 18 (S1)
  708:  LWC1      F0, 1C (S1)
  70C:  LIO       AT, 3FE66666
  714:  MTC1      AT, F8
  718:  LWC1      F4, 1C (S1)
  71C:  SUB.S     F2, F2, F0
  720:  LWC1      F0, 18 (S1)
  724:  LIF       F6, 90.0
  72C:  SUB.S     F0, F0, F4
  730:  SWC1      F8, 3C (S1)
  734:  SWC1      F6, 24 (S1)
  738:  NEG.S     F2, F2
  73C:  SWC1      F2, 44 (S1)
  740:  LAD       F2, $ConstDouble_80232B28_03
  748:  ABS.S     F0, F0
  74C:  CVT.D.S   F0, F0
  750:  DIV.D     F0, F0, F2
  754:  CVT.S.D   F0, F0
  758:  SWC1      F0, 50 (S1)
  75C:  MTC1      V1, F0
  760:  NOP
  764:  CVT.S.W   F0, F0
  768:  SWC1      F0, 28 (S1)
  76C:  LWC1      F0, 144 (S3)
  770:  SWC1      F0, 0 (S1)
  774:  LWC1      F0, 148 (S3)
  778:  SWC1      F0, 4 (S1)
  77C:  LWC1      F0, 14C (S3)
  780:  ADDIU     V0, R0, 3
  784:  SWC1      F0, 8 (S1)
  788:  SW        V0, 70 (S4)
        .o78C
  78C:  LWC1      F12, 24 (S1)
  790:  LIO       AT, 40C90FD0
  798:  MTC1      AT, F22
  79C:  NOP
  7A0:  MUL.S     F12, F12, F22
  7A4:  NOP
  7A8:  LWC1      F20, 0 (S1)
  7AC:  LIF       F24, 360.0
  7B4:  CVT.D.S   F20, F20
  7B8:  JAL       {Func:SinRad}
  7BC:  DIV.S     F12, F12, F24
  7C0:  LWC1      F2, 50 (S1)
  7C4:  MUL.S     F2, F2, F0
  7C8:  NOP
  7CC:  LWC1      F12, 24 (S1)
  7D0:  MUL.S     F12, F12, F22
  7D4:  NOP
  7D8:  LAD       F0, $ConstDouble_80232B30_03
  7E0:  CVT.D.S   F2, F2
  7E4:  DIV.D     F2, F2, F0
  7E8:  ADD.D     F20, F20, F2
  7EC:  DIV.S     F12, F12, F24
  7F0:  CVT.S.D   F20, F20
  7F4:  JAL       {Func:SinRad}
  7F8:  SWC1      F20, 0 (S1)
  7FC:  LWC1      F2, 50 (S1)
  800:  MUL.S     F2, F2, F0
  804:  NOP
  808:  LWC1      F12, 24 (S1)
  80C:  LWC1      F0, 28 (S1)
  810:  ADD.S     F12, F12, F0
  814:  LWC1      F0, 4 (S1)
  818:  SUB.S     F0, F0, F2
  81C:  SWC1      F12, 24 (S1)
  820:  JAL       80029B24
  824:  SWC1      F0, 4 (S1)
  828:  LWC1      F2, 0 (S1)
  82C:  SWC1      F0, 24 (S1)
  830:  SWC1      F2, 144 (S3)
  834:  LWC1      F0, 4 (S1)
  838:  SWC1      F0, 148 (S3)
  83C:  LWC1      F0, 8 (S1)
  840:  SWC1      F0, 14C (S3)
  844:  LHU       V1, 64 (S1)
  848:  ADDIU     V1, V1, FFFF
  84C:  SH        V1, 64 (S1)
  850:  SLL       V1, V1, 10
  854:  BEQ       V1, R0, .o860
  858:  ADDIU     V0, R0, 1
  85C:  DADDU     V0, R0, R0
        .o860
  860:  LW        RA, 24 (SP)
  864:  LW        S4, 20 (SP)
  868:  LW        S3, 1C (SP)
  86C:  LW        S2, 18 (SP)
  870:  LW        S1, 14 (SP)
  874:  LW        S0, 10 (SP)
  878:  LDC1      F26, 40 (SP)
  87C:  LDC1      F24, 38 (SP)
  880:  LDC1      F22, 30 (SP)
  884:  LDC1      F20, 28 (SP)
  888:  JR        RA
  88C:  ADDIU     SP, SP, 48

#new:Function $Function_80218B90_03
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S3, 24 (SP)
   14:  SW        S1, 1C (SP)
   18:  SW        S0, 18 (SP)
   1C:  SDC1      F20, 30 (SP)
   20:  LW        A0, 148 (S2)
   24:  JAL       {Func:GetActor}
   28:  DADDU     S0, A1, R0
   2C:  DADDU     S1, V0, R0
   30:  BEQ       S0, R0, .o3C
   34:  ADDIU     S3, S1, C
   38:  SW        R0, 70 (S2)
        .o3C
   3C:  LW        V0, 70 (S2)
   40:  BNE       V0, R0, .o64
   44:  ADDIU     V0, R0, 1
   48:  LWC1      F0, 144 (S1)
   4C:  LWC1      F2, 148 (S1)
   50:  LWC1      F4, 14C (S1)
   54:  SWC1      F0, C (S1)
   58:  SWC1      F2, 10 (S1)
   5C:  SWC1      F4, 14 (S1)
   60:  SW        V0, 70 (S2)
        .o64
   64:  LWC1      F0, 50 (S1)
   68:  MTC1      R0, F20
   6C:  NOP
   70:  C.LT.S    F20, F0
   74:  NOP
   78:  BC1F      .o90
   7C:  ADDIU     A0, R0, FF81
   80:  LW        A2, 64 (S1)
   84:  JAL       80263CFC
   88:  ADDIU     A1, R0, 1
   8C:  LWC1      F0, 50 (S1)
        .o90
   90:  C.LT.S    F0, F20
   94:  NOP
   98:  BC1F      .oAC
   9C:  ADDIU     A0, R0, FF81
   A0:  LW        A2, 68 (S1)
   A4:  JAL       80263CFC
   A8:  ADDIU     A1, R0, 1
        .oAC
   AC:  LWC1      F4, 10 (S1)
   B0:  LWC1      F0, 50 (S1)
   B4:  LW        A1, 4C (S1)
   B8:  ADD.S     F4, F4, F0
   BC:  LWC1      F2, 48 (S1)
   C0:  LW        A2, 54 (S1)
   C4:  SUB.S     F0, F0, F2
   C8:  DADDU     A0, S3, R0
   CC:  SWC1      F4, 10 (S1)
   D0:  JAL       80264128
   D4:  SWC1      F0, 50 (S1)
   D8:  LWC1      F0, 10 (S1)
   DC:  LWC1      F2, 14 (S1)
   E0:  SWC1      F0, 148 (S1)
   E4:  LWC1      F0, C (S1)
   E8:  LWC1      F4, 148 (S1)
   EC:  SWC1      F2, 14C (S1)
   F0:  C.LT.S    F4, F20
   F4:  NOP
   F8:  BC1T      .o108
   FC:  SWC1      F0, 144 (S1)
  100:  BEQ       R0, R0, .o134
  104:  DADDU     V0, R0, R0
        .o108
  108:  LWC1      F0, 18C (S1)
  10C:  SWC1      F20, 148 (S1)
  110:  SWC1      F0, 10 (SP)
  114:  LW        A1, 144 (S1)
  118:  LW        A2, 148 (S1)
  11C:  LW        A3, 14C (S1)
  120:  JAL       802642F0
  124:  ADDIU     A0, R0, 2
  128:  JAL       80149CB4
  12C:  ADDIU     A0, R0, 148
  130:  ADDIU     V0, R0, 1
        .o134
  134:  LW        RA, 28 (SP)
  138:  LW        S3, 24 (SP)
  13C:  LW        S2, 20 (SP)
  140:  LW        S1, 1C (SP)
  144:  LW        S0, 18 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  JR        RA
  150:  ADDIU     SP, SP, 38

#new:Function $Function_80218CE4_03
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  JAL       {Func:GetActor}
   14:  LW        A0, 148 (S0)
   18:  JAL       {Func:GetActor}
   1C:  LH        A0, 428 (V0)
   20:  DADDU     A0, V0, R0
   24:  LW        V0, 0 (A0)
   28:  ANDI      V0, V0, 800
   2C:  BNE       V0, R0, .o58
   30:  NOP
   34:  LBU       V0, 191 (A0)
   38:  LW        V1, 88 (S0)
   3C:  SRL       V0, V0, 1
   40:  ADDU      V1, V1, V0
   44:  SW        V1, 88 (S0)
   48:  LBU       V0, 191 (A0)
   4C:  SRL       V0, V0, 2
   50:  BEQ       R0, R0, .o78
   54:  ADDU      V1, V1, V0
        .o58
   58:  LBU       V0, 191 (A0)
   5C:  LW        V1, 88 (S0)
   60:  SRL       V0, V0, 1
   64:  SUBU      V1, V1, V0
   68:  SW        V1, 88 (S0)
   6C:  LBU       V0, 191 (A0)
   70:  SRL       V0, V0, 2
   74:  SUBU      V1, V1, V0
        .o78
   78:  SW        V1, 88 (S0)
   7C:  LBU       V1, 191 (A0)
   80:  LBU       A0, 190 (A0)
   84:  SLT       V0, V1, A0
   88:  BNEL      V0, R0, .o90
   8C:  DADDU     V1, A0, R0
        .o90
   90:  ADDIU     V0, V1, 7E
   94:  SW        V0, 90 (S0)
   98:  LW        RA, 14 (SP)
   9C:  LW        S0, 10 (SP)
   A0:  ADDIU     V0, R0, 2
   A4:  JR        RA
   A8:  ADDIU     SP, SP, 18

#new:Function $Function_80218D90_03
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S0, 18 (SP)
    8:  DADDU     S0, A0, R0
    C:  LUI       A1, 42D4
   10:  LUI       A2, 4310
   14:  DADDU     A0, R0, R0
   18:  SW        RA, 20 (SP)
   1C:  SW        S1, 1C (SP)
   20:  LW        S1, C (S0)
   24:  LIF       F0, 1.0
   2C:  DADDU     A3, R0, R0
   30:  SW        R0, 14 (SP)
   34:  JAL       80072110
   38:  SWC1      F0, 10 (SP)
   3C:  DADDU     A0, S0, R0
   40:  LW        A1, 0 (S1)
   44:  JAL       {Func:SetVariable}
   48:  DADDU     A2, V0, R0
   4C:  LW        RA, 20 (SP)
   50:  LW        S1, 1C (SP)
   54:  LW        S0, 18 (SP)
   58:  ADDIU     V0, R0, 2
   5C:  JR        RA
   60:  ADDIU     SP, SP, 28

#new:Function $Function_80218E2C_03
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       {Func:GetVariable}
   10:  LW        A1, 0 (V0)
   14:  DADDU     A0, V0, R0
   18:  LW        V0, C (A0)
   1C:  LIF       F0, 144.0
   24:  NOP
   28:  SWC1      F0, 8 (V0)
   2C:  LW        V1, 0 (A0)
   30:  ORI       V1, V1, 10
   34:  SW        V1, 0 (A0)
   38:  LW        RA, 10 (SP)
   3C:  ADDIU     V0, R0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18

#new:IdleAnimations $IdleAnimations_8021D360_03
.Status:Normal    00A40002
.Status:Stone     00A40000
.Status:Sleep     00A4000E
.Status:Poison    00A40002
.Status:Stop      00A40000
.Status:Static    00A40002
.Status:Paralyze  00A40000
.Status:Dizzy     00A4000F
.Status:Dizzy     00A4000F
.Status:End

#new:IdleAnimations $IdleAnimations_8021D3AC_03
.Status:Normal    00A4000B
.Status:End

#new:Script $Script_8021E0E0_03
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  Call     RemoveActor 	( *Var[0] )
   28:  Return
   30:  End

#new:Script $Script_8021E118_03
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     8027D32C ( FFFFFF81 )
   24:  Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
   3C:  Wait     0000001E 
   48:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   60:  Call     UseIdleAnimation 	( *Var[A] .False )
   74:  Call     8027D32C ( *Var[A] )
   84:  Call     8027DCBC ( FFFFFF81 *Var[A] )
   98:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SmokeBurst )
   AC:  Thread
   B4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D0:  	Add  *Var[1]  00000003 
   E0:  	Add  *Var[2]  00000005 
   F0:  	Loop     00000003 
   FC:  		Call     PlayEffect  	( {FX:BigSmokePuff} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  140:  		Wait     00000003 
  14C:  	EndLoop
  154:  EndThread
  15C:  Wait     00000005 
  168:  Call     GetActorHP  	( .Actor:Self *Var[B] )
  17C:  Call     SetEnemyHP  	( *Var[A] *Var[B] )
  190:  Call     CopyStatBoosts ( .Actor:Self *Var[A] )
  1A4:  Call     GetActorPos 	( .Actor:Self *Var[B] *Var[C] *Var[D] )
  1C0:  Call     SetActorPos 	( *Var[A] *Var[B] *Var[C] *Var[D] )
  1DC:  Call     SetSpriteFlagBits 	( *Var[A] 00000001 00800000 .True )
  1F8:  Call     SetSpriteFlagBits 	( *Var[A] 00000001 00020001 .False )
  214:  Call     SetActorFlagBits 	( *Var[A] 00400004 .False )
  22C:  Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
  244:  Call     SetActorVar 	( *Var[A] 00000008 00000002 )
  25C:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
  278:  Call     SetIdleAnimations 	( *Var[A] 00000001 $IdleAnimations_8021D3AC_03 )
  290:  Call     SetAnimation 	( *Var[A] 00000001 00A4000B )
  2A8:  Wait     0000001E 
  2B4:  Call     UseCamPreset 	( 00000002 )
  2C4:  Call     GetActorPos 	( *Var[A] *Var[B] *Var[C] *Var[D] )
  2E0:  If  *Var[C]  >  00000000 
  2F0:  	Set  *Var[C]  00000000 
  300:  	Call     SetActorJumpscale 	( *Var[A] *Fixed[0.5] )
  314:  	Call     8026F740 ( *Var[A] 00000002 00000301 00000000 )
  330:  	Call     SetGoalToPos 	( *Var[A] *Var[B] *Var[C] *Var[D] )
  34C:  	Call     JumpToGoal  	( *Var[A] 0000000F 00000000 00000001 00000000 )
  36C:  	Call     8026F838 ( *Var[A] 00000002 )
  380:  	Call     SetGoalToPos 	( *Var[A] *Var[B] *Var[C] *Var[D] )
  39C:  	Call     JumpToGoal  	( *Var[A] 0000000A 00000000 00000001 00000000 )
  3BC:  	Call     SetGoalToPos 	( *Var[A] *Var[B] *Var[C] *Var[D] )
  3D8:  	Call     JumpToGoal  	( *Var[A] 00000005 00000000 00000001 00000000 )
  3F8:  EndIf
  400:  Call     ForceHomePos 	( *Var[A] *Var[B] *Var[C] *Var[D] )
  41C:  Call     HPBarToHome 	( *Var[A] )
  42C:  Call     SetIdleAnimations 	( *Var[A] 00000001 $IdleAnimations_8021D360_03 )
  444:  Call     SetAnimation 	( *Var[A] 00000001 00A40002 )
  45C:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  478:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
  494:  Call     HPBarToHome 	( .Actor:Self )
  4A4:  Call     RemoveActor 	( .Actor:Self )
  4B4:  Return
  4BC:  End

#new:Script $Script_8021E5DC_03
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Set  *Var[A]  *Var[0] 
   20:  Set  *Var[B]  *Var[1] 
   30:  Set  *Var[C]  *Var[2] 
   40:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
   5C:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   78:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
   94:  Call     SetAnimation 	( .Actor:Self *Var[A] *Var[B] )
   AC:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   C8:  Add  *Var[0]  0000000F 
   D8:  Add  *Var[1]  0000000A 
   E8:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.10058594] )
   FC:  Call     SetAnimation 	( .Actor:Self *Var[A] *Var[B] )
  114:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  130:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000000 00000000 )
  150:  Set  *Var[0]  *Var[A] 
  160:  Set  *Var[1]  *Var[B] 
  170:  ExecWait DoShockHit 
  17C:  Call     UseCamPreset 	( 00000002 )
  18C:  Thread
  194:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 *Var[C] 00000000 )
  1B0:  	Set  *Var[0]  00000000 
  1C0:  	Loop     0000000F 
  1CC:  		Add  *Var[0]  FFFFFFD0 
  1DC:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  1F8:  		Wait     00000001 
  204:  	EndLoop
  20C:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  228:  EndThread
  230:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  24C:  Add  *Var[0]  0000003C 
  25C:  Set  *Var[1]  00000000 
  26C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.4003906] )
  280:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  29C:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  2BC:  Add  *Var[0]  00000014 
  2CC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E8:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  308:  Add  *Var[0]  0000000A 
  318:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  334:  Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  354:  Return
  35C:  End

#new:IdleAnimations $IdleAnimations_8021E94C_03
.Status:Normal    00090001
.Status:Stone     00090000
.Status:Sleep     00090000
.Status:Poison    00090001
.Status:Stop      00090000
.Status:Static    00090001
.Status:Paralyze  00090000
.Status:Dizzy     00090014
.Status:Fear      00090014
.Status:End

#new:DefenseTable $DefenseTable_8021E998_03
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021E9A4_03
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021EA50_03
00800000 01000000 001400FF $IdleAnimations_8021E94C_03 $DefenseTable_8021E998_03 00000000 00000000 FFF70000 00000000 

#new:Script $Script_Init_Goombario_03
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802203F4_03 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021EB14_03 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021EB24_03 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80220450_03 )
   50:  Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
   68:  Return
   70:  End

#new:Script $Script_Idle_8021EB14_03
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021EB24_03
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  0009000A 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  0009000B 
   C0:  		SetConst  *Var[2]  0009000C 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  0009000B 
  108:  		SetConst  *Var[2]  0009000C 
  118:  		ExecWait DoBurnHit 
  124:  		ExecWait $Script_8021E0E0_03 
  130:  		Wait     0000000A 
  13C:  		SetConst  *Var[0]  00000001 
  14C:  		SetConst  *Var[1]  0009000C 
  15C:  		ExecWait DoDeath 
  168:  		Return
  170:  	Case  ==  .Event:MultibounceHit
  17C:  		SetConst  *Var[0]  00000001 
  18C:  		SetConst  *Var[1]  0009000A 
  19C:  		ExecWait 8029B998 
  1A8:  	Case  ==  .Event:MultibounceDeath
  1B4:  		ExecWait $Script_8021E0E0_03 
  1C0:  		SetConst  *Var[0]  00000001 
  1D0:  		SetConst  *Var[1]  0009000A 
  1E0:  		ExecWait 8029B998 
  1EC:  		SetConst  *Var[0]  00000001 
  1FC:  		SetConst  *Var[1]  0009000A 
  20C:  		ExecWait DoDeath 
  218:  		Return
  220:  	Case  ==  .Event:ShockHit
  22C:  		SetConst  *Var[0]  00000001 
  23C:  		SetConst  *Var[1]  0009000A 
  24C:  		Set  *Var[2]  0000000C 
  25C:  		ExecWait $Script_8021E5DC_03 
  268:  		Call     SetGoalToHome 	( .Actor:Self )
  278:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  28C:  		Call     SetAnimation 	( .Actor:Self 00000001 00090003 )
  2A4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  2BC:  	Case  ==  .Event:ShockDeath
  2C8:  		ExecWait $Script_8021E0E0_03 
  2D4:  		SetConst  *Var[0]  00000001 
  2E4:  		SetConst  *Var[1]  0009000A 
  2F4:  		Set  *Var[2]  0000000C 
  304:  		ExecWait $Script_8021E5DC_03 
  310:  		SetConst  *Var[0]  00000001 
  320:  		SetConst  *Var[1]  0009000A 
  330:  		ExecWait DoDeath 
  33C:  		Return
  344:  	CaseOR  ==  00000017
  350:  	CaseOR  ==  .Event:Immune
  35C:  	CaseOR  ==  .Event:AirLiftFailed
  368:  		SetConst  *Var[0]  00000001 
  378:  		SetConst  *Var[1]  00090001 
  388:  		ExecWait DoImmune 
  394:  	EndCaseGroup
  39C:  	Case  ==  .Event:Death
  3A8:  		ExecWait $Script_8021E0E0_03 
  3B4:  		SetConst  *Var[0]  00000001 
  3C4:  		SetConst  *Var[1]  0009000A 
  3D4:  		ExecWait DoNormalHit 
  3E0:  		Wait     0000000A 
  3EC:  		SetConst  *Var[0]  00000001 
  3FC:  		SetConst  *Var[1]  0009000A 
  40C:  		ExecWait DoDeath 
  418:  		Return
  420:  	Case  ==  .Event:RecoverStatus
  42C:  		SetConst  *Var[0]  00000001 
  43C:  		SetConst  *Var[1]  00090001 
  44C:  		ExecWait DoRecover 
  458:  	Case  ==  .Event:ScareAway
  464:  		SetConst  *Var[0]  00000001 
  474:  		SetConst  *Var[1]  00090003 
  484:  		SetConst  *Var[2]  0009000A 
  494:  		ExecWait DoScareAway 
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift
  4B4:  		SetConst  *Var[0]  00000001 
  4C4:  		SetConst  *Var[1]  00090003 
  4D4:  		ExecWait DoAirLift 
  4E0:  	Case  ==  .Event:BlowAway
  4EC:  		SetConst  *Var[0]  00000001 
  4FC:  		SetConst  *Var[1]  0009000A 
  50C:  		ExecWait DoBlowAway 
  518:  		Return
  520:  	Default
  528:  EndSwitch
  530:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  544:  Call     UseIdleAnimation 	( .Actor:Self .True )
  558:  Return
  560:  End

#new:Script $Script_8021F08C_03
    0:  Call     UseCamPreset 	( 00000002 )
   10:  Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
   28:  Thread
   30:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
   4C:  	Set  *Var[0]  000000B4 
   5C:  	Loop     0000000F 
   68:  		Sub  *Var[0]  0000003C 
   78:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   94:  		Wait     00000001 
   A0:  	EndLoop
   A8:  	Call     SetAnimation 	( .Actor:Self 00000001 00090005 )
   C0:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
   DC:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
   F8:  EndThread
  100:  Call     SetGoalToTarget 	( .Actor:Self )
  110:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Add  *Var[0]  0000003C 
  13C:  Set  *Var[1]  00000000 
  14C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  160:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  19C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1B0:  If  *Var[A]  &  00080000 
  1C0:  	SetF  *Var[5]  *Fixed[7.2001953] 
  1D0:  Else
  1D8:  	Set  *Var[5]  00000012 
  1E8:  EndIf
  1F0:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  208:  Call     8026BA04 ( FFFFFF81 00000000 *Var[5] 00000000 )
  224:  Wait     00000001 
  230:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  24C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  268:  Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
  280:  Add  *Var[0]  00000014 
  290:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2AC:  Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  2CC:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  2E4:  Call     8026BA04 ( FFFFFF81 00000000 *Var[5] 00000000 )
  300:  Wait     00000001 
  30C:  Add  *Var[0]  0000000A 
  31C:  Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
  334:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  350:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
  38C:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
  3A4:  Call     8026BA04 ( FFFFFF81 00000000 *Var[5] 00000000 )
  3C0:  Wait     00000001 
  3CC:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  3E8:  Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
  400:  Wait     00000002 
  40C:  Call     SetGoalToHome 	( .Actor:Self )
  41C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  430:  Call     SetAnimation 	( .Actor:Self 00000001 00090003 )
  448:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  460:  Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
  478:  Return
  480:  End

#new:Script $Script_8021F514_03
    0:  Call     UseCamPreset 	( 0000003F )
   10:  Call     CamTargetActor ( .Actor:Self )
   20:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   38:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   4C:  Call     SetGoalToTarget 	( .Actor:Self )
   5C:  Call     AddToGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   78:  Call     SetAnimation 	( .Actor:Self 00000001 00090003 )
   90:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
   A4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   BC:  Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
   D4:  Return
   DC:  End

#new:Script $Script_8021F5F8_03
    0:  Call     SetGoalToTarget 	( .Actor:Self )
   10:  Call     GetGoalPos  	( .Actor:Self *Var[B] *Var[C] *Var[D] )
   2C:  Call     GetActorPos 	( .Actor:Self *Var[C] *Var[D] *Var[E] )
   48:  If  *Var[B]  >  *Var[C] 
   58:  	Sub  *Var[B]  *Var[C] 
   68:  Else
   70:  	Sub  *Var[C]  *Var[B] 
   80:  	Set  *Var[B]  *Var[C] 
   90:  EndIf
   98:  Sub  *Var[B]  00000014 
   A8:  DivF  *Var[B]  *Fixed[10.588867] 
   B8:  AddF  *Var[B]  0000000F 
   C8:  Set  *Var[A]  *Var[B] 
   D8:  Return
   E0:  End

#new:Script $Script_8021F6E0_03
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  ExecWait $Script_8021F514_03 
   34:  ExecWait $Script_8021F5F8_03 
   40:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   54:  If  *Var[A]  &  00080000 
   64:  	SetF  *Var[0]  *Fixed[7.2001953] 
   74:  	SetF  *Var[1]  *Fixed[7.600586] 
   84:  	SetF  *Var[1]  *Fixed[3.600586] 
   94:  Else
   9C:  	Set  *Var[0]  00000012 
   AC:  	Set  *Var[1]  00000013 
   BC:  	Set  *Var[2]  00000009 
   CC:  EndIf
   D4:  Call     SetAnimation 	( .Actor:Self 00000001 00090007 )
   EC:  Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  108:  Wait     00000005 
  114:  Call     8026BA04 ( FFFFFF81 00000000 *Var[1] 00000000 )
  130:  Wait     00000001 
  13C:  Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
  154:  Call     8026BA04 ( FFFFFF81 00000000 *Var[2] 00000000 )
  170:  Call     SetGoalToTarget 	( .Actor:Self )
  180:  Call     AddToGoalPos 	( .Actor:Self 00000000 00000000 00000005 )
  19C:  Call     SetJumpAnimations 	( .Actor:Self 00000001 00090006 00090006 00090006 )
  1BC:  Call     $Function_80218300_03 ( *Var[A] 00000000 )
  1D0:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  00000006 
  20C:  	CaseOR  ==  00000005 
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Call     SetJumpAnimations 	( .Actor:Self 00000001 00090006 00090006 00090006 )
  248:  		Call     $Function_80218B90_03 ( )
  254:  		Thread
  25C:  			Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  278:  		EndThread
  280:  		If  *Var[A]  ==  00000005 
  290:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2B4:  		EndIf
  2BC:  		Wait     00000014 
  2C8:  		Call     8027D7F0 ( )
  2D4:  		ExecWait $Script_8021F08C_03 
  2E0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2F4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  308:  		Return
  310:  	EndCaseGroup
  318:  EndSwitch
  320:  ChildThread
  328:  	Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  348:  	Wait     00000001 
  354:  	Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  374:  	Wait     00000001 
  380:  	Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3A0:  EndChildThread
  3A8:  Wait     00000001 
  3B4:  Wait     00000002 
  3C0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  3D8:  Switch  *Var[9] 
  3E4:  	Case  ==  00000000 
  3F0:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000010 )
  418:  	Case  ==  00000001 
  424:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000010 )
  44C:  	Case  ==  00000002 
  458:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000010 )
  480:  EndSwitch
  488:  Call     GetActorHP  	( .Actor:Player *Var[0] )
  49C:  If  *Var[0]  ==  00000000 
  4AC:  	Goto     00000064 
  4B8:  EndIf
  4C0:  Set  *Var[A]  00000018 
  4D0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  4E8:  Switch  *Var[9] 
  4F4:  	Case  ==  00000000 
  500:  		Thread
  508:  			Wait     00000004 
  514:  			Set  *Var[0]  00000000 
  524:  			Loop     00000006 
  530:  				Add  *Var[0]  0000001E 
  540:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  55C:  				Wait     00000001 
  568:  			EndLoop
  570:  		EndThread
  578:  		Call     SetGoalToTarget 	( .Actor:Self )
  588:  		Call     SetJumpAnimations 	( .Actor:Self 00000001 00090006 00090006 00090006 )
  5A8:  		Call     $Function_80218300_03 ( *Var[A] 00000003 )
  5BC:  	Case  ==  00000001 
  5C8:  		Thread
  5D0:  			Wait     00000004 
  5DC:  			Set  *Var[0]  00000000 
  5EC:  			Loop     00000006 
  5F8:  				Add  *Var[0]  0000001E 
  608:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  624:  				Wait     00000001 
  630:  			EndLoop
  638:  		EndThread
  640:  		Call     SetGoalToTarget 	( .Actor:Self )
  650:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  664:  		Call     SetJumpAnimations 	( .Actor:Self 00000001 00090006 00090006 00090006 )
  684:  		Call     $Function_80218300_03 ( *Var[A] 00000003 )
  698:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  6AC:  	Case  ==  00000002 
  6B8:  		Thread
  6C0:  			Wait     00000004 
  6CC:  			Set  *Var[0]  00000000 
  6DC:  			Loop     00000006 
  6E8:  				Add  *Var[0]  0000001E 
  6F8:  				Call     SetActorRotation 	( .Actor:Self 00000000 *Unknown[0] *Var[0] )
  714:  				Wait     00000001 
  720:  			EndLoop
  728:  			Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
  740:  		EndThread
  748:  		Thread
  750:  			Set  *Var[0]  00000000 
  760:  			Loop     *Var[A] 
  76C:  				Add  *Var[0]  00000085 
  77C:  				Call     SetActorRotation 	( .Actor:Self *Unknown[0] *Var[0] *Unknown[0] )
  798:  				Wait     00000001 
  7A4:  			EndLoop
  7AC:  		EndThread
  7B4:  		Call     SetGoalToTarget 	( .Actor:Self )
  7C4:  		Call     EnableActorBlur 	( .Actor:Self 00000001 )
  7D8:  		Call     SetJumpAnimations 	( .Actor:Self 00000001 00090006 00090006 00090006 )
  7F8:  		Call     $Function_80218300_03 ( *Var[A] 00000003 )
  80C:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  820:  EndSwitch
  828:  ChildThread
  830:  	Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  850:  	Wait     00000001 
  85C:  	Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  87C:  	Wait     00000001 
  888:  	Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  8A8:  EndChildThread
  8B0:  Wait     00000001 
  8BC:  Wait     00000002 
  8C8:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[9] )
  8E0:  Switch  *Var[9] 
  8EC:  	Case  ==  00000000 
  8F8:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  920:  	Case  ==  00000001 
  92C:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  954:  	Case  ==  00000002 
  960:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  988:  EndSwitch
  990:  Label    00000064 
  99C:  Switch  *Var[0] 
  9A8:  	CaseOR  ==  00000000 
  9B4:  	CaseOR  ==  00000002 
  9C0:  		Call     8027D7F0 ( )
  9CC:  		ExecWait $Script_8021F08C_03 
  9D8:  	EndCaseGroup
  9E0:  EndSwitch
  9E8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  9FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A10:  Return
  A18:  End

#new:Script $Script_80220100_03
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
   3C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   58:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   74:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
   94:  Wait     0000000A 
   A0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   B4:  Call     SetGoalToTarget 	( .Actor:Self )
   C4:  Call     SetBattleFlagBits 	( 00000004 .True )
   D8:  Call     $Function_80218D90_03 ( *Var[5] )
   E8:  Wait     0000000C 
   F4:  Call     SetCamFlag2 	( 00000002 .True )
  108:  Call     SetCamFlag80 	( 00000002 .False )
  11C:  Call     SetCamPerspective 	( 00000002 00000006 00000019 00000010 00000400 )
  13C:  Call     SetCamViewport ( 00000002 00000025 0000005F 0000008A 00000063 )
  15C:  Call     SetGoalToTarget 	( .Actor:Self )
  16C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Sub  *Var[0]  00000008 
  198:  Set  *Var[1]  00000000 
  1A8:  Call     $Function_80218CE4_03 ( )
  1B4:  Wait     00000001 
  1C0:  Call     802CAE50 ( 00000002 *Var[0] *Var[1] *Var[2] )
  1DC:  Call     802CABE8 ( 00000002 00000000 *Var[3] 00000064 00000004 )
  1FC:  Wait     00000002 
  208:  Call     PlaySoundAtActor 	( .Actor:Self 00000282 )
  21C:  Call     SetCamFlag80 	( 00000002 .True )
  230:  Wait     0000000A 
  23C:  Call     SayMessage  	( 001C0092 .Actor:Self 00000001 0009000F 00090001 ) % It's Mario, silly! He's here to save Princess Peac ...
  25C:  Call     $Function_80218E2C_03 ( *Var[5] )
  26C:  Wait     0000000C 
  278:  Call     SetCamFlag2 	( 00000002 .False )
  28C:  Wait     00000020 
  298:  Call     UseCamPreset 	( 00000002 )
  2A8:  Call     SetBattleFlagBits 	( 00000004 .False )
  2BC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  2E4:  Return
  2EC:  End

#new:Script $Script_TakeTurn_802203F4_03
    0:  Call     RandInt     	( 00000064 *Var[0] )
   14:  If  *Var[0]  <  00000028 
   24:  	ExecWait $Script_80220100_03 
   30:  Else
   38:  	ExecWait $Script_8021F6E0_03 
   44:  EndIf
   4C:  Return
   54:  End

#new:Script $Script_NextTurn_80220450_03
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  Switch  *Var[0] 
   1C:  	Case  ==  .Phase:EnemyBegin
   28:  		Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
   40:  		If  *Var[0]  >  00000000 
   50:  			Sub  *Var[0]  00000001 
   60:  			Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
   78:  			BreakCase
   80:  		EndIf
   88:  		SetConst  *Var[0]  00000001 
   98:  		SetConst  *Var[1]  0009000A 
   A8:  		ExecWait $Script_8021E118_03 
   B4:  		Return
   BC:  EndSwitch
   C4:  Return
   CC:  End

#new:ConstDouble $ConstDouble_80232AF0_03
47.000000d

#new:ConstDouble $ConstDouble_80232AF8_03
1.120000d

#new:ConstDouble $ConstDouble_80232B00_03
0.530000d

#new:ConstDouble $ConstDouble_80232B08_03
47.000000d

#new:ConstDouble $ConstDouble_80232B10_03
0.800000d

#new:ConstDouble $ConstDouble_80232B18_03
0.530000d

#new:ConstDouble $ConstDouble_80232B20_03
0.800000d

#new:ConstDouble $ConstDouble_80232B28_03
16.500000d

#new:ConstDouble $ConstDouble_80232B30_03
33.000000d

