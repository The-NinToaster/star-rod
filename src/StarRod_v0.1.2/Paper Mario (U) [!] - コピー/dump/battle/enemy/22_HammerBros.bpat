% Automatically dumped from section 22

#new:Actor $22_HammerBros
% stats
[Index]        4Bb 
[Level]        27`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E4F4_22 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_8021E5A0_22 
[Script]      $Script_Init_8021E6A0_22 
% move effectiveness
[Escape]       30`b 
[Item]         40`b 
[AirLift]      75`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:IdleAnimations $IdleAnimations_8021E490_22
.Status:Normal    005A0002
.Status:Stone     005A0000
.Status:Sleep     005A0011
.Status:Poison    005A0002
.Status:Stop      005A0000
.Status:Static    005A0002
.Status:Paralyze  005A0000
.Status:Dizzy     005A0012
.Status:Fear      005A0012
.Status:End

#new:IdleAnimations $IdleAnimations_8021E4DC_22
.Status:Normal    005A000D
.Status:End

#new:DefenseTable $DefenseTable_8021E4E8_22
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_8021E4F4_22
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_8021E5A0_22
00800000 01000000 FD2300FF $IdleAnimations_8021E490_22 $DefenseTable_8021E4E8_22 00000000 00000000 FDF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 
00120001 06000000 000000FF $IdleAnimations_8021E4DC_22 $DefenseTable_8021E4E8_22 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_8021E6A0_22
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022028C_22 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021E704_22 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E860_22 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_8021E704_22
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  Switch  *Var[0] 
   2C:  	Case  &  00001000 
   38:  		Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
   54:  		Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
   70:  	Default
   78:  		Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   90:  		Switch  *Var[0] 
   9C:  			Case  ==  00000000 
   A8:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000023 )
   C4:  				Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
   E0:  			Case  ==  00000001 
   EC:  				Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
  108:  				Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
  124:  		EndSwitch
  12C:  EndSwitch
  134:  Wait     00000001 
  140:  Goto     00000000 
  14C:  Return
  154:  End

#new:Script $Script_HandleEvent_8021E860_22
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  005A000E 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  005A000F 
   C0:  		SetConst  *Var[2]  005A0010 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  005A000F 
  108:  		SetConst  *Var[2]  005A0010 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  005A0010 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  005A000E 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  005A000E 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  005A000E 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  		SetConst  *Var[0]  00000001 
  224:  		SetConst  *Var[1]  005A0015 
  234:  		ExecWait DoImmune 
  240:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  254:  		If  *Var[0]  !&  0035D000 
  264:  			Call     SetAnimation 	( .Actor:Self 00000001 005A0017 )
  27C:  			Wait     0000000A 
  288:  		EndIf
  290:  	EndCaseGroup
  298:  	Case  ==  .Event:Death
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  005A000E 
  2C4:  		ExecWait DoNormalHit 
  2D0:  		Wait     0000000A 
  2DC:  		SetConst  *Var[0]  00000001 
  2EC:  		SetConst  *Var[1]  005A000E 
  2FC:  		ExecWait DoDeath 
  308:  		Return
  310:  	Case  ==  .Event:RecoverStatus
  31C:  		SetConst  *Var[0]  00000001 
  32C:  		SetConst  *Var[1]  005A0002 
  33C:  		ExecWait DoRecover 
  348:  	Case  ==  .Event:ScareAway
  354:  		SetConst  *Var[0]  00000001 
  364:  		SetConst  *Var[1]  005A0007 
  374:  		SetConst  *Var[2]  005A000E 
  384:  		ExecWait DoScareAway 
  390:  		Return
  398:  	Case  ==  .Event:BeginAirLift
  3A4:  		SetConst  *Var[0]  00000001 
  3B4:  		SetConst  *Var[1]  005A0007 
  3C4:  		ExecWait DoAirLift 
  3D0:  	Case  ==  .Event:BlowAway
  3DC:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  3F0:  		If  *Var[0]  !&  0035D000 
  400:  			If  *Var[0]  &  00080000 
  410:  				Call     8026BA04 ( FFFFFF81 FFFFFFFE 00000001 00000000 )
  42C:  			Else
  434:  				Call     8026BA04 ( FFFFFF81 FFFFFFFB 00000003 00000000 )
  450:  			EndIf
  458:  		EndIf
  460:  		SetConst  *Var[0]  00000001 
  470:  		SetConst  *Var[1]  005A000E 
  480:  		ExecWait DoBlowAway 
  48C:  		Return
  494:  	Case  ==  .Event:AirLiftFailed
  4A0:  		SetConst  *Var[0]  00000001 
  4B0:  		SetConst  *Var[1]  005A0002 
  4C0:  		ExecWait DoImmune 
  4CC:  	Default
  4D4:  EndSwitch
  4DC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  504:  Return
  50C:  End

#new:Script $Script_8021ED74_22
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  EndIf
   84:  Call     GetBattlePhase ( *Var[0] )
   94:  If  *Var[0]  ==  .Phase:FirstStrike
   A4:  	ChildThread
   AC:  		Set  *Var[0]  00000000 
   BC:  		Label    00000000 
   C8:  		Add  *Var[0]  00000014 
   D8:  		Mod  *Var[0]  00000168 
   E8:  		Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
  108:  		Wait     00000001 
  114:  		Goto     00000000 
  120:  	EndChildThread
  128:  	Call     SetSpritePos 	( .Actor:Self 00000002 00000000 00000032 00000000 )
  148:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  164:  	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
  17C:  	Goto     00000064 
  188:  EndIf
  190:  ChildThread
  198:  	Set  *Var[0]  00000000 
  1A8:  	Label    00000000 
  1B4:  	Add  *Var[0]  00000014 
  1C4:  	Mod  *Var[0]  00000168 
  1D4:  	Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
  1F4:  	Wait     00000001 
  200:  	Goto     00000000 
  20C:  EndChildThread
  214:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  230:  Sub  *Var[0]  00000017 
  240:  Add  *Var[1]  00000017 
  250:  Sub  *Var[2]  00000002 
  260:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  280:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
  298:  Wait     00000008 
  2A4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  2C0:  Label    00000064 
  2CC:  Thread
  2D4:  	Wait     0000000F 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  2F8:  EndThread
  300:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  314:  If  *Var[0]  &  00080000 
  324:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  344:  Else
  34C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  36C:  EndIf
  374:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  398:  Switch  *Var[0] 
  3A4:  	CaseOR  ==  00000006 
  3B0:  	CaseOR  ==  00000005 
  3BC:  		Set  *Var[A]  *Var[0] 
  3CC:  		Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  3EC:  		Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
  404:  		Call     SetGoalToTarget 	( .Actor:Self )
  414:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  430:  		Sub  *Var[0]  00000014 
  440:  		Set  *Var[1]  0000000A 
  450:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
  468:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  490:  		If  *Var[A]  ==  00000005 
  4A0:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  4C4:  		EndIf
  4CC:  		Sub  *Var[0]  00000028 
  4DC:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  504:  		Sub  *Var[0]  0000001E 
  514:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
  53C:  		Sub  *Var[0]  00000014 
  54C:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
  574:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  590:  		Wait     0000000F 
  59C:  		Call     8027D7F0 ( )
  5A8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  5C4:  		Wait     00000014 
  5D0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  5E8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  610:  		Return
  618:  	EndCaseGroup
  620:  EndSwitch
  628:  Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  648:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
  660:  Call     SetGoalToTarget 	( .Actor:Self )
  670:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  68C:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
  6A4:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000005 00000020 )
  700:  Switch  *Var[0] 
  70C:  	CaseOR  ==  00000000 
  718:  	CaseOR  ==  00000002 
  724:  		Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  744:  		Sub  *Var[0]  00000032 
  754:  		Set  *Var[1]  0000000A 
  764:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  78C:  		Sub  *Var[0]  0000001E 
  79C:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
  7C4:  		Sub  *Var[0]  00000014 
  7D4:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
  7FC:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  818:  		Wait     00000014 
  824:  		Call     8027D7F0 ( )
  830:  	EndCaseGroup
  838:  EndSwitch
  840:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  854:  Call     UseIdleAnimation 	( .Actor:Self .True )
  868:  Return
  870:  End

#new:Script $Script_8021F5EC_22
    0:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
   48:  Wait     00000004 
   54:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
   70:  Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
   90:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   D4:  Set  *Var[2]  0000000A 
   E4:  Call     RandInt     	( 0000003C *Var[4] )
   F8:  Set  *Var[5]  0000001E 
  108:  Sub  *Var[5]  *Var[4] 
  118:  Add  *Var[1]  *Var[5] 
  128:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
  140:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
  168:  Sub  *Var[1]  00000032 
  178:  Set  *Var[2]  0000000A 
  188:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
  1B0:  Sub  *Var[1]  0000001E 
  1C0:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
  1E8:  Sub  *Var[1]  00000014 
  1F8:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
  220:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
  23C:  Return
  244:  End

#new:Script $Script_8021F838_22
    0:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
   18:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
   48:  Wait     00000004 
   54:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
   70:  Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
   90:  Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   D4:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
   EC:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
  114:  Sub  *Var[1]  00000032 
  124:  Set  *Var[2]  0000000A 
  134:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
  15C:  Sub  *Var[1]  0000001E 
  16C:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
  194:  Sub  *Var[1]  00000014 
  1A4:  Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
  1CC:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
  1E8:  Return
  1F0:  End

#new:Script $Script_8021FA30_22
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Thread
   44:  	Set  *Var[0]  00000000 
   54:  	Loop     00000064 
   60:  		Add  *Var[0]  00000014 
   70:  		Mod  *Var[0]  00000168 
   80:  		Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
   A0:  		Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
   C0:  		Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 *Var[0] )
   E0:  		Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 *Var[0] )
  100:  		Call     SetSpriteRotation 	( .Actor:Self 00000006 00000000 00000000 *Var[0] )
  120:  		Wait     00000001 
  12C:  	EndLoop
  134:  EndThread
  13C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  158:  Sub  *Var[0]  00000017 
  168:  Add  *Var[1]  00000017 
  178:  Sub  *Var[2]  00000002 
  188:  Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  1A8:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  1C8:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  1E8:  Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  208:  Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  228:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  23C:  If  *Var[0]  &  00080000 
  24C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  26C:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  28C:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2AC:  	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2CC:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  2EC:  Else
  2F4:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  314:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  334:  	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  354:  	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  374:  	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  394:  EndIf
  39C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  3C0:  Switch  *Var[0] 
  3CC:  	CaseOR  ==  00000006 
  3D8:  	CaseOR  ==  00000005 
  3E4:  		Set  *Var[A]  *Var[0] 
  3F4:  		Set  *Var[0]  00000002 
  404:  		Exec     $Script_8021F5EC_22 
  410:  		Wait     00000005 
  41C:  		Set  *Var[0]  00000003 
  42C:  		Exec     $Script_8021F5EC_22 
  438:  		Wait     00000005 
  444:  		Set  *Var[0]  00000004 
  454:  		Exec     $Script_8021F5EC_22 
  460:  		Wait     00000005 
  46C:  		Set  *Var[0]  00000005 
  47C:  		Exec     $Script_8021F5EC_22 
  488:  		Wait     00000005 
  494:  		Set  *Var[0]  00000006 
  4A4:  		Exec     $Script_8021F5EC_22 
  4B0:  		Wait     00000005 
  4BC:  		Wait     00000014 
  4C8:  		Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  4E0:  		If  *Var[A]  ==  00000005 
  4F0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  514:  		EndIf
  51C:  		Wait     0000000F 
  528:  		Call     8027D7F0 ( )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		Wait     00000014 
  55C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  574:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Thread
  5BC:  	Set  *Var[0]  00000002 
  5CC:  	Exec     $Script_8021F838_22 
  5D8:  	Wait     00000005 
  5E4:  	Set  *Var[0]  00000003 
  5F4:  	Exec     $Script_8021F838_22 
  600:  	Wait     00000005 
  60C:  	Set  *Var[0]  00000004 
  61C:  	Exec     $Script_8021F838_22 
  628:  	Wait     00000005 
  634:  	Set  *Var[0]  00000005 
  644:  	Exec     $Script_8021F838_22 
  650:  	Wait     00000005 
  65C:  	Set  *Var[0]  00000006 
  66C:  	Exec     $Script_8021F838_22 
  678:  EndThread
  680:  Wait     00000015 
  68C:  Wait     00000002 
  698:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000010 )
  6C0:  Wait     00000005 
  6CC:  Wait     00000002 
  6D8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  700:  Wait     00000005 
  70C:  Wait     00000002 
  718:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  740:  Wait     00000005 
  74C:  Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
  764:  Wait     00000002 
  770:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
  798:  Wait     00000005 
  7A4:  Wait     00000002 
  7B0:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000002 00000020 )
  7D8:  Switch  *Var[0] 
  7E4:  	CaseOR  ==  00000000 
  7F0:  	CaseOR  ==  00000002 
  7FC:  		Wait     00000014 
  808:  		Call     8027D7F0 ( )
  814:  	EndCaseGroup
  81C:  EndSwitch
  824:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  838:  Call     UseIdleAnimation 	( .Actor:Self .True )
  84C:  Return
  854:  End

#new:Script $Script_TakeTurn_8022028C_22
    0:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   14:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
   28:  MulF  *Var[0]  *Fixed[100.0] 
   38:  DivF  *Var[0]  *Var[1] 
   48:  If  *Var[0]  >  00000022 
   58:  	ExecWait $Script_8021ED74_22 
   64:  Else
   6C:  	ExecWait $Script_8021FA30_22 
   78:  EndIf
   80:  Return
   88:  End

