% Script File: 1C Area TIK3.bscr
% Decoded from: 6186F0 to 623BA0 (1C Area TIK3)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

PADDING: 802180CC to 802180D0 (006187BC to 006187C0)
00000000 

#new:Function $Function_802180D0
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_8021819C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

#new:Function $Function_80218250
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  DADDU     A3, V0, R0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  ADDIU     V0, R0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28

PADDING: 80218304 to 80218310 (006189F4 to 00618A00)
00000000 00000000 00000000 

#new:Function $Function_80218310
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       {Func:GetVariable}
   3C:  LW        A1, 0 (V0)
   40:  JAL       8011B010
   44:  DADDU     A0, V0, R0
   48:  JAL       8011AD30
   4C:  DADDU     A0, V0, R0
   50:  LIA       S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  DADDU     S1, V0, R0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       80061EF0
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  ADDIU     V0, R0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  DADDU     S3, R0, R0
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       80061EF0
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  DADDU     S3, R0, R0
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  ADDIU     V0, R0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  DADDU     S3, R0, R0
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       80061EF0
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  ADDIU     V0, R0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       80061EF0
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  ADDIU     V0, R0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  ADDIU     V0, R0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50

PADDING: 802187A4 to 802187B0 (00618E94 to 00618EA0)
00000000 00000000 00000000 

#new:Function $Function_802187B0
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       {Func:GetVariable}
   3C:  LW        A1, 0 (V0)
   40:  JAL       8011B010
   44:  DADDU     A0, V0, R0
   48:  JAL       8011AD30
   4C:  DADDU     A0, V0, R0
   50:  LIA       S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  DADDU     S1, V0, R0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       80061EF0
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  ADDIU     V0, R0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  DADDU     S3, R0, R0
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       80061EF0
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  DADDU     S3, R0, R0
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  ADDIU     V0, R0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  DADDU     S3, R0, R0
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       80061EF0
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  ADDIU     V0, R0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       80061EF0
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  ADDIU     V0, R0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  ADDIU     V0, R0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50

PADDING: 80218C44 to 80218C50 (00619334 to 00619340)
00000000 00000000 00000000 

#new:Function $Function_80218C50
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F26, 48 (SP)
   28:  SDC1      F24, 40 (SP)
   2C:  SDC1      F22, 38 (SP)
   30:  SDC1      F20, 30 (SP)
   34:  LW        V0, C (S4)
   38:  JAL       {Func:GetVariable}
   3C:  LW        A1, 0 (V0)
   40:  JAL       8011B010
   44:  DADDU     A0, V0, R0
   48:  JAL       8011AD30
   4C:  DADDU     A0, V0, R0
   50:  LIA       S2, 800DC070
   58:  SW        R0, 8C (S4)
   5C:  LW        S0, D8 (S2)
   60:  BEQ       S0, R0, .o154
   64:  DADDU     S1, V0, R0
   68:  LWC1      F2, 144 (S0)
   6C:  LWC1      F0, 98 (S1)
   70:  SUB.S     F2, F2, F0
   74:  MUL.S     F6, F2, F2
   78:  NOP
   7C:  LWC1      F0, A0 (S1)
   80:  LWC1      F2, 14C (S0)
   84:  SUB.S     F2, F2, F0
   88:  MUL.S     F4, F2, F2
   8C:  NOP
   90:  LBU       V0, 191 (S0)
   94:  LWC1      F2, 148 (S0)
   98:  MTC1      V0, F0
   9C:  NOP
   A0:  CVT.S.W   F0, F0
   A4:  ADD.S     F2, F2, F0
   A8:  LIF       F0, 1.5
   B0:  NOP
   B4:  SUB.S     F2, F2, F0
   B8:  ADD.S     F12, F6, F4
   BC:  LWC1      F0, 9C (S1)
   C0:  SUB.S     F20, F2, F0
   C4:  SQRT.S    F2, F12
   C8:  C.EQ.S    F2, F2
   CC:  NOP
   D0:  BC1T      .oE4
   D4:  NOP
   D8:  JAL       80061EF0
   DC:  NOP
   E0:  MOV.S     F2, F0
        .oE4
   E4:  MTC1      R0, F0
   E8:  NOP
   EC:  C.LT.S    F0, F20
   F0:  NOP
   F4:  BC1F      .o154
   F8:  MOV.S     F4, F2
   FC:  LBU       V0, 191 (S0)
  100:  MTC1      V0, F0
  104:  NOP
  108:  CVT.S.W   F0, F0
  10C:  C.LT.S    F20, F0
  110:  NOP
  114:  BC1F      .o154
  118:  NOP
  11C:  LBU       V0, 190 (S0)
  120:  LIF       F2, 0.5
  128:  MTC1      V0, F0
  12C:  NOP
  130:  CVT.S.W   F0, F0
  134:  MUL.S     F0, F0, F2
  138:  NOP
  13C:  C.LT.S    F4, F0
  140:  NOP
  144:  BC1F      .o154
  148:  ADDIU     V0, R0, 1
  14C:  BEQ       R0, R0, .o45C
  150:  SW        V0, 8C (S4)
        .o154
  154:  LW        S0, DC (S2)
  158:  BEQ       S0, R0, .o260
  15C:  DADDU     S3, R0, R0
  160:  LWC1      F2, 144 (S0)
  164:  LWC1      F0, 98 (S1)
  168:  SUB.S     F2, F2, F0
  16C:  MUL.S     F6, F2, F2
  170:  NOP
  174:  LWC1      F0, A0 (S1)
  178:  LWC1      F2, 14C (S0)
  17C:  SUB.S     F2, F2, F0
  180:  MUL.S     F4, F2, F2
  184:  NOP
  188:  LBU       V0, 191 (S0)
  18C:  LWC1      F2, 148 (S0)
  190:  MTC1      V0, F0
  194:  NOP
  198:  CVT.S.W   F0, F0
  19C:  ADD.S     F2, F2, F0
  1A0:  LIF       F0, 1.5
  1A8:  NOP
  1AC:  SUB.S     F2, F2, F0
  1B0:  ADD.S     F12, F6, F4
  1B4:  LWC1      F0, 9C (S1)
  1B8:  SUB.S     F20, F2, F0
  1BC:  SQRT.S    F2, F12
  1C0:  C.EQ.S    F2, F2
  1C4:  NOP
  1C8:  BC1T      .o1DC
  1CC:  NOP
  1D0:  JAL       80061EF0
  1D4:  NOP
  1D8:  MOV.S     F2, F0
        .o1DC
  1DC:  MTC1      R0, F0
  1E0:  NOP
  1E4:  C.LT.S    F0, F20
  1E8:  NOP
  1EC:  BC1F      .o25C
  1F0:  MOV.S     F4, F2
  1F4:  LBU       V0, 191 (S0)
  1F8:  MTC1      V0, F0
  1FC:  NOP
  200:  CVT.S.W   F0, F0
  204:  C.LT.S    F20, F0
  208:  NOP
  20C:  BC1F      .o260
  210:  DADDU     S3, R0, R0
  214:  LBU       V0, 190 (S0)
  218:  LIF       F2, 0.5
  220:  MTC1      V0, F0
  224:  NOP
  228:  CVT.S.W   F0, F0
  22C:  MUL.S     F0, F0, F2
  230:  NOP
  234:  C.LT.S    F4, F0
  238:  NOP
  23C:  BC1F      .o260
  240:  ADDIU     V0, R0, 1
  244:  BEQ       R0, R0, .o45C
  248:  SW        V0, 8C (S4)
        .o24C
  24C:  BEQ       R0, R0, .o45C
  250:  SW        V0, 8C (S4)
        .o254
  254:  BEQ       R0, R0, .o45C
  258:  SW        V0, 8C (S4)
        .o25C
  25C:  DADDU     S3, R0, R0
        .o260
  260:  LUI       S5, 10
  264:  LIF       F26, 1.5
  26C:  MTC1      R0, F24
  270:  LIF       F22, 0.5
        .o278
  278:  LW        S0, E0 (S2)
  27C:  BEQL      S0, R0, .o450
  280:  ADDIU     S3, S3, 1
  284:  LW        V0, 0 (S0)
  288:  ANDI      V0, V0, 1
  28C:  BNEL      V0, R0, .o450
  290:  ADDIU     S3, S3, 1
  294:  LWC1      F2, 144 (S0)
  298:  LWC1      F0, 98 (S1)
  29C:  SUB.S     F2, F2, F0
  2A0:  MUL.S     F6, F2, F2
  2A4:  NOP
  2A8:  LWC1      F0, A0 (S1)
  2AC:  LWC1      F2, 14C (S0)
  2B0:  SUB.S     F2, F2, F0
  2B4:  MUL.S     F4, F2, F2
  2B8:  NOP
  2BC:  LBU       V0, 191 (S0)
  2C0:  LWC1      F2, 148 (S0)
  2C4:  MTC1      V0, F0
  2C8:  NOP
  2CC:  CVT.S.W   F0, F0
  2D0:  ADD.S     F2, F2, F0
  2D4:  SUB.S     F2, F2, F26
  2D8:  ADD.S     F12, F6, F4
  2DC:  LWC1      F0, 9C (S1)
  2E0:  SUB.S     F20, F2, F0
  2E4:  SQRT.S    F0, F12
  2E8:  C.EQ.S    F0, F0
  2EC:  NOP
  2F0:  BC1T      .o300
  2F4:  NOP
  2F8:  JAL       80061EF0
  2FC:  NOP
        .o300
  300:  C.LT.S    F24, F20
  304:  NOP
  308:  BC1F      .o358
  30C:  MOV.S     F4, F0
  310:  LBU       V0, 191 (S0)
  314:  MTC1      V0, F0
  318:  NOP
  31C:  CVT.S.W   F0, F0
  320:  C.LT.S    F20, F0
  324:  NOP
  328:  BC1F      .o358
  32C:  NOP
  330:  LBU       V0, 190 (S0)
  334:  MTC1      V0, F0
  338:  NOP
  33C:  CVT.S.W   F0, F0
  340:  MUL.S     F0, F0, F22
  344:  NOP
  348:  C.LT.S    F4, F0
  34C:  NOP
  350:  BC1T      .o24C
  354:  ADDIU     V0, R0, 1
        .o358
  358:  LW        S0, 1F4 (S0)
  35C:  BEQL      S0, R0, .o450
  360:  ADDIU     S3, S3, 1
        .o364
  364:  LW        V1, 0 (S0)
  368:  ANDI      V0, V1, 1
  36C:  BNE       V0, R0, .o440
  370:  AND       V0, V1, S5
  374:  BEQ       V0, R0, .o440
  378:  NOP
  37C:  LWC1      F2, 58 (S0)
  380:  LWC1      F0, 98 (S1)
  384:  SUB.S     F2, F2, F0
  388:  MUL.S     F6, F2, F2
  38C:  NOP
  390:  LWC1      F0, A0 (S1)
  394:  LWC1      F2, 60 (S0)
  398:  SUB.S     F2, F2, F0
  39C:  MUL.S     F4, F2, F2
  3A0:  NOP
  3A4:  LBU       V0, 73 (S0)
  3A8:  LWC1      F0, 5C (S0)
  3AC:  MTC1      V0, F2
  3B0:  NOP
  3B4:  CVT.S.W   F2, F2
  3B8:  ADD.S     F0, F0, F2
  3BC:  SUB.S     F0, F0, F26
  3C0:  ADD.S     F12, F6, F4
  3C4:  LWC1      F2, 9C (S1)
  3C8:  SUB.S     F20, F0, F2
  3CC:  SQRT.S    F0, F12
  3D0:  C.EQ.S    F0, F0
  3D4:  NOP
  3D8:  BC1T      .o3E8
  3DC:  NOP
  3E0:  JAL       80061EF0
  3E4:  NOP
        .o3E8
  3E8:  C.LT.S    F24, F20
  3EC:  NOP
  3F0:  BC1F      .o440
  3F4:  MOV.S     F4, F0
  3F8:  LBU       V0, 73 (S0)
  3FC:  MTC1      V0, F0
  400:  NOP
  404:  CVT.S.W   F0, F0
  408:  C.LT.S    F20, F0
  40C:  NOP
  410:  BC1F      .o440
  414:  NOP
  418:  LBU       V0, 72 (S0)
  41C:  MTC1      V0, F0
  420:  NOP
  424:  CVT.S.W   F0, F0
  428:  MUL.S     F0, F0, F22
  42C:  NOP
  430:  C.LT.S    F4, F0
  434:  NOP
  438:  BC1T      .o254
  43C:  ADDIU     V0, R0, 1
        .o440
  440:  LW        S0, C (S0)
  444:  BNE       S0, R0, .o364
  448:  NOP
  44C:  ADDIU     S3, S3, 1
        .o450
  450:  SLTI      V0, S3, 18
  454:  BNE       V0, R0, .o278
  458:  ADDIU     S2, S2, 4
        .o45C
  45C:  ADDIU     V0, R0, 2
  460:  LW        RA, 28 (SP)
  464:  LW        S5, 24 (SP)
  468:  LW        S4, 20 (SP)
  46C:  LW        S3, 1C (SP)
  470:  LW        S2, 18 (SP)
  474:  LW        S1, 14 (SP)
  478:  LW        S0, 10 (SP)
  47C:  LDC1      F26, 48 (SP)
  480:  LDC1      F24, 40 (SP)
  484:  LDC1      F22, 38 (SP)
  488:  LDC1      F20, 30 (SP)
  48C:  JR        RA
  490:  ADDIU     SP, SP, 50

PADDING: 802190E4 to 802190F0 (006197D4 to 006197E0)
00000000 00000000 00000000 

% Origin: HEURISTIC
#new:Function $Function_802190F0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S0, 20 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S1, 24 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        V0, C (S0)
   30:  JAL       {Func:GetVariable}
   34:  LW        A1, 0 (V0)
   38:  DADDU     S1, V0, R0
   3C:  ADDIU     A0, R0, 1
   40:  BEQ       S1, A0, .o100
   44:  SW        S1, 70 (S0)
   48:  SLTI      V0, S1, 2
   4C:  BEQ       V0, R0, .o64
   50:  ADDIU     V0, R0, 2
   54:  BEQ       S1, R0, .o7C
   58:  ADDIU     V0, R0, 8E
   5C:  BEQ       R0, R0, .o400
   60:  NOP
        .o64
   64:  BEQ       S1, V0, .o27C
   68:  ADDIU     V0, R0, 3
   6C:  BEQ       S1, V0, .oBC
   70:  ADDIU     V1, R0, 5B
   74:  BEQ       R0, R0, .o400
   78:  NOP
        .o7C
   7C:  LIF       F4, 142.0
   84:  LIF       F30, -118.0
   8C:  ADDIU     V1, R0, FF8A
   90:  SW        R0, 14 (SP)
   94:  SWC1      F4, 10 (SP)
   98:  SW        V0, 90 (S0)
   9C:  ADDIU     V0, R0, 2C
   A0:  SW        V0, 9C (S0)
   A4:  ADDIU     V0, R0, 3
   A8:  SW        R0, 94 (S0)
   AC:  SW        V1, 98 (S0)
   B0:  SW        V1, A0 (S0)
   B4:  BEQ       R0, R0, .oF0
   B8:  SW        V0, A4 (S0)
        .oBC
   BC:  LIF       F4, 91.0
   C4:  LIF       F30, -118.0
   CC:  ADDIU     V0, R0, FF8A
   D0:  SW        R0, 14 (SP)
   D4:  SWC1      F4, 10 (SP)
   D8:  SW        V1, 90 (S0)
   DC:  SW        R0, 94 (S0)
   E0:  SW        V0, 98 (S0)
   E4:  SW        V1, 9C (S0)
   E8:  SW        V0, A0 (S0)
   EC:  SW        S1, A4 (S0)
        .oF0
   F0:  SW        R0, A8 (S0)
   F4:  SW        R0, B0 (S0)
   F8:  BEQ       R0, R0, .o400
   FC:  SW        A0, 70 (S0)
        .o100
  100:  LW        V0, A8 (S0)
  104:  LW        V1, A4 (S0)
  108:  ADDU      V0, V0, V1
  10C:  SW        V0, A8 (S0)
  110:  SLTI      V0, V0, 2E
  114:  BNE       V0, R0, .o124
  118:  NOP
  11C:  ADDIU     V0, R0, 2D
  120:  SW        V0, A8 (S0)
        .o124
  124:  LWC1      F4, 90 (S0)
  128:  CVT.S.W   F4, F4
  12C:  SWC1      F4, 10 (SP)
  130:  LWC1      F4, 94 (S0)
  134:  CVT.S.W   F4, F4
  138:  SWC1      F4, 14 (SP)
  13C:  LWC1      F12, A8 (S0)
  140:  CVT.S.W   F12, F12
  144:  LIO       AT, 40C90FD0
  14C:  MTC1      AT, F26
  150:  LWC1      F30, 98 (S0)
  154:  CVT.S.W   F30, F30
  158:  MUL.S     F12, F12, F26
  15C:  NOP
  160:  LWC1      F28, 9C (S0)
  164:  CVT.S.W   F28, F28
  168:  LIF       F24, 360.0
  170:  LWC1      F4, A0 (S0)
  174:  CVT.S.W   F4, F4
  178:  SWC1      F4, 18 (SP)
  17C:  JAL       {Func:SinRad}
  180:  DIV.S     F12, F12, F24
  184:  CVT.D.S   F0, F0
  188:  LIF       F23, 1.875
  190:  MTC1      R0, F22
  194:  LWC1      F4, 10 (SP)
  198:  SUB.D     F0, F22, F0
  19C:  CVT.D.S   F20, F4
  1A0:  MUL.D     F20, F20, F0
  1A4:  NOP
  1A8:  LWC1      F12, A8 (S0)
  1AC:  CVT.S.W   F12, F12
  1B0:  MUL.S     F12, F12, F26
  1B4:  NOP
  1B8:  JAL       {Func:SinRad}
  1BC:  DIV.S     F12, F12, F24
  1C0:  MUL.S     F0, F28, F0
  1C4:  NOP
  1C8:  LW        V0, A8 (S0)
  1CC:  SLL       V0, V0, 1
  1D0:  MTC1      V0, F12
  1D4:  NOP
  1D8:  CVT.S.W   F12, F12
  1DC:  MUL.S     F12, F12, F26
  1E0:  NOP
  1E4:  CVT.D.S   F0, F0
  1E8:  ADD.D     F20, F20, F0
  1EC:  DIV.S     F12, F12, F24
  1F0:  CVT.S.D   F20, F20
  1F4:  JAL       {Func:SinRad}
  1F8:  SWC1      F20, 10 (SP)
  1FC:  LWC1      F12, A8 (S0)
  200:  CVT.S.W   F12, F12
  204:  MUL.S     F12, F12, F26
  208:  NOP
  20C:  LIF       F2, 90.0
  214:  NOP
  218:  MUL.S     F0, F0, F2
  21C:  NOP
  220:  LWC1      F4, 14 (SP)
  224:  ADD.S     F4, F4, F0
  228:  DIV.S     F12, F12, F24
  22C:  JAL       {Func:SinRad}
  230:  SWC1      F4, 14 (SP)
  234:  LWC1      F12, A8 (S0)
  238:  CVT.S.W   F12, F12
  23C:  MUL.S     F12, F12, F26
  240:  NOP
  244:  CVT.D.S   F0, F0
  248:  SUB.D     F22, F22, F0
  24C:  CVT.D.S   F20, F30
  250:  MUL.D     F20, F20, F22
  254:  NOP
  258:  JAL       {Func:SinRad}
  25C:  DIV.S     F12, F12, F24
  260:  LWC1      F4, 18 (SP)
  264:  MUL.S     F0, F4, F0
  268:  NOP
  26C:  CVT.D.S   F0, F0
  270:  ADD.D     F20, F20, F0
  274:  BEQ       R0, R0, .o3F0
  278:  ADDIU     V0, R0, 2D
        .o27C
  27C:  LW        V0, A8 (S0)
  280:  LW        V1, A4 (S0)
  284:  ADDU      V0, V0, V1
  288:  SW        V0, A8 (S0)
  28C:  SLTI      V0, V0, 5B
  290:  BNE       V0, R0, .o29C
  294:  ADDIU     V0, R0, 5A
  298:  SW        V0, A8 (S0)
        .o29C
  29C:  LWC1      F4, 90 (S0)
  2A0:  CVT.S.W   F4, F4
  2A4:  SWC1      F4, 10 (SP)
  2A8:  LWC1      F4, 94 (S0)
  2AC:  CVT.S.W   F4, F4
  2B0:  SWC1      F4, 14 (SP)
  2B4:  LWC1      F12, A8 (S0)
  2B8:  CVT.S.W   F12, F12
  2BC:  LIO       AT, 40C90FD0
  2C4:  MTC1      AT, F26
  2C8:  LWC1      F30, 98 (S0)
  2CC:  CVT.S.W   F30, F30
  2D0:  MUL.S     F12, F12, F26
  2D4:  NOP
  2D8:  LWC1      F28, 9C (S0)
  2DC:  CVT.S.W   F28, F28
  2E0:  LIF       F24, 360.0
  2E8:  LWC1      F4, A0 (S0)
  2EC:  CVT.S.W   F4, F4
  2F0:  SWC1      F4, 18 (SP)
  2F4:  JAL       {Func:SinRad}
  2F8:  DIV.S     F12, F12, F24
  2FC:  CVT.D.S   F0, F0
  300:  LIF       F23, 1.875
  308:  MTC1      R0, F22
  30C:  LWC1      F4, 10 (SP)
  310:  SUB.D     F0, F22, F0
  314:  CVT.D.S   F20, F4
  318:  MUL.D     F20, F20, F0
  31C:  NOP
  320:  LWC1      F12, A8 (S0)
  324:  CVT.S.W   F12, F12
  328:  MUL.S     F12, F12, F26
  32C:  NOP
  330:  JAL       {Func:SinRad}
  334:  DIV.S     F12, F12, F24
  338:  MUL.S     F0, F28, F0
  33C:  NOP
  340:  LW        V0, A8 (S0)
  344:  SLL       V0, V0, 1
  348:  MTC1      V0, F12
  34C:  NOP
  350:  CVT.S.W   F12, F12
  354:  MUL.S     F12, F12, F26
  358:  NOP
  35C:  CVT.D.S   F0, F0
  360:  ADD.D     F20, F20, F0
  364:  DIV.S     F12, F12, F24
  368:  CVT.S.D   F20, F20
  36C:  JAL       {Func:SinRad}
  370:  SWC1      F20, 10 (SP)
  374:  LWC1      F12, A8 (S0)
  378:  CVT.S.W   F12, F12
  37C:  MUL.S     F12, F12, F26
  380:  NOP
  384:  LIF       F2, 90.0
  38C:  NOP
  390:  MUL.S     F0, F0, F2
  394:  NOP
  398:  LWC1      F4, 14 (SP)
  39C:  ADD.S     F4, F4, F0
  3A0:  DIV.S     F12, F12, F24
  3A4:  JAL       {Func:SinRad}
  3A8:  SWC1      F4, 14 (SP)
  3AC:  LWC1      F12, A8 (S0)
  3B0:  CVT.S.W   F12, F12
  3B4:  MUL.S     F12, F12, F26
  3B8:  NOP
  3BC:  CVT.D.S   F0, F0
  3C0:  SUB.D     F22, F22, F0
  3C4:  CVT.D.S   F20, F30
  3C8:  MUL.D     F20, F20, F22
  3CC:  NOP
  3D0:  JAL       {Func:SinRad}
  3D4:  DIV.S     F12, F12, F24
  3D8:  LWC1      F4, 18 (SP)
  3DC:  MUL.S     F0, F4, F0
  3E0:  NOP
  3E4:  CVT.D.S   F0, F0
  3E8:  ADD.D     F20, F20, F0
  3EC:  ADDIU     V0, R0, 5A
        .o3F0
  3F0:  LW        V1, A8 (S0)
  3F4:  BNE       V1, V0, .o400
  3F8:  CVT.S.D   F30, F20
  3FC:  SW        S1, B0 (S0)
        .o400
  400:  LWC1      F4, 10 (SP)
  404:  TRUNC.W.S F4, F4
  408:  SWC1      F4, 84 (S0)
  40C:  LWC1      F4, 14 (SP)
  410:  TRUNC.W.S F4, F4
  414:  SWC1      F4, 88 (S0)
  418:  TRUNC.W.S F4, F30
  41C:  SWC1      F4, 8C (S0)
  420:  LW        RA, 28 (SP)
  424:  LW        S1, 24 (SP)
  428:  LW        S0, 20 (SP)
  42C:  LDC1      F30, 58 (SP)
  430:  LDC1      F28, 50 (SP)
  434:  LDC1      F26, 48 (SP)
  438:  LDC1      F24, 40 (SP)
  43C:  LDC1      F22, 38 (SP)
  440:  LDC1      F20, 30 (SP)
  444:  ADDIU     V0, R0, 2
  448:  JR        RA
  44C:  ADDIU     SP, SP, 60

#new:Function $Function_80219540
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  LW        V1, A8 (S0)
   14:  LW        V0, 88 (S0)
   18:  ADDU      V1, V1, V0
   1C:  BGEZ      V1, .o30
   20:  SW        V1, A8 (S0)
   24:  LUI       V0, 2
   28:  BEQ       R0, R0, .o40
   2C:  ADDU      V0, V1, V0
        .o30
   30:  LUI       A0, 2
   34:  SLT       V0, A0, V1
   38:  BEQ       V0, R0, .o44
   3C:  SUBU      V0, V1, A0
        .o40
   40:  SW        V0, A8 (S0)
        .o44
   44:  LW        V1, AC (S0)
   48:  LW        V0, 8C (S0)
   4C:  ADDU      V1, V1, V0
   50:  BGEZ      V1, .o64
   54:  SW        V1, AC (S0)
   58:  LUI       V0, 2
   5C:  BEQ       R0, R0, .o74
   60:  ADDU      V0, V1, V0
        .o64
   64:  LUI       A0, 2
   68:  SLT       V0, A0, V1
   6C:  BEQ       V0, R0, .o78
   70:  SUBU      V0, V1, A0
        .o74
   74:  SW        V0, AC (S0)
        .o78
   78:  LW        V1, B0 (S0)
   7C:  LW        V0, 90 (S0)
   80:  ADDU      V1, V1, V0
   84:  BGEZ      V1, .o98
   88:  SW        V1, B0 (S0)
   8C:  LUI       V0, 2
   90:  BEQ       R0, R0, .oA8
   94:  ADDU      V0, V1, V0
        .o98
   98:  LUI       A0, 2
   9C:  SLT       V0, A0, V1
   A0:  BEQ       V0, R0, .oAC
   A4:  SUBU      V0, V1, A0
        .oA8
   A8:  SW        V0, B0 (S0)
        .oAC
   AC:  LW        V1, B4 (S0)
   B0:  LW        V0, 94 (S0)
   B4:  ADDU      V1, V1, V0
   B8:  BGEZ      V1, .oCC
   BC:  SW        V1, B4 (S0)
   C0:  LUI       V0, 2
   C4:  BEQ       R0, R0, .oDC
   C8:  ADDU      V0, V1, V0
        .oCC
   CC:  LUI       A0, 2
   D0:  SLT       V0, A0, V1
   D4:  BEQ       V0, R0, .oE0
   D8:  SUBU      V0, V1, A0
        .oDC
   DC:  SW        V0, B4 (S0)
        .oE0
   E0:  LW        A0, 84 (S0)
   E4:  JAL       8011BC1C
   E8:  LW        A1, A8 (S0)
   EC:  LW        A0, 84 (S0)
   F0:  JAL       8011BC34
   F4:  LW        A1, AC (S0)
   F8:  LW        A0, 84 (S0)
   FC:  JAL       8011BC4C
  100:  LW        A1, B0 (S0)
  104:  LW        A0, 84 (S0)
  108:  JAL       8011BC64
  10C:  LW        A1, B4 (S0)
  110:  LW        RA, 14 (SP)
  114:  LW        S0, 10 (SP)
  118:  DADDU     V0, R0, R0
  11C:  JR        RA
  120:  ADDIU     SP, SP, 18

#new:Function $Function_80219664
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  BEQ       A1, R0, .o24
   10:  SW        RA, 14 (SP)
   14:  SW        R0, 70 (S0)
   18:  SW        R0, 74 (S0)
   1C:  SW        R0, 78 (S0)
   20:  SW        R0, 7C (S0)
        .o24
   24:  LW        V0, 70 (S0)
   28:  BNE       V0, R0, .o64
   2C:  NOP
   30:  LW        V1, A8 (S0)
   34:  LW        V0, 88 (S0)
   38:  ADDU      V1, V1, V0
   3C:  BGEZ      V1, .o50
   40:  SW        V1, A8 (S0)
   44:  LUI       V0, 2
   48:  BEQ       R0, R0, .o60
   4C:  ADDU      V0, V1, V0
        .o50
   50:  LUI       A0, 2
   54:  SLT       V0, A0, V1
   58:  BEQ       V0, R0, .o64
   5C:  SUBU      V0, V1, A0
        .o60
   60:  SW        V0, A8 (S0)
        .o64
   64:  LW        V0, 74 (S0)
   68:  BNE       V0, R0, .oA4
   6C:  NOP
   70:  LW        V1, AC (S0)
   74:  LW        V0, 8C (S0)
   78:  ADDU      V1, V1, V0
   7C:  BGEZ      V1, .o90
   80:  SW        V1, AC (S0)
   84:  LUI       V0, 2
   88:  BEQ       R0, R0, .oA0
   8C:  ADDU      V0, V1, V0
        .o90
   90:  LUI       A0, 2
   94:  SLT       V0, A0, V1
   98:  BEQ       V0, R0, .oA4
   9C:  SUBU      V0, V1, A0
        .oA0
   A0:  SW        V0, AC (S0)
        .oA4
   A4:  LW        V0, 78 (S0)
   A8:  BNE       V0, R0, .oE4
   AC:  NOP
   B0:  LW        V1, B0 (S0)
   B4:  LW        V0, 90 (S0)
   B8:  ADDU      V1, V1, V0
   BC:  BGEZ      V1, .oD0
   C0:  SW        V1, B0 (S0)
   C4:  LUI       V0, 2
   C8:  BEQ       R0, R0, .oE0
   CC:  ADDU      V0, V1, V0
        .oD0
   D0:  LUI       A0, 2
   D4:  SLT       V0, A0, V1
   D8:  BEQ       V0, R0, .oE4
   DC:  SUBU      V0, V1, A0
        .oE0
   E0:  SW        V0, B0 (S0)
        .oE4
   E4:  LW        V0, 7C (S0)
   E8:  BNE       V0, R0, .o124
   EC:  NOP
   F0:  LW        V1, B4 (S0)
   F4:  LW        V0, 94 (S0)
   F8:  ADDU      V1, V1, V0
   FC:  BGEZ      V1, .o110
  100:  SW        V1, B4 (S0)
  104:  LUI       V0, 2
  108:  BEQ       R0, R0, .o120
  10C:  ADDU      V0, V1, V0
        .o110
  110:  LUI       A0, 2
  114:  SLT       V0, A0, V1
  118:  BEQ       V0, R0, .o124
  11C:  SUBU      V0, V1, A0
        .o120
  120:  SW        V0, B4 (S0)
        .o124
  124:  LW        A0, 84 (S0)
  128:  JAL       8011BC1C
  12C:  LW        A1, A8 (S0)
  130:  LW        A0, 84 (S0)
  134:  JAL       8011BC34
  138:  LW        A1, AC (S0)
  13C:  LW        A0, 84 (S0)
  140:  JAL       8011BC4C
  144:  LW        A1, B0 (S0)
  148:  LW        A0, 84 (S0)
  14C:  JAL       8011BC64
  150:  LW        A1, B4 (S0)
  154:  LW        V0, 70 (S0)
  158:  LW        V1, 78 (S0)
  15C:  LW        A0, 98 (S0)
  160:  ADDIU     V0, V0, 1
  164:  SW        V0, 70 (S0)
  168:  LW        V0, 74 (S0)
  16C:  ADDIU     V1, V1, 1
  170:  SW        V1, 78 (S0)
  174:  LW        V1, 70 (S0)
  178:  ADDIU     V0, V0, 1
  17C:  SW        V0, 74 (S0)
  180:  LW        V0, 7C (S0)
  184:  SLT       V1, V1, A0
  188:  ADDIU     V0, V0, 1
  18C:  BNE       V1, R0, .o198
  190:  SW        V0, 7C (S0)
  194:  SW        R0, 70 (S0)
        .o198
  198:  LW        V0, 74 (S0)
  19C:  LW        V1, 9C (S0)
  1A0:  SLT       V0, V0, V1
  1A4:  BEQL      V0, R0, .o1AC
  1A8:  SW        R0, 74 (S0)
        .o1AC
  1AC:  LW        V0, 78 (S0)
  1B0:  LW        V1, A0 (S0)
  1B4:  SLT       V0, V0, V1
  1B8:  BEQL      V0, R0, .o1C0
  1BC:  SW        R0, 78 (S0)
        .o1C0
  1C0:  LW        V0, 7C (S0)
  1C4:  LW        V1, A4 (S0)
  1C8:  SLT       V0, V0, V1
  1CC:  BEQL      V0, R0, .o1D4
  1D0:  SW        R0, 7C (S0)
        .o1D4
  1D4:  LW        RA, 14 (SP)
  1D8:  LW        S0, 10 (SP)
  1DC:  DADDU     V0, R0, R0
  1E0:  JR        RA
  1E4:  ADDIU     SP, SP, 18

PADDING: 8021984C to 80219850 (00619F3C to 00619F40)
00000000 

#new:DefenseTable $DefenseTable_80219850
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021985C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   90`
.Status:Shrink     90`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80219908
00800000 01000000 001D00FF $IdleAnimations_80219954 $DefenseTable_80219850 00000000 00000000 010F0000 00000000 

#new:Actor $Swooper
% stats
[Index]        16b 
[Level]        10`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_8021985C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80219908 
[Script]      $Script_Init_802199EC 
% move effectiveness
[Escape]       50`b 
[Item]         90`b 
[AirLift]     100`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         31`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b -20`b % dx dy
[StatusIcon]   10`b -20`b % dx dy

#new:IdleAnimations $IdleAnimations_80219954
.Status:Normal    0034000C
.Status:Stone     0034000B
.Status:Sleep     0034000F
.Status:Poison    0034000C
.Status:Stop      0034000B
.Status:Static    0034000C
.Status:Paralyze  0034000B
.Status:Dizzy     00340010
.Status:Fear      00340010
.Status:End

#new:IdleAnimations $IdleAnimations_802199A0
.Status:Normal    00340002
.Status:Stone     00340001
.Status:Sleep     00340013
.Status:Poison    00340002
.Status:Stop      00340001
.Status:Static    00340002
.Status:Paralyze  00340001
.Status:Dizzy     00340014
.Status:Fear      00340014
.Status:End

#new:Script $Script_Init_802199EC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021B274 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80219A50 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A404 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_80219A50
    0:  Return
    8:  End

#new:Script $Script_80219A60
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  		Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
   48:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   5C:  		Call     SetGoalToHome 	( .Actor:Self )
   6C:  		Call     AddToGoalPos 	( .Actor:Self 00000000 FFFFFFE8 00000000 )
   88:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   A4:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .True )
   BC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219954 )
   D4:  		Call     SetAnimation 	( .Actor:Self 00000001 0034000C )
   EC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  108:  		Add  *Var[1]  00000018 
  118:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  134:  		Call     HPBarToHome 	( .Actor:Self )
  144:  	Case  ==  00000001 
  150:  		Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
  168:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  17C:  		Call     SetGoalToHome 	( .Actor:Self )
  18C:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
  1A8:  EndSwitch
  1B0:  Return
  1B8:  End

#new:Script $Script_80219C20
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00340015 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00340017 
   C0:  		SetConst  *Var[2]  00340018 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00340017 
  108:  		SetConst  *Var[2]  00340018 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00340018 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:ShockHit
  164:  		Call     80269470 ( )
  170:  		SetConst  *Var[0]  00000001 
  180:  		SetConst  *Var[1]  00340015 
  190:  		ExecWait DoShockHit 
  19C:  		Call     UseCamPreset 	( 00000002 )
  1AC:  		ExecWait $Script_80219A60 
  1B8:  	Case  ==  .Event:ShockDeath
  1C4:  		Call     80269470 ( )
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  00340015 
  1F0:  		ExecWait DoShockHit 
  1FC:  		Thread
  204:  			Wait     0000001E 
  210:  			Call     UseCamPreset 	( 00000002 )
  220:  		EndThread
  228:  		SetConst  *Var[0]  00000001 
  238:  		SetConst  *Var[1]  00340015 
  248:  		ExecWait DoDeath 
  254:  		Return
  25C:  	CaseOR  ==  00000017
  268:  	CaseOR  ==  .Event:Immune
  274:  	CaseOR  ==  .Event:AirLiftFailed
  280:  		SetConst  *Var[0]  00000001 
  290:  		SetConst  *Var[1]  00340002 
  2A0:  		ExecWait DoImmune 
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death
  2C0:  		SetConst  *Var[0]  00000001 
  2D0:  		SetConst  *Var[1]  00340015 
  2E0:  		ExecWait DoNormalHit 
  2EC:  		Wait     0000000A 
  2F8:  		SetConst  *Var[0]  00000001 
  308:  		SetConst  *Var[1]  00340015 
  318:  		ExecWait DoDeath 
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus
  338:  		SetConst  *Var[0]  00000001 
  348:  		SetConst  *Var[1]  00340002 
  358:  		ExecWait DoRecover 
  364:  	Case  ==  .Event:ScareAway
  370:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  388:  		SetConst  *Var[0]  00000001 
  398:  		SetConst  *Var[1]  00340002 
  3A8:  		SetConst  *Var[2]  00340015 
  3B8:  		ExecWait DoScareAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00340002 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		SetConst  *Var[0]  00000001 
  420:  		SetConst  *Var[1]  00340015 
  430:  		ExecWait DoBlowAway 
  43C:  		Return
  444:  EndSwitch
  44C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  Return
  47C:  End

#new:Script $Script_8021A0A4
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     GetLastDamage 	( .Actor:Self *Var[0] )
   24:  If  *Var[0]  <=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
   5C:  Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
   74:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
   90:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   AC:  Sub  *Var[1]  00000018 
   BC:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D8:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   F0:  If  *Var[A]  ==  FFFFFFFF 
  100:  	Call     SetHomePos  	( .Actor:Self *Var[0] 0000002D *Var[2] )
  11C:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  130:  	Call     SetGoalToHome 	( .Actor:Self )
  140:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  160:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  180:  Else
  188:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  19C:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] 0000002D *Var[2] )
  1B8:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  1D8:  	Call     GetIndexFromPos 	( .Actor:Self *Var[A] )
  1EC:  	Mod  *Var[A]  00000004 
  1FC:  	Add  *Var[A]  00000004 
  20C:  	Call     SetGoalToIndex ( .Actor:Self *Var[A] )
  220:  	Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  23C:  	Call     SetHomePos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  258:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  26C:  	Call     SetGoalToHome 	( .Actor:Self )
  27C:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  29C:  EndIf
  2A4:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  2C0:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000016 )
  2DC:  Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
  2F8:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802199A0 )
  310:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  328:  Call     HPBarToHome 	( .Actor:Self )
  338:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  350:  Return
  358:  End

#new:Script $Script_HandleEvent_8021A404
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_80219C20 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   6C:  Call     GetEventType 	( .Actor:Self *Var[0] )
   80:  Switch  *Var[0] 
   8C:  	Case  ==  .Event:HitCombo
   98:  		Call     GetBattlePhase ( *Var[0] )
   A8:  		If  *Var[0]  ==  .Phase:FirstStrike
   B8:  			SetConst  *Var[0]  00000001 
   C8:  			SetConst  *Var[1]  00340015 
   D8:  			ExecWait DoNormalHit 
   E4:  		Else
   EC:  			SetConst  *Var[0]  00000001 
   FC:  			SetConst  *Var[1]  0034000E 
  10C:  			ExecWait DoNormalHit 
  118:  		EndIf
  120:  	Case  ==  .Event:Hit
  12C:  		Call     GetBattlePhase ( *Var[0] )
  13C:  		If  *Var[0]  ==  .Phase:FirstStrike
  14C:  			SetConst  *Var[0]  00000001 
  15C:  			SetConst  *Var[1]  00340015 
  16C:  			ExecWait DoNormalHit 
  178:  		Else
  180:  			SetConst  *Var[0]  00000001 
  190:  			SetConst  *Var[1]  0034000E 
  1A0:  			ExecWait DoNormalHit 
  1AC:  			ExecWait $Script_8021A0A4 
  1B8:  		EndIf
  1C0:  	Case  ==  .Event:BurnHit
  1CC:  		Call     GetBattlePhase ( *Var[0] )
  1DC:  		If  *Var[0]  ==  .Phase:FirstStrike
  1EC:  			SetConst  *Var[0]  00000001 
  1FC:  			SetConst  *Var[1]  00340017 
  20C:  			SetConst  *Var[2]  00340018 
  21C:  			ExecWait DoBurnHit 
  228:  		Else
  230:  			SetConst  *Var[0]  00000001 
  240:  			SetConst  *Var[1]  00340011 
  250:  			SetConst  *Var[2]  00340012 
  260:  			ExecWait DoBurnHit 
  26C:  			ExecWait $Script_8021A0A4 
  278:  		EndIf
  280:  	Case  ==  .Event:BurnDeath
  28C:  		Call     GetBattlePhase ( *Var[0] )
  29C:  		If  *Var[0]  ==  .Phase:FirstStrike
  2AC:  			SetConst  *Var[0]  00000001 
  2BC:  			SetConst  *Var[1]  00340017 
  2CC:  			SetConst  *Var[2]  00340018 
  2DC:  			ExecWait DoBurnHit 
  2E8:  			SetConst  *Var[0]  00000001 
  2F8:  			SetConst  *Var[1]  00340018 
  308:  			ExecWait DoDeath 
  314:  		Else
  31C:  			SetConst  *Var[0]  00000001 
  32C:  			SetConst  *Var[1]  00340011 
  33C:  			SetConst  *Var[2]  00340012 
  34C:  			ExecWait DoBurnHit 
  358:  			SetConst  *Var[0]  00000001 
  368:  			SetConst  *Var[1]  00340012 
  378:  			ExecWait DoDeath 
  384:  		EndIf
  38C:  		Return
  394:  	Case  ==  .Event:ShockHit
  3A0:  		Call     80269470 ( )
  3AC:  		SetConst  *Var[0]  00000001 
  3BC:  		SetConst  *Var[1]  00340015 
  3CC:  		ExecWait 8029A76C 
  3D8:  		Call     UseCamPreset 	( 00000002 )
  3E8:  		ExecWait $Script_80219A60 
  3F4:  	Case  ==  .Event:ShockDeath
  400:  		Call     80269470 ( )
  40C:  		SetConst  *Var[0]  00000001 
  41C:  		SetConst  *Var[1]  00340015 
  42C:  		ExecWait 8029A76C 
  438:  		Thread
  440:  			Wait     0000001E 
  44C:  			Call     UseCamPreset 	( 00000002 )
  45C:  		EndThread
  464:  		SetConst  *Var[0]  00000001 
  474:  		SetConst  *Var[1]  00340015 
  484:  		ExecWait DoDeath 
  490:  		Return
  498:  	CaseOR  ==  00000017
  4A4:  	CaseOR  ==  .Event:Immune
  4B0:  		SetConst  *Var[0]  00000001 
  4C0:  		SetConst  *Var[1]  0034000C 
  4D0:  		ExecWait DoImmune 
  4DC:  	EndCaseGroup
  4E4:  	Case  ==  .Event:Death
  4F0:  		Call     GetBattlePhase ( *Var[0] )
  500:  		If  *Var[0]  ==  .Phase:FirstStrike
  510:  			SetConst  *Var[0]  00000001 
  520:  			SetConst  *Var[1]  00340015 
  530:  			ExecWait DoNormalHit 
  53C:  			Wait     0000000A 
  548:  			SetConst  *Var[0]  00000001 
  558:  			SetConst  *Var[1]  00340015 
  568:  			ExecWait DoDeath 
  574:  		Else
  57C:  			SetConst  *Var[0]  00000001 
  58C:  			SetConst  *Var[1]  0034000E 
  59C:  			ExecWait DoNormalHit 
  5A8:  			Wait     0000000A 
  5B4:  			SetConst  *Var[0]  00000001 
  5C4:  			SetConst  *Var[1]  0034000E 
  5D4:  			ExecWait DoDeath 
  5E0:  		EndIf
  5E8:  		Return
  5F0:  	Case  ==  .Event:BeginFirstStrike
  5FC:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  614:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802199A0 )
  62C:  		Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
  644:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  660:  		Call     HPBarToCurrent ( .Actor:Self )
  670:  	Case  ==  .Event:EndFirstStrike
  67C:  		ExecWait $Script_80219A60 
  688:  		Call     HPBarToHome 	( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus
  6A4:  	Case  ==  .Event:ScareAway
  6B0:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  6C8:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  6E0:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFE8 00000000 )
  6FC:  		SetConst  *Var[0]  00000001 
  70C:  		SetConst  *Var[1]  00340002 
  71C:  		SetConst  *Var[2]  00340015 
  72C:  		ExecWait DoScareAway 
  738:  		Return
  740:  EndSwitch
  748:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  75C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  770:  Return
  778:  End

#new:Script $Script_8021AB84
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
   74:  	Call     SetGoalToTarget 	( .Actor:Self )
   84:  	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
   A0:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   B4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D0:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Else
   F4:  	Call     UseCamPreset 	( 0000003F )
  104:  	Call     CamTargetActor ( .Actor:Self )
  114:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  12C:  	Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
  144:  	Call     SetGoalToTarget 	( .Actor:Self )
  154:  	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  170:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  184:  	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
  1A0:  EndIf
  1A8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
  1CC:  Switch  *Var[0] 
  1D8:  	CaseOR  ==  00000006 
  1E4:  	CaseOR  ==  00000005 
  1F0:  		Set  *Var[A]  *Var[0] 
  200:  		Wait     0000000A 
  20C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  220:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  234:  		Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  24C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  268:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  284:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  2A4:  		Call     SetGoalToTarget 	( .Actor:Self )
  2B4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  		Sub  *Var[0]  00000032 
  2E0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  328:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  344:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
  35C:  		Wait     0000000F 
  368:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  380:  		If  *Var[A]  ==  00000005 
  390:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3B4:  		EndIf
  3BC:  		Call     8027D7F0 ( )
  3C8:  		Call     UseCamPreset 	( 00000002 )
  3D8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3EC:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  408:  		ExecWait $Script_80219A60 
  414:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  42C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  440:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  454:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  	Case  ==  00000007 
  484:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  498:  		If  *Var[0]  &  00002000 
  4A8:  			Set  *Flag[00]  00000000 
  4B8:  		Else
  4C0:  			Set  *Flag[00]  00000001 
  4D0:  		EndIf
  4D8:  EndSwitch
  4E0:  Wait     0000000A 
  4EC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  500:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  514:  Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  52C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  548:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  564:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  584:  Call     SetGoalToTarget 	( .Actor:Self )
  594:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5A8:  Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  5C0:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  5DC:  Wait     00000002 
  5E8:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  610:  Call     UseCamPreset 	( 00000002 )
  620:  Call     SetGoalToTarget 	( .Actor:Self )
  630:  Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  64C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  660:  Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
  678:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  694:  Wait     0000000A 
  6A0:  Call     8027D7F0 ( )
  6AC:  ExecWait $Script_80219A60 
  6B8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6CC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6E0:  Return
  6E8:  End

#new:Script $Script_TakeTurn_8021B274
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_8021AB84 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   6C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   80:  Call     UseCamPreset 	( 0000003F )
   90:  Call     CamTargetActor ( .Actor:Self )
   A0:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   B8:  Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
   D0:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
   E8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  104:  Sub  *Var[1]  00000018 
  114:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  130:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
  154:  Switch  *Var[0] 
  160:  	CaseOR  ==  00000006 
  16C:  	CaseOR  ==  00000005 
  178:  		Set  *Var[A]  *Var[0] 
  188:  		Wait     0000000A 
  194:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1A8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1BC:  		Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  1D4:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  200:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  21C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  230:  		Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  248:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
  264:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
  27C:  		Wait     0000000F 
  288:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  2A0:  		If  *Var[A]  ==  00000005 
  2B0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Call     8027D7F0 ( )
  2E8:  		Call     UseCamPreset 	( 00000002 )
  2F8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  30C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		ExecWait $Script_80219A60 
  334:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  34C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  360:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  374:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  388:  		Return
  390:  	EndCaseGroup
  398:  	Case  ==  00000007 
  3A4:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  3B8:  		If  *Var[0]  &  00002000 
  3C8:  			Set  *Flag[00]  00000000 
  3D8:  		Else
  3E0:  			Set  *Flag[00]  00000001 
  3F0:  		EndIf
  3F8:  EndSwitch
  400:  Wait     0000000A 
  40C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  420:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  434:  Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  44C:  Call     SetGoalToTarget 	( .Actor:Self )
  45C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  470:  Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
  488:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
  4A4:  Wait     00000002 
  4B0:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  4D8:  Call     UseCamPreset 	( 00000002 )
  4E8:  Call     SetGoalToTarget 	( .Actor:Self )
  4F8:  Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  514:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  528:  Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
  540:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  55C:  Wait     0000000A 
  568:  Call     8027D7F0 ( )
  574:  ExecWait $Script_80219A60 
  580:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  594:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5A8:  Return
  5B0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5C4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5D8:  Return
  5E0:  End

PADDING: 8021B85C to 8021B860 (0061BF4C to 0061BF50)
00000000 

#new:DefenseTable $DefenseTable_8021B860
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021B86C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   80`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021B918
00800000 01000000 001D00FF $IdleAnimations_8021B964 $DefenseTable_8021B860 00000000 00000000 010F0000 00000000 

#new:Actor $Swoopula
% stats
[Index]        3Ab 
[Level]        22`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_8021B86C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021B918 
[Script]      $Script_Init_8021B9FC 
% move effectiveness
[Escape]       30`b 
[Item]         70`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         31`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b -20`b % dx dy
[StatusIcon]   10`b -20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021B964
.Status:Normal    0034010C
.Status:Stone     0034010B
.Status:Sleep     0034010F
.Status:Poison    0034010C
.Status:Stop      0034010B
.Status:Static    0034010C
.Status:Paralyze  0034010B
.Status:Dizzy     00340110
.Status:Fear      00340110
.Status:End

#new:IdleAnimations $IdleAnimations_8021B9B0
.Status:Normal    00340102
.Status:Stone     00340101
.Status:Sleep     00340113
.Status:Poison    00340102
.Status:Stop      00340101
.Status:Static    00340102
.Status:Paralyze  00340101
.Status:Dizzy     00340114
.Status:Fear      00340114
.Status:End

#new:Script $Script_Init_8021B9FC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021E7B4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021BA60 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021C414 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_8021BA60
    0:  Return
    8:  End

#new:Script $Script_8021BA70
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	Case  ==  00000000 
   30:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   48:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   5C:  		Call     SetGoalToHome 	( .Actor:Self )
   6C:  		Call     AddToGoalPos 	( .Actor:Self 00000000 FFFFFFE8 00000000 )
   88:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   A4:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .True )
   BC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021B964 )
   D4:  		Call     SetAnimation 	( .Actor:Self 00000001 0034010C )
   EC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  108:  		Add  *Var[1]  00000018 
  118:  		Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  134:  		Call     HPBarToHome 	( .Actor:Self )
  144:  	Case  ==  00000001 
  150:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  168:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  17C:  		Call     SetGoalToHome 	( .Actor:Self )
  18C:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
  1A8:  EndSwitch
  1B0:  Return
  1B8:  End

#new:Script $Script_8021BC30
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00340115 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00340117 
   C0:  		SetConst  *Var[2]  00340118 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00340117 
  108:  		SetConst  *Var[2]  00340118 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00340118 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:ShockHit
  164:  		Call     80269470 ( )
  170:  		SetConst  *Var[0]  00000001 
  180:  		SetConst  *Var[1]  00340115 
  190:  		ExecWait DoShockHit 
  19C:  		Call     UseCamPreset 	( 00000002 )
  1AC:  		ExecWait $Script_8021BA70 
  1B8:  	Case  ==  .Event:ShockDeath
  1C4:  		Call     80269470 ( )
  1D0:  		SetConst  *Var[0]  00000001 
  1E0:  		SetConst  *Var[1]  00340115 
  1F0:  		ExecWait DoShockHit 
  1FC:  		Thread
  204:  			Wait     0000001E 
  210:  			Call     UseCamPreset 	( 00000002 )
  220:  		EndThread
  228:  		SetConst  *Var[0]  00000001 
  238:  		SetConst  *Var[1]  00340115 
  248:  		ExecWait DoDeath 
  254:  		Return
  25C:  	CaseOR  ==  00000017
  268:  	CaseOR  ==  .Event:Immune
  274:  	CaseOR  ==  .Event:AirLiftFailed
  280:  		SetConst  *Var[0]  00000001 
  290:  		SetConst  *Var[1]  00340102 
  2A0:  		ExecWait DoImmune 
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death
  2C0:  		SetConst  *Var[0]  00000001 
  2D0:  		SetConst  *Var[1]  00340115 
  2E0:  		ExecWait DoNormalHit 
  2EC:  		Wait     0000000A 
  2F8:  		SetConst  *Var[0]  00000001 
  308:  		SetConst  *Var[1]  00340115 
  318:  		ExecWait DoDeath 
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus
  338:  		SetConst  *Var[0]  00000001 
  348:  		SetConst  *Var[1]  00340102 
  358:  		ExecWait DoRecover 
  364:  	Case  ==  .Event:ScareAway
  370:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  388:  		SetConst  *Var[0]  00000001 
  398:  		SetConst  *Var[1]  00340102 
  3A8:  		SetConst  *Var[2]  00340115 
  3B8:  		ExecWait DoScareAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00340102 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		SetConst  *Var[0]  00000001 
  420:  		SetConst  *Var[1]  00340115 
  430:  		ExecWait DoBlowAway 
  43C:  		Return
  444:  EndSwitch
  44C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  Return
  47C:  End

#new:Script $Script_8021C0B4
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     GetLastDamage 	( .Actor:Self *Var[0] )
   24:  If  *Var[0]  <=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
   5C:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   74:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
   90:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   AC:  Sub  *Var[1]  00000018 
   BC:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D8:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
   F0:  If  *Var[A]  ==  FFFFFFFF 
  100:  	Call     SetHomePos  	( .Actor:Self *Var[0] 0000002D *Var[2] )
  11C:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  130:  	Call     SetGoalToHome 	( .Actor:Self )
  140:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  160:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  180:  Else
  188:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  19C:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] 0000002D *Var[2] )
  1B8:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
  1D8:  	Call     GetIndexFromPos 	( .Actor:Self *Var[A] )
  1EC:  	Mod  *Var[A]  00000004 
  1FC:  	Add  *Var[A]  00000004 
  20C:  	Call     SetGoalToIndex ( .Actor:Self *Var[A] )
  220:  	Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  23C:  	Call     SetHomePos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
  258:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  26C:  	Call     SetGoalToHome 	( .Actor:Self )
  27C:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  29C:  EndIf
  2A4:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  2C0:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000016 )
  2DC:  Call     $Function_802180D0 ( FFFFFFF6 00000014 0000000A 00000014 )
  2F8:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021B9B0 )
  310:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  328:  Call     HPBarToHome 	( .Actor:Self )
  338:  Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
  350:  Return
  358:  End

#new:Script $Script_HandleEvent_8021C414
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_8021BC30 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   6C:  Call     GetEventType 	( .Actor:Self *Var[0] )
   80:  Switch  *Var[0] 
   8C:  	Case  ==  .Event:HitCombo
   98:  		Call     GetBattlePhase ( *Var[0] )
   A8:  		If  *Var[0]  ==  .Phase:FirstStrike
   B8:  			SetConst  *Var[0]  00000001 
   C8:  			SetConst  *Var[1]  00340115 
   D8:  			ExecWait DoNormalHit 
   E4:  		Else
   EC:  			SetConst  *Var[0]  00000001 
   FC:  			SetConst  *Var[1]  0034010E 
  10C:  			ExecWait DoNormalHit 
  118:  		EndIf
  120:  	Case  ==  .Event:Hit
  12C:  		Call     GetBattlePhase ( *Var[0] )
  13C:  		If  *Var[0]  ==  .Phase:FirstStrike
  14C:  			SetConst  *Var[0]  00000001 
  15C:  			SetConst  *Var[1]  00340115 
  16C:  			ExecWait DoNormalHit 
  178:  		Else
  180:  			SetConst  *Var[0]  00000001 
  190:  			SetConst  *Var[1]  0034010E 
  1A0:  			ExecWait DoNormalHit 
  1AC:  			ExecWait $Script_8021C0B4 
  1B8:  		EndIf
  1C0:  	Case  ==  .Event:BurnHit
  1CC:  		Call     GetBattlePhase ( *Var[0] )
  1DC:  		If  *Var[0]  ==  .Phase:FirstStrike
  1EC:  			SetConst  *Var[0]  00000001 
  1FC:  			SetConst  *Var[1]  00340117 
  20C:  			SetConst  *Var[2]  00340118 
  21C:  			ExecWait DoBurnHit 
  228:  		Else
  230:  			SetConst  *Var[0]  00000001 
  240:  			SetConst  *Var[1]  00340111 
  250:  			SetConst  *Var[2]  00340112 
  260:  			ExecWait DoBurnHit 
  26C:  			ExecWait $Script_8021C0B4 
  278:  		EndIf
  280:  	Case  ==  .Event:BurnDeath
  28C:  		Call     GetBattlePhase ( *Var[0] )
  29C:  		If  *Var[0]  ==  .Phase:FirstStrike
  2AC:  			SetConst  *Var[0]  00000001 
  2BC:  			SetConst  *Var[1]  00340117 
  2CC:  			SetConst  *Var[2]  00340118 
  2DC:  			ExecWait DoBurnHit 
  2E8:  			SetConst  *Var[0]  00000001 
  2F8:  			SetConst  *Var[1]  00340118 
  308:  			ExecWait DoDeath 
  314:  		Else
  31C:  			SetConst  *Var[0]  00000001 
  32C:  			SetConst  *Var[1]  00340111 
  33C:  			SetConst  *Var[2]  00340112 
  34C:  			ExecWait DoBurnHit 
  358:  			SetConst  *Var[0]  00000001 
  368:  			SetConst  *Var[1]  00340112 
  378:  			ExecWait DoDeath 
  384:  		EndIf
  38C:  		Return
  394:  	Case  ==  .Event:ShockHit
  3A0:  		Call     80269470 ( )
  3AC:  		SetConst  *Var[0]  00000001 
  3BC:  		SetConst  *Var[1]  00340115 
  3CC:  		ExecWait 8029A76C 
  3D8:  		Call     UseCamPreset 	( 00000002 )
  3E8:  		ExecWait $Script_8021BA70 
  3F4:  	Case  ==  .Event:ShockDeath
  400:  		Call     80269470 ( )
  40C:  		SetConst  *Var[0]  00000001 
  41C:  		SetConst  *Var[1]  00340115 
  42C:  		ExecWait 8029A76C 
  438:  		Thread
  440:  			Wait     0000001E 
  44C:  			Call     UseCamPreset 	( 00000002 )
  45C:  		EndThread
  464:  		SetConst  *Var[0]  00000001 
  474:  		SetConst  *Var[1]  00340115 
  484:  		ExecWait DoDeath 
  490:  		Return
  498:  	CaseOR  ==  00000017
  4A4:  	CaseOR  ==  .Event:Immune
  4B0:  		SetConst  *Var[0]  00000001 
  4C0:  		SetConst  *Var[1]  0034010C 
  4D0:  		ExecWait DoImmune 
  4DC:  	EndCaseGroup
  4E4:  	Case  ==  .Event:Death
  4F0:  		Call     GetBattlePhase ( *Var[0] )
  500:  		If  *Var[0]  ==  .Phase:FirstStrike
  510:  			SetConst  *Var[0]  00000001 
  520:  			SetConst  *Var[1]  00340115 
  530:  			ExecWait DoNormalHit 
  53C:  			Wait     0000000A 
  548:  			SetConst  *Var[0]  00000001 
  558:  			SetConst  *Var[1]  00340115 
  568:  			ExecWait DoDeath 
  574:  		Else
  57C:  			SetConst  *Var[0]  00000001 
  58C:  			SetConst  *Var[1]  0034010E 
  59C:  			ExecWait DoNormalHit 
  5A8:  			Wait     0000000A 
  5B4:  			SetConst  *Var[0]  00000001 
  5C4:  			SetConst  *Var[1]  0034010E 
  5D4:  			ExecWait DoDeath 
  5E0:  		EndIf
  5E8:  		Return
  5F0:  	Case  ==  .Event:BeginFirstStrike
  5FC:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  614:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021B9B0 )
  62C:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  644:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  660:  		Call     HPBarToCurrent ( .Actor:Self )
  670:  	Case  ==  .Event:EndFirstStrike
  67C:  		ExecWait $Script_8021BA70 
  688:  		Call     HPBarToHome 	( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus
  6A4:  	Case  ==  .Event:ScareAway
  6B0:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
  6C8:  		Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
  6E0:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFE8 00000000 )
  6FC:  		SetConst  *Var[0]  00000001 
  70C:  		SetConst  *Var[1]  00340102 
  71C:  		SetConst  *Var[2]  00340115 
  72C:  		ExecWait DoScareAway 
  738:  		Return
  740:  EndSwitch
  748:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  75C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  770:  Return
  778:  End

#new:Script $Script_8021CB94
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   74:  	Call     SetGoalToTarget 	( .Actor:Self )
   84:  	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
   A0:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   B4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   D0:  	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Else
   F4:  	Call     UseCamPreset 	( 0000003F )
  104:  	Call     CamTargetActor ( .Actor:Self )
  114:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  12C:  	Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  144:  	Call     SetGoalToTarget 	( .Actor:Self )
  154:  	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  170:  	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  184:  	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
  1A0:  EndIf
  1A8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000002 00000010 )
  1CC:  Switch  *Var[0] 
  1D8:  	CaseOR  ==  00000006 
  1E4:  	CaseOR  ==  00000005 
  1F0:  		Set  *Var[A]  *Var[0] 
  200:  		Wait     0000000A 
  20C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  220:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  234:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  24C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  268:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  284:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  2A4:  		Call     SetGoalToTarget 	( .Actor:Self )
  2B4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2D0:  		Sub  *Var[0]  00000032 
  2E0:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  328:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  344:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
  35C:  		Wait     0000000F 
  368:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  380:  		If  *Var[A]  ==  00000005 
  390:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3B4:  		EndIf
  3BC:  		Call     8027D7F0 ( )
  3C8:  		Call     UseCamPreset 	( 00000002 )
  3D8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  3EC:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  408:  		ExecWait $Script_8021BA70 
  414:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  42C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  440:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  454:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  	Case  ==  00000007 
  484:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  498:  		If  *Var[0]  &  00002000 
  4A8:  			Set  *Flag[00]  00000000 
  4B8:  		Else
  4C0:  			Set  *Flag[00]  00000001 
  4D0:  		EndIf
  4D8:  EndSwitch
  4E0:  Wait     0000000A 
  4EC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  500:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  514:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  52C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  548:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  564:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  584:  Call     SetGoalToTarget 	( .Actor:Self )
  594:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFC FFFFFFF8 FFFFFFF1 )
  5B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  5C4:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  5DC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  5F8:  If  *Flag[00]  ==  00000001 
  608:  	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
  630:  	Return
  638:  EndIf
  640:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  654:  If  *Var[0]  &  00100000 
  664:  	Wait     0000000A 
  670:  	Loop     00000002 
  67C:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  694:  		Wait     00000015 
  6A0:  		Loop     00000002 
  6AC:  			Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  6C0:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6DC:  			Wait     00000001 
  6E8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  704:  			Wait     00000001 
  710:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  72C:  			Wait     00000001 
  738:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  754:  			Wait     00000001 
  760:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  77C:  			Wait     00000001 
  788:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  7A4:  			Wait     00000001 
  7B0:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  7CC:  			Wait     00000001 
  7D8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  7F4:  			Wait     00000001 
  800:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  81C:  			Wait     00000001 
  828:  		EndLoop
  830:  		Wait     00000005 
  83C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  858:  		Wait     00000001 
  864:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  880:  		Wait     00000001 
  88C:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  8A8:  		Wait     00000001 
  8B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  8D0:  		Wait     00000001 
  8DC:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  8F8:  		Wait     00000002 
  904:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  920:  		Wait     0000000A 
  92C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  948:  		Wait     00000002 
  954:  		Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000002 00000040 )
  97C:  		Wait     0000001E 
  988:  	EndLoop
  990:  Else
  998:  	Call     ShowMessageBox ( 00000031 00007FFF )
  9AC:  	Call     802694A4 ( 00000001 )
  9BC:  	Call     LoadActionCommand 	( 00000006 )
  9CC:  	Call     802A9000 ( )
  9D8:  	Call     802691C8 ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  9FC:  	Wait     0000000A 
  A08:  	Call     SetBattleFlagBits 	( 00004000 .False )
  A1C:  	Call     802A9110 ( 00000000 00007FFF 00000003 )
  A34:  	Set  *Var[D]  00000000 
  A44:  	Loop     00000005 
  A50:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  A68:  		Set  *Flag[00]  00000000 
  A78:  		Loop     00000015 
  A84:  			Call     802694F8 ( *Var[1] )
  A94:  			If  *Var[1]  ==  00000001 
  AA4:  				Set  *Flag[00]  00000001 
  AB4:  				BreakLoop
  ABC:  			EndIf
  AC4:  			Wait     00000001 
  AD0:  		EndLoop
  AD8:  		If  *Flag[00]  ==  00000001 
  AE8:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  AFC:  			BreakLoop
  B04:  		EndIf
  B0C:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  B20:  		Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  B38:  		Loop     00000002 
  B44:  			Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  B58:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  B74:  			Set  *Flag[00]  00000000 
  B84:  			Loop     00000001 
  B90:  				Call     802694F8 ( *Var[1] )
  BA0:  				If  *Var[1]  ==  00000001 
  BB0:  					Set  *Flag[00]  00000001 
  BC0:  					BreakLoop
  BC8:  				EndIf
  BD0:  				Wait     00000001 
  BDC:  			EndLoop
  BE4:  			If  *Flag[00]  ==  00000001 
  BF4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  C08:  				BreakLoop
  C10:  			EndIf
  C18:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  C34:  			Set  *Flag[00]  00000000 
  C44:  			Loop     00000001 
  C50:  				Call     802694F8 ( *Var[1] )
  C60:  				If  *Var[1]  ==  00000001 
  C70:  					Set  *Flag[00]  00000001 
  C80:  					BreakLoop
  C88:  				EndIf
  C90:  				Wait     00000001 
  C9C:  			EndLoop
  CA4:  			If  *Flag[00]  ==  00000001 
  CB4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  CC8:  				BreakLoop
  CD0:  			EndIf
  CD8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  CF4:  			Set  *Flag[00]  00000000 
  D04:  			Loop     00000001 
  D10:  				Call     802694F8 ( *Var[1] )
  D20:  				If  *Var[1]  ==  00000001 
  D30:  					Set  *Flag[00]  00000001 
  D40:  					BreakLoop
  D48:  				EndIf
  D50:  				Wait     00000001 
  D5C:  			EndLoop
  D64:  			If  *Flag[00]  ==  00000001 
  D74:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  D88:  				BreakLoop
  D90:  			EndIf
  D98:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  DB4:  			Set  *Flag[00]  00000000 
  DC4:  			Loop     00000001 
  DD0:  				Call     802694F8 ( *Var[1] )
  DE0:  				If  *Var[1]  ==  00000001 
  DF0:  					Set  *Flag[00]  00000001 
  E00:  					BreakLoop
  E08:  				EndIf
  E10:  				Wait     00000001 
  E1C:  			EndLoop
  E24:  			If  *Flag[00]  ==  00000001 
  E34:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  E48:  				BreakLoop
  E50:  			EndIf
  E58:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  E74:  			Set  *Flag[00]  00000000 
  E84:  			Loop     00000001 
  E90:  				Call     802694F8 ( *Var[1] )
  EA0:  				If  *Var[1]  ==  00000001 
  EB0:  					Set  *Flag[00]  00000001 
  EC0:  					BreakLoop
  EC8:  				EndIf
  ED0:  				Wait     00000001 
  EDC:  			EndLoop
  EE4:  			If  *Flag[00]  ==  00000001 
  EF4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  F08:  				BreakLoop
  F10:  			EndIf
  F18:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  F34:  			Set  *Flag[00]  00000000 
  F44:  			Loop     00000001 
  F50:  				Call     802694F8 ( *Var[1] )
  F60:  				If  *Var[1]  ==  00000001 
  F70:  					Set  *Flag[00]  00000001 
  F80:  					BreakLoop
  F88:  				EndIf
  F90:  				Wait     00000001 
  F9C:  			EndLoop
  FA4:  			If  *Flag[00]  ==  00000001 
  FB4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
  FC8:  				BreakLoop
  FD0:  			EndIf
  FD8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  FF4:  			Set  *Flag[00]  00000000 
 1004:  			Loop     00000001 
 1010:  				Call     802694F8 ( *Var[1] )
 1020:  				If  *Var[1]  ==  00000001 
 1030:  					Set  *Flag[00]  00000001 
 1040:  					BreakLoop
 1048:  				EndIf
 1050:  				Wait     00000001 
 105C:  			EndLoop
 1064:  			If  *Flag[00]  ==  00000001 
 1074:  				Call     UseIdleAnimation 	( .Actor:Player .True )
 1088:  				BreakLoop
 1090:  			EndIf
 1098:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
 10B4:  			Set  *Flag[00]  00000000 
 10C4:  			Loop     00000001 
 10D0:  				Call     802694F8 ( *Var[1] )
 10E0:  				If  *Var[1]  ==  00000001 
 10F0:  					Set  *Flag[00]  00000001 
 1100:  					BreakLoop
 1108:  				EndIf
 1110:  				Wait     00000001 
 111C:  			EndLoop
 1124:  			If  *Flag[00]  ==  00000001 
 1134:  				Call     UseIdleAnimation 	( .Actor:Player .True )
 1148:  				BreakLoop
 1150:  			EndIf
 1158:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1174:  			Set  *Flag[00]  00000000 
 1184:  			Loop     00000001 
 1190:  				Call     802694F8 ( *Var[1] )
 11A0:  				If  *Var[1]  ==  00000001 
 11B0:  					Set  *Flag[00]  00000001 
 11C0:  					BreakLoop
 11C8:  				EndIf
 11D0:  				Wait     00000001 
 11DC:  			EndLoop
 11E4:  			If  *Flag[00]  ==  00000001 
 11F4:  				Call     UseIdleAnimation 	( .Actor:Player .True )
 1208:  				BreakLoop
 1210:  			EndIf
 1218:  		EndLoop
 1220:  		If  *Flag[00]  ==  00000001 
 1230:  			BreakLoop
 1238:  		EndIf
 1240:  		Set  *Flag[00]  00000000 
 1250:  		Loop     00000005 
 125C:  			Call     802694F8 ( *Var[1] )
 126C:  			If  *Var[1]  ==  00000001 
 127C:  				Set  *Flag[00]  00000001 
 128C:  				BreakLoop
 1294:  			EndIf
 129C:  			Wait     00000001 
 12A8:  		EndLoop
 12B0:  		If  *Flag[00]  ==  00000001 
 12C0:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 12D4:  			BreakLoop
 12DC:  		EndIf
 12E4:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
 12F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1314:  		Set  *Flag[00]  00000000 
 1324:  		Loop     00000001 
 1330:  			Call     802694F8 ( *Var[1] )
 1340:  			If  *Var[1]  ==  00000001 
 1350:  				Set  *Flag[00]  00000001 
 1360:  				BreakLoop
 1368:  			EndIf
 1370:  			Wait     00000001 
 137C:  		EndLoop
 1384:  		If  *Flag[00]  ==  00000001 
 1394:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 13A8:  			BreakLoop
 13B0:  		EndIf
 13B8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
 13D4:  		Set  *Flag[00]  00000000 
 13E4:  		Loop     00000001 
 13F0:  			Call     802694F8 ( *Var[1] )
 1400:  			If  *Var[1]  ==  00000001 
 1410:  				Set  *Flag[00]  00000001 
 1420:  				BreakLoop
 1428:  			EndIf
 1430:  			Wait     00000001 
 143C:  		EndLoop
 1444:  		If  *Flag[00]  ==  00000001 
 1454:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1468:  			BreakLoop
 1470:  		EndIf
 1478:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
 1494:  		Set  *Flag[00]  00000000 
 14A4:  		Loop     00000001 
 14B0:  			Call     802694F8 ( *Var[1] )
 14C0:  			If  *Var[1]  ==  00000001 
 14D0:  				Set  *Flag[00]  00000001 
 14E0:  				BreakLoop
 14E8:  			EndIf
 14F0:  			Wait     00000001 
 14FC:  		EndLoop
 1504:  		If  *Flag[00]  ==  00000001 
 1514:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1528:  			BreakLoop
 1530:  		EndIf
 1538:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
 1554:  		Set  *Flag[00]  00000000 
 1564:  		Loop     00000001 
 1570:  			Call     802694F8 ( *Var[1] )
 1580:  			If  *Var[1]  ==  00000001 
 1590:  				Set  *Flag[00]  00000001 
 15A0:  				BreakLoop
 15A8:  			EndIf
 15B0:  			Wait     00000001 
 15BC:  		EndLoop
 15C4:  		If  *Flag[00]  ==  00000001 
 15D4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 15E8:  			BreakLoop
 15F0:  		EndIf
 15F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
 1614:  		Set  *Flag[00]  00000000 
 1624:  		Loop     00000002 
 1630:  			Call     802694F8 ( *Var[1] )
 1640:  			If  *Var[1]  ==  00000001 
 1650:  				Set  *Flag[00]  00000001 
 1660:  				BreakLoop
 1668:  			EndIf
 1670:  			Wait     00000001 
 167C:  		EndLoop
 1684:  		If  *Flag[00]  ==  00000001 
 1694:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 16A8:  			BreakLoop
 16B0:  		EndIf
 16B8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
 16D4:  		Set  *Flag[00]  00000000 
 16E4:  		Loop     0000000A 
 16F0:  			Call     802694F8 ( *Var[1] )
 1700:  			If  *Var[1]  ==  00000001 
 1710:  				Set  *Flag[00]  00000001 
 1720:  				BreakLoop
 1728:  			EndIf
 1730:  			Wait     00000001 
 173C:  		EndLoop
 1744:  		If  *Flag[00]  ==  00000001 
 1754:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1768:  			BreakLoop
 1770:  		EndIf
 1778:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1794:  		Set  *Flag[00]  00000000 
 17A4:  		Loop     00000002 
 17B0:  			Call     802694F8 ( *Var[1] )
 17C0:  			If  *Var[1]  ==  00000001 
 17D0:  				Set  *Flag[00]  00000001 
 17E0:  				BreakLoop
 17E8:  			EndIf
 17F0:  			Wait     00000001 
 17FC:  		EndLoop
 1804:  		If  *Flag[00]  ==  00000001 
 1814:  			Call     UseIdleAnimation 	( .Actor:Player .True )
 1828:  			BreakLoop
 1830:  		EndIf
 1838:  		Call     UseIdleAnimation 	( .Actor:Player .True )
 184C:  		Call     DamageTarget 	( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
 1874:  		Call     GetLastDamage 	( .Actor:Player *Var[3] )
 1888:  		If  *Var[3]  !=  00000000 
 1898:  			Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
 18AC:  			Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
 18C0:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 18DC:  			Add  *Var[1]  0000000F 
 18EC:  			Call     $Function_8021819C ( *Var[0] *Var[1] *Var[2] *Var[3] )
 1908:  			Thread
 1910:  				Wait     0000000F 
 191C:  				Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
 1930:  				Call     $Function_80218250 ( *Var[0] *Var[1] *Var[2] *Var[3] )
 194C:  			EndThread
 1954:  			Add  *Var[0]  00000014 
 1964:  			Add  *Var[1]  00000014 
 1974:  			Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 19B8:  			Call     GetActorHP  	( .Actor:Self *Var[0] )
 19CC:  			Add  *Var[0]  *Var[3] 
 19DC:  			Call     SetEnemyHP  	( .Actor:Self *Var[0] )
 19F0:  		Else
 19F8:  			Add  *Var[D]  00000001 
 1A08:  			If  *Var[D]  >  00000001 
 1A18:  				Call     80269470 ( )
 1A24:  				BreakLoop
 1A2C:  			EndIf
 1A34:  		EndIf
 1A3C:  		Call     GetPlayerHP 	( *Var[1] )
 1A4C:  		If  *Var[1]  ==  00000000 
 1A5C:  			Call     80269470 ( )
 1A68:  			BreakLoop
 1A70:  		EndIf
 1A78:  		Set  *Flag[00]  00000000 
 1A88:  		Loop     0000001E 
 1A94:  			Call     802694F8 ( *Var[1] )
 1AA4:  			If  *Var[1]  ==  00000001 
 1AB4:  				Set  *Flag[00]  00000001 
 1AC4:  				BreakLoop
 1ACC:  			EndIf
 1AD4:  			Wait     00000001 
 1AE0:  		EndLoop
 1AE8:  		If  *Flag[00]  ==  00000001 
 1AF8:  			BreakLoop
 1B00:  		EndIf
 1B08:  	EndLoop
 1B10:  	Call     80269470 ( )
 1B1C:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1B38:  EndIf
 1B40:  Call     UseCamPreset 	( 00000002 )
 1B50:  Call     SetGoalToTarget 	( .Actor:Self )
 1B60:  Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
 1B7C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 1B90:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
 1BA8:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
 1BC4:  Wait     0000000A 
 1BD0:  Call     8027D7F0 ( )
 1BDC:  ExecWait $Script_8021BA70 
 1BE8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 1BFC:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1C10:  Return
 1C18:  End

#new:Script $Script_TakeTurn_8021E7B4
    0:  Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_8021CB94 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   6C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   80:  Call     UseCamPreset 	( 0000003F )
   90:  Call     CamTargetActor ( .Actor:Self )
   A0:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   B8:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
   D0:  Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
   E8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  104:  Sub  *Var[1]  00000018 
  114:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  130:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000002 00000010 )
  154:  Switch  *Var[0] 
  160:  	CaseOR  ==  00000006 
  16C:  	CaseOR  ==  00000005 
  178:  		Set  *Var[A]  *Var[0] 
  188:  		Wait     0000000A 
  194:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1A8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1BC:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  1D4:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E4:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  200:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
  21C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  230:  		Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  248:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
  264:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
  27C:  		Wait     0000000F 
  288:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  2A0:  		If  *Var[A]  ==  00000005 
  2B0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Call     8027D7F0 ( )
  2E8:  		Call     UseCamPreset 	( 00000002 )
  2F8:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  30C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  328:  		ExecWait $Script_8021BA70 
  334:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  34C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  360:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  374:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  388:  		Return
  390:  	EndCaseGroup
  398:  	Case  ==  00000007 
  3A4:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  3B8:  		If  *Var[0]  &  00002000 
  3C8:  			Set  *Flag[00]  00000000 
  3D8:  		Else
  3E0:  			Set  *Flag[00]  00000001 
  3F0:  		EndIf
  3F8:  EndSwitch
  400:  Wait     0000000A 
  40C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  420:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  434:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  44C:  Call     SetGoalToTarget 	( .Actor:Self )
  45C:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFC FFFFFFF8 FFFFFFF1 )
  478:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  48C:  Call     SetAnimation 	( .Actor:Self 00000001 00340106 )
  4A4:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
  4C0:  If  *Flag[00]  ==  00000001 
  4D0:  	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
  4F8:  	Return
  500:  EndIf
  508:  Call     GetStatusFlags ( .Actor:Player *Var[0] )
  51C:  If  *Var[0]  &  00100000 
  52C:  	Wait     0000000A 
  538:  	Loop     00000002 
  544:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  55C:  		Wait     00000015 
  568:  		Loop     00000002 
  574:  			Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  588:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  5A4:  			Wait     00000001 
  5B0:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  5CC:  			Wait     00000001 
  5D8:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  5F4:  			Wait     00000001 
  600:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  61C:  			Wait     00000001 
  628:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  644:  			Wait     00000001 
  650:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  66C:  			Wait     00000001 
  678:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  694:  			Wait     00000001 
  6A0:  			Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  6BC:  			Wait     00000001 
  6C8:  			Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  6E4:  			Wait     00000001 
  6F0:  		EndLoop
  6F8:  		Wait     00000005 
  704:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  718:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  734:  		Wait     00000001 
  740:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  75C:  		Wait     00000001 
  768:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  784:  		Wait     00000001 
  790:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  7AC:  		Wait     00000001 
  7B8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  7D4:  		Wait     00000002 
  7E0:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  7FC:  		Wait     0000000A 
  808:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  824:  		Wait     00000002 
  830:  		Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000002 00000040 )
  858:  		Wait     0000001E 
  864:  	EndLoop
  86C:  Else
  874:  	Call     ShowMessageBox ( 00000031 00007FFF )
  888:  	Call     802694A4 ( 00000001 )
  898:  	Call     LoadActionCommand 	( 00000006 )
  8A8:  	Call     802A9000 ( )
  8B4:  	Call     802691C8 ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  8D8:  	Wait     0000000A 
  8E4:  	Call     SetBattleFlagBits 	( 00004000 .False )
  8F8:  	Call     802A9110 ( 00000000 00007FFF 00000003 )
  910:  	Set  *Var[D]  00000000 
  920:  	Loop     00000005 
  92C:  		Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
  944:  		Set  *Flag[00]  00000000 
  954:  		Loop     00000015 
  960:  			Call     802694F8 ( *Var[1] )
  970:  			If  *Var[1]  ==  00000001 
  980:  				Set  *Flag[00]  00000001 
  990:  				BreakLoop
  998:  			EndIf
  9A0:  			Wait     00000001 
  9AC:  		EndLoop
  9B4:  		If  *Flag[00]  ==  00000001 
  9C4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  9D8:  			BreakLoop
  9E0:  		EndIf
  9E8:  		Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
  A00:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  A14:  		Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
  A28:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A44:  		Set  *Flag[00]  00000000 
  A54:  		Loop     00000001 
  A60:  			Call     802694F8 ( *Var[1] )
  A70:  			If  *Var[1]  ==  00000001 
  A80:  				Set  *Flag[00]  00000001 
  A90:  				BreakLoop
  A98:  			EndIf
  AA0:  			Wait     00000001 
  AAC:  		EndLoop
  AB4:  		If  *Flag[00]  ==  00000001 
  AC4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  AD8:  			BreakLoop
  AE0:  		EndIf
  AE8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
  B04:  		Set  *Flag[00]  00000000 
  B14:  		Loop     00000001 
  B20:  			Call     802694F8 ( *Var[1] )
  B30:  			If  *Var[1]  ==  00000001 
  B40:  				Set  *Flag[00]  00000001 
  B50:  				BreakLoop
  B58:  			EndIf
  B60:  			Wait     00000001 
  B6C:  		EndLoop
  B74:  		If  *Flag[00]  ==  00000001 
  B84:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  B98:  			BreakLoop
  BA0:  		EndIf
  BA8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
  BC4:  		Set  *Flag[00]  00000000 
  BD4:  		Loop     00000001 
  BE0:  			Call     802694F8 ( *Var[1] )
  BF0:  			If  *Var[1]  ==  00000001 
  C00:  				Set  *Flag[00]  00000001 
  C10:  				BreakLoop
  C18:  			EndIf
  C20:  			Wait     00000001 
  C2C:  		EndLoop
  C34:  		If  *Flag[00]  ==  00000001 
  C44:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  C58:  			BreakLoop
  C60:  		EndIf
  C68:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
  C84:  		Set  *Flag[00]  00000000 
  C94:  		Loop     00000001 
  CA0:  			Call     802694F8 ( *Var[1] )
  CB0:  			If  *Var[1]  ==  00000001 
  CC0:  				Set  *Flag[00]  00000001 
  CD0:  				BreakLoop
  CD8:  			EndIf
  CE0:  			Wait     00000001 
  CEC:  		EndLoop
  CF4:  		If  *Flag[00]  ==  00000001 
  D04:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  D18:  			BreakLoop
  D20:  		EndIf
  D28:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
  D44:  		Set  *Flag[00]  00000000 
  D54:  		Loop     00000002 
  D60:  			Call     802694F8 ( *Var[1] )
  D70:  			If  *Var[1]  ==  00000001 
  D80:  				Set  *Flag[00]  00000001 
  D90:  				BreakLoop
  D98:  			EndIf
  DA0:  			Wait     00000001 
  DAC:  		EndLoop
  DB4:  		If  *Flag[00]  ==  00000001 
  DC4:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  DD8:  			BreakLoop
  DE0:  		EndIf
  DE8:  		Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
  E04:  		Set  *Flag[00]  00000000 
  E14:  		Loop     0000000A 
  E20:  			Call     802694F8 ( *Var[1] )
  E30:  			If  *Var[1]  ==  00000001 
  E40:  				Set  *Flag[00]  00000001 
  E50:  				BreakLoop
  E58:  			EndIf
  E60:  			Wait     00000001 
  E6C:  		EndLoop
  E74:  		If  *Flag[00]  ==  00000001 
  E84:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  E98:  			BreakLoop
  EA0:  		EndIf
  EA8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  EC4:  		Set  *Flag[00]  00000000 
  ED4:  		Loop     00000002 
  EE0:  			Call     802694F8 ( *Var[1] )
  EF0:  			If  *Var[1]  ==  00000001 
  F00:  				Set  *Flag[00]  00000001 
  F10:  				BreakLoop
  F18:  			EndIf
  F20:  			Wait     00000001 
  F2C:  		EndLoop
  F34:  		If  *Flag[00]  ==  00000001 
  F44:  			Call     UseIdleAnimation 	( .Actor:Player .True )
  F58:  			BreakLoop
  F60:  		EndIf
  F68:  		Call     UseIdleAnimation 	( .Actor:Player .True )
  F7C:  		Call     DamageTarget 	( .Actor:Self *Var[0] 0A000000 00000000 00000000 00000002 00000040 )
  FA4:  		Call     GetLastDamage 	( .Actor:Player *Var[3] )
  FB8:  		If  *Var[3]  !=  00000000 
  FC8:  			Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
  FDC:  			Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
  FF0:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 100C:  			Add  *Var[1]  0000000F 
 101C:  			Call     $Function_8021819C ( *Var[0] *Var[1] *Var[2] *Var[3] )
 1038:  			Thread
 1040:  				Wait     0000000F 
 104C:  				Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
 1060:  				Call     $Function_80218250 ( *Var[0] *Var[1] *Var[2] *Var[3] )
 107C:  			EndThread
 1084:  			Add  *Var[0]  00000014 
 1094:  			Add  *Var[1]  00000014 
 10A4:  			Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 10E8:  			Call     GetActorHP  	( .Actor:Self *Var[0] )
 10FC:  			Add  *Var[0]  *Var[3] 
 110C:  			Call     SetEnemyHP  	( .Actor:Self *Var[0] )
 1120:  		Else
 1128:  			Add  *Var[D]  00000001 
 1138:  			If  *Var[D]  >  00000001 
 1148:  				Call     80269470 ( )
 1154:  				BreakLoop
 115C:  			EndIf
 1164:  		EndIf
 116C:  		Call     GetPlayerHP 	( *Var[1] )
 117C:  		If  *Var[1]  ==  00000000 
 118C:  			Call     80269470 ( )
 1198:  			BreakLoop
 11A0:  		EndIf
 11A8:  		Set  *Flag[00]  00000000 
 11B8:  		Loop     00000023 
 11C4:  			Call     802694F8 ( *Var[1] )
 11D4:  			If  *Var[1]  ==  00000001 
 11E4:  				Set  *Flag[00]  00000001 
 11F4:  				BreakLoop
 11FC:  			EndIf
 1204:  			Wait     00000001 
 1210:  		EndLoop
 1218:  		If  *Flag[00]  ==  00000001 
 1228:  			BreakLoop
 1230:  		EndIf
 1238:  	EndLoop
 1240:  	Call     80269470 ( )
 124C:  	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
 1268:  EndIf
 1270:  Call     UseCamPreset 	( 00000002 )
 1280:  Call     SetGoalToTarget 	( .Actor:Self )
 1290:  Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
 12AC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
 12C0:  Call     SetAnimation 	( .Actor:Self 00000001 00340102 )
 12D8:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
 12F4:  Wait     0000000A 
 1300:  Call     8027D7F0 ( )
 130C:  ExecWait $Script_8021BA70 
 1318:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 132C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1340:  Return
 1348:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 135C:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1370:  Return
 1378:  End

PADDING: 8021FB34 to 8021FB40 (00620224 to 00620230)
00000000 00000000 00000000 

#new:Script $Script_8021FB40
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   8C:  	Add  *Var[0]  *Var[B] 
   9C:  	Add  *Var[1]  *Var[C] 
   AC:  	Wait     00000001 
   B8:  EndLoop
   C0:  Return
   C8:  End

% Origin: HEURISTIC
#new:Script $Script_8021FC10
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

% Origin: HEURISTIC
#new:Script $Script_8021FCFC
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_8021FDE8
    0:  Set  *Var[1]  *Array[5] 
   10:  Add  *Var[1]  00000001 
   20:  Set  *Var[2]  *Array[0] 
   30:  Set  *Var[3]  *Array[1] 
   40:  Set  *Var[4]  *Array[5] 
   50:  Add  *Var[4]  00000002 
   60:  Set  *Var[5]  *Array[0] 
   70:  Set  *Var[6]  *Array[1] 
   80:  Set  *Var[7]  *Array[5] 
   90:  Add  *Var[7]  00000003 
   A0:  Set  *Var[8]  *Array[0] 
   B0:  Set  *Var[9]  *Array[1] 
   C0:  Set  *Var[A]  *Array[5] 
   D0:  Add  *Var[A]  00000004 
   E0:  Set  *Var[B]  *Array[0] 
   F0:  Set  *Var[C]  *Array[1] 
  100:  Call     EnableModel 	( *Var[1] .True )
  114:  Call     EnableModel 	( *Var[4] .True )
  128:  Call     EnableModel 	( *Var[7] .True )
  13C:  Call     EnableModel 	( *Var[A] .True )
  150:  Loop     00000005 
  15C:  	Add  *Var[0]  00000001 
  16C:  	Add  *Var[2]  00000001 
  17C:  	Add  *Var[3]  00000001 
  18C:  	Call     TranslateModel ( *Var[1] *Var[2] *Var[0] *Var[3] )
  1A8:  	Call     ScaleModel  	( *Var[1] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add  *Var[5]  FFFFFFFF 
  1D4:  	Add  *Var[6]  00000001 
  1E4:  	Call     TranslateModel ( *Var[4] *Var[5] *Var[0] *Var[6] )
  200:  	Call     ScaleModel  	( *Var[4] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add  *Var[8]  00000001 
  22C:  	Add  *Var[9]  FFFFFFFF 
  23C:  	Call     TranslateModel ( *Var[7] *Var[8] *Var[0] *Var[9] )
  258:  	Call     ScaleModel  	( *Var[7] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add  *Var[B]  FFFFFFFF 
  284:  	Add  *Var[C]  FFFFFFFF 
  294:  	Call     TranslateModel ( *Var[A] *Var[B] *Var[0] *Var[C] )
  2B0:  	Call     ScaleModel  	( *Var[A] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait     00000001 
  2D8:  EndLoop
  2E0:  Loop     00000005 
  2EC:  	Add  *Var[0]  FFFFFFFF 
  2FC:  	Add  *Var[2]  00000001 
  30C:  	Add  *Var[3]  00000001 
  31C:  	Call     TranslateModel ( *Var[1] *Var[2] *Var[0] *Var[3] )
  338:  	Call     ScaleModel  	( *Var[1] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add  *Var[5]  FFFFFFFF 
  364:  	Add  *Var[6]  00000001 
  374:  	Call     TranslateModel ( *Var[4] *Var[5] *Var[0] *Var[6] )
  390:  	Call     ScaleModel  	( *Var[4] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add  *Var[8]  00000001 
  3BC:  	Add  *Var[9]  FFFFFFFF 
  3CC:  	Call     TranslateModel ( *Var[7] *Var[8] *Var[0] *Var[9] )
  3E8:  	Call     ScaleModel  	( *Var[7] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add  *Var[B]  FFFFFFFF 
  414:  	Add  *Var[C]  FFFFFFFF 
  424:  	Call     TranslateModel ( *Var[A] *Var[B] *Var[0] *Var[C] )
  440:  	Call     ScaleModel  	( *Var[A] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait     00000001 
  468:  EndLoop
  470:  Call     EnableModel 	( *Var[1] .False )
  484:  Call     EnableModel 	( *Var[4] .False )
  498:  Call     EnableModel 	( *Var[7] .False )
  4AC:  Call     EnableModel 	( *Var[A] .False )
  4C0:  Return
  4C8:  End

#new:Script $Script_802202B8
    0:  SetGroup 00000000 
    C:  UseArray *Var[A] 
   18:  Set  *Var[5]  *Array[5] 
   28:  Loop     00000005 
   34:  	Call     CloneModel  	( 00000010 *Var[5] )
   48:  	Call     TranslateModel ( *Var[5] *Array[0] *Array[2] *Array[1] )
   64:  	Add  *Var[5]  00000001 
   74:  EndLoop
   7C:  Label    00000000 
   88:  Call     RandInt     	( 000000C8 *Var[0] )
   9C:  Add  *Var[0]  00000032 
   AC:  Wait     *Var[0] 
   B8:  Call     EnableModel 	( *Array[5] .True )
   CC:  Call     MakeLerp    	( *Array[2] *Array[3] *Array[4] 00000001 )
   E8:  Label    00000001 
   F4:  Call     UpdateLerp  	( )
  100:  Call     TranslateModel ( *Array[5] *Array[0] *Var[0] *Array[1] )
  11C:  Wait     00000001 
  128:  Call     $Function_80218310 ( *Array[5] )
  138:  If  *Var[2]  ==  00000001 
  148:  	Goto     0000000A 
  154:  EndIf
  15C:  If  *Var[1]  ==  00000001 
  16C:  	Goto     00000001 
  178:  EndIf
  180:  Label    0000000A 
  18C:  Call     EnableModel 	( *Array[5] .False )
  1A0:  ExecWait $Script_8021FDE8 
  1AC:  Goto     00000000 
  1B8:  Return
  1C0:  End

#new:Script $Script_80220480
    0:  Set  *Var[F]  00002710 
   10:  UseIntBuffer *Var[0] 
   1C:  Get1Int  *Var[1] 
   28:  Loop     *Var[1] 
   34:  	Get4Int  *Var[2] *Var[3] *Var[4] *Var[5] 
   4C:  	Get3Int  *Var[6] *Var[7] *Var[8] 
   60:  	Get1Int  *Var[9] 
   6C:  	Loop     *Var[9] 
   78:  		NewArray 00000006 *Var[A] 
   88:  		UseArray *Var[A] 
   94:  		Call     RandInt     	( *Var[4] *Var[B] )
   A8:  		Call     RandInt     	( *Var[5] *Var[C] )
   BC:  		Set  *Var[D]  *Var[2] 
   CC:  		Set  *Var[E]  *Var[3] 
   DC:  		Add  *Var[D]  *Var[B] 
   EC:  		Add  *Var[E]  *Var[C] 
   FC:  		Set  *Array[0]  *Var[D] 
  10C:  		Set  *Array[1]  *Var[E] 
  11C:  		Set  *Array[2]  *Var[6] 
  12C:  		Set  *Array[3]  *Var[7] 
  13C:  		Set  *Array[4]  *Var[8] 
  14C:  		Set  *Array[5]  *Var[F] 
  15C:  		ChildThread
  164:  			Exec     $Script_802202B8 
  170:  		EndChildThread
  178:  		Add  *Var[F]  00000005 
  188:  	EndLoop
  190:  EndLoop
  198:  Call     EnableModel 	( 00000010 .False )
  1AC:  Return
  1B4:  End

#new:Unknown $???_8022063C
00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C 
00000004 

#new:Script $Script_BeforeBattle_80220660
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  0000000D 
   3C:  Set  *Var[1]  00000000 
   4C:  Set  *Var[2]  00000000 
   5C:  Set  *Var[3]  FFFFFE0C 
   6C:  Exec     $Script_8021FB40 
   78:  Set  *Var[0]  $???_8022063C 
   88:  Exec     $Script_80220480 
   94:  Return
   9C:  End

#new:Script $Script_AfterBattle_80220704
    0:  Return
    8:  End

#new:Stage $Stage_80220714
$ASCII_802233A0  % tik_tex
$ASCII_80223390  % tik_bt01_shape
$ASCII_80223380  % tik_bt01_hit
$Script_BeforeBattle_80220660 
$Script_AfterBattle_80220704 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022073C to 80220740 (00620E2C to 00620E30)
00000000 

#new:Script $Script_80220740
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   8C:  	Add  *Var[0]  *Var[B] 
   9C:  	Add  *Var[1]  *Var[C] 
   AC:  	Wait     00000001 
   B8:  EndLoop
   C0:  Return
   C8:  End

% Origin: HEURISTIC
#new:Script $Script_80220810
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

% Origin: HEURISTIC
#new:Script $Script_802208FC
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_802209E8
    0:  Set  *Var[1]  *Array[5] 
   10:  Add  *Var[1]  00000001 
   20:  Set  *Var[2]  *Array[0] 
   30:  Set  *Var[3]  *Array[1] 
   40:  Set  *Var[4]  *Array[5] 
   50:  Add  *Var[4]  00000002 
   60:  Set  *Var[5]  *Array[0] 
   70:  Set  *Var[6]  *Array[1] 
   80:  Set  *Var[7]  *Array[5] 
   90:  Add  *Var[7]  00000003 
   A0:  Set  *Var[8]  *Array[0] 
   B0:  Set  *Var[9]  *Array[1] 
   C0:  Set  *Var[A]  *Array[5] 
   D0:  Add  *Var[A]  00000004 
   E0:  Set  *Var[B]  *Array[0] 
   F0:  Set  *Var[C]  *Array[1] 
  100:  Call     EnableModel 	( *Var[1] .True )
  114:  Call     EnableModel 	( *Var[4] .True )
  128:  Call     EnableModel 	( *Var[7] .True )
  13C:  Call     EnableModel 	( *Var[A] .True )
  150:  Loop     00000005 
  15C:  	Add  *Var[0]  00000001 
  16C:  	Add  *Var[2]  00000001 
  17C:  	Add  *Var[3]  00000001 
  18C:  	Call     TranslateModel ( *Var[1] *Var[2] *Var[0] *Var[3] )
  1A8:  	Call     ScaleModel  	( *Var[1] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add  *Var[5]  FFFFFFFF 
  1D4:  	Add  *Var[6]  00000001 
  1E4:  	Call     TranslateModel ( *Var[4] *Var[5] *Var[0] *Var[6] )
  200:  	Call     ScaleModel  	( *Var[4] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add  *Var[8]  00000001 
  22C:  	Add  *Var[9]  FFFFFFFF 
  23C:  	Call     TranslateModel ( *Var[7] *Var[8] *Var[0] *Var[9] )
  258:  	Call     ScaleModel  	( *Var[7] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add  *Var[B]  FFFFFFFF 
  284:  	Add  *Var[C]  FFFFFFFF 
  294:  	Call     TranslateModel ( *Var[A] *Var[B] *Var[0] *Var[C] )
  2B0:  	Call     ScaleModel  	( *Var[A] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait     00000001 
  2D8:  EndLoop
  2E0:  Loop     00000005 
  2EC:  	Add  *Var[0]  FFFFFFFF 
  2FC:  	Add  *Var[2]  00000001 
  30C:  	Add  *Var[3]  00000001 
  31C:  	Call     TranslateModel ( *Var[1] *Var[2] *Var[0] *Var[3] )
  338:  	Call     ScaleModel  	( *Var[1] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add  *Var[5]  FFFFFFFF 
  364:  	Add  *Var[6]  00000001 
  374:  	Call     TranslateModel ( *Var[4] *Var[5] *Var[0] *Var[6] )
  390:  	Call     ScaleModel  	( *Var[4] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add  *Var[8]  00000001 
  3BC:  	Add  *Var[9]  FFFFFFFF 
  3CC:  	Call     TranslateModel ( *Var[7] *Var[8] *Var[0] *Var[9] )
  3E8:  	Call     ScaleModel  	( *Var[7] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add  *Var[B]  FFFFFFFF 
  414:  	Add  *Var[C]  FFFFFFFF 
  424:  	Call     TranslateModel ( *Var[A] *Var[B] *Var[0] *Var[C] )
  440:  	Call     ScaleModel  	( *Var[A] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait     00000001 
  468:  EndLoop
  470:  Call     EnableModel 	( *Var[1] .False )
  484:  Call     EnableModel 	( *Var[4] .False )
  498:  Call     EnableModel 	( *Var[7] .False )
  4AC:  Call     EnableModel 	( *Var[A] .False )
  4C0:  Return
  4C8:  End

#new:Script $Script_80220EB8
    0:  SetGroup 00000000 
    C:  UseArray *Var[A] 
   18:  Set  *Var[5]  *Array[5] 
   28:  Loop     00000005 
   34:  	Call     CloneModel  	( 00000010 *Var[5] )
   48:  	Call     TranslateModel ( *Var[5] *Array[0] *Array[2] *Array[1] )
   64:  	Add  *Var[5]  00000001 
   74:  EndLoop
   7C:  Label    00000000 
   88:  Call     RandInt     	( 000000C8 *Var[0] )
   9C:  Add  *Var[0]  00000032 
   AC:  Wait     *Var[0] 
   B8:  Call     EnableModel 	( *Array[5] .True )
   CC:  Call     MakeLerp    	( *Array[2] *Array[3] *Array[4] 00000001 )
   E8:  Label    00000001 
   F4:  Call     UpdateLerp  	( )
  100:  Call     TranslateModel ( *Array[5] *Array[0] *Var[0] *Array[1] )
  11C:  Wait     00000001 
  128:  Call     $Function_802187B0 ( *Array[5] )
  138:  If  *Var[2]  ==  00000001 
  148:  	Goto     0000000A 
  154:  EndIf
  15C:  If  *Var[1]  ==  00000001 
  16C:  	Goto     00000001 
  178:  EndIf
  180:  Label    0000000A 
  18C:  Call     EnableModel 	( *Array[5] .False )
  1A0:  ExecWait $Script_802209E8 
  1AC:  Goto     00000000 
  1B8:  Return
  1C0:  End

#new:Script $Script_80221080
    0:  Set  *Var[F]  00002710 
   10:  UseIntBuffer *Var[0] 
   1C:  Get1Int  *Var[1] 
   28:  Loop     *Var[1] 
   34:  	Get4Int  *Var[2] *Var[3] *Var[4] *Var[5] 
   4C:  	Get3Int  *Var[6] *Var[7] *Var[8] 
   60:  	Get1Int  *Var[9] 
   6C:  	Loop     *Var[9] 
   78:  		NewArray 00000006 *Var[A] 
   88:  		UseArray *Var[A] 
   94:  		Call     RandInt     	( *Var[4] *Var[B] )
   A8:  		Call     RandInt     	( *Var[5] *Var[C] )
   BC:  		Set  *Var[D]  *Var[2] 
   CC:  		Set  *Var[E]  *Var[3] 
   DC:  		Add  *Var[D]  *Var[B] 
   EC:  		Add  *Var[E]  *Var[C] 
   FC:  		Set  *Array[0]  *Var[D] 
  10C:  		Set  *Array[1]  *Var[E] 
  11C:  		Set  *Array[2]  *Var[6] 
  12C:  		Set  *Array[3]  *Var[7] 
  13C:  		Set  *Array[4]  *Var[8] 
  14C:  		Set  *Array[5]  *Var[F] 
  15C:  		ChildThread
  164:  			Exec     $Script_80220EB8 
  170:  		EndChildThread
  178:  		Add  *Var[F]  00000005 
  188:  	EndLoop
  190:  EndLoop
  198:  Call     EnableModel 	( 00000010 .False )
  1AC:  Return
  1B4:  End

#new:Unknown $???_8022123C
00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C 
00000004 

#new:Script $Script_BeforeBattle_80221260
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  $???_8022123C 
   3C:  Exec     $Script_80221080 
   48:  Set  *Var[0]  0000000E 
   58:  Set  *Var[1]  00000000 
   68:  Set  *Var[2]  00000000 
   78:  Set  *Var[3]  FFFFFE0C 
   88:  Exec     $Script_80220740 
   94:  Return
   9C:  End

#new:Script $Script_AfterBattle_80221304
    0:  Return
    8:  End

#new:Stage $Stage_80221314
$ASCII_802233C8  % tik_tex
$ASCII_802233B8  % tik_bt02_shape
$ASCII_802233A8  % tik_bt02_hit
$Script_BeforeBattle_80221260 
$Script_AfterBattle_80221304 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022133C to 80221340 (00621A2C to 00621A30)
00000000 

#new:Script $Script_80221340
    0:  Set  *Var[1]  *Array[5] 
   10:  Add  *Var[1]  00000001 
   20:  Set  *Var[2]  *Array[0] 
   30:  Set  *Var[3]  *Array[1] 
   40:  Set  *Var[4]  *Array[5] 
   50:  Add  *Var[4]  00000002 
   60:  Set  *Var[5]  *Array[0] 
   70:  Set  *Var[6]  *Array[1] 
   80:  Set  *Var[7]  *Array[5] 
   90:  Add  *Var[7]  00000003 
   A0:  Set  *Var[8]  *Array[0] 
   B0:  Set  *Var[9]  *Array[1] 
   C0:  Set  *Var[A]  *Array[5] 
   D0:  Add  *Var[A]  00000004 
   E0:  Set  *Var[B]  *Array[0] 
   F0:  Set  *Var[C]  *Array[1] 
  100:  Call     EnableModel 	( *Var[1] .True )
  114:  Call     EnableModel 	( *Var[4] .True )
  128:  Call     EnableModel 	( *Var[7] .True )
  13C:  Call     EnableModel 	( *Var[A] .True )
  150:  Loop     00000005 
  15C:  	Add  *Var[0]  00000001 
  16C:  	Add  *Var[2]  00000001 
  17C:  	Add  *Var[3]  00000001 
  18C:  	Call     TranslateModel ( *Var[1] *Var[2] *Var[0] *Var[3] )
  1A8:  	Call     ScaleModel  	( *Var[1] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  1C4:  	Add  *Var[5]  FFFFFFFF 
  1D4:  	Add  *Var[6]  00000001 
  1E4:  	Call     TranslateModel ( *Var[4] *Var[5] *Var[0] *Var[6] )
  200:  	Call     ScaleModel  	( *Var[4] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  21C:  	Add  *Var[8]  00000001 
  22C:  	Add  *Var[9]  FFFFFFFF 
  23C:  	Call     TranslateModel ( *Var[7] *Var[8] *Var[0] *Var[9] )
  258:  	Call     ScaleModel  	( *Var[7] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  274:  	Add  *Var[B]  FFFFFFFF 
  284:  	Add  *Var[C]  FFFFFFFF 
  294:  	Call     TranslateModel ( *Var[A] *Var[B] *Var[0] *Var[C] )
  2B0:  	Call     ScaleModel  	( *Var[A] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  2CC:  	Wait     00000001 
  2D8:  EndLoop
  2E0:  Loop     00000005 
  2EC:  	Add  *Var[0]  FFFFFFFF 
  2FC:  	Add  *Var[2]  00000001 
  30C:  	Add  *Var[3]  00000001 
  31C:  	Call     TranslateModel ( *Var[1] *Var[2] *Var[0] *Var[3] )
  338:  	Call     ScaleModel  	( *Var[1] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  354:  	Add  *Var[5]  FFFFFFFF 
  364:  	Add  *Var[6]  00000001 
  374:  	Call     TranslateModel ( *Var[4] *Var[5] *Var[0] *Var[6] )
  390:  	Call     ScaleModel  	( *Var[4] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  3AC:  	Add  *Var[8]  00000001 
  3BC:  	Add  *Var[9]  FFFFFFFF 
  3CC:  	Call     TranslateModel ( *Var[7] *Var[8] *Var[0] *Var[9] )
  3E8:  	Call     ScaleModel  	( *Var[7] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  404:  	Add  *Var[B]  FFFFFFFF 
  414:  	Add  *Var[C]  FFFFFFFF 
  424:  	Call     TranslateModel ( *Var[A] *Var[B] *Var[0] *Var[C] )
  440:  	Call     ScaleModel  	( *Var[A] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
  45C:  	Wait     00000001 
  468:  EndLoop
  470:  Call     EnableModel 	( *Var[1] .False )
  484:  Call     EnableModel 	( *Var[4] .False )
  498:  Call     EnableModel 	( *Var[7] .False )
  4AC:  Call     EnableModel 	( *Var[A] .False )
  4C0:  Return
  4C8:  End

#new:Script $Script_80221810
    0:  SetGroup 00000000 
    C:  UseArray *Var[A] 
   18:  Set  *Var[5]  *Array[5] 
   28:  Loop     00000005 
   34:  	Call     CloneModel  	( 00000012 *Var[5] )
   48:  	Call     TranslateModel ( *Var[5] *Array[0] *Array[2] *Array[1] )
   64:  	Add  *Var[5]  00000001 
   74:  EndLoop
   7C:  Label    00000000 
   88:  Call     RandInt     	( 000000C8 *Var[0] )
   9C:  Add  *Var[0]  00000032 
   AC:  Wait     *Var[0] 
   B8:  Call     EnableModel 	( *Array[5] .True )
   CC:  Call     MakeLerp    	( *Array[2] *Array[3] *Array[4] 00000001 )
   E8:  Label    00000001 
   F4:  Call     UpdateLerp  	( )
  100:  Call     TranslateModel ( *Array[5] *Array[0] *Var[0] *Array[1] )
  11C:  Wait     00000001 
  128:  Call     $Function_80218C50 ( *Array[5] )
  138:  If  *Var[2]  ==  00000001 
  148:  	Goto     0000000A 
  154:  EndIf
  15C:  If  *Var[1]  ==  00000001 
  16C:  	Goto     00000001 
  178:  EndIf
  180:  Label    0000000A 
  18C:  Call     EnableModel 	( *Array[5] .False )
  1A0:  ExecWait $Script_80221340 
  1AC:  Goto     00000000 
  1B8:  Return
  1C0:  End

#new:Script $Script_802219D8
    0:  Set  *Var[F]  00002710 
   10:  UseIntBuffer *Var[0] 
   1C:  Get1Int  *Var[1] 
   28:  Loop     *Var[1] 
   34:  	Get4Int  *Var[2] *Var[3] *Var[4] *Var[5] 
   4C:  	Get3Int  *Var[6] *Var[7] *Var[8] 
   60:  	Get1Int  *Var[9] 
   6C:  	Loop     *Var[9] 
   78:  		NewArray 00000006 *Var[A] 
   88:  		UseArray *Var[A] 
   94:  		Call     RandInt     	( *Var[4] *Var[B] )
   A8:  		Call     RandInt     	( *Var[5] *Var[C] )
   BC:  		Set  *Var[D]  *Var[2] 
   CC:  		Set  *Var[E]  *Var[3] 
   DC:  		Add  *Var[D]  *Var[B] 
   EC:  		Add  *Var[E]  *Var[C] 
   FC:  		Set  *Array[0]  *Var[D] 
  10C:  		Set  *Array[1]  *Var[E] 
  11C:  		Set  *Array[2]  *Var[6] 
  12C:  		Set  *Array[3]  *Var[7] 
  13C:  		Set  *Array[4]  *Var[8] 
  14C:  		Set  *Array[5]  *Var[F] 
  15C:  		ChildThread
  164:  			Exec     $Script_80221810 
  170:  		EndChildThread
  178:  		Add  *Var[F]  00000005 
  188:  	EndLoop
  190:  EndLoop
  198:  Call     EnableModel 	( 00000012 .False )
  1AC:  Return
  1B4:  End

#new:Unknown $???_80221B94
00000001 FFFFFF9C FFFFFFCE 000000C8 00000064 000000C8 00000000 0000003C 
00000004 

#new:Script $Script_BeforeBattle_80221BB8
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  $???_80221B94 
   3C:  Exec     $Script_802219D8 
   48:  Return
   50:  End

#new:Script $Script_AfterBattle_80221C10
    0:  Return
    8:  End

#new:Stage $Stage_80221C20
$ASCII_802233F0  % tik_tex
$ASCII_802233E0  % tik_bt03_shape
$ASCII_802233D0  % tik_bt03_hit
$Script_BeforeBattle_80221BB8 
$Script_AfterBattle_80221C10 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80221C48 to 80221C50 (00622338 to 00622340)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80221C50
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     $Function_802190F0 ( 00000000 )
   2C:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   48:  Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
   68:  Wait     00000001 
   74:  Loop     
   80:  	Call     $Function_802190F0 ( 00000001 )
   90:  	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   AC:  	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
   CC:  	Wait     00000001 
   D8:  	If  *Var[B]  ==  00000001 
   E8:  		BreakLoop
   F0:  	EndIf
   F8:  EndLoop
  100:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  11C:  Call     RotateModel 	( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
  13C:  Wait     00000005 
  148:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  164:  Call     RotateModel 	( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
  184:  Wait     00000002 
  190:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  1AC:  Call     RotateModel 	( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
  1CC:  Wait     00000003 
  1D8:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  1F4:  Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  214:  Wait     00000005 
  220:  Loop     
  22C:  	Call     $Function_802190F0 ( 00000002 )
  23C:  	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  258:  	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  278:  	Wait     00000001 
  284:  	If  *Var[B]  ==  00000002 
  294:  		BreakLoop
  29C:  	EndIf
  2A4:  EndLoop
  2AC:  Call     RandInt     	( 00000050 *Var[B] )
  2C0:  Add  *Var[B]  0000001E 
  2D0:  Loop     *Var[B] 
  2DC:  	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  2F8:  	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  318:  	Wait     00000001 
  324:  EndLoop
  32C:  Call     RandInt     	( 00000005 *Var[0] )
  340:  If  *Var[0]  !=  00000000 
  350:  	Goto     00000000 
  35C:  EndIf
  364:  Call     $Function_802190F0 ( 00000003 )
  374:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  390:  Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  3B0:  Wait     00000001 
  3BC:  Loop     
  3C8:  	Call     $Function_802190F0 ( 00000001 )
  3D8:  	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  3F4:  	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  414:  	Wait     00000001 
  420:  	If  *Var[B]  ==  00000001 
  430:  		BreakLoop
  438:  	EndIf
  440:  EndLoop
  448:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  464:  Call     RotateModel 	( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
  484:  Wait     00000005 
  490:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  4AC:  Call     RotateModel 	( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
  4CC:  Wait     00000002 
  4D8:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  4F4:  Call     RotateModel 	( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
  514:  Wait     00000003 
  520:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  53C:  Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  55C:  Wait     00000005 
  568:  Loop     
  574:  	Call     $Function_802190F0 ( 00000002 )
  584:  	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  5A0:  	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  5C0:  	Wait     00000001 
  5CC:  	If  *Var[B]  ==  00000002 
  5DC:  		BreakLoop
  5E4:  	EndIf
  5EC:  EndLoop
  5F4:  Call     RandInt     	( 00000050 *Var[B] )
  608:  Add  *Var[B]  0000001E 
  618:  Loop     *Var[B] 
  624:  	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  640:  	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
  660:  	Wait     00000001 
  66C:  EndLoop
  674:  Goto     00000000 
  680:  Return
  688:  End

#new:Script $Script_802222E0
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000002 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   88:  	Wait     00000002 
   94:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
   B0:  	Wait     00000002 
   BC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
   D8:  	Wait     00000002 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  150:  	Wait     00000002 
  15C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  178:  	Wait     00000002 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  1C8:  	Wait     00000002 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1F0:  	Wait     00000002 
  1FC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  268:  	Wait     00000002 
  274:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  290:  	Wait     00000002 
  29C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  2B8:  	Wait     00000002 
  2C4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  2E0:  	Wait     00000002 
  2EC:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  308:  	Wait     00000002 
  314:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  330:  	Wait     00000002 
  33C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  358:  	Wait     00000002 
  364:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  380:  	Wait     00000002 
  38C:  EndLoop
  394:  Return
  39C:  End

#new:IntTable $IntTable_80222684
00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8 
FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF 

#new:Script $Script_802226C4
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[1] 
   20:  Set  *Var[5]  00000005 
   30:  UseIntBuffer $IntTable_80222684 
   3C:  Label    00000000 
   48:  Get1Int  *Var[1] 
   54:  If  *Var[1]  ==  000000FF 
   64:  	UseIntBuffer $IntTable_80222684 
   70:  	Get1Int  *Var[1] 
   7C:  EndIf
   84:  Set  *Var[0]  *Var[5] 
   94:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] 00000000 )
   B0:  Wait     00000001 
   BC:  Add  *Var[5]  00000001 
   CC:  Set  *Var[C]  *Var[B] 
   DC:  Sub  *Var[C]  00000014 
   EC:  If  *Var[5]  >  *Var[C] 
   FC:  	Goto     00000001 
  108:  EndIf
  110:  Set  *Var[0]  *Var[5] 
  120:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] 00000000 )
  13C:  Wait     00000001 
  148:  Add  *Var[5]  00000001 
  158:  Set  *Var[C]  *Var[B] 
  168:  Sub  *Var[C]  00000014 
  178:  If  *Var[5]  >  *Var[C] 
  188:  	Goto     00000001 
  194:  EndIf
  19C:  Goto     00000000 
  1A8:  Label    00000001 
  1B4:  Set  *Var[2]  00000000 
  1C4:  Loop     00000014 
  1D0:  	Add  *Var[5]  00000001 
  1E0:  	Sub  *Var[1]  00000002 
  1F0:  	Set  *Var[0]  *Var[5] 
  200:  	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] 00000000 )
  21C:  	Wait     00000001 
  228:  EndLoop
  230:  Sub  *Var[5]  00000118 
  240:  Set  *Var[1]  00000000 
  250:  Goto     00000000 
  25C:  Return
  264:  End

% Origin: HEURISTIC
#new:Script $Script_80222930
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
   60:  	Wait     00000002 
   6C:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
   88:  	Wait     00000002 
   94:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
   B0:  	Wait     00000002 
   BC:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
   D8:  	Wait     00000002 
   E4:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
  150:  	Wait     00000002 
  15C:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFD 00000000 )
  178:  	Wait     00000002 
  184:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFD 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFD 00000000 )
  1C8:  	Wait     00000002 
  1D4:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
  1F0:  	Wait     00000002 
  1FC:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  268:  	Wait     00000002 
  274:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  290:  	Wait     00000002 
  29C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  2B8:  	Wait     00000002 
  2C4:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  2E0:  	Wait     00000002 
  2EC:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  308:  	Wait     00000002 
  314:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  330:  	Wait     00000002 
  33C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  358:  	Wait     00000002 
  364:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  380:  	Wait     00000002 
  38C:  EndLoop
  394:  Return
  39C:  End

#new:Script $Script_BeforeBattle_80222CD4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Thread
   34:  	Set  *Var[0]  0000000F 
   44:  	Exec     $Script_802222E0 
   50:  	Wait     00000005 
   5C:  	Set  *Var[0]  00000010 
   6C:  	Exec     $Script_802222E0 
   78:  	Wait     00000005 
   84:  	Set  *Var[0]  00000011 
   94:  	Exec     $Script_802222E0 
   A0:  EndThread
   A8:  Thread
   B0:  	Wait     00000005 
   BC:  	Set  *Var[0]  00000009 
   CC:  	Set  *Var[1]  00000091 
   DC:  	Exec     $Script_802226C4 
   E8:  	Set  *Var[0]  0000000A 
   F8:  	Set  *Var[1]  00000091 
  108:  	Exec     $Script_802226C4 
  114:  EndThread
  11C:  Set  *Var[0]  0000000C 
  12C:  Set  *Var[1]  0000003C 
  13C:  Exec     $Script_802226C4 
  148:  Set  *Var[0]  0000000D 
  158:  Set  *Var[1]  0000003C 
  168:  Exec     $Script_802226C4 
  174:  Return
  17C:  End

#new:Script $Script_AfterBattle_80222E58
    0:  Return
    8:  End

#new:Stage $Stage_80222E68
$ASCII_80223418  % tik_tex
$ASCII_80223408  % tik_bt04_shape
$ASCII_802233F8  % tik_bt04_hit
$Script_BeforeBattle_80222CD4 
$Script_AfterBattle_80222E58 
00000000 
00000000 
00000000 
00000000 
00000000 

#new:Script $Script_80222E90
    0:  SetGroup 00000000 
    C:  If  *Var[5]  ==  00000001 
   1C:  	If  *Var[6]  ==  00000001 
   2C:  		If  *Var[7]  ==  00000001 
   3C:  			If  *Var[8]  ==  00000001 
   4C:  				Call     $Function_80219540 ( )
   58:  				Return
   60:  			EndIf
   68:  		EndIf
   70:  	EndIf
   78:  EndIf
   80:  Call     $Function_80219664 ( )
   8C:  Return
   94:  End

#new:Script $Script_BeforeBattle_80222F2C
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     SetTexPanner 	( 0000000F 00000001 )
   40:  Call     EnableTexPanning 	( 0000000F .True )
   54:  Thread
   5C:  	Set  *Var[0]  00000001 
   6C:  	Set  *Var[1]  00000000 
   7C:  	Set  *Var[2]  FFFFF574 
   8C:  	Set  *Var[3]  00000000 
   9C:  	Set  *Var[4]  FFFFF448 
   AC:  	Set  *Var[5]  00000001 
   BC:  	Set  *Var[6]  00000001 
   CC:  	Set  *Var[7]  00000001 
   DC:  	Set  *Var[8]  00000001 
   EC:  	Set  *Var[9]  00000000 
   FC:  	Set  *Var[A]  00000000 
  10C:  	Set  *Var[B]  00000000 
  11C:  	Set  *Var[C]  00000000 
  12C:  	Exec     $Script_80222E90 
  138:  EndThread
  140:  Call     SetTexPanner 	( 00000010 00000002 )
  154:  Call     EnableTexPanning 	( 00000010 .True )
  168:  Thread
  170:  	Set  *Var[0]  00000002 
  180:  	Set  *Var[1]  00000032 
  190:  	Set  *Var[2]  FFFFFF38 
  1A0:  	Set  *Var[3]  0000006E 
  1B0:  	Set  *Var[4]  FFFFFE0C 
  1C0:  	Set  *Var[5]  00000001 
  1D0:  	Set  *Var[6]  00000001 
  1E0:  	Set  *Var[7]  00000001 
  1F0:  	Set  *Var[8]  00000001 
  200:  	Set  *Var[9]  00000000 
  210:  	Set  *Var[A]  00000000 
  220:  	Set  *Var[B]  00000000 
  230:  	Set  *Var[C]  00000000 
  240:  	Exec     $Script_80222E90 
  24C:  EndThread
  254:  Return
  25C:  End

#new:Script $Script_AfterBattle_80223190
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802231A0
0000000F 00000000 

#new:Stage $Stage_802231A8
$ASCII_80223440  % tik_tex
$ASCII_80223430  % tik_bt05_shape
$ASCII_80223420  % tik_bt05_hit
$Script_BeforeBattle_80222F2C 
$Script_AfterBattle_80223190 
00000000 
$ForegroundModelList_802231A0 
00000000 
00000000 
00000000 

#new:Formation $Formation_00
$Swooper 0000000D 0000000A 00000000 00000000 00000000 00000000 
$Swooper 0000000E 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Swooper 0000000C 0000000A 00000000 00000000 00000000 00000000 
$Swooper 0000000D 00000009 00000000 00000000 00000000 00000000 
$Swooper 0000000E 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Swoopula 0000000D 0000000A 00000000 00000000 00000000 00000000 
$Swoopula 0000000E 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Swoopula 0000000C 0000000A 00000000 00000000 00000000 00000000 
$Swoopula 0000000D 00000009 00000000 00000000 00000000 00000000 
$Swoopula 0000000E 00000008 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8022347C 00000002 $Formation_00 $Stage_80220714 00000000 % unused
$SJIS_80223470 00000003 $Formation_01 $Stage_80220714 00000000 % unused
$SJIS_8022345C 00000002 $Formation_02 $Stage_80220714 00000000 % unused
$SJIS_80223448 00000003 $Formation_03 $Stage_80220714 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_802234A8 $Stage_80220714 
$ASCII_802234A0 $Stage_80221314 
$ASCII_80223498 $Stage_80221C20 
$ASCII_80223490 $Stage_80222E68 
$ASCII_80223488 $Stage_802231A8 
00000000 00000000 

PADDING: 8022337C to 80223380 (00623A6C to 00623A70)
00000000 

#new:ASCII $ASCII_80223380
tik_bt01_hit

#new:ASCII $ASCII_80223390
tik_bt01_shape

#new:ASCII $ASCII_802233A0
tik_tex

#new:ASCII $ASCII_802233A8
tik_bt02_hit

#new:ASCII $ASCII_802233B8
tik_bt02_shape

#new:ASCII $ASCII_802233C8
tik_tex

#new:ASCII $ASCII_802233D0
tik_bt03_hit

#new:ASCII $ASCII_802233E0
tik_bt03_shape

#new:ASCII $ASCII_802233F0
tik_tex

#new:ASCII $ASCII_802233F8
tik_bt04_hit

#new:ASCII $ASCII_80223408
tik_bt04_shape

#new:ASCII $ASCII_80223418
tik_tex

#new:ASCII $ASCII_80223420
tik_bt05_hit

#new:ASCII $ASCII_80223430
tik_bt05_shape

#new:ASCII $ASCII_80223440
tik_tex

#new:SJIS $SJIS_80223448
% basabasachururux3
836F8354 836F8354 83608385 838B838B 78825200 

#new:SJIS $SJIS_8022345C
% basabasachururux2
836F8354 836F8354 83608385 838B838B 78825100 

#new:SJIS $SJIS_80223470
% basabasax3
836F8354 836F8354 78825200 

#new:SJIS $SJIS_8022347C
% basabasax2
836F8354 836F8354 78825100 

#new:ASCII $ASCII_80223488
tik_05

#new:ASCII $ASCII_80223490
tik_04

#new:ASCII $ASCII_80223498
tik_03

#new:ASCII $ASCII_802234A0
tik_02

#new:ASCII $ASCII_802234A8
tik_01

