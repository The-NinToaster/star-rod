% Script File: 07 Area TRD Part 2.bscr
% Decoded from: 4B11F0 to 4CF1B0 (07 Area TRD Part 2)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218058
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 1C (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S0, 10 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       {Func:GetVariable}
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  DADDU     A0, S1, R0
   34:  JAL       {Func:GetVariable}
   38:  DADDU     S2, V0, R0
   3C:  DADDU     A0, S1, R0
   40:  LW        A1, 0 (S0)
   44:  JAL       {Func:GetVariable}
   48:  DADDU     S0, V0, R0
   4C:  DADDU     S1, V0, R0
   50:  ADDIU     V0, R0, FFFF
   54:  BNE       S0, V0, .o6C
   58:  ADDIU     V0, R0, 1
   5C:  JAL       8011D82C
   60:  DADDU     A0, S1, R0
   64:  BEQ       R0, R0, .o10C
   68:  ADDIU     V0, R0, 2
        .o6C
   6C:  BEQ       S2, V0, .oD0
   70:  SLTI      V0, S2, 2
   74:  BEQ       V0, R0, .o8C
   78:  ADDIU     V0, R0, 2
   7C:  BEQ       S2, R0, .o9C
   80:  ORI       S2, R0, FFFF
   84:  BEQ       R0, R0, .o10C
   88:  NOP
        .o8C
   8C:  BEQ       S2, V0, .oFC
   90:  ADDIU     V0, R0, 2
   94:  BEQ       R0, R0, .o10C
   98:  NOP
        .o9C
   9C:  LW        A0, 0 (S0)
   A0:  BEQ       A0, S2, .o10C
   A4:  ADDIU     V0, R0, 2
   A8:  JAL       8011B010
   AC:  ADDIU     S0, S0, 4
   B0:  JAL       8011AD30
   B4:  DADDU     A0, V0, R0
   B8:  DADDU     A0, V0, R0
   BC:  ADDIU     A1, R0, FFFF
   C0:  JAL       8011BC7C
   C4:  DADDU     A2, S1, R0
   C8:  SD        RA, FFF4 (RA)
   CC:  NOP
        .oD0
   D0:  ORI       S2, R0, FFFF
        .oD4
   D4:  LW        V0, 0 (S0)
   D8:  BEQ       V0, S2, .o108
   DC:  ADDIU     A1, R0, FFFF
   E0:  LHU       A0, 2 (S0)
   E4:  DADDU     A2, S1, R0
   E8:  ADDIU     S0, S0, 4
   EC:  JAL       8011B950
   F0:  DADDU     A3, R0, R0
   F4:  SD        RA, FFF7 (RA)
   F8:  NOP
        .oFC
   FC:  LAW       V0, 801512F0
  104:  SB        S1, 0 (V0)
        .o108
  108:  ADDIU     V0, R0, 2
        .o10C
  10C:  LW        RA, 1C (SP)
  110:  LW        S2, 18 (SP)
  114:  LW        S1, 14 (SP)
  118:  LW        S0, 10 (SP)
  11C:  JR        RA
  120:  ADDIU     SP, SP, 20

#new:Function $Function_8021817C
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S1, 34 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 54 (SP)
   10:  SW        S8, 50 (SP)
   14:  SW        S7, 4C (SP)
   18:  SW        S6, 48 (SP)
   1C:  SW        S5, 44 (SP)
   20:  SW        S4, 40 (SP)
   24:  SW        S3, 3C (SP)
   28:  SW        S2, 38 (SP)
   2C:  SW        S0, 30 (SP)
   30:  LW        S0, C (S1)
   34:  LW        A1, 0 (S0)
   38:  JAL       {Func:GetVariable}
   3C:  ADDIU     S0, S0, 4
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S3, V0, R0
   54:  LW        A1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  DADDU     A0, S1, R0
   60:  JAL       {Func:GetVariable}
   64:  DADDU     S6, V0, R0
   68:  LW        A1, 0 (S0)
   6C:  ADDIU     S0, S0, 4
   70:  DADDU     A0, S1, R0
   74:  JAL       {Func:GetVariable}
   78:  DADDU     S5, V0, R0
   7C:  LW        A1, 0 (S0)
   80:  ADDIU     S0, S0, 4
   84:  DADDU     A0, S1, R0
   88:  JAL       {Func:GetVariable}
   8C:  DADDU     S4, V0, R0
   90:  LW        A1, 0 (S0)
   94:  ADDIU     S0, S0, 4
   98:  DADDU     A0, S1, R0
   9C:  JAL       {Func:GetVariable}
   A0:  DADDU     S2, V0, R0
   A4:  LW        A1, 0 (S0)
   A8:  ADDIU     S0, S0, 4
   AC:  DADDU     A0, S1, R0
   B0:  JAL       {Func:GetVariable}
   B4:  SW        V0, 28 (SP)
   B8:  LW        A1, 0 (S0)
   BC:  ADDIU     S0, S0, 4
   C0:  DADDU     A0, S1, R0
   C4:  JAL       {Func:GetVariable}
   C8:  DADDU     S8, V0, R0
   CC:  LW        A1, 0 (S0)
   D0:  ADDIU     S0, S0, 4
   D4:  DADDU     A0, S1, R0
   D8:  JAL       {Func:GetVariable}
   DC:  DADDU     S7, V0, R0
   E0:  DADDU     A0, S1, R0
   E4:  LW        A1, 0 (S0)
   E8:  JAL       {Func:GetVariable}
   EC:  DADDU     S0, V0, R0
   F0:  DADDU     V1, V0, R0
   F4:  ADDIU     V0, R0, 2
   F8:  BEQ       S3, V0, .o144
   FC:  SLTI      V0, S3, 3
  100:  BEQ       V0, R0, .o118
  104:  ADDIU     V0, R0, 1
  108:  BEQ       S3, V0, .o12C
  10C:  ANDI      A0, S6, FF
  110:  BEQ       R0, R0, .o1A0
  114:  NOP
        .o118
  118:  ADDIU     V0, R0, 3
  11C:  BEQ       S3, V0, .o180
  120:  ANDI      A0, S6, FF
  124:  BEQ       R0, R0, .o1A0
  128:  NOP
        .o12C
  12C:  ANDI      A1, S5, FF
  130:  ANDI      A2, S4, FF
  134:  JAL       8011BE5C
  138:  ANDI      A3, S2, FF
  13C:  BEQ       R0, R0, .o1A0
  140:  NOP
        .o144
  144:  ANDI      A0, S6, FF
  148:  ANDI      A1, S5, FF
  14C:  ANDI      A2, S4, FF
  150:  ANDI      A3, S2, FF
  154:  LBU       V0, 2B (SP)
  158:  SW        S0, 1C (SP)
  15C:  SW        V1, 20 (SP)
  160:  SW        V0, 10 (SP)
  164:  ANDI      V0, S8, FF
  168:  SW        V0, 14 (SP)
  16C:  ANDI      V0, S7, FF
  170:  JAL       8011BEB4
  174:  SW        V0, 18 (SP)
  178:  BEQ       R0, R0, .o1A0
  17C:  NOP
        .o180
  180:  ANDI      A1, S5, FF
  184:  ANDI      A2, S4, FF
  188:  ANDI      A3, S2, FF
  18C:  LBU       V0, 2B (SP)
  190:  SW        V0, 10 (SP)
  194:  ANDI      V0, S8, FF
  198:  JAL       8011BF98
  19C:  SW        V0, 14 (SP)
        .o1A0
  1A0:  LW        RA, 54 (SP)
  1A4:  LW        S8, 50 (SP)
  1A8:  LW        S7, 4C (SP)
  1AC:  LW        S6, 48 (SP)
  1B0:  LW        S5, 44 (SP)
  1B4:  LW        S4, 40 (SP)
  1B8:  LW        S3, 3C (SP)
  1BC:  LW        S2, 38 (SP)
  1C0:  LW        S1, 34 (SP)
  1C4:  LW        S0, 30 (SP)
  1C8:  ADDIU     V0, R0, 2
  1CC:  JR        RA
  1D0:  ADDIU     SP, SP, 58

#new:Function $Function_80218350
    0:  ADDIU     SP, SP, FFE8
    4:  ADDIU     A0, R0, 8
    8:  SW        RA, 10 (SP)
    C:  JAL       8014AF8C
   10:  DADDU     A1, R0, R0
   14:  JAL       8014AEF8
   18:  NOP
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_8021837C
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       {Func:GetVariable}
   10:  LW        A1, 0 (V0)
   14:  JAL       {Func:GetActor}
   18:  DADDU     A0, V0, R0
   1C:  LWC1      F4, 18 (V0)
   20:  LIF       F0, 15.0
   28:  LWC1      F2, 54 (V0)
   2C:  SUB.S     F4, F4, F0
   30:  SWC1      F2, 10 (SP)
   34:  LW        A2, 1C (V0)
   38:  LW        A3, 20 (V0)
   3C:  MFC1      A1, F4
   40:  JAL       802642F0
   44:  ADDIU     A0, R0, 2
   48:  LW        RA, 18 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

PADDING: 802183D4 to 802183E0 (004B15C4 to 004B15D0)
00000000 00000000 00000000 

#new:Function $Function_802183E0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218438
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  ADDIU     A0, R0, 6
   68:  LIA       A1, $End[80]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  DADDU     A3, V0, R0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       800712D0
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  ADDIU     V0, R0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28

#new:Function $Function_80218510
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  JAL       {Func:GetActor}
   14:  ADDIU     A0, R0, 200
   18:  DADDU     A0, V0, R0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  DADDU     V0, A0, R0
        .o30
   30:  JAL       {Func:GetActor}
   34:  ADDIU     A0, R0, 201
   38:  DADDU     A0, V0, R0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  DADDU     V0, A0, R0
        .o50
   50:  JAL       {Func:GetActor}
   54:  ADDIU     A0, R0, 202
   58:  DADDU     A0, V0, R0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  DADDU     V0, A0, R0
        .o70
   70:  JAL       {Func:GetActor}
   74:  ADDIU     A0, R0, 203
   78:  DADDU     A0, V0, R0
   7C:  BEQL      A0, R0, .o90
   80:  DADDU     V0, R0, R0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  DADDU     V0, R0, R0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18

#new:Function $Function_802185B0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       {Func:GetActor}
   20:  ADDIU     A0, R0, 204
   24:  LW        S1, 94 (V0)
   28:  ADDIU     V0, R0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  ADDIU     V0, R0, 2
   3C:  BEQ       S1, V0, .o60
   40:  DADDU     A0, R0, R0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  ADDIU     V0, R0, 4
   50:  BEQ       S1, V0, .o108
   54:  DADDU     A0, R0, R0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80218510
   64:  ADDIU     A0, R0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  ADDIU     A0, R0, 6
   80:  JAL       $Function_80218510
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80218510
   A8:  ADDIU     A0, R0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  ADDIU     A0, R0, 5
   C4:  JAL       $Function_80218510
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  ADDIU     A0, R0, 6
   E4:  JAL       $Function_80218510
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80218510
  10C:  ADDIU     A0, R0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  ADDIU     A0, R0, 4
  128:  JAL       $Function_80218510
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  ADDIU     A0, R0, 5
  148:  JAL       $Function_80218510
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  ADDIU     A0, R0, 6
  168:  JAL       $Function_80218510
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  DADDU     A0, R0, R0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  DADDU     T1, V0, R0
  198:  ADDIU     T0, SP, 20
  19C:  DADDU     A3, T0, R0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  DADDU     A2, A0, R0
  1AC:  DADDU     A1, A3, R0
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       {Func:GetActor}
  244:  NOP
  248:  ADDIU     A0, R0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  ADDIU     V0, R0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  ADDIU     V0, R0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  ADDIU     V0, R0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       {Func:SetVariable}
  2B4:  DADDU     A0, S2, R0
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       {Func:SetVariable}
  2D0:  DADDU     A0, S2, R0
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  DADDU     A0, S2, R0
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       {Func:SetVariable}
  2F8:  DADDU     A0, S2, R0
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       {Func:SetVariable}
  314:  DADDU     A0, S2, R0
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  DADDU     A0, S2, R0
        .o324
  324:  ADDIU     V0, R0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  ADDIU     V0, R0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       {Func:SetVariable}
  370:  DADDU     A0, S2, R0
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       {Func:SetVariable}
  38C:  DADDU     A0, S2, R0
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  DADDU     A0, S2, R0
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       {Func:SetVariable}
  3B4:  DADDU     A0, S2, R0
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       {Func:SetVariable}
  3D0:  DADDU     A0, S2, R0
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  DADDU     A0, S2, R0
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       {Func:SetVariable}
  3F8:  DADDU     A0, S2, R0
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       {Func:SetVariable}
  414:  DADDU     A0, S2, R0
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  DADDU     A0, S2, R0
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  ADDIU     V0, R0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  ADDIU     V0, R0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       {Func:SetVariable}
  474:  DADDU     A0, S2, R0
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       {Func:SetVariable}
  490:  DADDU     A0, S2, R0
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  DADDU     A0, S2, R0
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       {Func:SetVariable}
  4B8:  DADDU     A0, S2, R0
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       {Func:SetVariable}
  4D4:  DADDU     A0, S2, R0
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  DADDU     A0, S2, R0
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       {Func:SetVariable}
  4FC:  DADDU     A0, S2, R0
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       {Func:SetVariable}
  518:  DADDU     A0, S2, R0
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  DADDU     A0, S2, R0
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       {Func:SetVariable}
  540:  DADDU     A0, S2, R0
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       {Func:SetVariable}
  55C:  DADDU     A0, S2, R0
  560:  DADDU     A0, S2, R0
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       {Func:SetVariable}
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  ADDIU     V0, R0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60

#new:Function $Function_80218B48
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       {Func:GetActor}
   1C:  LW        S1, C (S0)
   20:  DADDU     A0, S0, R0
   24:  LW        A1, 0 (S1)
   28:  JAL       {Func:GetVariable}
   2C:  DADDU     S0, V0, R0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  ADDIU     V0, R0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20

PADDING: 80218B94 to 80218BA0 (004B1D84 to 004B1D90)
00000000 00000000 00000000 

#new:Function $Function_80218BA0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218BF8
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  ADDIU     A0, R0, 6
   68:  LIA       A1, $End[310]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  DADDU     A3, V0, R0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       800712D0
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  ADDIU     V0, R0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28

#new:Function $Function_80218CD0
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  JAL       {Func:GetActor}
   14:  ADDIU     A0, R0, 200
   18:  DADDU     A0, V0, R0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  DADDU     V0, A0, R0
        .o30
   30:  JAL       {Func:GetActor}
   34:  ADDIU     A0, R0, 201
   38:  DADDU     A0, V0, R0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  DADDU     V0, A0, R0
        .o50
   50:  JAL       {Func:GetActor}
   54:  ADDIU     A0, R0, 202
   58:  DADDU     A0, V0, R0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  DADDU     V0, A0, R0
        .o70
   70:  JAL       {Func:GetActor}
   74:  ADDIU     A0, R0, 203
   78:  DADDU     A0, V0, R0
   7C:  BEQL      A0, R0, .o90
   80:  DADDU     V0, R0, R0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  DADDU     V0, R0, R0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18

#new:Function $Function_80218D70
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       {Func:GetActor}
   20:  ADDIU     A0, R0, 204
   24:  LW        S1, 94 (V0)
   28:  ADDIU     V0, R0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  ADDIU     V0, R0, 2
   3C:  BEQ       S1, V0, .o60
   40:  DADDU     A0, R0, R0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  ADDIU     V0, R0, 4
   50:  BEQ       S1, V0, .o108
   54:  DADDU     A0, R0, R0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80218CD0
   64:  ADDIU     A0, R0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  ADDIU     A0, R0, 6
   80:  JAL       $Function_80218CD0
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80218CD0
   A8:  ADDIU     A0, R0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  ADDIU     A0, R0, 5
   C4:  JAL       $Function_80218CD0
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  ADDIU     A0, R0, 6
   E4:  JAL       $Function_80218CD0
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80218CD0
  10C:  ADDIU     A0, R0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  ADDIU     A0, R0, 4
  128:  JAL       $Function_80218CD0
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  ADDIU     A0, R0, 5
  148:  JAL       $Function_80218CD0
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  ADDIU     A0, R0, 6
  168:  JAL       $Function_80218CD0
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  DADDU     A0, R0, R0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  DADDU     T1, V0, R0
  198:  ADDIU     T0, SP, 20
  19C:  DADDU     A3, T0, R0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  DADDU     A2, A0, R0
  1AC:  DADDU     A1, A3, R0
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       {Func:GetActor}
  244:  NOP
  248:  ADDIU     A0, R0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  ADDIU     V0, R0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  ADDIU     V0, R0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  ADDIU     V0, R0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       {Func:SetVariable}
  2B4:  DADDU     A0, S2, R0
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       {Func:SetVariable}
  2D0:  DADDU     A0, S2, R0
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  DADDU     A0, S2, R0
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       {Func:SetVariable}
  2F8:  DADDU     A0, S2, R0
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       {Func:SetVariable}
  314:  DADDU     A0, S2, R0
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  DADDU     A0, S2, R0
        .o324
  324:  ADDIU     V0, R0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  ADDIU     V0, R0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       {Func:SetVariable}
  370:  DADDU     A0, S2, R0
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       {Func:SetVariable}
  38C:  DADDU     A0, S2, R0
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  DADDU     A0, S2, R0
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       {Func:SetVariable}
  3B4:  DADDU     A0, S2, R0
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       {Func:SetVariable}
  3D0:  DADDU     A0, S2, R0
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  DADDU     A0, S2, R0
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       {Func:SetVariable}
  3F8:  DADDU     A0, S2, R0
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       {Func:SetVariable}
  414:  DADDU     A0, S2, R0
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  DADDU     A0, S2, R0
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  ADDIU     V0, R0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  ADDIU     V0, R0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       {Func:SetVariable}
  474:  DADDU     A0, S2, R0
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       {Func:SetVariable}
  490:  DADDU     A0, S2, R0
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  DADDU     A0, S2, R0
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       {Func:SetVariable}
  4B8:  DADDU     A0, S2, R0
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       {Func:SetVariable}
  4D4:  DADDU     A0, S2, R0
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  DADDU     A0, S2, R0
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       {Func:SetVariable}
  4FC:  DADDU     A0, S2, R0
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       {Func:SetVariable}
  518:  DADDU     A0, S2, R0
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  DADDU     A0, S2, R0
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       {Func:SetVariable}
  540:  DADDU     A0, S2, R0
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       {Func:SetVariable}
  55C:  DADDU     A0, S2, R0
  560:  DADDU     A0, S2, R0
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       {Func:SetVariable}
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  ADDIU     V0, R0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60

#new:Function $Function_80219308
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       {Func:GetActor}
   1C:  LW        S1, C (S0)
   20:  DADDU     A0, S0, R0
   24:  LW        A1, 0 (S1)
   28:  JAL       {Func:GetVariable}
   2C:  DADDU     S0, V0, R0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  ADDIU     V0, R0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20

PADDING: 80219354 to 80219360 (004B2544 to 004B2550)
00000000 00000000 00000000 

#new:Function $Function_80219360
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_802193B8
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  ADDIU     A0, R0, 6
   68:  LIA       A1, $End[5A0]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  DADDU     A3, V0, R0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       800712D0
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  ADDIU     V0, R0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28

#new:Function $Function_80219490
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  JAL       {Func:GetActor}
   14:  ADDIU     A0, R0, 200
   18:  DADDU     A0, V0, R0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  DADDU     V0, A0, R0
        .o30
   30:  JAL       {Func:GetActor}
   34:  ADDIU     A0, R0, 201
   38:  DADDU     A0, V0, R0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  DADDU     V0, A0, R0
        .o50
   50:  JAL       {Func:GetActor}
   54:  ADDIU     A0, R0, 202
   58:  DADDU     A0, V0, R0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  DADDU     V0, A0, R0
        .o70
   70:  JAL       {Func:GetActor}
   74:  ADDIU     A0, R0, 203
   78:  DADDU     A0, V0, R0
   7C:  BEQL      A0, R0, .o90
   80:  DADDU     V0, R0, R0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  DADDU     V0, R0, R0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18

#new:Function $Function_80219530
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       {Func:GetActor}
   20:  ADDIU     A0, R0, 204
   24:  LW        S1, 94 (V0)
   28:  ADDIU     V0, R0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  ADDIU     V0, R0, 2
   3C:  BEQ       S1, V0, .o60
   40:  DADDU     A0, R0, R0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  ADDIU     V0, R0, 4
   50:  BEQ       S1, V0, .o108
   54:  DADDU     A0, R0, R0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80219490
   64:  ADDIU     A0, R0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  ADDIU     A0, R0, 6
   80:  JAL       $Function_80219490
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80219490
   A8:  ADDIU     A0, R0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  ADDIU     A0, R0, 5
   C4:  JAL       $Function_80219490
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  ADDIU     A0, R0, 6
   E4:  JAL       $Function_80219490
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80219490
  10C:  ADDIU     A0, R0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  ADDIU     A0, R0, 4
  128:  JAL       $Function_80219490
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  ADDIU     A0, R0, 5
  148:  JAL       $Function_80219490
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  ADDIU     A0, R0, 6
  168:  JAL       $Function_80219490
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  DADDU     A0, R0, R0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  DADDU     T1, V0, R0
  198:  ADDIU     T0, SP, 20
  19C:  DADDU     A3, T0, R0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  DADDU     A2, A0, R0
  1AC:  DADDU     A1, A3, R0
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       {Func:GetActor}
  244:  NOP
  248:  ADDIU     A0, R0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  ADDIU     V0, R0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  ADDIU     V0, R0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  ADDIU     V0, R0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       {Func:SetVariable}
  2B4:  DADDU     A0, S2, R0
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       {Func:SetVariable}
  2D0:  DADDU     A0, S2, R0
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  DADDU     A0, S2, R0
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       {Func:SetVariable}
  2F8:  DADDU     A0, S2, R0
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       {Func:SetVariable}
  314:  DADDU     A0, S2, R0
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  DADDU     A0, S2, R0
        .o324
  324:  ADDIU     V0, R0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  ADDIU     V0, R0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       {Func:SetVariable}
  370:  DADDU     A0, S2, R0
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       {Func:SetVariable}
  38C:  DADDU     A0, S2, R0
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  DADDU     A0, S2, R0
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       {Func:SetVariable}
  3B4:  DADDU     A0, S2, R0
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       {Func:SetVariable}
  3D0:  DADDU     A0, S2, R0
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  DADDU     A0, S2, R0
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       {Func:SetVariable}
  3F8:  DADDU     A0, S2, R0
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       {Func:SetVariable}
  414:  DADDU     A0, S2, R0
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  DADDU     A0, S2, R0
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  ADDIU     V0, R0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  ADDIU     V0, R0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       {Func:SetVariable}
  474:  DADDU     A0, S2, R0
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       {Func:SetVariable}
  490:  DADDU     A0, S2, R0
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  DADDU     A0, S2, R0
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       {Func:SetVariable}
  4B8:  DADDU     A0, S2, R0
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       {Func:SetVariable}
  4D4:  DADDU     A0, S2, R0
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  DADDU     A0, S2, R0
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       {Func:SetVariable}
  4FC:  DADDU     A0, S2, R0
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       {Func:SetVariable}
  518:  DADDU     A0, S2, R0
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  DADDU     A0, S2, R0
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       {Func:SetVariable}
  540:  DADDU     A0, S2, R0
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       {Func:SetVariable}
  55C:  DADDU     A0, S2, R0
  560:  DADDU     A0, S2, R0
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       {Func:SetVariable}
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  ADDIU     V0, R0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60

#new:Function $Function_80219AC8
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       {Func:GetActor}
   1C:  LW        S1, C (S0)
   20:  DADDU     A0, S0, R0
   24:  LW        A1, 0 (S1)
   28:  JAL       {Func:GetVariable}
   2C:  DADDU     S0, V0, R0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  ADDIU     V0, R0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20

PADDING: 80219B14 to 80219B20 (004B2D04 to 004B2D10)
00000000 00000000 00000000 

#new:Function $Function_80219B20
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80219B78
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  ADDIU     A0, R0, 6
   68:  LIA       A1, $End[830]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  DADDU     A3, V0, R0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       800712D0
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  ADDIU     V0, R0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28

#new:Function $Function_80219C50
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  JAL       {Func:GetActor}
   14:  ADDIU     A0, R0, 200
   18:  DADDU     A0, V0, R0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  DADDU     V0, A0, R0
        .o30
   30:  JAL       {Func:GetActor}
   34:  ADDIU     A0, R0, 201
   38:  DADDU     A0, V0, R0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  DADDU     V0, A0, R0
        .o50
   50:  JAL       {Func:GetActor}
   54:  ADDIU     A0, R0, 202
   58:  DADDU     A0, V0, R0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  DADDU     V0, A0, R0
        .o70
   70:  JAL       {Func:GetActor}
   74:  ADDIU     A0, R0, 203
   78:  DADDU     A0, V0, R0
   7C:  BEQL      A0, R0, .o90
   80:  DADDU     V0, R0, R0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  DADDU     V0, R0, R0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18

#new:Function $Function_80219CF0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       {Func:GetActor}
   20:  ADDIU     A0, R0, 204
   24:  LW        S1, 94 (V0)
   28:  ADDIU     V0, R0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  ADDIU     V0, R0, 2
   3C:  BEQ       S1, V0, .o60
   40:  DADDU     A0, R0, R0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  ADDIU     V0, R0, 4
   50:  BEQ       S1, V0, .o108
   54:  DADDU     A0, R0, R0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80219C50
   64:  ADDIU     A0, R0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  ADDIU     A0, R0, 6
   80:  JAL       $Function_80219C50
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80219C50
   A8:  ADDIU     A0, R0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  ADDIU     A0, R0, 5
   C4:  JAL       $Function_80219C50
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  ADDIU     A0, R0, 6
   E4:  JAL       $Function_80219C50
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80219C50
  10C:  ADDIU     A0, R0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  ADDIU     A0, R0, 4
  128:  JAL       $Function_80219C50
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  ADDIU     A0, R0, 5
  148:  JAL       $Function_80219C50
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  ADDIU     A0, R0, 6
  168:  JAL       $Function_80219C50
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  DADDU     A0, R0, R0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  DADDU     T1, V0, R0
  198:  ADDIU     T0, SP, 20
  19C:  DADDU     A3, T0, R0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  DADDU     A2, A0, R0
  1AC:  DADDU     A1, A3, R0
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       {Func:GetActor}
  244:  NOP
  248:  ADDIU     A0, R0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  ADDIU     V0, R0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  ADDIU     V0, R0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  ADDIU     V0, R0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       {Func:SetVariable}
  2B4:  DADDU     A0, S2, R0
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       {Func:SetVariable}
  2D0:  DADDU     A0, S2, R0
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  DADDU     A0, S2, R0
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       {Func:SetVariable}
  2F8:  DADDU     A0, S2, R0
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       {Func:SetVariable}
  314:  DADDU     A0, S2, R0
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  DADDU     A0, S2, R0
        .o324
  324:  ADDIU     V0, R0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  ADDIU     V0, R0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       {Func:SetVariable}
  370:  DADDU     A0, S2, R0
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       {Func:SetVariable}
  38C:  DADDU     A0, S2, R0
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  DADDU     A0, S2, R0
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       {Func:SetVariable}
  3B4:  DADDU     A0, S2, R0
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       {Func:SetVariable}
  3D0:  DADDU     A0, S2, R0
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  DADDU     A0, S2, R0
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       {Func:SetVariable}
  3F8:  DADDU     A0, S2, R0
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       {Func:SetVariable}
  414:  DADDU     A0, S2, R0
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  DADDU     A0, S2, R0
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  ADDIU     V0, R0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  ADDIU     V0, R0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       {Func:SetVariable}
  474:  DADDU     A0, S2, R0
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       {Func:SetVariable}
  490:  DADDU     A0, S2, R0
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  DADDU     A0, S2, R0
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       {Func:SetVariable}
  4B8:  DADDU     A0, S2, R0
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       {Func:SetVariable}
  4D4:  DADDU     A0, S2, R0
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  DADDU     A0, S2, R0
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       {Func:SetVariable}
  4FC:  DADDU     A0, S2, R0
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       {Func:SetVariable}
  518:  DADDU     A0, S2, R0
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  DADDU     A0, S2, R0
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       {Func:SetVariable}
  540:  DADDU     A0, S2, R0
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       {Func:SetVariable}
  55C:  DADDU     A0, S2, R0
  560:  DADDU     A0, S2, R0
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       {Func:SetVariable}
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  ADDIU     V0, R0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60

#new:Function $Function_8021A288
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       {Func:GetActor}
   1C:  LW        S1, C (S0)
   20:  DADDU     A0, S0, R0
   24:  LW        A1, 0 (S1)
   28:  JAL       {Func:GetVariable}
   2C:  DADDU     S0, V0, R0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  ADDIU     V0, R0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20

PADDING: 8021A2D4 to 8021A2E0 (004B34C4 to 004B34D0)
00000000 00000000 00000000 

#new:Function $Function_8021A2E0
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       {Func:GetVariable}
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIO       AT, 40C90FD0
   70:  MTC1      AT, F20
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       {Func:SinRad}
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       {Func:SinRad}
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       {Func:CosRad}
   F8:  ADD.S     F24, F24, F26
   FC:  DADDU     A0, S4, R0
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  DADDU     A1, S1, R0
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       {Func:SetFloatVariable}
  128:  ADD.S     F20, F20, F2
  12C:  DADDU     A0, S4, R0
  130:  MFC1      A2, F24
  134:  JAL       {Func:SetFloatVariable}
  138:  DADDU     A1, S3, R0
  13C:  DADDU     A0, S4, R0
  140:  MFC1      A2, F20
  144:  JAL       {Func:SetFloatVariable}
  148:  DADDU     A1, S2, R0
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  DADDU     A2, R0, R0
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  ADDIU     A2, R0, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  DADDU     A0, S4, R0
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       {Func:SetVariable}
  228:  DADDU     A1, S0, R0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  ADDIU     V0, R0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58

PADDING: 8021A548 to 8021A550 (004B3738 to 004B3740)
00000000 00000000 

#new:Formation $Formation_00
$GNinjakoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$YNinjakoopa 00000000 00000009 00000000 00000000 00000000 00000000 
$BNinjakoopa 00000000 00000008 00000000 00000000 00000000 00000000 
$RNinjakoopa 00000000 00000007 00000000 00000000 00000000 00000000 
$FakeBowser 00000003 00000006 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80235D60 00000005 $Formation_00 $Stage_80231434 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_80235DC4 $Stage_80231434 
$ASCII_80235DBC $Stage_802314AC 
$ASCII_80235DB4 $Stage_80231CB0 
$ASCII_80235DAC $Stage_802324D0 
$ASCII_80235DA4 $Stage_80232940 
$ASCII_80235D9C $Stage_80232CB8 
$ASCII_80235D94 $Stage_802334C0 
$ASCII_80235D8C $Stage_80233CC8 
$ASCII_80235D84 $Stage_80234510 
$ASCII_80235D7C $Stage_80234D58 
$ASCII_80235D74 $Stage_80235530 
$ASCII_80235D6C $Stage_80235D2C 
00000000 00000000 

PADDING: 8021A66C to 8021A670 (004B385C to 004B3860)
00000000 

#new:DefenseTable $DefenseTable_8021A670
.Element:Normal 00000001
.Element:Blast  00000001
.Element:End

#new:DefenseTable $DefenseTable_8021A684
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_8021A690
.Status:Normal      0`
.Status:Default    -1`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:IdleAnimations $IdleAnimations_8021A73C
.Status:Normal    00660004
.Status:End

#new:SpriteTable $SpriteTable_8021A748
00800001 0100000F D26E00FF $IdleAnimations_8021A73C $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00020000 02000000 000000FF 00000000 $DefenseTable_8021A684 00000000 00000000 00000000 00000000 
00020000 05000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00020000 03000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00020000 04000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00020000 06000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00020000 07000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00120000 08000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00120000 09000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00020000 0A000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 
00020000 0B000000 000A00FF 00000000 $DefenseTable_8021A670 00000000 00000000 00000000 00000000 

#new:Actor $FakeBowser
% stats
[Index]        99b 
[Level]         0`b 
[MaxHP]        10`b 
[Coins]         0`b 
[Flags]       00000004 
[StatusTable] $StatusTable_8021A690 
% ai
[SpriteCount]  11`s 
[SpriteTable] $SpriteTable_8021A748 
[Script]      $Script_Init_8021A968 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        -71`b 125`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Unknown $???_8021A8FC
00000009 0000000B 0000000C 0000000D 0000000F 00000010 00000011 00000012 
00000013 00000014 00000019 0000001A 0000001B 0000001C 0000001D 0000001F 
00000020 00000021 00000023 00000024 00000025 00000027 00000028 00000029 
0000002B 0000002D 0000FFFF 

#new:Script $Script_Init_8021A968
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021EC98 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021D508 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E6F0 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021F410 )
   50:  UseArray $End[0] 
   5C:  Call     SetActorVar 	( .Actor:Enemy4 00000000 00000000 )
   74:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   8C:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   A4:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   BC:  Set  *Array[0]  00000000 
   CC:  Call     SetActorPos 	( .Actor:Self 00000060 00000000 00000000 )
   E8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  104:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  120:  Call     HPBarToHome 	( .Actor:Self )
  130:  Call     8026D158 ( FFFFFF81 00000002 00000004 00000001 )
  14C:  Return
  154:  End

#new:FloatTable $FloatTable_8021AAC4
F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 
F24A7E80 F24A7A80 F24A7A80 F24A8280 F24A7A80 F24A7A80 F24A8480 F24A7A80 
F24A7A80 F24A8680 F24A7A80 F24A7A80 F24A8A80 F24A7A80 F24A7A80 F24A8A80 
F24A7A80 F24A7A80 F24A8A80 F24A7A80 F24A7A80 F24A8A80 F24A7A80 F24A7A80 
F24A8A80 F24A7A80 F24A7A80 F24A8A80 F24A7A80 F24A7A80 F24A8A80 F24A7A80 
F24A7A80 F24A8A80 F24A7A80 F24A7A80 F24A8880 F24A7A80 F24A7A80 F24A8680 
F24A7A80 F24A7A80 F24A8480 F24A7A80 F24A7A80 F24A8680 F24A7A80 F24A7A80 
F24A8280 F24A7A80 F24A7A80 F24A7E80 F24A7A80 F24A7A80 F24A7C80 F24A7A80 
F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 000000FF 000000FF 000000FF 

#new:Script $Script_8021ABE4
    0:  UseArray $End[0] 
    C:  UseFloatBuffer $FloatTable_8021AAC4 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000001 
   44:  	Return
   4C:  EndIf
   54:  Get3Float *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseFloatBuffer $FloatTable_8021AAC4 
   84:  	Get3Float *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     SetSpriteRotation 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
   C0:  Wait     00000001 
   CC:  Goto     00000000 
   D8:  Return
   E0:  End

#new:FloatTable $FloatTable_8021ACCC
F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A8280 F24A7A80 F24A7A80 
F24A8E80 F24A7A80 F24A7A80 F24A9A80 F24A7A80 F24A7A80 F24A9A80 F24A7A80 
F24A7A80 F24A9A80 F24A7A80 F24A7A80 F24A9A80 F24A7A80 F24A7A80 F24A9680 
F24A7A80 F24A7A80 F24A8E80 F24A7A80 F24A7A80 F24A8A80 F24A7A80 F24A7A80 
F24A7E80 F24A7A80 F24A7A80 F24A7A80 000000FF 000000FF 000000FF 

#new:Script $Script_8021AD68
    0:  UseArray $End[0] 
    C:  UseFloatBuffer $FloatTable_8021ACCC 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000005 
   44:  	Return
   4C:  EndIf
   54:  Get3Float *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseFloatBuffer $FloatTable_8021ACCC 
   84:  	Get3Float *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     SetSpriteRotation 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
   C0:  Wait     00000001 
   CC:  Goto     00000000 
   D8:  Return
   E0:  End

#new:FloatTable $FloatTable_8021AE50
F24A7A80 F24AA280 F24A7A80 F24ACA80 F24A7A80 F24A8E80 F24A7A80 F24A7A80 
F24A7A80 F24A8E80 F24ACA80 F24A7A80 F24AA280 F24A7A80 F24A7A80 F24A7A80 
F24AF280 F24A7A80 F24A7A80 F24A8E80 F24A8280 F24AF280 F24A7A80 F24AA280 
F24AF280 F24AA280 F24A7A80 F24A7A80 F24B1A80 F24A8280 F24A7A80 F24A7A80 
F24A8E80 F24A8E80 F24A7A80 F24A9A80 F24AA280 F24A7A80 F24A7A80 F24A7A80 
F24AF280 F24A7A80 F24ACA80 F24A7A80 F24A8E80 F24A7A80 F24A7A80 F24A7A80 
F24A7A80 F24A8E80 F24A7A80 F24AA280 F24A7A80 F24A9A80 F24A7A80 F24ACA80 
F24A7A80 F24A8E80 F24A7A80 F24A7A80 F24A7A80 F24A8E80 F24A8E80 F24AF280 
F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 000000FF 000000FF 000000FF 

#new:Script $Script_8021AF70
    0:  UseArray $End[0] 
    C:  UseFloatBuffer $FloatTable_8021AE50 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000003 
   44:  	Return
   4C:  EndIf
   54:  Get3Float *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseFloatBuffer $FloatTable_8021AE50 
   84:  	Get3Float *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     RandInt     	( 00000064 *Var[A] )
   B4:  If  *Var[A]  <  00000032 
   C4:  	SetF  *Var[A]  *Fixed[0.0] 
   D4:  	SubF  *Var[A]  *Var[0] 
   E4:  	SetF  *Var[0]  *Var[A] 
   F4:  	SetF  *Var[A]  *Fixed[0.0] 
  104:  	SubF  *Var[A]  *Var[1] 
  114:  	SetF  *Var[1]  *Var[A] 
  124:  EndIf
  12C:  Call     SetSpriteRotation 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  14C:  Wait     00000001 
  158:  Goto     00000000 
  164:  Return
  16C:  End

#new:Script $Script_8021B0E4
    0:  UseArray $End[0] 
    C:  Call     $Function_80218000 ( 00000100 0000001E )
   20:  Thread
   28:  	SetGroup 00000000 
   34:  	Call     ShakeCam    	( 00000001 00000000 00000014 *Fixed[3.0] )
   50:  EndThread
   58:  Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00100000 .True )
   74:  Call     GetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
   94:  Call     SetSpriteOffset 	( .Actor:Self 00000005 00000000 FFFFFFC4 00000000 )
   B4:  Set  *Var[1]  0000003C 
   C4:  Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
   E4:  Thread
   EC:  	Set  *Var[0]  00000000 
   FC:  	Set  *Var[1]  00000000 
  10C:  	Set  *Var[2]  00000000 
  11C:  	Loop     0000003C 
  128:  		Add  *Var[0]  00000014 
  138:  		Call     SetSpriteRotation 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  158:  		Wait     00000001 
  164:  	EndLoop
  16C:  EndThread
  174:  Sub  *Var[0]  0000003C 
  184:  Set  *Var[1]  FFFFFF38 
  194:  Add  *Var[2]  00000064 
  1A4:  Call     SetSpriteJumpscale 	( .Actor:Self 00000005 *Fixed[0.5] )
  1BC:  Call     JumpSpriteA 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 0000003C .True )
  1E4:  Wait     0000001E 
  1F0:  Call     PlaySoundAtModel 	( 0000000F 000001E2 00000000 )
  208:  Thread
  210:  	SetGroup 00000000 
  21C:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  238:  EndThread
  240:  Call     $Function_80218000 ( 00000064 00000014 )
  254:  Wait     00000014 
  260:  Call     PlaySoundAtModel 	( 0000000B 000001E2 00000000 )
  278:  Thread
  280:  	SetGroup 00000000 
  28C:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.5] )
  2A8:  EndThread
  2B0:  Call     $Function_80218000 ( 00000096 00000014 )
  2C4:  Wait     0000001E 
  2D0:  Call     PlaySoundAtModel 	( 00000009 000001E2 00000000 )
  2E8:  Thread
  2F0:  	SetGroup 00000000 
  2FC:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.0] )
  318:  EndThread
  320:  Call     $Function_80218000 ( 00000064 00000014 )
  334:  Wait     0000001E 
  340:  Call     PlaySoundAtModel 	( 0000001F 000001E2 00000000 )
  358:  Thread
  360:  	SetGroup 00000000 
  36C:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  388:  EndThread
  390:  Call     $Function_80218000 ( 00000046 00000014 )
  3A4:  Wait     00000014 
  3B0:  Call     PlaySoundAtModel 	( 00000019 000001E2 00000000 )
  3C8:  Thread
  3D0:  	SetGroup 00000000 
  3DC:  	Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.0] )
  3F8:  EndThread
  400:  Call     $Function_80218000 ( 00000064 00000014 )
  414:  Wait     00000014 
  420:  Call     PlaySoundAtModel 	( 0000002B 000001E2 00000000 )
  438:  Call     $Function_80218000 ( 0000003C 00000014 )
  44C:  Thread
  454:  	SetGroup 00000000 
  460:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.60058594] )
  47C:  EndThread
  484:  Wait     00000014 
  490:  Thread
  498:  	SetGroup 00000000 
  4A4:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.30078125] )
  4C0:  EndThread
  4C8:  Call     $Function_80218000 ( 0000001E 00000014 )
  4DC:  Return
  4E4:  End

#new:IntTable $IntTable_8021B5D0
00000000 00000000 00000000 00000000 00000001 00000000 00000000 00000002 
00000000 00000000 00000003 00000000 00000000 00000004 00000000 00000000 
00000004 00000000 00000000 00000004 00000000 00000000 00000004 00000000 
00000000 00000004 00000000 00000000 00000003 00000000 00000000 00000003 
00000000 00000000 00000002 00000000 00000000 00000001 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF 

#new:Script $Script_8021B6F0
    0:  UseArray $End[0] 
    C:  UseIntBuffer $IntTable_8021B5D0 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000001 
   44:  	Return
   4C:  EndIf
   54:  Get3Int  *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseIntBuffer $IntTable_8021B5D0 
   84:  	Get3Int  *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     8026BA04 ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
   BC:  Wait     00000001 
   C8:  Goto     00000000 
   D4:  Return
   DC:  End

#new:IntTable $IntTable_8021B7D4
00000000 00000002 00000000 00000000 00000007 00000000 00000000 00000009 
00000000 00000000 00000009 00000000 00000000 00000007 00000000 00000000 
00000005 00000000 00000000 00000001 00000000 00000000 00000000 00000000 
00000000 00000002 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 000000FF 000000FF 000000FF 

#new:Script $Script_8021B864
    0:  UseArray $End[0] 
    C:  UseIntBuffer $IntTable_8021B7D4 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000005 
   44:  	Return
   4C:  EndIf
   54:  Get3Int  *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseIntBuffer $IntTable_8021B7D4 
   84:  	Get3Int  *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     8026BA04 ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
   BC:  Wait     00000001 
   C8:  Goto     00000000 
   D4:  Return
   DC:  End

#new:IntTable $IntTable_8021B948
00000000 00000000 00000000 00000000 00000001 00000000 00000000 00000002 
00000000 00000000 00000003 00000000 00000000 00000004 00000000 00000000 
00000004 00000000 00000000 00000004 00000000 00000000 00000004 00000000 
00000000 00000004 00000000 00000000 00000003 00000000 00000000 00000003 
00000000 00000000 00000002 00000000 00000000 00000001 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF 

#new:Script $Script_8021BA68
    0:  UseArray $End[0] 
    C:  UseIntBuffer $IntTable_8021B948 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  Switch  *Var[0] 
   40:  	Case  ==  00000007 
   4C:  	Case  ==  0000000B 
   58:  	Default
   60:  		Return
   68:  EndSwitch
   70:  Get3Int  *Var[0] *Var[1] *Var[2] 
   84:  If  *Var[0]  ==  000000FF 
   94:  	UseIntBuffer $IntTable_8021B948 
   A0:  	Get3Int  *Var[0] *Var[1] *Var[2] 
   B4:  EndIf
   BC:  Call     8026BA04 ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
   D8:  Wait     00000001 
   E4:  Goto     00000000 
   F0:  Return
   F8:  End

#new:IntTable $IntTable_8021BB68
00000000 00000001 00000000 00000000 00000004 00000000 00000000 00000010 
00000000 00000000 00000008 00000000 00000000 00000014 00000000 00000000 
00000008 00000000 00000000 0000000C 00000000 00000000 00000006 00000000 
00000000 00000000 00000000 00000000 00000006 00000000 00000000 00000000 
00000000 00000000 00000002 00000000 00000000 00000000 00000000 00000000 
00000002 00000000 00000000 00000000 00000000 00000000 00000002 00000000 
00000000 00000000 00000000 00000000 00000002 00000000 00000000 00000000 
00000000 00000000 00000002 00000000 00000000 00000000 00000000 00000000 
00000002 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF 

#new:Script $Script_8021BC88
    0:  UseArray $End[0] 
    C:  UseIntBuffer $IntTable_8021BB68 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000003 
   44:  	Return
   4C:  EndIf
   54:  Get3Int  *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseIntBuffer $IntTable_8021BB68 
   84:  	Get3Int  *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     8026BA04 ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
   BC:  Wait     00000001 
   C8:  Goto     00000000 
   D4:  Return
   DC:  End

#new:Script $Script_8021BD6C
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpriteOffset 	( .Actor:Self 00000003 00000000 FFFFFFE2 00000000 )
   68:  Set  *Var[1]  0000001E 
   78:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
   98:  Thread
   A0:  	Set  *Var[0]  00000000 
   B0:  	Set  *Var[1]  00000000 
   C0:  	Set  *Var[2]  00000000 
   D0:  	Loop     00000050 
   DC:  		Add  *Var[0]  FFFFFFEC 
   EC:  		Call     SetSpriteRotation 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  10C:  		Wait     00000001 
  118:  	EndLoop
  120:  EndThread
  128:  Sub  *Var[0]  00000096 
  138:  Set  *Var[1]  FFFFFF38 
  148:  Sub  *Var[2]  000000C8 
  158:  Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.30078125] )
  170:  Call     JumpSpriteA 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000050 .True )
  198:  Return
  1A0:  End

#new:Script $Script_8021BF14
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpriteOffset 	( .Actor:Self 00000004 00000000 FFFFFFE8 00000000 )
   68:  Set  *Var[1]  00000018 
   78:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
   98:  Thread
   A0:  	Set  *Var[0]  00000000 
   B0:  	Set  *Var[1]  00000000 
   C0:  	Set  *Var[2]  00000000 
   D0:  	Loop     0000003C 
   DC:  		Add  *Var[0]  00000004 
   EC:  		Add  *Var[1]  FFFFFFFF 
   FC:  		Call     SetSpriteRotation 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  11C:  		Wait     00000001 
  128:  	EndLoop
  130:  EndThread
  138:  Add  *Var[0]  0000001E 
  148:  Set  *Var[1]  FFFFFF38 
  158:  Add  *Var[2]  00000096 
  168:  Call     SetSpriteJumpscale 	( .Actor:Self 00000004 *Fixed[0.5] )
  180:  Call     JumpSpriteA 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 0000003C .True )
  1A8:  Return
  1B0:  End

#new:IntTable $IntTable_8021C0CC
00000000 00000000 00000000 00000000 00000000 00000000 00000000 FFFFFFFF 
00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFE 00000000 00000000 
FFFFFFFE 00000000 00000000 FFFFFFFE 00000000 00000000 FFFFFFFE 00000000 
00000000 FFFFFFFE 00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFF 
00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF 

#new:Script $Script_8021C1EC
    0:  UseArray $End[0] 
    C:  UseIntBuffer $IntTable_8021C0CC 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000001 
   44:  	Return
   4C:  EndIf
   54:  Get3Int  *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseIntBuffer $IntTable_8021C0CC 
   84:  	Get3Int  *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     SetSpritePos 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
   C0:  Wait     00000001 
   CC:  Goto     00000000 
   D8:  Return
   E0:  End

#new:IntTable $IntTable_8021C2D4
00000000 00000000 00000000 00000000 00000000 00000000 00000000 FFFFFFFF 
00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFE 00000000 00000000 
FFFFFFFE 00000000 00000000 FFFFFFFE 00000000 00000000 FFFFFFFE 00000000 
00000000 FFFFFFFE 00000000 00000000 FFFFFFFF 00000000 00000000 FFFFFFFF 
00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF 

#new:Script $Script_8021C3F4
    0:  UseArray $End[0] 
    C:  UseIntBuffer $IntTable_8021C2D4 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  Switch  *Var[0] 
   40:  	Case  ==  00000007 
   4C:  	Case  ==  0000000B 
   58:  	Default
   60:  		Return
   68:  EndSwitch
   70:  Get3Int  *Var[0] *Var[1] *Var[2] 
   84:  If  *Var[0]  ==  000000FF 
   94:  	UseIntBuffer $IntTable_8021C2D4 
   A0:  	Get3Int  *Var[0] *Var[1] *Var[2] 
   B4:  EndIf
   BC:  Call     SetSpritePos 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
   DC:  Wait     00000001 
   E8:  Goto     00000000 
   F4:  Return
   FC:  End

#new:IntTable $IntTable_8021C4F8
00000000 00000000 00000000 00000000 FFFFFFFE 00000000 00000000 FFFFFFFC 
00000000 00000000 FFFFFFFC 00000000 00000000 FFFFFFFC 00000000 00000000 
FFFFFFFD 00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 000000FF 000000FF 000000FF 

#new:Script $Script_8021C594
    0:  UseArray $End[0] 
    C:  UseIntBuffer $IntTable_8021C4F8 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000005 
   44:  	Return
   4C:  EndIf
   54:  Get3Int  *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseIntBuffer $IntTable_8021C4F8 
   84:  	Get3Int  *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     SetSpritePos 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
   C0:  Wait     00000001 
   CC:  Goto     00000000 
   D8:  Return
   E0:  End

#new:Script $Script_8021C67C
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 0000000A 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpritePos 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
   68:  Thread
   70:  	Set  *Var[0]  00000000 
   80:  	Set  *Var[1]  00000000 
   90:  	Set  *Var[2]  00000000 
   A0:  	Loop     00000050 
   AC:  		Add  *Var[0]  FFFFFFF6 
   BC:  		Call     SetSpriteRotation 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
   DC:  		Wait     00000001 
   E8:  	EndLoop
   F0:  EndThread
   F8:  Sub  *Var[0]  00000032 
  108:  Set  *Var[1]  FFFFFF38 
  118:  Sub  *Var[2]  000000C8 
  128:  Call     SetSpriteJumpscale 	( .Actor:Self 0000000A *Fixed[0.30078125] )
  140:  Call     JumpSpriteA 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] 00000050 .True )
  168:  Return
  170:  End

#new:FloatTable $FloatTable_8021C7F4
F24A7A80 F24A7A80 F24A8E80 F24A7A80 F24A7A80 F24AA280 F24A7A80 F24A7A80 
F24AB680 F24A7A80 F24A7A80 F24ACA80 F24A7A80 F24A7A80 F24ADE80 F24A7A80 
F24A7A80 F24AF280 F24A7A80 F24A7A80 F24B0680 F24A7A80 F24A7A80 F24B1A80 
F24A7A80 F24A7A80 F24B2E80 F24A7A80 F24A7A80 F24B2E80 F24A7A80 F24A7A80 
F24B3A80 F24A7A80 F24A7A80 F24B2E80 F24A7A80 F24A7A80 F24B3A80 F24A7A80 
F24A7A80 F24B2E80 F24A7A80 F24A7A80 F24B3A80 F24A7A80 F24A7A80 F24B2E80 
F24A7A80 F24A7A80 F24B3A80 F24A7A80 F24A7A80 F24B2E80 F24A7A80 F24A7A80 
F24B3A80 F24A7A80 F24A7A80 F24B2E80 F24A7A80 F24A7A80 F24B3A80 F24A7A80 
F24A7A80 F24B2E80 F24A7A80 F24A7A80 F24B0680 F24A7A80 F24A7A80 F24ADE80 
F24A7A80 F24A7A80 F24AB680 F24A7A80 F24A7A80 F24A8E80 F24A7A80 F24A7A80 
F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 
F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 
F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 F24A7A80 
F24A7A80 000000FF 000000FF 000000FF 

#new:Script $Script_8021C9A4
    0:  UseArray $End[0] 
    C:  UseFloatBuffer $FloatTable_8021C7F4 
   18:  Set  *Var[F]  00000000 
   28:  Label    00000000 
   34:  Set  *Var[0]  *Array[0] 
   44:  If  *Var[0]  !=  00000007 
   54:  	Return
   5C:  EndIf
   64:  If  *Var[F]  ==  00000000 
   74:  	Get3Float *Var[0] *Var[1] *Var[2] 
   88:  	If  *Var[0]  ==  000000FF 
   98:  		Set  *Var[F]  00000001 
   A8:  		Set  *Var[0]  *Fixed[0.0] 
   B8:  		Set  *Var[1]  *Fixed[0.0] 
   C8:  		Set  *Var[2]  *Fixed[0.0] 
   D8:  	EndIf
   E0:  EndIf
   E8:  MulF  *Var[2]  *Fixed[-2.0] 
   F8:  Call     SetSpriteRotation 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  118:  Wait     00000001 
  124:  Goto     00000000 
  130:  Return
  138:  End

#new:Script $Script_8021CAE4
    0:  Call     GetSpriteRotation 	( .Actor:Self 00000006 *Var[2] *Var[3] *Var[4] )
   20:  Call     MakeLerp    	( *Var[4] 00000000 00000014 00000000 )
   3C:  Label    00000000 
   48:  Call     UpdateLerp  	( )
   54:  Call     SetSpriteRotation 	( .Actor:Self 00000006 *Fixed[0.0] *Fixed[0.0] *Var[0] )
   74:  Wait     00000001 
   80:  If  *Var[1]  ==  00000001 
   90:  	Goto     00000000 
   9C:  EndIf
   A4:  Return
   AC:  End

#new:Script $Script_8021CB98
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpriteOffset 	( .Actor:Self 00000006 00000000 FFFFFFC4 00000000 )
   68:  Set  *Var[1]  0000003C 
   78:  Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
   98:  Thread
   A0:  	Set  *Var[0]  00000000 
   B0:  	Set  *Var[1]  00000000 
   C0:  	Set  *Var[2]  00000000 
   D0:  	Loop     00000050 
   DC:  		Add  *Var[0]  00000008 
   EC:  		Add  *Var[1]  0000000A 
   FC:  		Call     SetSpriteRotation 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  11C:  		Wait     00000001 
  128:  	EndLoop
  130:  EndThread
  138:  Sub  *Var[0]  00000000 
  148:  Set  *Var[1]  FFFFFF38 
  158:  Add  *Var[2]  00000064 
  168:  Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.60058594] )
  180:  Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000050 .True )
  1A8:  Return
  1B0:  End

#new:Script $Script_8021CD50
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 0000000B 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpriteOffset 	( .Actor:Self 0000000B 00000000 FFFFFFC4 00000000 )
   68:  Set  *Var[1]  0000003C 
   78:  Call     SetSpritePos 	( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
   98:  Sub  *Var[0]  00000000 
   A8:  Set  *Var[1]  FFFFFF38 
   B8:  Sub  *Var[2]  000000C8 
   C8:  Call     SetSpriteJumpscale 	( .Actor:Self 0000000B *Fixed[0.40039062] )
   E0:  Call     JumpSpriteA 	( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] 00000050 .True )
  108:  Return
  110:  End

#new:FloatTable $FloatTable_8021CE68
F24A7A80 F24A7A80 F24ACA80 F24A7A80 F24A7A80 F24B1A80 F24A7A80 F24A7A80 
F24B6A80 F24A7A80 F24A7A80 F24BBA80 F24A7A80 F24A7A80 F24C0A80 F24A7A80 
F24A7A80 F24C5A80 F24A7A80 F24A7A80 F24CAA80 F24A7A80 F24A7A80 F24CFA80 
F24A7A80 F24A7A80 F24D4A80 F24A7A80 F24A7A80 F24D9A80 F24A7A80 F24A7A80 
F24DEA80 F24A7A80 F24A7A80 F24E3A80 F24A7A80 F24A7A80 F24E8A80 F24A7A80 
F24A7A80 F24EDA80 F24A7A80 F24A7A80 F24F2A80 F24A7A80 F24A7A80 F24F7A80 
F24A7A80 F24A7A80 F24FCA80 F24A7A80 F24A7A80 F24A7A80 000000FF 000000FF 
000000FF 

#new:Script $Script_8021CF4C
    0:  UseArray $End[0] 
    C:  UseFloatBuffer $FloatTable_8021CE68 
   18:  Label    00000000 
   24:  Set  *Var[0]  *Array[0] 
   34:  If  *Var[0]  !=  00000005 
   44:  	Return
   4C:  EndIf
   54:  Get3Float *Var[0] *Var[1] *Var[2] 
   68:  If  *Var[0]  ==  000000FF 
   78:  	UseFloatBuffer $FloatTable_8021CE68 
   84:  	Get3Float *Var[0] *Var[1] *Var[2] 
   98:  EndIf
   A0:  Call     SetSpriteRotation 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
   C0:  Call     SetSpriteRotation 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
   E0:  Wait     00000001 
   EC:  Goto     00000000 
   F8:  Return
  100:  End

#new:Script $Script_8021D054
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000008 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpritePos 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
   68:  Thread
   70:  	Set  *Var[0]  00000000 
   80:  	Set  *Var[1]  00000000 
   90:  	Set  *Var[2]  00000000 
   A0:  	Loop     00000050 
   AC:  		Add  *Var[0]  00000008 
   BC:  		Call     SetSpriteRotation 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
   DC:  		Wait     00000001 
   E8:  	EndLoop
   F0:  EndThread
   F8:  Sub  *Var[0]  00000096 
  108:  Set  *Var[1]  FFFFFF38 
  118:  Add  *Var[2]  00000064 
  128:  Call     SetSpriteJumpscale 	( .Actor:Self 00000008 *Fixed[0.30078125] )
  140:  Call     JumpSpriteA 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] 00000050 .True )
  168:  Return
  170:  End

#new:Script $Script_8021D1CC
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000009 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpritePos 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
   68:  Thread
   70:  	Set  *Var[0]  00000000 
   80:  	Set  *Var[1]  00000000 
   90:  	Set  *Var[2]  00000000 
   A0:  	Loop     00000050 
   AC:  		Add  *Var[0]  00000008 
   BC:  		Call     SetSpriteRotation 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
   DC:  		Wait     00000001 
   E8:  	EndLoop
   F0:  EndThread
   F8:  Sub  *Var[0]  00000032 
  108:  Set  *Var[1]  FFFFFF38 
  118:  Sub  *Var[2]  00000064 
  128:  Call     SetSpriteJumpscale 	( .Actor:Self 00000009 *Fixed[0.30078125] )
  140:  Call     JumpSpriteA 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] 00000050 .True )
  168:  Wait     00000064 
  174:  Return
  17C:  End

#new:Script $Script_8021D350
    0:  UseArray $End[0] 
    C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000007 00100000 .True )
   28:  Call     GetSpritePos 	( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
   48:  Call     SetSpriteOffset 	( .Actor:Self 00000007 00000000 FFFFFFE2 00000000 )
   68:  Set  *Var[1]  0000001E 
   78:  Call     SetSpritePos 	( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
   98:  Thread
   A0:  	Set  *Var[0]  00000000 
   B0:  	Set  *Var[1]  00000000 
   C0:  	Set  *Var[2]  00000000 
   D0:  	Loop     00000050 
   DC:  		Add  *Var[0]  00000019 
   EC:  		Add  *Var[1]  00000001 
   FC:  		Call     SetSpriteRotation 	( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
  11C:  		Wait     00000001 
  128:  	EndLoop
  130:  EndThread
  138:  Sub  *Var[0]  00000000 
  148:  Set  *Var[1]  FFFFFF38 
  158:  Add  *Var[2]  000000C8 
  168:  Call     SetSpriteJumpscale 	( .Actor:Self 00000007 *Fixed[0.30078125] )
  180:  Call     JumpSpriteA 	( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] 00000050 .True )
  1A8:  Return
  1B0:  End

#new:Script $Script_Idle_8021D508
    0:  UseArray $End[0] 
    C:  Set  *Var[A]  00000000 
   1C:  Label    00000000 
   28:  Set  *Var[0]  *Array[0] 
   38:  Switch  *Var[0] 
   44:  	Case  ==  00000000 
   50:  		Set  *Array[0]  00000001 
   60:  		Exec     $Script_8021B6F0 
   6C:  		Exec     $Script_8021C1EC 
   78:  		Exec     $Script_8021ABE4 
   84:  	Case  ==  00000001 
   90:  	Case  ==  00000002 
   9C:  		Set  *Array[0]  00000003 
   AC:  		Exec     $Script_8021BC88 
   B8:  		Exec     $Script_8021AF70 
   C4:  	Case  ==  00000003 
   D0:  	Case  ==  00000004 
   DC:  		Set  *Array[0]  00000005 
   EC:  		Exec     $Script_8021B864 
   F8:  		Exec     $Script_8021C594 
  104:  		Exec     $Script_8021AD68 
  110:  		Exec     $Script_8021CF4C 
  11C:  	Case  ==  00000005 
  128:  	Case  ==  00000006 
  134:  		Set  *Array[0]  00000007 
  144:  		Exec     $Script_8021BA68 
  150:  		Exec     $Script_8021C3F4 
  15C:  		Exec     $Script_8021C9A4 
  168:  	Case  ==  00000007 
  174:  	Case  ==  00000008 
  180:  		Call     PlaySoundAtActor 	( .Actor:Self 000003B5 )
  194:  		Set  *Array[0]  00000009 
  1A4:  		Exec     $Script_8021B0E4 
  1B0:  		Exec     $Script_8021BD6C 
  1BC:  		Exec     $Script_8021BF14 
  1C8:  		Exec     $Script_8021CB98 
  1D4:  		Exec     $Script_8021CD50 
  1E0:  		Exec     $Script_8021D350 
  1EC:  		Exec     $Script_8021D054 
  1F8:  		Exec     $Script_8021D1CC 
  204:  		Exec     $Script_8021C67C 
  210:  		Exec     $Script_8021F630 
  21C:  	Case  ==  00000009 
  228:  	Case  ==  0000000A 
  234:  		Set  *Array[0]  0000000B 
  244:  		Exec     $Script_8021BA68 
  250:  		Exec     $Script_8021C3F4 
  25C:  		Exec     $Script_8021CAE4 
  268:  	Case  ==  0000000B 
  274:  EndSwitch
  27C:  Call     GetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  29C:  Call     TranslateGroup ( 00000018 *Var[0] *Var[1] *Var[2] )
  2B8:  Call     GetSpriteRotation 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  2D8:  Call     RotateGroup 	( 00000018 *Var[0] 00000001 00000000 00000000 )
  2F8:  Call     RotateGroup 	( 00000018 *Var[1] 00000000 00000001 00000000 )
  318:  Call     RotateGroup 	( 00000018 *Var[2] 00000000 00000000 00000001 )
  338:  Call     802C9518 ( 0000000F 00000040 00000001 )
  350:  Call     802C9518 ( 00000010 00000040 00000001 )
  368:  Call     802C9518 ( 00000011 00000040 00000001 )
  380:  Call     802C9518 ( 00000012 00000040 00000001 )
  398:  Call     802C9518 ( 00000013 00000040 00000001 )
  3B0:  Call     802C9518 ( 00000014 00000040 00000001 )
  3C8:  Call     802C9518 ( 00000015 00000040 00000001 )
  3E0:  Call     802C9518 ( 00000016 00000040 00000001 )
  3F8:  Call     802C9518 ( 00000017 00000040 00000001 )
  410:  Call     GetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  430:  Call     TranslateGroup ( 00000022 *Var[0] *Var[1] *Var[2] )
  44C:  Call     GetSpriteRotation 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  46C:  Call     RotateGroup 	( 00000022 *Var[0] 00000001 00000000 00000000 )
  48C:  Call     RotateGroup 	( 00000022 *Var[1] 00000000 00000001 00000000 )
  4AC:  Call     RotateGroup 	( 00000022 *Var[2] 00000000 00000000 00000001 )
  4CC:  Call     802C9518 ( 0000001F 00000040 00000001 )
  4E4:  Call     802C9518 ( 00000020 00000040 00000001 )
  4FC:  Call     802C9518 ( 00000021 00000040 00000001 )
  514:  Call     GetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  534:  Call     TranslateGroup ( 0000001E *Var[0] *Var[1] *Var[2] )
  550:  Call     GetSpriteRotation 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  570:  Call     RotateGroup 	( 0000001E *Var[0] 00000001 00000000 00000000 )
  590:  Call     RotateGroup 	( 0000001E *Var[1] 00000000 00000001 00000000 )
  5B0:  Call     RotateGroup 	( 0000001E *Var[2] 00000000 00000000 00000001 )
  5D0:  Call     802C9518 ( 00000019 00000040 00000001 )
  5E8:  Call     802C9518 ( 0000001A 00000040 00000001 )
  600:  Call     802C9518 ( 0000001B 00000040 00000001 )
  618:  Call     802C9518 ( 0000001C 00000040 00000001 )
  630:  Call     802C9518 ( 0000001D 00000040 00000001 )
  648:  Call     GetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  668:  Call     TranslateGroup ( 0000000E *Var[0] *Var[1] *Var[2] )
  684:  Call     GetSpriteRotation 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
  6A4:  Call     RotateGroup 	( 0000000E *Var[0] 00000001 00000000 00000000 )
  6C4:  Call     RotateGroup 	( 0000000E *Var[1] 00000000 00000001 00000000 )
  6E4:  Call     RotateGroup 	( 0000000E *Var[2] 00000000 00000000 00000001 )
  704:  Call     802C9518 ( 0000000B 00000040 00000001 )
  71C:  Call     802C9518 ( 0000000C 00000040 00000001 )
  734:  Call     802C9518 ( 0000000D 00000040 00000001 )
  74C:  Call     GetSpritePos 	( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
  76C:  Call     TranslateGroup ( 0000000A *Var[0] *Var[1] *Var[2] )
  788:  Call     GetSpriteRotation 	( .Actor:Self 00000007 *Var[0] *Var[1] *Var[2] )
  7A8:  Call     RotateGroup 	( 0000000A *Var[0] 00000001 00000000 00000000 )
  7C8:  Call     RotateGroup 	( 0000000A *Var[1] 00000000 00000001 00000000 )
  7E8:  Call     RotateGroup 	( 0000000A *Var[2] 00000000 00000000 00000001 )
  808:  Call     802C9518 ( 00000009 00000040 00000001 )
  820:  Set  *Var[0]  *Array[0] 
  830:  If  *Var[0]  ==  00000009 
  840:  	Call     GetSpritePos 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
  860:  Else
  868:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  884:  	Set  *Var[1]  00000000 
  894:  EndIf
  89C:  Call     SetSpritePos 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
  8BC:  Call     TranslateGroup ( 0000002C *Var[0] *Var[1] *Var[2] )
  8D8:  Call     GetSpriteRotation 	( .Actor:Self 00000008 *Var[0] *Var[1] *Var[2] )
  8F8:  Call     RotateGroup 	( 0000002C *Var[0] 00000001 00000000 00000000 )
  918:  Call     RotateGroup 	( 0000002C *Var[1] 00000000 00000001 00000000 )
  938:  Call     RotateGroup 	( 0000002C *Var[2] 00000000 00000000 00000001 )
  958:  Call     802C9518 ( 0000002B 00000040 00000001 )
  970:  Set  *Var[0]  *Array[0] 
  980:  If  *Var[0]  ==  00000009 
  990:  	Call     GetSpritePos 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
  9B0:  Else
  9B8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  9D4:  	Set  *Var[1]  00000000 
  9E4:  EndIf
  9EC:  Call     SetSpritePos 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
  A0C:  Call     TranslateGroup ( 0000002E *Var[0] *Var[1] *Var[2] )
  A28:  Call     GetSpriteRotation 	( .Actor:Self 00000009 *Var[0] *Var[1] *Var[2] )
  A48:  Call     RotateGroup 	( 0000002E *Var[0] 00000001 00000000 00000000 )
  A68:  Call     RotateGroup 	( 0000002E *Var[1] 00000000 00000001 00000000 )
  A88:  Call     RotateGroup 	( 0000002E *Var[2] 00000000 00000000 00000001 )
  AA8:  Call     802C9518 ( 0000002D 00000040 00000001 )
  AC0:  Call     GetSpritePos 	( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
  AE0:  Call     TranslateGroup ( 00000026 *Var[0] *Var[1] *Var[2] )
  AFC:  Call     GetSpriteRotation 	( .Actor:Self 0000000B *Var[0] *Var[1] *Var[2] )
  B1C:  Call     RotateGroup 	( 00000026 *Var[0] 00000001 00000000 00000000 )
  B3C:  Call     RotateGroup 	( 00000026 *Var[1] 00000000 00000001 00000000 )
  B5C:  Call     RotateGroup 	( 00000026 *Var[2] 00000000 00000000 00000001 )
  B7C:  Call     802C9518 ( 00000023 00000040 00000001 )
  B94:  Call     802C9518 ( 00000024 00000040 00000001 )
  BAC:  Call     802C9518 ( 00000025 00000040 00000001 )
  BC4:  Call     GetSpritePos 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
  BE4:  Call     TranslateGroup ( 0000002A *Var[0] *Var[1] *Var[2] )
  C00:  Call     GetSpriteRotation 	( .Actor:Self 0000000A *Var[0] *Var[1] *Var[2] )
  C20:  Call     RotateGroup 	( 0000002A *Var[0] 00000001 00000000 00000000 )
  C40:  Call     RotateGroup 	( 0000002A *Var[1] 00000000 00000001 00000000 )
  C60:  Call     RotateGroup 	( 0000002A *Var[2] 00000000 00000000 00000001 )
  C80:  Call     802C9518 ( 00000027 00000040 00000001 )
  C98:  Call     802C9518 ( 00000028 00000040 00000001 )
  CB0:  Call     802C9518 ( 00000029 00000040 00000001 )
  CC8:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  CE0:  If  *Var[0]  !&  00000002 
  CF0:  	Call     GetActorHP  	( .Actor:Self *Var[0] )
  D04:  	Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
  D18:  	Mul  *Var[0]  00000064 
  D28:  	Div  *Var[0]  *Var[1] 
  D38:  	Switch  *Var[0] 
  D44:  		Case  ==  00000000 
  D50:  		Case  <  00000014 
  D5C:  			If  *Var[A]  >  00000014 
  D6C:  				Exec     $Script_8021E3A0 
  D78:  				Set  *Var[A]  00000000 
  D88:  			EndIf
  D90:  		Case  <  00000028 
  D9C:  			If  *Var[A]  >  00000028 
  DAC:  				Exec     $Script_8021E3A0 
  DB8:  				Set  *Var[A]  00000000 
  DC8:  			EndIf
  DD0:  		Case  <  0000003C 
  DDC:  			If  *Var[A]  >  0000003C 
  DEC:  				Exec     $Script_8021E3A0 
  DF8:  				Set  *Var[A]  00000000 
  E08:  			EndIf
  E10:  		Case  <  00000050 
  E1C:  			If  *Var[A]  >  00000050 
  E2C:  				Exec     $Script_8021E3A0 
  E38:  				Set  *Var[A]  00000000 
  E48:  			EndIf
  E50:  	EndSwitch
  E58:  	Add  *Var[A]  00000001 
  E68:  EndIf
  E70:  Wait     00000001 
  E7C:  Goto     00000000 
  E88:  Return
  E90:  End

#new:Script $Script_8021E3A0
    0:  Div  *Var[A]  00000004 
   10:  Add  *Var[A]  00000001 
   20:  Call     RandInt     	( *Var[A] *Var[3] )
   34:  Add  *Var[3]  00000001 
   44:  Wait     *Var[3] 
   50:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   6C:  Add  *Var[0]  FFFFFFF8 
   7C:  Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] 00000062 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C0:  Call     RandInt     	( *Var[A] *Var[3] )
   D4:  Add  *Var[3]  00000001 
   E4:  Wait     *Var[3] 
   F0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Add  *Var[0]  FFFFFFF4 
  11C:  Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] 00000017 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  160:  Call     RandInt     	( *Var[A] *Var[3] )
  174:  Add  *Var[3]  00000001 
  184:  Wait     *Var[3] 
  190:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1AC:  Add  *Var[0]  FFFFFFD1 
  1BC:  Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] 00000046 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  200:  Call     RandInt     	( *Var[A] *Var[3] )
  214:  Add  *Var[3]  00000001 
  224:  Wait     *Var[3] 
  230:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  24C:  Add  *Var[0]  00000028 
  25C:  Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] 00000016 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2A0:  Call     RandInt     	( *Var[A] *Var[3] )
  2B4:  Add  *Var[3]  00000001 
  2C4:  Wait     *Var[3] 
  2D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2EC:  Add  *Var[0]  FFFFFFED 
  2FC:  Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] 0000003B 00000021 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  340:  Return
  348:  End

#new:Script $Script_HandleEvent_8021E6F0
    0:  UseArray $End[0] 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     GetEventType 	( .Actor:Self *Var[0] )
   34:  Switch  *Var[0] 
   40:  	Case  ==  .Event:HitCombo
   4C:  		Set  *Array[0]  00000002 
   5C:  		Wait     00000014 
   68:  		Set  *Array[0]  00000000 
   78:  	Case  ==  .Event:Hit
   84:  		Set  *Array[0]  00000002 
   94:  		Wait     00000014 
   A0:  		Set  *Array[0]  00000000 
   B0:  	CaseOR  ==  00000017
   BC:  	CaseOR  ==  .Event:Immune
   C8:  		Set  *Array[0]  00000002 
   D8:  		Wait     00000014 
   E4:  		Set  *Array[0]  00000000 
   F4:  	EndCaseGroup
   FC:  	CaseOR  ==  .Event:Death
  108:  	CaseOR  ==  .Event:BurnDeath
  114:  		Call     8027D32C ( FFFFFF81 )
  124:  		If  *Var[0]  ==  00000024 
  134:  			Call     $Function_80218058 ( 00000000 $???_8021A8FC 00000003 )
  14C:  			Call     $Function_8021817C ( 00000003 00000023 00000023 00000023 00000000 00000000 00000000 00000000 00000000 00000000 )
  180:  		EndIf
  188:  		Set  *Array[0]  00000002 
  198:  		Wait     00000014 
  1A4:  		If  *Var[0]  ==  00000024 
  1B4:  			Call     $Function_80218058 ( 00000000 $???_8021A8FC 00000000 )
  1CC:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E8:  			Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  200:  			DivF  *Var[3]  *Fixed[2.0] 
  210:  			AddF  *Var[1]  *Var[3] 
  220:  			AddF  *Var[2]  *Fixed[5.0] 
  230:  			DivF  *Var[3]  *Fixed[10.0] 
  240:  			Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  284:  			Wait     00000005 
  290:  			Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  		EndIf
  2DC:  		Call     SayMessage  	( 000C0106 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Oh, no!! That costume was perfect!! Bowser loved i ...
  2FC:  		Wait     0000001E 
  308:  		Set  *Array[0]  00000008 
  318:  		Label    00000014 
  324:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  33C:  		Wait     00000001 
  348:  		If  *Var[0]  !&  00000001 
  358:  			Goto     00000014 
  364:  		EndIf
  36C:  		Wait     00000014 
  378:  		ExecWait $Script_80222C44 
  384:  		Call     GetEnemyMaxHP 	( .Actor:Self *Var[0] )
  398:  		Call     SetEnemyHP  	( .Actor:Self *Var[0] )
  3AC:  		Return
  3B4:  	EndCaseGroup
  3BC:  	CaseOR  ==  .Event:BurnContact
  3C8:  	CaseOR  ==  .Event:BurnHit
  3D4:  		Call     $Function_80218058 ( 00000000 $???_8021A8FC 00000003 )
  3EC:  		Call     $Function_8021817C ( 00000003 00000023 00000023 00000023 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  		Set  *Array[0]  00000002 
  430:  		Wait     00000014 
  43C:  		Set  *Array[0]  00000000 
  44C:  		Call     $Function_80218058 ( 00000000 $???_8021A8FC 00000000 )
  464:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  		Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  498:  		DivF  *Var[3]  *Fixed[2.0] 
  4A8:  		AddF  *Var[1]  *Var[3] 
  4B8:  		AddF  *Var[2]  *Fixed[5.0] 
  4C8:  		DivF  *Var[3]  *Fixed[10.0] 
  4D8:  		Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  51C:  		Wait     00000005 
  528:  		Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  56C:  	EndCaseGroup
  574:  	Default
  57C:  EndSwitch
  584:  Call     UseIdleAnimation 	( .Actor:Self .True )
  598:  Return
  5A0:  End

#new:Script $Script_TakeTurn_8021EC98
    0:  UseArray $End[0] 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   34:  Thread
   3C:  	Loop     00000004 
   48:  		Call     $Function_80218000 ( 00000100 00000003 )
   5C:  		Wait     00000005 
   68:  	EndLoop
   70:  EndThread
   78:  Set  *Array[0]  00000004 
   88:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   9C:  Call     SetGoalToTarget 	( .Actor:Self )
   AC:  Call     AddToGoalPos 	( .Actor:Self 00000046 00000000 00000000 )
   C8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E0:  Set  *Array[0]  00000000 
   F0:  Thread
   F8:  	Call     PlaySoundAtActor 	( .Actor:Self 000020FD )
  10C:  	Wait     00000016 
  118:  	Call     PlaySoundAtActor 	( .Actor:Self 000020FE )
  12C:  EndThread
  134:  Set  *Array[0]  00000006 
  144:  Wait     00000018 
  150:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  174:  Switch  *Var[0] 
  180:  	CaseOR  ==  00000006 
  18C:  	CaseOR  ==  00000005 
  198:  		If  *Var[0]  ==  00000005 
  1A8:  			Thread
  1B0:  				Wait     0000000F 
  1BC:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  1E0:  			EndThread
  1E8:  		EndIf
  1F0:  		Wait     00000008 
  1FC:  		Thread
  204:  			Loop     00000004 
  210:  				Call     $Function_80218000 ( 00000100 00000005 )
  224:  				Wait     00000008 
  230:  			EndLoop
  238:  		EndThread
  240:  		Set  *Array[0]  00000004 
  250:  		Call     SetGoalToHome 	( .Actor:Self )
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  274:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  28C:  		Set  *Array[0]  00000000 
  29C:  		Return
  2A4:  	EndCaseGroup
  2AC:  EndSwitch
  2B4:  Call     SetGoalToTarget 	( .Actor:Self )
  2C4:  Wait     00000002 
  2D0:  Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 0000FFFF 00000000 00000001 00000040 )
  2F8:  Call     GetBattleFlags ( *Var[0] )
  308:  If  *Var[0]  &  80000000 
  318:  	Call     GetPlayerHP 	( *Var[0] )
  328:  	If  *Var[0]  !=  00000000 
  338:  		Set  *Array[0]  0000000A 
  348:  	EndIf
  350:  EndIf
  358:  Wait     00000012 
  364:  Thread
  36C:  	Loop     00000004 
  378:  		Call     $Function_80218000 ( 00000100 00000005 )
  38C:  		Wait     00000008 
  398:  	EndLoop
  3A0:  EndThread
  3A8:  Set  *Array[0]  00000004 
  3B8:  Call     SetGoalToHome 	( .Actor:Self )
  3C8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3DC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3F4:  Set  *Array[0]  00000000 
  404:  Call     UseIdleAnimation 	( .Actor:Self .True )
  418:  Call     GetPlayerHP 	( *Var[0] )
  428:  If  *Var[0]  <=  00000000 
  438:  	Return
  440:  EndIf
  448:  Call     802535B4 ( 00000000 )
  458:  Call     UseCamPreset 	( 00000013 )
  468:  Call     SetCamTarget 	( 0000001C 0000004B FFFFFF9B )
  480:  Call     SetCamOffsetZ 	( 00000000 )
  490:  Call     SetCamZoom  	( 000001F4 )
  4A0:  Call     MoveCamOver 	( 00000014 )
  4B0:  Wait     0000000F 
  4BC:  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  4D4:  Switch  *Var[0] 
  4E0:  	Case  ==  00000000 
  4EC:  		Call     SayMessage  	( 000C00FE .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Gah ha ha ha!! I am invincible! You are powerless  ...
  50C:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
  524:  	Case  ==  00000001 
  530:  		Call     SayMessage  	( 000C00FF .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % What's the matter with you?! This isn't even funny ...
  550:  		Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  568:  	Case  ==  00000002 
  574:  		Call     SayMessage  	( 000C0100 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Gah ha ha ha!!! Oh...ha ha...you're so weak... ho  ...
  594:  		Call     UseCamPreset 	( 00000013 )
  5A4:  		Call     SetCamTarget 	( 00000055 00000051 00000000 )
  5BC:  		Call     SetCamOffsetZ 	( 00000000 )
  5CC:  		Call     SetCamZoom  	( 000000F9 )
  5DC:  		Call     MoveCamOver 	( 0000000A )
  5EC:  		Wait     0000000A 
  5F8:  		Call     SayMessage  	( 000C0101 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Heh heh heh... Mario really thinks that we're Kin ...
  618:  		Wait     0000000A 
  624:  		Call     SayMessage  	( 000C0102 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Shhhh!!! Mario'll hear us!)
  644:  		Call     SetActorVar 	( .Actor:Self 00000002 00000003 )
  65C:  	Case  ==  00000003 
  668:  		Call     SayMessage  	( 000C0103 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Ugh, you're pathetic! Are you always this weak? Th ...
  688:  		Call     UseCamPreset 	( 00000013 )
  698:  		Call     SetCamTarget 	( 00000055 00000051 00000000 )
  6B0:  		Call     SetCamOffsetZ 	( 00000000 )
  6C0:  		Call     SetCamZoom  	( 000000F9 )
  6D0:  		Call     MoveCamOver 	( 0000000A )
  6E0:  		Wait     0000000A 
  6EC:  		Call     SayMessage  	( 000C0104 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Um... Red!  We've got rips in a lot of different  ...
  70C:  		Wait     0000000A 
  718:  		Call     SayMessage  	( 000C0105 .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % (Forget about it! Mario's shaking in his boots! Le ...
  738:  		Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
  750:  EndSwitch
  758:  Call     802535B4 ( 00000001 )
  768:  Return
  770:  End

#new:Script $Script_NextTurn_8021F410
    0:  UseArray $End[0] 
    C:  Call     UseIdleAnimation 	( .Actor:Self .False )
   20:  Call     GetBattlePhase ( *Var[0] )
   30:  Switch  *Var[0] 
   3C:  	Case  ==  .Phase:PlayerBegin
   48:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   60:  		If  *Var[0]  !&  00000008 
   70:  			Call     UseCamPreset 	( 00000013 )
   80:  			Call     SetCamTarget 	( FFFFFFFC 0000002E FFFFFFFE )
   98:  			Call     SetCamYaw   	( 00000018 )
   A8:  			Call     SetCamOffsetZ 	( 0000001E )
   B8:  			Call     SetCamZoom  	( 000001CD )
   C8:  			Call     MoveCamOver 	( 0000001E )
   D8:  			Wait     0000001E 
   E4:  			Call     SayMessage  	( 000C00FD .Actor:Self 00000001 FFFFFFFF FFFFFFFF ) % Gah ha ha ha!!!! I've been waiting for you, Mario! ...
  104:  			Thread
  10C:  				Call     PlaySoundAtActor 	( .Actor:Self 000020FD )
  120:  				Wait     00000016 
  12C:  				Call     PlaySoundAtActor 	( .Actor:Self 000020FE )
  140:  			EndThread
  148:  			Set  *Array[0]  00000006 
  158:  			Wait     0000001E 
  164:  			Set  *Array[0]  00000000 
  174:  			Call     802532D0 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFF )
  190:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  1A8:  			ConstOR  *Var[0] 00000008 
  1B8:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  1D0:  			Call     UseCamPreset 	( 00000002 )
  1E0:  			Wait     00000014 
  1EC:  		EndIf
  1F4:  EndSwitch
  1FC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  210:  Return
  218:  End

#new:Script $Script_8021F630
    0:  Call     UseIdleAnimation 	( .Actor:Enemy0 .False )
   14:  Call     EnableIdleScript 	( .Actor:Enemy0 00000000 )
   28:  Call     SetActorPos 	( .Actor:Enemy0 00000064 00000000 0000000A )
   44:  Call     SetAnimation 	( .Actor:Enemy0 00000001 0066031C )
   5C:  Thread
   64:  	Call     SetActorJumpscale 	( .Actor:Enemy0 *Fixed[0.40039062] )
   78:  	Call     8026F740 ( 00000200 00000002 00000000 00000000 )
   94:  	Call     SetGoalToPos 	( .Actor:Enemy0 FFFFFED4 000000FA 00000000 )
   B0:  	Call     JumpToGoal  	( .Actor:Enemy0 00000032 00000000 00000001 00000000 )
   D0:  EndThread
   D8:  Call     UseIdleAnimation 	( .Actor:Enemy1 .False )
   EC:  Call     EnableIdleScript 	( .Actor:Enemy1 00000000 )
  100:  Call     SetActorPos 	( .Actor:Enemy1 00000064 00000000 0000000A )
  11C:  Call     SetAnimation 	( .Actor:Enemy1 00000001 0066021C )
  134:  Thread
  13C:  	Call     SetActorJumpscale 	( .Actor:Enemy1 *Fixed[0.40039062] )
  150:  	Call     8026F740 ( 00000201 00000002 00000000 00000000 )
  16C:  	Call     SetGoalToPos 	( .Actor:Enemy1 FFFFFF38 000000FA 00000000 )
  188:  	Call     JumpToGoal  	( .Actor:Enemy1 00000032 00000000 00000001 00000000 )
  1A8:  EndThread
  1B0:  Call     UseIdleAnimation 	( .Actor:Enemy2 .False )
  1C4:  Call     EnableIdleScript 	( .Actor:Enemy2 00000000 )
  1D8:  Call     SetActorPos 	( .Actor:Enemy2 00000064 00000000 0000000A )
  1F4:  Call     SetAnimation 	( .Actor:Enemy2 00000001 0066001C )
  20C:  Thread
  214:  	Call     SetActorJumpscale 	( .Actor:Enemy2 *Fixed[0.40039062] )
  228:  	Call     8026F740 ( 00000202 00000002 00000000 00000000 )
  244:  	Call     SetGoalToPos 	( .Actor:Enemy2 00000000 000000FA 00000000 )
  260:  	Call     JumpToGoal  	( .Actor:Enemy2 00000032 00000000 00000001 00000000 )
  280:  EndThread
  288:  Call     UseIdleAnimation 	( .Actor:Enemy3 .False )
  29C:  Call     EnableIdleScript 	( .Actor:Enemy3 00000000 )
  2B0:  Call     SetActorPos 	( .Actor:Enemy3 00000064 00000000 0000000A )
  2CC:  Call     SetAnimation 	( .Actor:Enemy3 00000001 0066011C )
  2E4:  Thread
  2EC:  	Call     SetActorJumpscale 	( .Actor:Enemy3 *Fixed[0.40039062] )
  300:  	Call     8026F740 ( 00000203 00000002 00000000 00000000 )
  31C:  	Call     SetGoalToPos 	( .Actor:Enemy3 00000096 000000FA 00000000 )
  338:  	Call     JumpToGoal  	( .Actor:Enemy3 00000032 00000000 00000001 00000000 )
  358:  EndThread
  360:  Wait     00000064 
  36C:  Wait     00000064 
  378:  Call     EnableGroup 	( 00000018 .False )
  38C:  Call     EnableGroup 	( 0000000E .False )
  3A0:  Call     EnableGroup 	( 0000000A .False )
  3B4:  Call     EnableGroup 	( 00000022 .False )
  3C8:  Call     EnableGroup 	( 0000001E .False )
  3DC:  Call     EnableGroup 	( 0000002C .False )
  3F0:  Call     EnableGroup 	( 0000002E .False )
  404:  Call     EnableGroup 	( 00000026 .False )
  418:  Call     EnableGroup 	( 0000002A .False )
  42C:  Thread
  434:  	Wait     00000017 
  440:  	Call     PlaySoundAtActor 	( .Actor:Enemy0 00000301 )
  454:  	Wait     00000005 
  460:  	Call     PlaySoundAtActor 	( .Actor:Enemy1 00000301 )
  474:  	Wait     00000005 
  480:  	Call     PlaySoundAtActor 	( .Actor:Enemy2 00000301 )
  494:  	Wait     00000005 
  4A0:  	Call     PlaySoundAtActor 	( .Actor:Enemy3 00000301 )
  4B4:  EndThread
  4BC:  Thread
  4C4:  	Call     SetAnimation 	( .Actor:Enemy0 00000001 00660312 )
  4DC:  	Call     SetActorPos 	( .Actor:Enemy0 00000014 000000FA 00000000 )
  4F8:  	Call     SetGoalToPos 	( .Actor:Enemy0 00000014 00000000 00000000 )
  514:  	Call     SetActorJumpscale 	( .Actor:Enemy0 *Fixed[1.5] )
  528:  	Call     8026F740 ( 00000200 00000002 00000000 00000000 )
  544:  	Call     80279BEC ( 00000200 0000001E )
  558:  	Call     PlaySoundAtActor 	( .Actor:Enemy0 000003E9 )
  56C:  	Call     8026F838 ( 00000200 00000002 )
  580:  	Call     ForceHomePos 	( .Actor:Enemy0 00000014 00000000 00000000 )
  59C:  	Call     SetAnimation 	( .Actor:Enemy0 00000001 00660305 )
  5B4:  EndThread
  5BC:  Thread
  5C4:  	Wait     00000005 
  5D0:  	Call     SetAnimation 	( .Actor:Enemy1 00000001 00660212 )
  5E8:  	Call     SetActorPos 	( .Actor:Enemy1 0000003C 000000FA FFFFFFFB )
  604:  	Call     SetGoalToPos 	( .Actor:Enemy1 0000003C 00000000 FFFFFFFB )
  620:  	Call     SetActorJumpscale 	( .Actor:Enemy1 *Fixed[1.5] )
  634:  	Call     8026F740 ( 00000201 00000002 00000000 00000000 )
  650:  	Call     80279BEC ( 00000201 0000001E )
  664:  	Call     PlaySoundAtActor 	( .Actor:Enemy1 000003E9 )
  678:  	Call     8026F838 ( 00000201 00000002 )
  68C:  	Call     ForceHomePos 	( .Actor:Enemy1 0000003C 00000000 FFFFFFFB )
  6A8:  	Call     SetAnimation 	( .Actor:Enemy1 00000001 00660205 )
  6C0:  EndThread
  6C8:  Thread
  6D0:  	Wait     0000000A 
  6DC:  	Call     SetAnimation 	( .Actor:Enemy2 00000001 00660012 )
  6F4:  	Call     SetActorPos 	( .Actor:Enemy2 00000064 000000FA FFFFFFF6 )
  710:  	Call     SetGoalToPos 	( .Actor:Enemy2 00000064 00000000 FFFFFFF6 )
  72C:  	Call     SetActorJumpscale 	( .Actor:Enemy2 *Fixed[1.5] )
  740:  	Call     8026F740 ( 00000202 00000002 00000000 00000000 )
  75C:  	Call     80279BEC ( 00000202 0000001E )
  770:  	Call     PlaySoundAtActor 	( .Actor:Enemy2 000003E9 )
  784:  	Call     8026F838 ( 00000202 00000002 )
  798:  	Call     ForceHomePos 	( .Actor:Enemy2 00000064 00000000 FFFFFFF6 )
  7B4:  	Call     SetAnimation 	( .Actor:Enemy2 00000001 00660005 )
  7CC:  EndThread
  7D4:  Thread
  7DC:  	Wait     0000000F 
  7E8:  	Call     SetAnimation 	( .Actor:Enemy3 00000001 00660112 )
  800:  	Call     SetActorPos 	( .Actor:Enemy3 0000008C 000000FA FFFFFFF1 )
  81C:  	Call     SetGoalToPos 	( .Actor:Enemy3 0000008C 00000000 FFFFFFF1 )
  838:  	Call     SetActorJumpscale 	( .Actor:Enemy3 *Fixed[1.5] )
  84C:  	Call     8026F740 ( 00000203 00000002 00000000 00000000 )
  868:  	Call     80279BEC ( 00000203 0000001E )
  87C:  	Call     PlaySoundAtActor 	( .Actor:Enemy3 000003E9 )
  890:  	Call     8026F838 ( 00000203 00000002 )
  8A4:  	Call     ForceHomePos 	( .Actor:Enemy3 0000008C 00000000 FFFFFFF1 )
  8C0:  	Call     SetAnimation 	( .Actor:Enemy3 00000001 00660105 )
  8D8:  EndThread
  8E0:  Wait     0000001E 
  8EC:  Call     UseCamPreset 	( 00000013 )
  8FC:  Call     SetCamTarget 	( 00000046 0000002E 00000000 )
  914:  Call     SetCamOffsetZ 	( 00000000 )
  924:  Call     SetCamZoom  	( 00000124 )
  934:  Call     MoveCamOver 	( 00000014 )
  944:  Wait     0000001C 
  950:  Call     SetAnimation 	( .Actor:Enemy0 00000001 0066031A )
  968:  Wait     00000005 
  974:  Call     GetActorPos 	( .Actor:Enemy0 *Var[0] *Var[1] *Var[2] )
  990:  Add  *Var[0]  00000007 
  9A0:  Add  *Var[1]  0000001C 
  9B0:  Add  *Var[2]  00000005 
  9C0:  Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A04:  Call     PlaySoundAtActor 	( .Actor:Enemy0 000020F3 )
  A18:  Call     SetAnimation 	( .Actor:Enemy1 00000001 0066021A )
  A30:  Wait     00000005 
  A3C:  Call     GetActorPos 	( .Actor:Enemy1 *Var[0] *Var[1] *Var[2] )
  A58:  Add  *Var[0]  00000007 
  A68:  Add  *Var[1]  0000001C 
  A78:  Add  *Var[2]  00000005 
  A88:  Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  Call     PlaySoundAtActor 	( .Actor:Enemy1 000020F3 )
  AE0:  Call     SetAnimation 	( .Actor:Enemy2 00000001 0066001A )
  AF8:  Wait     00000005 
  B04:  Call     GetActorPos 	( .Actor:Enemy2 *Var[0] *Var[1] *Var[2] )
  B20:  Add  *Var[0]  00000007 
  B30:  Add  *Var[1]  0000001C 
  B40:  Add  *Var[2]  00000005 
  B50:  Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B94:  Call     PlaySoundAtActor 	( .Actor:Enemy2 000020F3 )
  BA8:  Call     SetAnimation 	( .Actor:Enemy3 00000001 0066011A )
  BC0:  Wait     00000005 
  BCC:  Call     GetActorPos 	( .Actor:Enemy3 *Var[0] *Var[1] *Var[2] )
  BE8:  Add  *Var[0]  00000007 
  BF8:  Add  *Var[1]  0000001C 
  C08:  Add  *Var[2]  00000005 
  C18:  Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C5C:  Call     PlaySoundAtActor 	( .Actor:Enemy3 000020F3 )
  C70:  Wait     0000001E 
  C7C:  Call     $Function_80218350 ( )
  C88:  Call     SayMessage  	( 000C0107 .Actor:Enemy1 00000001 FFFFFFFF FFFFFFFF ) % Here come the Koopa Bros.!
  CA8:  Call     SetActorFlagBits 	( .Actor:Self 00440000 .True )
  CC0:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
  CDC:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
  CF8:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .False )
  D14:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .True )
  D30:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224D84 )
  D44:  Call     BindIdle    	( .Actor:Self $Script_Idle_802239BC )
  D58:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802242FC )
  D6C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80225438 )
  D80:  Call     SetActorFlagBits 	( .Actor:Enemy0 00040000 .False )
  D98:  Call     SetSpriteFlagBits 	( .Actor:Enemy0 00000001 00020000 .False )
  DB4:  Call     HPBarToHome 	( .Actor:Enemy0 )
  DC4:  Call     SetAnimation 	( .Actor:Enemy0 00000001 00660304 )
  DDC:  Call     SetActorFlagBits 	( .Actor:Enemy1 00040000 .False )
  DF4:  Call     SetSpriteFlagBits 	( .Actor:Enemy1 00000001 00020000 .False )
  E10:  Call     HPBarToHome 	( .Actor:Enemy1 )
  E20:  Call     SetAnimation 	( .Actor:Enemy1 00000001 00660204 )
  E38:  Call     SetActorFlagBits 	( .Actor:Enemy2 00040000 .False )
  E50:  Call     SetSpriteFlagBits 	( .Actor:Enemy2 00000001 00020000 .False )
  E6C:  Call     HPBarToHome 	( .Actor:Enemy2 )
  E7C:  Call     SetAnimation 	( .Actor:Enemy2 00000001 00660004 )
  E94:  Call     SetActorFlagBits 	( .Actor:Enemy3 00040000 .False )
  EAC:  Call     SetSpriteFlagBits 	( .Actor:Enemy3 00000001 00020000 .False )
  EC8:  Call     HPBarToHome 	( .Actor:Enemy3 )
  ED8:  Call     SetAnimation 	( .Actor:Enemy3 00000001 00660104 )
  EF0:  Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
  F08:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  F20:  ConstOR  *Var[0] 00000001 
  F30:  Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  F48:  Return
  F50:  End

#new:Script $Script_80220588
    0:  If  *Var[2]  ==  00000000 
   10:  	Call     SetActorVar 	( .Actor:Self 00000005 *Var[0] )
   28:  EndIf
   30:  Set  *Var[A]  *Var[0] 
   40:  Set  *Var[B]  *Var[1] 
   50:  Set  *Var[C]  *Var[2] 
   60:  Call     UseIdleAnimation 	( *Var[A] .False )
   74:  Switch  *Var[2] 
   80:  	Case  ==  00000000 
   8C:  		Switch  *Var[A] 
   98:  			Case  ==  00000200 
   A4:  				Call     SetAnimation 	( *Var[A] 00000001 0066031B )
   BC:  			Case  ==  00000201 
   C8:  				Call     SetAnimation 	( *Var[A] 00000001 0066021B )
   E0:  			Case  ==  00000202 
   EC:  				Call     SetAnimation 	( *Var[A] 00000001 0066001B )
  104:  			Case  ==  00000203 
  110:  				Call     SetAnimation 	( *Var[A] 00000001 0066011B )
  128:  		EndSwitch
  130:  		Call     SetActorAngle 	( *Var[A] 00000000 )
  144:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  160:  		Sub  *Var[0]  00000016 
  170:  		Add  *Var[1]  00000013 
  180:  		Wait     0000000A 
  18C:  		Wait     0000001E 
  198:  		Set  *Var[0]  *Var[B] 
  1A8:  		Sub  *Var[0]  00000001 
  1B8:  		Mul  *Var[0]  00000010 
  1C8:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  1E0:  		Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
  1FC:  		Call     SetCamTarget 	( *Var[2] *Var[3] *Var[4] )
  214:  		Call     UseCamPreset 	( 00000013 )
  224:  		Call     SetCamOffsetZ 	( 00000032 )
  234:  		Call     SetCamZoom  	( 00000190 )
  244:  		Call     MoveCamOver 	( *Var[0] )
  254:  		Wait     *Var[0] 
  260:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  278:  		Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
  294:  		Set  *Var[4]  0000000F 
  2A4:  		Call     SetGoalToPos 	( *Var[A] *Var[2] *Var[3] *Var[4] )
  2C0:  		Call     AddToGoalPos 	( *Var[A] 00000000 00000000 00000000 )
  2DC:  		Switch  *Var[A] 
  2E8:  			Case  ==  00000200 
  2F4:  				Call     SetAnimation 	( *Var[A] 00000001 00660303 )
  30C:  			Case  ==  00000201 
  318:  				Call     SetAnimation 	( *Var[A] 00000001 00660203 )
  330:  			Case  ==  00000202 
  33C:  				Call     SetAnimation 	( *Var[A] 00000001 00660003 )
  354:  			Case  ==  00000203 
  360:  				Call     SetAnimation 	( *Var[A] 00000001 00660103 )
  378:  		EndSwitch
  380:  		Call     GetGoalPos  	( *Var[A] *Var[0] *Var[1] *Var[2] )
  39C:  		Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  3B8:  		If  *Var[0]  <  *Var[3] 
  3C8:  			Call     SetActorAngle 	( *Var[A] 00000000 )
  3DC:  		Else
  3E4:  			Call     SetActorAngle 	( *Var[A] 000000B4 )
  3F8:  		EndIf
  400:  		Switch  *Var[A] 
  40C:  			Case  ==  00000200 
  418:  				Call     SetAnimation 	( *Var[A] 00000001 00660310 )
  430:  			Case  ==  00000201 
  43C:  				Call     SetAnimation 	( *Var[A] 00000001 00660210 )
  454:  			Case  ==  00000202 
  460:  				Call     SetAnimation 	( *Var[A] 00000001 00660010 )
  478:  			Case  ==  00000203 
  484:  				Call     SetAnimation 	( *Var[A] 00000001 00660110 )
  49C:  		EndSwitch
  4A4:  		Wait     00000005 
  4B0:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  4C8:  		Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
  4E4:  		Set  *Var[4]  0000000F 
  4F4:  		Call     SetGoalToPos 	( *Var[A] *Var[2] *Var[3] *Var[4] )
  510:  		Set  *Var[0]  *Var[B] 
  520:  		Sub  *Var[0]  00000001 
  530:  		Mul  *Var[0]  00000012 
  540:  		Switch  *Var[B] 
  54C:  			Case  ==  00000004 
  558:  				Call     AddToGoalPos 	( *Var[A] 00000000 *Var[0] FFFFFFF6 )
  574:  			Case  ==  00000003 
  580:  				Call     AddToGoalPos 	( *Var[A] 00000000 *Var[0] FFFFFFF9 )
  59C:  			Case  ==  00000002 
  5A8:  				Call     AddToGoalPos 	( *Var[A] 00000000 *Var[0] FFFFFFFC )
  5C4:  		EndSwitch
  5CC:  		Call     AddToGoalPos 	( *Var[A] 0000000F 00000000 00000000 )
  5E8:  		Thread
  5F0:  			Wait     0000000A 
  5FC:  			Switch  *Var[A] 
  608:  				Case  ==  00000200 
  614:  					Call     SetAnimation 	( *Var[A] 00000001 00660312 )
  62C:  				Case  ==  00000201 
  638:  					Call     SetAnimation 	( *Var[A] 00000001 00660212 )
  650:  				Case  ==  00000202 
  65C:  					Call     SetAnimation 	( *Var[A] 00000001 00660012 )
  674:  				Case  ==  00000203 
  680:  					Call     SetAnimation 	( *Var[A] 00000001 00660112 )
  698:  			EndSwitch
  6A0:  		EndThread
  6A8:  		Switch  *Var[A] 
  6B4:  			Case  ==  00000200 
  6C0:  				Call     SetAnimation 	( *Var[A] 00000001 00660311 )
  6D8:  			Case  ==  00000201 
  6E4:  				Call     SetAnimation 	( *Var[A] 00000001 00660211 )
  6FC:  			Case  ==  00000202 
  708:  				Call     SetAnimation 	( *Var[A] 00000001 00660011 )
  720:  			Case  ==  00000203 
  72C:  				Call     SetAnimation 	( *Var[A] 00000001 00660111 )
  744:  		EndSwitch
  74C:  		Call     SetActorJumpscale 	( *Var[A] *Fixed[1.6005859] )
  760:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
  780:  		Call     $Function_8021837C ( *Var[A] )
  790:  		Call     PlaySoundAtActor 	( *Var[A] 000003E9 )
  7A4:  		Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  7C0:  		Sub  *Var[3]  0000000F 
  7D0:  		Call     SetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  7EC:  		Switch  *Var[A] 
  7F8:  			Case  ==  00000200 
  804:  				Call     SetAnimation 	( *Var[A] 00000001 00660304 )
  81C:  			Case  ==  00000201 
  828:  				Call     SetAnimation 	( *Var[A] 00000001 00660204 )
  840:  			Case  ==  00000202 
  84C:  				Call     SetAnimation 	( *Var[A] 00000001 00660004 )
  864:  			Case  ==  00000203 
  870:  				Call     SetAnimation 	( *Var[A] 00000001 00660104 )
  888:  		EndSwitch
  890:  		Wait     00000005 
  89C:  		Call     SetActorAngle 	( *Var[A] 00000000 )
  8B0:  		Switch  *Var[A] 
  8BC:  			Case  ==  00000200 
  8C8:  				Call     SetAnimation 	( *Var[A] 00000001 0066031B )
  8E0:  			Case  ==  00000201 
  8EC:  				Call     SetAnimation 	( *Var[A] 00000001 0066021B )
  904:  			Case  ==  00000202 
  910:  				Call     SetAnimation 	( *Var[A] 00000001 0066001B )
  928:  			Case  ==  00000203 
  934:  				Call     SetAnimation 	( *Var[A] 00000001 0066011B )
  94C:  		EndSwitch
  954:  		Call     PlaySoundAtActor 	( *Var[A] 000020F3 )
  968:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  984:  		Sub  *Var[0]  00000016 
  994:  		Add  *Var[1]  00000013 
  9A4:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9E8:  		Wait     00000014 
  9F4:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  A0C:  		If  *Var[0]  !&  00000002 
  A1C:  			Call     SayMessage  	( 000C010A *Var[A] 00000001 FFFFFFFF FFFFFFFF ) % OK, Mario! Have a taste of this!
  A3C:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  A54:  			ConstOR  *Var[0] 00000002 
  A64:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  A7C:  		EndIf
  A84:  		Wait     0000000A 
  A90:  		Switch  *Var[A] 
  A9C:  			Case  ==  00000200 
  AA8:  				Call     SetAnimation 	( *Var[A] 00000001 00660304 )
  AC0:  			Case  ==  00000201 
  ACC:  				Call     SetAnimation 	( *Var[A] 00000001 00660204 )
  AE4:  			Case  ==  00000202 
  AF0:  				Call     SetAnimation 	( *Var[A] 00000001 00660004 )
  B08:  			Case  ==  00000203 
  B14:  				Call     SetAnimation 	( *Var[A] 00000001 00660104 )
  B2C:  		EndSwitch
  B34:  		Call     SetActorFlagBits 	( *Var[A] 00040000 .True )
  B4C:  		Call     SetSpriteFlagBits 	( *Var[A] 00000001 00020000 .True )
  B68:  		Call     HPBarToHome 	( *Var[A] )
  B78:  		Call     SetActorVar 	( *Var[A] 00000001 00000003 )
  B90:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  BA8:  	CaseOR  ==  00000001 
  BB4:  	CaseOR  ==  00000002 
  BC0:  	CaseOR  ==  00000003 
  BCC:  		Switch  *Var[A] 
  BD8:  			Case  ==  00000200 
  BE4:  				Call     SetAnimation 	( *Var[A] 00000001 00660305 )
  BFC:  			Case  ==  00000201 
  C08:  				Call     SetAnimation 	( *Var[A] 00000001 00660205 )
  C20:  			Case  ==  00000202 
  C2C:  				Call     SetAnimation 	( *Var[A] 00000001 00660005 )
  C44:  			Case  ==  00000203 
  C50:  				Call     SetAnimation 	( *Var[A] 00000001 00660105 )
  C68:  		EndSwitch
  C70:  		Wait     00000032 
  C7C:  		Set  *Var[0]  *Var[B] 
  C8C:  		Sub  *Var[0]  00000001 
  C9C:  		If  *Var[C]  ==  *Var[0] 
  CAC:  			Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  CC4:  			Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
  CE0:  			Set  *Var[4]  0000000F 
  CF0:  			Call     SetGoalToPos 	( *Var[A] *Var[2] *Var[3] *Var[4] )
  D0C:  			Call     AddToGoalPos 	( *Var[A] 00000000 00000000 00000000 )
  D28:  			Switch  *Var[A] 
  D34:  				Case  ==  00000200 
  D40:  					Call     SetAnimation 	( *Var[A] 00000001 00660303 )
  D58:  				Case  ==  00000201 
  D64:  					Call     SetAnimation 	( *Var[A] 00000001 00660203 )
  D7C:  				Case  ==  00000202 
  D88:  					Call     SetAnimation 	( *Var[A] 00000001 00660003 )
  DA0:  				Case  ==  00000203 
  DAC:  					Call     SetAnimation 	( *Var[A] 00000001 00660103 )
  DC4:  			EndSwitch
  DCC:  			Call     RunToGoal   	( *Var[A] 0000000A .False )
  DE4:  			Switch  *Var[A] 
  DF0:  				Case  ==  00000200 
  DFC:  					Call     SetAnimation 	( *Var[A] 00000001 00660305 )
  E14:  				Case  ==  00000201 
  E20:  					Call     SetAnimation 	( *Var[A] 00000001 00660205 )
  E38:  				Case  ==  00000202 
  E44:  					Call     SetAnimation 	( *Var[A] 00000001 00660005 )
  E5C:  				Case  ==  00000203 
  E68:  					Call     SetAnimation 	( *Var[A] 00000001 00660105 )
  E80:  			EndSwitch
  E88:  			Call     SetActorFlagBits 	( *Var[A] 00040000 .True )
  EA0:  			Call     SetSpriteFlagBits 	( *Var[A] 00000001 00020000 .True )
  EBC:  			Call     HPBarToHome 	( *Var[A] )
  ECC:  			Call     SetActorVar 	( *Var[A] 00000001 00000006 )
  EE4:  		EndIf
  EEC:  		Set  *Var[0]  *Var[B] 
  EFC:  		Sub  *Var[0]  00000002 
  F0C:  		If  *Var[C]  ==  *Var[0] 
  F1C:  			Wait     0000000A 
  F28:  			Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  F40:  			Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
  F5C:  			Set  *Var[4]  0000000F 
  F6C:  			Call     SetGoalToPos 	( *Var[A] *Var[2] *Var[3] *Var[4] )
  F88:  			Call     AddToGoalPos 	( *Var[A] 00000000 00000012 FFFFFFFC )
  FA4:  			Switch  *Var[A] 
  FB0:  				Case  ==  00000200 
  FBC:  					Call     SetAnimation 	( *Var[A] 00000001 00660310 )
  FD4:  				Case  ==  00000201 
  FE0:  					Call     SetAnimation 	( *Var[A] 00000001 00660210 )
  FF8:  				Case  ==  00000202 
 1004:  					Call     SetAnimation 	( *Var[A] 00000001 00660010 )
 101C:  				Case  ==  00000203 
 1028:  					Call     SetAnimation 	( *Var[A] 00000001 00660110 )
 1040:  			EndSwitch
 1048:  			Wait     00000005 
 1054:  			Call     AddToGoalPos 	( *Var[A] 0000000F 00000000 00000000 )
 1070:  			Thread
 1078:  				Wait     0000000A 
 1084:  				Switch  *Var[A] 
 1090:  					Case  ==  00000200 
 109C:  						Call     SetAnimation 	( *Var[A] 00000001 00660312 )
 10B4:  					Case  ==  00000201 
 10C0:  						Call     SetAnimation 	( *Var[A] 00000001 00660212 )
 10D8:  					Case  ==  00000202 
 10E4:  						Call     SetAnimation 	( *Var[A] 00000001 00660012 )
 10FC:  					Case  ==  00000203 
 1108:  						Call     SetAnimation 	( *Var[A] 00000001 00660112 )
 1120:  				EndSwitch
 1128:  			EndThread
 1130:  			Switch  *Var[A] 
 113C:  				Case  ==  00000200 
 1148:  					Call     SetAnimation 	( *Var[A] 00000001 00660311 )
 1160:  				Case  ==  00000201 
 116C:  					Call     SetAnimation 	( *Var[A] 00000001 00660211 )
 1184:  				Case  ==  00000202 
 1190:  					Call     SetAnimation 	( *Var[A] 00000001 00660011 )
 11A8:  				Case  ==  00000203 
 11B4:  					Call     SetAnimation 	( *Var[A] 00000001 00660111 )
 11CC:  			EndSwitch
 11D4:  			Call     SetActorJumpscale 	( *Var[A] *Fixed[1.6005859] )
 11E8:  			Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
 1208:  			Call     $Function_8021837C ( *Var[A] )
 1218:  			Call     PlaySoundAtActor 	( *Var[A] 000003E9 )
 122C:  			Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
 1248:  			Sub  *Var[3]  0000000F 
 1258:  			Call     SetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
 1274:  			Switch  *Var[A] 
 1280:  				Case  ==  00000200 
 128C:  					Call     SetAnimation 	( *Var[A] 00000001 00660305 )
 12A4:  				Case  ==  00000201 
 12B0:  					Call     SetAnimation 	( *Var[A] 00000001 00660205 )
 12C8:  				Case  ==  00000202 
 12D4:  					Call     SetAnimation 	( *Var[A] 00000001 00660005 )
 12EC:  				Case  ==  00000203 
 12F8:  					Call     SetAnimation 	( *Var[A] 00000001 00660105 )
 1310:  			EndSwitch
 1318:  			Call     SetActorFlagBits 	( *Var[A] 00040000 .True )
 1330:  			Call     SetSpriteFlagBits 	( *Var[A] 00000001 00020000 .True )
 134C:  			Call     HPBarToHome 	( *Var[A] )
 135C:  			Call     SetActorVar 	( *Var[A] 00000001 00000005 )
 1374:  		EndIf
 137C:  		Set  *Var[0]  *Var[B] 
 138C:  		Sub  *Var[0]  00000003 
 139C:  		If  *Var[C]  ==  *Var[0] 
 13AC:  			Wait     0000001E 
 13B8:  			Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
 13D0:  			Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 13EC:  			Set  *Var[4]  0000000F 
 13FC:  			Call     SetGoalToPos 	( *Var[A] *Var[2] *Var[3] *Var[4] )
 1418:  			Call     AddToGoalPos 	( *Var[A] 00000000 00000024 FFFFFFF9 )
 1434:  			Switch  *Var[A] 
 1440:  				Case  ==  00000200 
 144C:  					Call     SetAnimation 	( *Var[A] 00000001 00660310 )
 1464:  				Case  ==  00000201 
 1470:  					Call     SetAnimation 	( *Var[A] 00000001 00660210 )
 1488:  				Case  ==  00000202 
 1494:  					Call     SetAnimation 	( *Var[A] 00000001 00660010 )
 14AC:  				Case  ==  00000203 
 14B8:  					Call     SetAnimation 	( *Var[A] 00000001 00660110 )
 14D0:  			EndSwitch
 14D8:  			Wait     00000005 
 14E4:  			Call     AddToGoalPos 	( *Var[A] 0000000F 00000000 00000000 )
 1500:  			Thread
 1508:  				Wait     0000000A 
 1514:  				Switch  *Var[A] 
 1520:  					Case  ==  00000200 
 152C:  						Call     SetAnimation 	( *Var[A] 00000001 00660312 )
 1544:  					Case  ==  00000201 
 1550:  						Call     SetAnimation 	( *Var[A] 00000001 00660212 )
 1568:  					Case  ==  00000202 
 1574:  						Call     SetAnimation 	( *Var[A] 00000001 00660012 )
 158C:  					Case  ==  00000203 
 1598:  						Call     SetAnimation 	( *Var[A] 00000001 00660112 )
 15B0:  				EndSwitch
 15B8:  			EndThread
 15C0:  			Switch  *Var[A] 
 15CC:  				Case  ==  00000200 
 15D8:  					Call     SetAnimation 	( *Var[A] 00000001 00660311 )
 15F0:  				Case  ==  00000201 
 15FC:  					Call     SetAnimation 	( *Var[A] 00000001 00660211 )
 1614:  				Case  ==  00000202 
 1620:  					Call     SetAnimation 	( *Var[A] 00000001 00660011 )
 1638:  				Case  ==  00000203 
 1644:  					Call     SetAnimation 	( *Var[A] 00000001 00660111 )
 165C:  			EndSwitch
 1664:  			Call     SetActorJumpscale 	( *Var[A] *Fixed[1.6005859] )
 1678:  			Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
 1698:  			Call     $Function_8021837C ( *Var[A] )
 16A8:  			Call     PlaySoundAtActor 	( *Var[A] 000003E9 )
 16BC:  			Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
 16D8:  			Sub  *Var[3]  0000000F 
 16E8:  			Call     SetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
 1704:  			Switch  *Var[A] 
 1710:  				Case  ==  00000200 
 171C:  					Call     SetAnimation 	( *Var[A] 00000001 00660305 )
 1734:  				Case  ==  00000201 
 1740:  					Call     SetAnimation 	( *Var[A] 00000001 00660205 )
 1758:  				Case  ==  00000202 
 1764:  					Call     SetAnimation 	( *Var[A] 00000001 00660005 )
 177C:  				Case  ==  00000203 
 1788:  					Call     SetAnimation 	( *Var[A] 00000001 00660105 )
 17A0:  			EndSwitch
 17A8:  			Call     SetActorFlagBits 	( *Var[A] 00040000 .True )
 17C0:  			Call     SetSpriteFlagBits 	( *Var[A] 00000001 00020000 .True )
 17DC:  			Call     HPBarToHome 	( *Var[A] )
 17EC:  			Call     SetActorVar 	( *Var[A] 00000001 00000004 )
 1804:  		EndIf
 180C:  	EndCaseGroup
 1814:  EndSwitch
 181C:  Return
 1824:  End

#new:Script $Script_80221DB4
    0:  If  *Var[2]  ==  00000000 
   10:  	Call     SetActorVar 	( .Actor:Self 00000005 *Var[0] )
   28:  EndIf
   30:  Set  *Var[A]  *Var[0] 
   40:  Set  *Var[B]  *Var[1] 
   50:  Set  *Var[C]  *Var[2] 
   60:  Set  *Var[D]  *Var[3] 
   70:  Call     UseIdleAnimation 	( *Var[A] .False )
   84:  Switch  *Var[A] 
   90:  	Case  ==  00000200 
   9C:  		Call     SetAnimation 	( *Var[A] 00000001 0066031B )
   B4:  	Case  ==  00000201 
   C0:  		Call     SetAnimation 	( *Var[A] 00000001 0066021B )
   D8:  	Case  ==  00000202 
   E4:  		Call     SetAnimation 	( *Var[A] 00000001 0066001B )
   FC:  	Case  ==  00000203 
  108:  		Call     SetAnimation 	( *Var[A] 00000001 0066011B )
  120:  EndSwitch
  128:  Wait     0000000F 
  134:  Switch  *Var[C] 
  140:  	Case  ==  FFFFFFFF 
  14C:  		Switch  *Var[A] 
  158:  			Case  ==  00000200 
  164:  				Call     SetAnimation 	( *Var[A] 00000001 00660305 )
  17C:  			Case  ==  00000201 
  188:  				Call     SetAnimation 	( *Var[A] 00000001 00660205 )
  1A0:  			Case  ==  00000202 
  1AC:  				Call     SetAnimation 	( *Var[A] 00000001 00660005 )
  1C4:  			Case  ==  00000203 
  1D0:  				Call     SetAnimation 	( *Var[A] 00000001 00660105 )
  1E8:  		EndSwitch
  1F0:  		Switch  *Var[B] 
  1FC:  			Case  ==  00000004 
  208:  				Switch  *Var[D] 
  214:  					Case  ==  00000002 
  220:  						Call     SetActorVar 	( *Var[A] 00000001 00000005 )
  238:  					Case  ==  00000001 
  244:  						Call     SetActorVar 	( *Var[A] 00000001 00000004 )
  25C:  				EndSwitch
  264:  			Case  ==  00000003 
  270:  				Call     SetActorVar 	( *Var[A] 00000001 00000005 )
  288:  		EndSwitch
  290:  	Case  ==  00000000 
  29C:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  2B4:  		Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
  2D0:  		Call     SetCamTarget 	( *Var[2] *Var[3] *Var[4] )
  2E8:  		Call     UseCamPreset 	( 00000013 )
  2F8:  		Call     SetCamOffsetZ 	( 00000032 )
  308:  		Call     SetCamZoom  	( 00000190 )
  318:  		Call     MoveCamOver 	( 0000001E )
  328:  		If  *Var[D]  ==  00000002 
  338:  			Wait     00000019 
  344:  		EndIf
  34C:  		Switch  *Var[A] 
  358:  			Case  ==  00000200 
  364:  				Call     SetAnimation 	( *Var[A] 00000001 00660310 )
  37C:  			Case  ==  00000201 
  388:  				Call     SetAnimation 	( *Var[A] 00000001 00660210 )
  3A0:  			Case  ==  00000202 
  3AC:  				Call     SetAnimation 	( *Var[A] 00000001 00660010 )
  3C4:  			Case  ==  00000203 
  3D0:  				Call     SetAnimation 	( *Var[A] 00000001 00660110 )
  3E8:  		EndSwitch
  3F0:  		Wait     00000005 
  3FC:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  414:  		Call     GetHomePos  	( *Var[0] *Var[1] *Var[2] *Var[3] )
  430:  		Set  *Var[3]  0000000F 
  440:  		Call     SetGoalToPos 	( *Var[A] *Var[1] *Var[2] *Var[3] )
  45C:  		Switch  *Var[B] 
  468:  			Case  ==  00000004 
  474:  				Call     AddToGoalPos 	( *Var[A] 00000000 00000036 FFFFFFF6 )
  490:  			Case  ==  00000003 
  49C:  				Call     AddToGoalPos 	( *Var[A] 00000000 00000024 FFFFFFF9 )
  4B8:  		EndSwitch
  4C0:  		Call     AddToGoalPos 	( *Var[A] 0000000F 00000000 00000000 )
  4DC:  		Thread
  4E4:  			Wait     0000000A 
  4F0:  			Switch  *Var[A] 
  4FC:  				Case  ==  00000200 
  508:  					Call     SetAnimation 	( *Var[A] 00000001 00660312 )
  520:  				Case  ==  00000201 
  52C:  					Call     SetAnimation 	( *Var[A] 00000001 00660212 )
  544:  				Case  ==  00000202 
  550:  					Call     SetAnimation 	( *Var[A] 00000001 00660012 )
  568:  				Case  ==  00000203 
  574:  					Call     SetAnimation 	( *Var[A] 00000001 00660112 )
  58C:  			EndSwitch
  594:  		EndThread
  59C:  		Switch  *Var[A] 
  5A8:  			Case  ==  00000200 
  5B4:  				Call     SetAnimation 	( *Var[A] 00000001 00660311 )
  5CC:  			Case  ==  00000201 
  5D8:  				Call     SetAnimation 	( *Var[A] 00000001 00660211 )
  5F0:  			Case  ==  00000202 
  5FC:  				Call     SetAnimation 	( *Var[A] 00000001 00660011 )
  614:  			Case  ==  00000203 
  620:  				Call     SetAnimation 	( *Var[A] 00000001 00660111 )
  638:  		EndSwitch
  640:  		Call     SetActorJumpscale 	( *Var[A] *Fixed[1.6005859] )
  654:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
  674:  		Call     $Function_8021837C ( *Var[A] )
  684:  		Call     PlaySoundAtActor 	( *Var[A] 000003E9 )
  698:  		Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  6B4:  		Sub  *Var[3]  0000000F 
  6C4:  		Call     SetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  6E0:  		Switch  *Var[A] 
  6EC:  			Case  ==  00000200 
  6F8:  				Call     SetAnimation 	( *Var[A] 00000001 00660304 )
  710:  			Case  ==  00000201 
  71C:  				Call     SetAnimation 	( *Var[A] 00000001 00660204 )
  734:  			Case  ==  00000202 
  740:  				Call     SetAnimation 	( *Var[A] 00000001 00660004 )
  758:  			Case  ==  00000203 
  764:  				Call     SetAnimation 	( *Var[A] 00000001 00660104 )
  77C:  		EndSwitch
  784:  		Wait     0000000A 
  790:  		Switch  *Var[A] 
  79C:  			Case  ==  00000200 
  7A8:  				Call     SetAnimation 	( *Var[A] 00000001 0066031B )
  7C0:  			Case  ==  00000201 
  7CC:  				Call     SetAnimation 	( *Var[A] 00000001 0066021B )
  7E4:  			Case  ==  00000202 
  7F0:  				Call     SetAnimation 	( *Var[A] 00000001 0066001B )
  808:  			Case  ==  00000203 
  814:  				Call     SetAnimation 	( *Var[A] 00000001 0066011B )
  82C:  		EndSwitch
  834:  		Call     PlaySoundAtActor 	( *Var[A] 000020F3 )
  848:  		Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
  864:  		Sub  *Var[0]  00000016 
  874:  		Add  *Var[1]  00000013 
  884:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8C8:  		Wait     0000001E 
  8D4:  		Call     SetActorFlagBits 	( *Var[A] 00040000 .True )
  8EC:  		Call     SetSpriteFlagBits 	( *Var[A] 00000001 00020000 .True )
  908:  		Call     HPBarToHome 	( *Var[A] )
  918:  		Call     SetActorVar 	( *Var[A] 00000001 00000003 )
  930:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  948:  		ConstOR  *Var[0] 00000100 
  958:  		Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  970:  	Case  ==  00000001 
  97C:  		Switch  *Var[A] 
  988:  			Case  ==  00000200 
  994:  				Call     SetAnimation 	( *Var[A] 00000001 00660310 )
  9AC:  			Case  ==  00000201 
  9B8:  				Call     SetAnimation 	( *Var[A] 00000001 00660210 )
  9D0:  			Case  ==  00000202 
  9DC:  				Call     SetAnimation 	( *Var[A] 00000001 00660010 )
  9F4:  			Case  ==  00000203 
  A00:  				Call     SetAnimation 	( *Var[A] 00000001 00660110 )
  A18:  		EndSwitch
  A20:  		Wait     00000005 
  A2C:  		Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  A44:  		Call     GetHomePos  	( *Var[0] *Var[1] *Var[2] *Var[3] )
  A60:  		Set  *Var[3]  0000000F 
  A70:  		Call     SetGoalToPos 	( *Var[A] *Var[1] *Var[2] *Var[3] )
  A8C:  		Call     AddToGoalPos 	( *Var[A] 00000000 00000024 FFFFFFF9 )
  AA8:  		Call     AddToGoalPos 	( *Var[A] 0000000F 00000000 00000000 )
  AC4:  		Thread
  ACC:  			Wait     0000000A 
  AD8:  			Switch  *Var[A] 
  AE4:  				Case  ==  00000200 
  AF0:  					Call     SetAnimation 	( *Var[A] 00000001 00660312 )
  B08:  				Case  ==  00000201 
  B14:  					Call     SetAnimation 	( *Var[A] 00000001 00660212 )
  B2C:  				Case  ==  00000202 
  B38:  					Call     SetAnimation 	( *Var[A] 00000001 00660012 )
  B50:  				Case  ==  00000203 
  B5C:  					Call     SetAnimation 	( *Var[A] 00000001 00660112 )
  B74:  			EndSwitch
  B7C:  		EndThread
  B84:  		Switch  *Var[A] 
  B90:  			Case  ==  00000200 
  B9C:  				Call     SetAnimation 	( *Var[A] 00000001 00660311 )
  BB4:  			Case  ==  00000201 
  BC0:  				Call     SetAnimation 	( *Var[A] 00000001 00660211 )
  BD8:  			Case  ==  00000202 
  BE4:  				Call     SetAnimation 	( *Var[A] 00000001 00660011 )
  BFC:  			Case  ==  00000203 
  C08:  				Call     SetAnimation 	( *Var[A] 00000001 00660111 )
  C20:  		EndSwitch
  C28:  		Call     SetActorJumpscale 	( *Var[A] *Fixed[1.6005859] )
  C3C:  		Call     JumpToGoal  	( *Var[A] 00000014 00000000 00000000 00000000 )
  C5C:  		Call     $Function_8021837C ( *Var[A] )
  C6C:  		Call     PlaySoundAtActor 	( *Var[A] 000003E9 )
  C80:  		Call     GetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  C9C:  		Sub  *Var[3]  0000000F 
  CAC:  		Call     SetActorPos 	( *Var[A] *Var[3] *Var[4] *Var[5] )
  CC8:  		Switch  *Var[A] 
  CD4:  			Case  ==  00000200 
  CE0:  				Call     SetAnimation 	( *Var[A] 00000001 00660304 )
  CF8:  			Case  ==  00000201 
  D04:  				Call     SetAnimation 	( *Var[A] 00000001 00660204 )
  D1C:  			Case  ==  00000202 
  D28:  				Call     SetAnimation 	( *Var[A] 00000001 00660004 )
  D40:  			Case  ==  00000203 
  D4C:  				Call     SetAnimation 	( *Var[A] 00000001 00660104 )
  D64:  		EndSwitch
  D6C:  		Wait     0000000A 
  D78:  		Switch  *Var[A] 
  D84:  			Case  ==  00000200 
  D90:  				Call     SetAnimation 	( *Var[A] 00000001 00660305 )
  DA8:  			Case  ==  00000201 
  DB4:  				Call     SetAnimation 	( *Var[A] 00000001 00660205 )
  DCC:  			Case  ==  00000202 
  DD8:  				Call     SetAnimation 	( *Var[A] 00000001 00660005 )
  DF0:  			Case  ==  00000203 
  DFC:  				Call     SetAnimation 	( *Var[A] 00000001 00660105 )
  E14:  		EndSwitch
  E1C:  		Call     SetActorFlagBits 	( *Var[A] 00040000 .True )
  E34:  		Call     SetSpriteFlagBits 	( *Var[A] 00000001 00020000 .True )
  E50:  		Call     HPBarToHome 	( *Var[A] )
  E60:  		Call     SetActorVar 	( *Var[A] 00000001 00000004 )
  E78:  EndSwitch
  E80:  Return
  E88:  End

#new:Script $Script_80222C44
    0:  Set  *Var[A]  00000000 
   10:  Call     8026E2CC ( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorVar 	( *Var[0] 00000001 *Var[1] )
   64:  If  *Var[1]  ==  00000000 
   74:  	Call     GetStatusFlags ( *Var[0] *Var[1] )
   88:  	If  *Var[1]  ==  00000000 
   98:  		If  *Var[A]  ==  00000000 
   A8:  			Call     SetActorVar 	( .Actor:Self 00000004 *Var[0] )
   C0:  		EndIf
   C8:  		Add  *Var[A]  00000001 
   D8:  	EndIf
   E0:  EndIf
   E8:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   FC:  If  *Var[0]  !=  FFFFFFFF 
  10C:  	Goto     00000000 
  118:  EndIf
  120:  Switch  *Var[A] 
  12C:  	Case  ==  00000000 
  138:  		Return
  140:  	Case  ==  00000001 
  14C:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  164:  		ConstOR  *Var[0] 00000200 
  174:  		Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  18C:  		Return
  194:  EndSwitch
  19C:  Call     SetActorVar 	( .Actor:Self 00000003 *Var[A] )
  1B4:  Set  *Flag[00]  00000000 
  1C4:  Set  *Var[B]  *Var[A] 
  1D4:  Sub  *Var[B]  00000001 
  1E4:  Call     8026E2CC ( 00008002 )
  1F4:  Call     InitTargetIterator 	( )
  200:  Label    00000001 
  20C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  220:  Call     GetActorVar 	( *Var[0] 00000001 *Var[1] )
  238:  If  *Var[1]  ==  00000000 
  248:  	Call     GetStatusFlags ( *Var[0] *Var[1] )
  25C:  	If  *Var[1]  ==  00000000 
  26C:  		Set  *Var[1]  *Var[A] 
  27C:  		Set  *Var[2]  *Var[B] 
  28C:  		Exec     $Script_80220588 
  298:  		Sub  *Var[B]  00000001 
  2A8:  	EndIf
  2B0:  EndIf
  2B8:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  2CC:  If  *Var[0]  !=  FFFFFFFF 
  2DC:  	Goto     00000001 
  2E8:  EndIf
  2F0:  Call     802535B4 ( 00000000 )
  300:  Label    00000002 
  30C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  324:  Wait     00000001 
  330:  If  *Var[0]  ==  00000003 
  340:  	Goto     00000002 
  34C:  EndIf
  354:  Call     802535B4 ( 00000001 )
  364:  Call     SetActorFlagBits 	( .Actor:Self 02000000 .True )
  37C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .False )
  398:  Set  *Var[0]  *Var[A] 
  3A8:  Mul  *Var[0]  00000012 
  3B8:  Add  *Var[0]  00000014 
  3C8:  Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFFC *Var[0] )
  3E4:  Call     8027D810 ( FFFFFF81 *Var[0] 0000002D )
  3FC:  Call     SetActorType 	( FFFFFF81 0000009A )
  410:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  428:  Call     GetActorPos 	( *Var[1] *Var[2] *Var[3] *Var[4] )
  444:  Call     SetActorPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
  460:  Set  *Var[A]  00000000 
  470:  ExecWait $Script_80223870 
  47C:  Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  494:  Return
  49C:  End

#new:Script $Script_802230E8
    0:  Set  *Var[A]  00000000 
   10:  Call     8026E2CC ( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorVar 	( *Var[0] 00000001 *Var[1] )
   64:  If  *Var[1]  ==  00000000 
   74:  	Call     GetStatusFlags ( *Var[0] *Var[1] )
   88:  	If  *Var[1]  ==  00000000 
   98:  		Add  *Var[A]  00000001 
   A8:  	EndIf
   B0:  EndIf
   B8:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   CC:  If  *Var[0]  !=  FFFFFFFF 
   DC:  	Goto     00000000 
   E8:  EndIf
   F0:  If  *Var[A]  ==  00000000 
  100:  	Return
  108:  EndIf
  110:  Set  *Var[3]  *Var[A] 
  120:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
  138:  Add  *Var[A]  *Var[0] 
  148:  Call     SetActorVar 	( .Actor:Self 00000003 *Var[A] )
  160:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  178:  ConstAND *Var[0] FFFFFEFF 
  188:  Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  1A0:  Set  *Var[0]  00000200 
  1B0:  Loop     00000004 
  1BC:  	Call     ActorExists 	( *Var[0] *Var[1] )
  1D0:  	If  *Var[1]  ==  00000001 
  1E0:  		Call     GetActorVar 	( *Var[0] 00000001 *Var[2] )
  1F8:  		If  *Var[2]  ==  00000003 
  208:  			Set  *Var[1]  *Var[A] 
  218:  			Set  *Var[2]  FFFFFFFF 
  228:  			Exec     $Script_80221DB4 
  234:  			BreakLoop
  23C:  		EndIf
  244:  	EndIf
  24C:  	Add  *Var[0]  00000001 
  25C:  EndLoop
  264:  Set  *Var[2]  00000000 
  274:  Call     8026E2CC ( 00008002 )
  284:  Call     InitTargetIterator 	( )
  290:  Label    00000001 
  29C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2B0:  Call     GetActorVar 	( *Var[0] 00000001 *Var[8] )
  2C8:  If  *Var[8]  ==  00000000 
  2D8:  	Set  *Var[1]  *Var[A] 
  2E8:  	Exec     $Script_80221DB4 
  2F4:  	Add  *Var[2]  00000001 
  304:  EndIf
  30C:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  320:  If  *Var[0]  !=  FFFFFFFF 
  330:  	Goto     00000001 
  33C:  EndIf
  344:  Call     802535B4 ( 00000000 )
  354:  Label    00000002 
  360:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  378:  If  *Var[0]  !&  00000100 
  388:  	Wait     00000001 
  394:  	Goto     00000002 
  3A0:  EndIf
  3A8:  Call     802535B4 ( 00000001 )
  3B8:  Call     SetActorFlagBits 	( .Actor:Self 02000000 .True )
  3D0:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .False )
  3EC:  Set  *Var[0]  *Var[A] 
  3FC:  Mul  *Var[0]  00000012 
  40C:  Add  *Var[0]  00000014 
  41C:  Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFFC *Var[0] )
  438:  Call     8027D810 ( FFFFFF81 *Var[0] 0000002D )
  450:  Call     SetActorType 	( FFFFFF81 0000009A )
  464:  Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
  47C:  Call     GetActorPos 	( *Var[1] *Var[2] *Var[3] *Var[4] )
  498:  Call     SetActorPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
  4B4:  Set  *Var[A]  00000000 
  4C4:  ExecWait $Script_80223870 
  4D0:  Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  4E8:  Return
  4F0:  End

#new:Script $Script_802235E0
    0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   18:  If  *Var[0]  ==  00000002 
   28:  	Return
   30:  EndIf
   38:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   50:  ConstOR  *Var[0] 00000010 
   60:  Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   78:  Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
   90:  Set  *Var[A]  00000001 
   A0:  ExecWait $Script_80223870 
   AC:  Call     GetActorVar 	( .Actor:Self 00000003 *Var[A] )
   C4:  Set  *Var[0]  *Var[A] 
   D4:  Mul  *Var[0]  00000012 
   E4:  Add  *Var[0]  00000005 
   F4:  Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFFC *Var[0] )
  110:  Call     8027D810 ( FFFFFF81 *Var[0] 0000002D )
  128:  Return
  130:  End

#new:Script $Script_80223718
    0:  Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
   18:  Call     GetEventType 	( .Actor:Self *Var[0] )
   2C:  If  *Var[0]  !=  .Event:BurnHit
   3C:  	Set  *Var[A]  00000005 
   4C:  Else
   54:  	Set  *Var[A]  00000006 
   64:  EndIf
   6C:  ExecWait $Script_80223870 
   78:  Call     SetActorFlagBits 	( .Actor:Self 00400000 .True )
   90:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   AC:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
   C8:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   E0:  ConstAND *Var[0] FFFFFFEF 
   F0:  Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  108:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  120:  ConstAND *Var[0] FFFFFFDF 
  130:  Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  148:  Return
  150:  End

#new:Script $Script_80223870
    0:  Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
   14:  If  *Var[0]  ==  00000001 
   24:  	Exec     $Script_802257A8 *Var[1] 
   34:  EndIf
   3C:  Call     ActorExists 	( .Actor:Enemy1 *Var[0] )
   50:  If  *Var[0]  ==  00000001 
   60:  	Exec     $Script_8022E688 *Var[1] 
   70:  EndIf
   78:  Call     ActorExists 	( .Actor:Enemy2 *Var[0] )
   8C:  If  *Var[0]  ==  00000001 
   9C:  	Exec     $Script_8022B6E8 *Var[1] 
   AC:  EndIf
   B4:  Call     ActorExists 	( .Actor:Enemy3 *Var[0] )
   C8:  If  *Var[0]  ==  00000001 
   D8:  	Exec     $Script_80228748 *Var[1] 
   E8:  EndIf
   F0:  Label    00000000 
   FC:  DoesScriptExist *Var[1] *Var[0] 
  10C:  If  *Var[0]  ==  00000001 
  11C:  	Wait     00000001 
  128:  	Goto     00000000 
  134:  EndIf
  13C:  Return
  144:  End

#new:Script $Script_Idle_802239BC
    0:  Label    00000000 
    C:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   24:  If  *Var[0]  !=  00000002 
   34:  	Wait     00000001 
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
   68:  If  *Var[0]  !=  00000000 
   78:  	Call     GetActorPos 	( .Actor:Enemy0 *Var[A] *Var[E] *Var[F] )
   94:  EndIf
   9C:  Call     ActorExists 	( .Actor:Enemy1 *Var[0] )
   B0:  If  *Var[0]  !=  00000000 
   C0:  	Call     GetActorPos 	( .Actor:Enemy1 *Var[C] *Var[E] *Var[F] )
   DC:  EndIf
   E4:  Call     ActorExists 	( .Actor:Enemy2 *Var[0] )
   F8:  If  *Var[0]  !=  00000000 
  108:  	Call     GetActorPos 	( .Actor:Enemy2 *Var[D] *Var[E] *Var[F] )
  124:  EndIf
  12C:  Call     ActorExists 	( .Actor:Enemy3 *Var[0] )
  140:  If  *Var[0]  !=  00000000 
  150:  	Call     GetActorPos 	( .Actor:Enemy3 *Var[B] *Var[E] *Var[F] )
  16C:  EndIf
  174:  Label    00000001 
  180:  Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
  194:  If  *Var[0]  !=  00000000 
  1A4:  	Call     GetActorVar 	( .Actor:Enemy0 00000001 *Var[0] )
  1BC:  	Switch  *Var[0] 
  1C8:  		CaseOR  ==  00000003 
  1D4:  		CaseOR  ==  00000004 
  1E0:  		CaseOR  ==  00000005 
  1EC:  		CaseOR  ==  00000006 
  1F8:  			Call     RandInt     	( 00000002 *Var[0] )
  20C:  			Set  *Var[1]  00000001 
  21C:  			Sub  *Var[0]  *Var[1] 
  22C:  			Add  *Var[0]  *Var[A] 
  23C:  			Call     GetActorPos 	( .Actor:Enemy0 *Var[1] *Var[2] *Var[3] )
  258:  			Call     SetActorPos 	( .Actor:Enemy0 *Var[0] *Var[2] *Var[3] )
  274:  		EndCaseGroup
  27C:  	EndSwitch
  284:  EndIf
  28C:  Call     ActorExists 	( .Actor:Enemy1 *Var[0] )
  2A0:  If  *Var[0]  !=  00000000 
  2B0:  	Call     GetActorVar 	( .Actor:Enemy1 00000001 *Var[0] )
  2C8:  	Switch  *Var[0] 
  2D4:  		CaseOR  ==  00000003 
  2E0:  		CaseOR  ==  00000004 
  2EC:  		CaseOR  ==  00000005 
  2F8:  		CaseOR  ==  00000006 
  304:  			Call     RandInt     	( 00000002 *Var[0] )
  318:  			Set  *Var[1]  00000001 
  328:  			Sub  *Var[0]  *Var[1] 
  338:  			Add  *Var[0]  *Var[C] 
  348:  			Call     GetActorPos 	( .Actor:Enemy1 *Var[1] *Var[2] *Var[3] )
  364:  			Call     SetActorPos 	( .Actor:Enemy1 *Var[0] *Var[2] *Var[3] )
  380:  		EndCaseGroup
  388:  	EndSwitch
  390:  EndIf
  398:  Call     ActorExists 	( .Actor:Enemy2 *Var[0] )
  3AC:  If  *Var[0]  !=  00000000 
  3BC:  	Call     GetActorVar 	( .Actor:Enemy2 00000001 *Var[0] )
  3D4:  	Switch  *Var[0] 
  3E0:  		CaseOR  ==  00000003 
  3EC:  		CaseOR  ==  00000004 
  3F8:  		CaseOR  ==  00000005 
  404:  		CaseOR  ==  00000006 
  410:  			Call     RandInt     	( 00000002 *Var[0] )
  424:  			Set  *Var[1]  00000001 
  434:  			Sub  *Var[0]  *Var[1] 
  444:  			Add  *Var[0]  *Var[D] 
  454:  			Call     GetActorPos 	( .Actor:Enemy2 *Var[1] *Var[2] *Var[3] )
  470:  			Call     SetActorPos 	( .Actor:Enemy2 *Var[0] *Var[2] *Var[3] )
  48C:  		EndCaseGroup
  494:  	EndSwitch
  49C:  EndIf
  4A4:  Call     ActorExists 	( .Actor:Enemy3 *Var[0] )
  4B8:  If  *Var[0]  !=  00000000 
  4C8:  	Call     GetActorVar 	( .Actor:Enemy3 00000001 *Var[0] )
  4E0:  	Switch  *Var[0] 
  4EC:  		CaseOR  ==  00000003 
  4F8:  		CaseOR  ==  00000004 
  504:  		CaseOR  ==  00000005 
  510:  		CaseOR  ==  00000006 
  51C:  			Call     RandInt     	( 00000002 *Var[0] )
  530:  			Set  *Var[1]  00000001 
  540:  			Sub  *Var[0]  *Var[1] 
  550:  			Add  *Var[0]  *Var[B] 
  560:  			Call     GetActorPos 	( .Actor:Enemy3 *Var[1] *Var[2] *Var[3] )
  57C:  			Call     SetActorPos 	( .Actor:Enemy3 *Var[0] *Var[2] *Var[3] )
  598:  		EndCaseGroup
  5A0:  	EndSwitch
  5A8:  EndIf
  5B0:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  5C8:  If  *Var[0]  ==  00000002 
  5D8:  	Wait     00000002 
  5E4:  	Goto     00000001 
  5F0:  EndIf
  5F8:  Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
  60C:  If  *Var[0]  !=  00000000 
  61C:  	Call     GetActorVar 	( .Actor:Enemy0 00000001 *Var[0] )
  634:  	Switch  *Var[0] 
  640:  		CaseOR  ==  00000003 
  64C:  		CaseOR  ==  00000004 
  658:  		CaseOR  ==  00000005 
  664:  		CaseOR  ==  00000006 
  670:  			Call     GetActorPos 	( .Actor:Enemy0 *Var[1] *Var[2] *Var[3] )
  68C:  			Call     SetActorPos 	( .Actor:Enemy0 *Var[A] *Var[2] *Var[3] )
  6A8:  		EndCaseGroup
  6B0:  	EndSwitch
  6B8:  EndIf
  6C0:  Call     ActorExists 	( .Actor:Enemy1 *Var[0] )
  6D4:  If  *Var[0]  !=  00000000 
  6E4:  	Call     GetActorVar 	( .Actor:Enemy1 00000001 *Var[0] )
  6FC:  	Switch  *Var[0] 
  708:  		CaseOR  ==  00000003 
  714:  		CaseOR  ==  00000004 
  720:  		CaseOR  ==  00000005 
  72C:  		CaseOR  ==  00000006 
  738:  			Call     GetActorPos 	( .Actor:Enemy1 *Var[1] *Var[2] *Var[3] )
  754:  			Call     SetActorPos 	( .Actor:Enemy1 *Var[C] *Var[2] *Var[3] )
  770:  		EndCaseGroup
  778:  	EndSwitch
  780:  EndIf
  788:  Call     ActorExists 	( .Actor:Enemy2 *Var[0] )
  79C:  If  *Var[0]  !=  00000000 
  7AC:  	Call     GetActorVar 	( .Actor:Enemy2 00000001 *Var[0] )
  7C4:  	Switch  *Var[0] 
  7D0:  		CaseOR  ==  00000003 
  7DC:  		CaseOR  ==  00000004 
  7E8:  		CaseOR  ==  00000005 
  7F4:  		CaseOR  ==  00000006 
  800:  			Call     GetActorPos 	( .Actor:Enemy2 *Var[1] *Var[2] *Var[3] )
  81C:  			Call     SetActorPos 	( .Actor:Enemy2 *Var[D] *Var[2] *Var[3] )
  838:  		EndCaseGroup
  840:  	EndSwitch
  848:  EndIf
  850:  Call     ActorExists 	( .Actor:Enemy3 *Var[0] )
  864:  If  *Var[0]  !=  00000000 
  874:  	Call     GetActorVar 	( .Actor:Enemy3 00000001 *Var[0] )
  88C:  	Switch  *Var[0] 
  898:  		CaseOR  ==  00000003 
  8A4:  		CaseOR  ==  00000004 
  8B0:  		CaseOR  ==  00000005 
  8BC:  		CaseOR  ==  00000006 
  8C8:  			Call     GetActorPos 	( .Actor:Enemy3 *Var[1] *Var[2] *Var[3] )
  8E4:  			Call     SetActorPos 	( .Actor:Enemy3 *Var[B] *Var[2] *Var[3] )
  900:  		EndCaseGroup
  908:  	EndSwitch
  910:  EndIf
  918:  Wait     00000001 
  924:  Goto     00000000 
  930:  Return
  938:  End

#new:Script $Script_HandleEvent_802242FC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	Case  ==  .Event:HitCombo
   40:  		Call     GetBattleFlags ( *Var[0] )
   50:  		If  *Var[0]  &  00080000 
   60:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   78:  			ConstOR  *Var[0] 00000080 
   88:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   A0:  		Else
   A8:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   C0:  			ConstOR  *Var[0] 00000040 
   D0:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   E8:  		EndIf
   F0:  		Set  *Var[A]  00000002 
  100:  		ExecWait $Script_80223870 
  10C:  		Wait     0000001E 
  118:  		Call     GetLastElement ( *Var[0] )
  128:  		If  *Var[0]  &  00000220 
  138:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  150:  			ConstOR  *Var[0] 00000040 
  160:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  178:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  190:  			ConstOR  *Var[0] 00000080 
  1A0:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  1B8:  		EndIf
  1C0:  		ExecWait $Script_802235E0 
  1CC:  	Case  ==  .Event:Hit
  1D8:  		Call     GetBattleFlags ( *Var[0] )
  1E8:  		If  *Var[0]  &  00080000 
  1F8:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  210:  			ConstOR  *Var[0] 00000080 
  220:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  238:  		Else
  240:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  258:  			ConstOR  *Var[0] 00000040 
  268:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  280:  		EndIf
  288:  		Call     GetLastElement ( *Var[0] )
  298:  		If  *Var[0]  &  00000220 
  2A8:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  2C0:  			ConstOR  *Var[0] 00000040 
  2D0:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  2E8:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  300:  			ConstOR  *Var[0] 00000080 
  310:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  328:  		EndIf
  330:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  348:  		If  *Var[0]  &  00000040 
  358:  			If  *Var[0]  &  00000080 
  368:  				ExecWait $Script_80223718 
  374:  				Wait     00000014 
  380:  				Call     UseIdleAnimation 	( .Actor:Self .True )
  394:  				Return
  39C:  			EndIf
  3A4:  		EndIf
  3AC:  		Set  *Var[A]  00000002 
  3BC:  		ExecWait $Script_80223870 
  3C8:  		Wait     0000001E 
  3D4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  3EC:  		If  *Var[0]  !=  00000002 
  3FC:  			ExecWait $Script_802235E0 
  408:  		EndIf
  410:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  428:  		If  *Var[0]  &  00000010 
  438:  			If  *Var[0]  !&  00000020 
  448:  				Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  460:  				Call     SayMessage  	( 000C0109 *Var[0] 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
  480:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  498:  				ConstOR  *Var[0] 00000020 
  4A8:  				Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  4C0:  				Wait     00000014 
  4CC:  			EndIf
  4D4:  		EndIf
  4DC:  	Case  ==  .Event:BurnHit
  4E8:  		Call     GetBattleFlags ( *Var[0] )
  4F8:  		If  *Var[0]  &  00080000 
  508:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  520:  			ConstOR  *Var[0] 00000080 
  530:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  548:  		Else
  550:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  568:  			ConstOR  *Var[0] 00000040 
  578:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  590:  		EndIf
  598:  		Call     GetLastElement ( *Var[0] )
  5A8:  		If  *Var[0]  &  00000220 
  5B8:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  5D0:  			ConstOR  *Var[0] 00000040 
  5E0:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  5F8:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  610:  			ConstOR  *Var[0] 00000080 
  620:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  638:  		EndIf
  640:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  658:  		If  *Var[0]  &  00000040 
  668:  			If  *Var[0]  &  00000080 
  678:  				ExecWait $Script_80223718 
  684:  				Wait     00000014 
  690:  				Call     UseIdleAnimation 	( .Actor:Self .True )
  6A4:  				Return
  6AC:  			EndIf
  6B4:  		EndIf
  6BC:  		Set  *Var[A]  00000003 
  6CC:  		ExecWait $Script_80223870 
  6D8:  		Wait     0000001E 
  6E4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  6FC:  		If  *Var[0]  !=  00000002 
  70C:  			ExecWait $Script_802235E0 
  718:  		EndIf
  720:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  738:  		If  *Var[0]  &  00000010 
  748:  			If  *Var[0]  !&  00000020 
  758:  				Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  770:  				Call     SayMessage  	( 000C0109 *Var[0] 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
  790:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  7A8:  				ConstOR  *Var[0] 00000020 
  7B8:  				Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  7D0:  				Wait     00000014 
  7DC:  			EndIf
  7E4:  		EndIf
  7EC:  	Case  ==  00000017
  7F8:  		Set  *Var[A]  00000004 
  808:  		ExecWait $Script_80223870 
  814:  	Case  ==  .Event:Immune
  820:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  838:  		If  *Var[0]  ==  00000002 
  848:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  860:  			ConstOR  *Var[0] 00000040 
  870:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  888:  			Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  8A0:  			ConstOR  *Var[0] 00000080 
  8B0:  			Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  8C8:  		EndIf
  8D0:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  8E8:  		If  *Var[0]  &  00000040 
  8F8:  			If  *Var[0]  &  00000080 
  908:  				ExecWait $Script_80223718 
  914:  				Wait     00000014 
  920:  				Call     UseIdleAnimation 	( .Actor:Self .True )
  934:  				Return
  93C:  			EndIf
  944:  		EndIf
  94C:  		Set  *Var[A]  00000004 
  95C:  		ExecWait $Script_80223870 
  968:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  980:  		If  *Var[0]  &  00000010 
  990:  			If  *Var[0]  !&  00000020 
  9A0:  				Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
  9B8:  				Call     SayMessage  	( 000C0109 *Var[0] 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
  9D8:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  9F0:  				ConstOR  *Var[0] 00000020 
  A00:  				Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  A18:  				Wait     00000014 
  A24:  			EndIf
  A2C:  		EndIf
  A34:  	CaseOR  ==  .Event:Death
  A40:  	CaseOR  ==  .Event:BurnDeath
  A4C:  	EndCaseGroup
  A54:  	Default
  A5C:  EndSwitch
  A64:  Call     UseIdleAnimation 	( .Actor:Self .True )
  A78:  Return
  A80:  End

#new:Script $Script_TakeTurn_80224D84
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   2C:  Switch  *Var[0] 
   38:  	Case  ==  00000000 
   44:  	Case  ==  00000001 
   50:  	Case  ==  00000002 
   5C:  		Wait     0000001E 
   68:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
   80:  		Set  *Var[A]  00000000 
   90:  		ExecWait $Script_80223870 
   9C:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   B4:  		ConstAND *Var[0] FFFFFFEF 
   C4:  		Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   DC:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   F4:  		ConstAND *Var[0] FFFFFFDF 
  104:  		Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  11C:  		Call     GetActorVar 	( .Actor:Self 00000003 *Var[A] )
  134:  		Set  *Var[0]  *Var[A] 
  144:  		Mul  *Var[0]  00000012 
  154:  		Add  *Var[0]  00000014 
  164:  		Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFFC *Var[0] )
  180:  		Call     8027D810 ( FFFFFF81 *Var[0] 0000002D )
  198:  	Case  ==  00000003 
  1A4:  EndSwitch
  1AC:  Set  *Var[0]  00000200 
  1BC:  Loop     00000004 
  1C8:  	Call     ActorExists 	( *Var[0] *Var[1] )
  1DC:  	If  *Var[1]  ==  00000001 
  1EC:  		Call     GetStatusFlags ( *Var[0] *Var[1] )
  200:  		If  *Var[1]  ==  00000000 
  210:  			Call     GetActorVar 	( *Var[0] 00000001 *Var[1] )
  228:  			If  *Var[1]  ==  00000001 
  238:  				Set  *Flag[00]  00000001 
  248:  				BreakLoop
  250:  			EndIf
  258:  		EndIf
  260:  	EndIf
  268:  	Add  *Var[0]  00000001 
  278:  EndLoop
  280:  If  *Flag[00]  ==  00000001 
  290:  	Call     UseCamPreset 	( 00000013 )
  2A0:  	Call     SetCamTarget 	( 0000005A 00000000 00000000 )
  2B8:  	Call     SetCamZoom  	( 0000015E )
  2C8:  	Call     SetCamOffsetZ 	( 00000028 )
  2D8:  	Call     MoveCamOver 	( 0000000F )
  2E8:  	Wait     0000000F 
  2F4:  EndIf
  2FC:  Set  *Var[A]  00000009 
  30C:  ExecWait $Script_80223870 
  318:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  330:  Switch  *Var[0] 
  33C:  	Case  ==  00000001 
  348:  		ExecWait $Script_802230E8 
  354:  	Default
  35C:  		ExecWait $Script_80222C44 
  368:  EndSwitch
  370:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  388:  If  *Var[0]  &  00000200 
  398:  	Call     UseCamPreset 	( 00000002 )
  3A8:  	Call     MoveCamOver 	( 0000000F )
  3B8:  	Set  *Var[A]  00000008 
  3C8:  	ExecWait $Script_80223870 
  3D4:  	Label    0000007B 
  3E0:  	Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  3F8:  	If  *Var[0]  &  00000200 
  408:  		Wait     00000001 
  414:  		Goto     0000007B 
  420:  	EndIf
  428:  	Set  *Var[A]  0000000A 
  438:  	ExecWait $Script_80223870 
  444:  	Wait     00000005 
  450:  	Return
  458:  EndIf
  460:  Set  *Var[A]  0000000A 
  470:  ExecWait $Script_80223870 
  47C:  Wait     00000005 
  488:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4A0:  If  *Var[0]  ==  00000003 
  4B0:  	Return
  4B8:  EndIf
  4C0:  Call     UseCamPreset 	( 00000002 )
  4D0:  Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  4E8:  If  *Var[0]  !&  00000004 
  4F8:  	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
  510:  	Switch  *Var[0] 
  51C:  		Case  ==  00000200 
  528:  			Call     SayMessage  	( 000C0108 *Var[0] 00000001 00660314 00660304 ) % The Koopa Bros. special: super spinning attack!
  548:  		Case  ==  00000201 
  554:  			Call     SayMessage  	( 000C0108 *Var[0] 00000001 00660214 00660204 ) % The Koopa Bros. special: super spinning attack!
  574:  		Case  ==  00000202 
  580:  			Call     SayMessage  	( 000C0108 *Var[0] 00000001 00660014 00660004 ) % The Koopa Bros. special: super spinning attack!
  5A0:  		Case  ==  00000203 
  5AC:  			Call     SayMessage  	( 000C0108 *Var[0] 00000001 00660114 00660104 ) % The Koopa Bros. special: super spinning attack!
  5CC:  	EndSwitch
  5D4:  	Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  5EC:  	ConstOR  *Var[0] 00000004 
  5FC:  	Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  614:  EndIf
  61C:  Set  *Var[A]  00000007 
  62C:  ExecWait $Script_80223870 
  638:  Label    0000000A 
  644:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  65C:  Wait     00000001 
  668:  If  *Var[0]  !=  00000000 
  678:  	Goto     0000000A 
  684:  EndIf
  68C:  Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  6A4:  Return
  6AC:  End

#new:Script $Script_NextTurn_80225438
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[0] )
   28:  Call     SetEnemyHP  	( .Actor:Self *Var[0] )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  Switch  *Var[0] 
   58:  	Case  ==  .Phase:PlayerBegin
   64:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   7C:  		ConstAND *Var[0] FFFFFFBF 
   8C:  		Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   A4:  		Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   BC:  		ConstAND *Var[0] FFFFFF7F 
   CC:  		Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
   E4:  	Case  ==  .Phase:EnemyBegin
   F0:  	Case  ==  .Phase:EnemyEnd
   FC:  EndSwitch
  104:  Call     UseIdleAnimation 	( .Actor:Self .True )
  118:  Return
  120:  End

#new:DefenseTable $DefenseTable_80225560
.Element:Normal 00000001
.Element:End

#new:DefenseTable $DefenseTable_8022556C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80225578
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      45`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80225624
00800000 01000000 FB2400FF $IdleAnimations_80225670 $DefenseTable_80225560 00001000 00000000 00000000 00000000 

#new:Actor $GNinjakoopa
% stats
[Index]        9Bb 
[Level]        16`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00240000 
[StatusTable] $StatusTable_80225578 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80225624 
[Script]      $Script_Init_80227CEC 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80225670
.Status:Normal    00660304
.Status:Stone     00660300
.Status:Sleep     00660315
.Status:Poison    00660300
.Status:Stop      00660300
.Status:Static    00660300
.Status:Paralyze  00660300
.Status:Paralyze  00660300
.Status:Dizzy     00660318
.Status:Dizzy     00660318
.Status:End

#new:IdleAnimations $IdleAnimations_802256C4
.Status:Normal    00660305
.Status:Stone     00660301
.Status:Poison    00660301
.Status:Stop      00660301
.Status:Static    00660301
.Status:Paralyze  00660301
.Status:Paralyze  00660301
.Status:End

#new:IdleAnimations $IdleAnimations_80225700
.Status:Normal    0066030D
.Status:Stone     00660301
.Status:Poison    00660301
.Status:Stop      00660301
.Status:Static    00660301
.Status:Paralyze  00660301
.Status:Paralyze  00660301
.Status:End

#new:IdleAnimations $IdleAnimations_8022573C
.Status:Normal    0066030C
.Status:Stone     00660317
.Status:Sleep     00660317
.Status:Poison    00660317
.Status:Stop      00660317
.Status:Static    00660317
.Status:Paralyze  00660317
.Status:Paralyze  00660317
.Status:Dizzy     00660322
.Status:Dizzy     00660322
.Status:End

#new:IdleAnimations $IdleAnimations_80225790
.Status:Normal    0066030A
.Status:End

#new:IdleAnimations $IdleAnimations_8022579C
.Status:Normal    0066030C
.Status:End

#new:Script $Script_802257A8
    0:  Call     SetOwnerID  	( .Actor:Enemy0 )
   10:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   24:  If  *Var[0]  !=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Switch  *Var[A] 
   64:  	Case  ==  00000000 
   70:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   88:  		Switch  *Var[0] 
   94:  			Case  ==  00000003 
   A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225670 )
   B8:  				Call     SetAnimation 	( .Actor:Self 00000001 00660304 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802256C4 )
  10C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660305 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  158:  		Switch  *Var[0] 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait     00000005 
  1A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225700 )
  1B8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066030D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  204:  		Switch  *Var[0] 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var[0]  00000001 
  250:  				SetConst  *Var[1]  0066030B 
  260:  				ExecWait DoNormalHit 
  26C:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  284:  				ConstAND *Var[0] 000000C0 
  294:  				If  *Var[0]  !=  000000C0 
  2A4:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225700 )
  2BC:  					Call     SetAnimation 	( .Actor:Self 00000001 0066030D )
  2D4:  				Else
  2DC:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225790 )
  2F4:  					Call     SetAnimation 	( .Actor:Self 00000001 0066030A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  348:  		Switch  *Var[0] 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call     $Function_80218B48 ( 0000000E )
  394:  				SetConst  *Var[0]  00000001 
  3A4:  				SetConst  *Var[1]  0066030E 
  3B4:  				SetConst  *Var[2]  FFFFFFFF 
  3C4:  				ExecWait DoBurnHit 
  3D0:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  3E8:  				ConstAND *Var[0] 000000C0 
  3F8:  				If  *Var[0]  !=  000000C0 
  408:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225700 )
  420:  					Call     SetAnimation 	( .Actor:Self 00000001 0066030D )
  438:  				Else
  440:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225790 )
  458:  					Call     SetAnimation 	( .Actor:Self 00000001 0066030A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4AC:  		Switch  *Var[0] 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var[0]  00000001 
  4D4:  				SetConst  *Var[1]  00660308 
  4E4:  				ExecWait DoImmune 
  4F0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660309 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var[0]  00000001 
  53C:  				SetConst  *Var[1]  0066031F 
  54C:  				ExecWait DoImmune 
  558:  				Call     SetAnimation 	( .Actor:Self 00000001 00660320 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait     0000000F 
  58C:  	Case  ==  00000005 
  598:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  5B0:  		Switch  *Var[0] 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set  *Flag[00]  00000000 
  5FC:  				If  *Var[0]  ==  00000003 
  60C:  					Set  *Flag[00]  00000001 
  61C:  				EndIf
  624:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  638:  				Call     $Function_802185B0 ( *Var[0] *Var[1] *Var[2] )
  650:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  66C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066030A )
  684:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225790 )
  69C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  6BC:  				If  *Flag[00]  ==  00000001 
  6CC:  					Call     $Function_802183E0 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call     SetAnimation 	( .Actor:Self 00000001 0066030C )
  72C:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022579C )
  744:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  764:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  784:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  79C:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7D4:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  				Call     HPBarToHome 	( .Actor:Self )
  800:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022573C )
  818:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022556C )
  830:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  848:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  860:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  8B0:  		Switch  *Var[0] 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set  *Flag[00]  00000000 
  8FC:  				If  *Var[0]  ==  00000003 
  90C:  					Set  *Flag[00]  00000001 
  91C:  				EndIf
  924:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  938:  				Call     $Function_802185B0 ( *Var[0] *Var[1] *Var[2] )
  950:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  96C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066030E )
  984:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225790 )
  99C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  9BC:  				If  *Flag[00]  ==  00000001 
  9CC:  					Call     $Function_802183E0 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A30:  				Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  A48:  				DivF  *Var[3]  *Fixed[2.0] 
  A58:  				AddF  *Var[1]  *Var[3] 
  A68:  				AddF  *Var[2]  *Fixed[5.0] 
  A78:  				DivF  *Var[3]  *Fixed[10.0] 
  A88:  				Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066030C )
  AE4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022579C )
  AFC:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B1C:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  B3C:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  B54:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  B70:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B8C:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BA8:  				Call     HPBarToHome 	( .Actor:Self )
  BB8:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022573C )
  BD0:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022556C )
  BE8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  C00:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  C18:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  C68:  		Switch  *Var[0] 
  C74:  			Case  ==  00000001 
  C80:  				Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  C98:  				Sub  *Var[0]  00000001 
  CA8:  				If  *Var[0]  >  00000000 
  CB8:  					Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
  CD0:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait     00000014 
  CF8:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait     0000000C 
  D40:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D58:  					Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  D74:  					Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set  *Var[0]  00000000 
  DA0:  						Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop     00000004 
  DC8:  							Add  *Var[0]  00000016 
  DD8:  							Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  DF4:  							Wait     00000001 
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E2C:  					Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  E40:  					Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E5C:  					Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  E7C:  					Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  E90:  					Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  EFC:  					Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80225560 )
  F14:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80225670 )
  F2C:  					Call     SetAnimation 	( .Actor:Self 00000001 00660304 )
  F44:  					Call     8026F838 ( FFFFFF81 00000002 )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait     00000014 
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FA0:  		Switch  *Var[0] 
  FAC:  			Case  ==  00000002 
  FB8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FFC:  		Switch  *Var[0] 
 1008:  			Case  ==  00000003 
 1014:  				Call     SetAnimation 	( .Actor:Self 00000001 00660308 )
 102C:  				Wait     0000000A 
 1038:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1050:  				Switch  *Var[0] 
 105C:  					Case  ==  00000004 
 1068:  						Call     PlaySoundAtActor 	( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call     PlaySoundAtActor 	( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call     PlaySoundAtActor 	( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660307 )
 10DC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F8:  				Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1114:  				Wait     0000003C 
 1120:  				Thread
 1128:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 114C:  					Switch  *Var[0] 
 1158:  						Case  ==  00000005 
 1164:  							Wait     00000014 
 1170:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  00000006 
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[A] )
 11D0:  					Label    00000000 
 11DC:  					Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
 11F8:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 1214:  					If  *Var[0]  >  *Var[3] 
 1224:  						Wait     00000001 
 1230:  						Goto     00000000 
 123C:  					EndIf
 1244:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 1258:  					Call     SetGoalToTarget 	( .Actor:Self )
 1268:  					Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[1] )
 1280:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 *Var[1] 00000020 )
 12A8:  				EndThread
 12B0:  				Call     UseCamPreset 	( 00000002 )
 12C0:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 12D4:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 12F0:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1304:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 131C:  				Switch  *Var[0] 
 1328:  					Case  ==  00000004 
 1334:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 13AC:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 13C8:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 13E0:  				Call     8026F838 ( FFFFFF81 00000000 )
 13F4:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set  *Var[0]  00000000 
 1440:  					Loop     00000028 
 144C:  						Sub  *Var[0]  0000002D 
 145C:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 147C:  						Wait     00000001 
 1488:  					EndLoop
 1490:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 14F0:  				Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 150C:  				Set  *Var[4]  0000000F 
 151C:  				Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1538:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[B] )
 1550:  				Set  *Var[0]  *Var[B] 
 1560:  				Sub  *Var[0]  00000001 
 1570:  				Mul  *Var[0]  00000012 
 1580:  				Switch  *Var[B] 
 158C:  					Case  ==  00000004 
 1598:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1620:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1640:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1658:  				Switch  *Var[0] 
 1664:  					Case  ==  00000004 
 1670:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 168C:  						Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 0000003C )
 16A8:  						Wait     0000003C 
 16B4:  					Case  ==  00000003 
 16C0:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 16DC:  						Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 00000032 )
 16F8:  						Wait     00000032 
 1704:  					Case  ==  00000002 
 1710:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 172C:  						Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1748:  						Wait     00000028 
 1754:  				EndSwitch
 175C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660309 )
 1774:  				Wait     0000000A 
 1780:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 1794:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 17A8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066031B )
 17C0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 17DC:  				Sub  *Var[0]  00000016 
 17EC:  				Add  *Var[1]  00000013 
 17FC:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait     0000001E 
 184C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660304 )
 1864:  				Wait     00000014 
 1870:  				Call     SetActorVar 	( .Actor:Enemy4 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066031F )
 18C4:  				Wait     0000000A 
 18D0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660307 )
 18E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1904:  				Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1920:  				Wait     0000003C 
 192C:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1940:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1958:  				Switch  *Var[0] 
 1964:  					Case  ==  00000004 
 1970:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 19E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1A04:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 1A20:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1A38:  				Call     8026F838 ( FFFFFF81 00000000 )
 1A4C:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set  *Var[0]  00000000 
 1A98:  					Loop     00000028 
 1AA4:  						Sub  *Var[0]  0000002D 
 1AB4:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 1AD4:  						Wait     00000001 
 1AE0:  					EndLoop
 1AE8:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1B48:  				Switch  *Var[0] 
 1B54:  					Case  ==  00000004 
 1B60:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1B78:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1B94:  						Set  *Var[4]  0000000F 
 1BA4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1BC0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C00:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1C1C:  						Set  *Var[4]  0000000F 
 1C2C:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1C48:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C88:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1CA4:  						Set  *Var[4]  0000000F 
 1CB4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1CD0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1D08:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1D28:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1D40:  				Switch  *Var[0] 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1D74:  						Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 00000032 )
 1D90:  						Wait     00000032 
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1DC4:  						Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1DE0:  						Wait     00000028 
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1E14:  						Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1E30:  						Wait     0000001E 
 1E3C:  				EndSwitch
 1E44:  				Call     SetAnimation 	( .Actor:Self 00000001 00660320 )
 1E5C:  				Wait     0000000A 
 1E68:  				Call     SetAnimation 	( .Actor:Self 00000001 00660305 )
 1E80:  				Wait     0000001E 
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1EC0:  		Switch  *Var[0] 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1EF4:  				Set  *Var[2]  0000000F 
 1F04:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1F20:  				Call     SetAnimation 	( .Actor:Self 00000001 00660303 )
 1F38:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 1F50:  				Call     SetAnimation 	( .Actor:Self 00000001 0066031F )
 1F68:  				Wait     0000000A 
 1F74:  				Call     PlaySoundAtActor 	( .Actor:Self 00000353 )
 1F88:  				Call     SetAnimation 	( .Actor:Self 00000001 00660307 )
 1FA0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1FBC:  				Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1FD8:  				Wait     0000001E 
 1FE4:  				Thread
 1FEC:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 2010:  					Switch  *Var[0] 
 201C:  						Case  ==  00000005 
 2028:  							Wait     00000014 
 2034:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  00000006 
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label    00000000 
 2088:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 20A4:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 20C0:  					If  *Var[0]  >  *Var[3] 
 20D0:  						Wait     00000001 
 20DC:  						Goto     00000000 
 20E8:  					EndIf
 20F0:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 2104:  					Call     SetGoalToTarget 	( .Actor:Self )
 2114:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call     UseCamPreset 	( 00000002 )
 2154:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 2168:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 2184:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 2198:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 21AC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 21C8:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 21E4:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 21FC:  				Call     8026F838 ( FFFFFF81 00000000 )
 2210:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set  *Var[0]  00000000 
 225C:  					Loop     00000028 
 2268:  						Sub  *Var[0]  0000002D 
 2278:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 2298:  						Wait     00000001 
 22A4:  					EndLoop
 22AC:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2310:  				Set  *Var[2]  0000000F 
 2320:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 233C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 2350:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 2370:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 238C:  				Call     $Function_80218438 ( *Var[0] *Var[1] *Var[2] 0000001E )
 23A8:  				Wait     0000001E 
 23B4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660309 )
 23CC:  				Wait     0000000A 
 23D8:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 23EC:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 2400:  				Call     SetAnimation 	( .Actor:Self 00000001 0066031B )
 2418:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2434:  				Sub  *Var[0]  00000016 
 2444:  				Add  *Var[1]  00000013 
 2454:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait     0000001E 
 24A4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660303 )
 24BC:  				Call     SetGoalToHome 	( .Actor:Self )
 24CC:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 24E4:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 24FC:  				ConstAND *Var[0] FFFFFDFF 
 250C:  				Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End

#new:Script $Script_Init_80227CEC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802284D4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227DE0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227E48 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_802284E4 )
   50:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   6C:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   88:  Call     HPBarToHome 	( .Actor:Self )
   98:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   B4:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End

#new:Script $Script_Idle_80227DE0
    0:  Return
    8:  End

#new:IntTable $IntTable_80227DF0
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80227E48
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  0066030B 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  0066030E 
   C0:  		SetConst  *Var[2]  0066030F 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  0066030E 
  108:  		SetConst  *Var[2]  0066030F 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  0066030F 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  0066030B 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  0066030B 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  0066030B 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger
  208:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  220:  		Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  238:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022573C )
  250:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022556C )
  268:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  29C:  		If  *Var[0]  ==  00000000 
  2AC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066030B )
  2C4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait     00000004 
  2F4:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait     00000001 
  31C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait     00000001 
  344:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait     00000001 
  36C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait     00000001 
  394:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait     00000001 
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066030C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer $IntTable_80227DF0 
  3F8:  		Loop     00000016 
  404:  			Get1Int  *Var[0] 
  410:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  42C:  			Wait     00000001 
  438:  		EndLoop
  440:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017
  484:  	CaseOR  ==  .Event:Immune
  490:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4A8:  		If  *Var[0]  ==  00000000 
  4B8:  			SetConst  *Var[0]  00000001 
  4C8:  			SetConst  *Var[1]  00660308 
  4D8:  			ExecWait DoImmune 
  4E4:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  4F8:  			If  *Var[0]  ==  00000000 
  508:  				Call     SetAnimation 	( .Actor:Self 00000001 00660309 )
  520:  				Wait     0000000A 
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var[0]  00000001 
  54C:  			SetConst  *Var[1]  0066030C 
  55C:  			ExecWait DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death
  584:  		SetConst  *Var[0]  00000001 
  594:  		SetConst  *Var[1]  0066030B 
  5A4:  		ExecWait DoNormalHit 
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  0066030B 
  5D0:  		ExecWait DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus
  5F0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  608:  		If  *Var[0]  ==  00000000 
  618:  			SetConst  *Var[0]  00000001 
  628:  			SetConst  *Var[1]  00660304 
  638:  			ExecWait DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  668:  Call     UseIdleAnimation 	( .Actor:Self .True )
  67C:  Return
  684:  End

#new:Script $Script_TakeTurn_802284D4
    0:  Return
    8:  End

#new:Script $Script_NextTurn_802284E4
    0:  Return
    8:  End

PADDING: 802284F4 to 80228500 (004C16E4 to 004C16F0)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_80228500
.Element:Normal 00000001
.Element:End

#new:DefenseTable $DefenseTable_8022850C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80228518
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      30`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   60`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_802285C4
00800000 01000000 FB2400FF $IdleAnimations_80228610 $DefenseTable_80228500 00001000 00000000 00000000 00000000 

#new:Actor $RNinjakoopa
% stats
[Index]        9Cb 
[Level]        17`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00240000 
[StatusTable] $StatusTable_80228518 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802285C4 
[Script]      $Script_Init_8022AC8C 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80228610
.Status:Normal    00660104
.Status:Stone     00660100
.Status:Sleep     00660115
.Status:Poison    00660100
.Status:Stop      00660100
.Status:Static    00660100
.Status:Paralyze  00660100
.Status:Paralyze  00660100
.Status:Dizzy     00660118
.Status:Dizzy     00660118
.Status:End

#new:IdleAnimations $IdleAnimations_80228664
.Status:Normal    00660105
.Status:Stone     00660101
.Status:Poison    00660101
.Status:Stop      00660101
.Status:Static    00660101
.Status:Paralyze  00660101
.Status:Paralyze  00660101
.Status:End

#new:IdleAnimations $IdleAnimations_802286A0
.Status:Normal    0066010D
.Status:Stone     00660101
.Status:Poison    00660101
.Status:Stop      00660101
.Status:Static    00660101
.Status:Paralyze  00660101
.Status:Paralyze  00660101
.Status:End

#new:IdleAnimations $IdleAnimations_802286DC
.Status:Normal    0066010C
.Status:Stone     00660117
.Status:Sleep     00660117
.Status:Poison    00660117
.Status:Stop      00660117
.Status:Static    00660117
.Status:Paralyze  00660117
.Status:Paralyze  00660117
.Status:Dizzy     00660122
.Status:Dizzy     00660122
.Status:End

#new:IdleAnimations $IdleAnimations_80228730
.Status:Normal    0066010A
.Status:End

#new:IdleAnimations $IdleAnimations_8022873C
.Status:Normal    0066010C
.Status:End

#new:Script $Script_80228748
    0:  Call     SetOwnerID  	( .Actor:Enemy3 )
   10:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   24:  If  *Var[0]  !=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Switch  *Var[A] 
   64:  	Case  ==  00000000 
   70:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   88:  		Switch  *Var[0] 
   94:  			Case  ==  00000003 
   A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228610 )
   B8:  				Call     SetAnimation 	( .Actor:Self 00000001 00660104 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228664 )
  10C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660105 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  158:  		Switch  *Var[0] 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait     00000005 
  1A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802286A0 )
  1B8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066010D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  204:  		Switch  *Var[0] 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var[0]  00000001 
  250:  				SetConst  *Var[1]  0066010B 
  260:  				ExecWait DoNormalHit 
  26C:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  284:  				ConstAND *Var[0] 000000C0 
  294:  				If  *Var[0]  !=  000000C0 
  2A4:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802286A0 )
  2BC:  					Call     SetAnimation 	( .Actor:Self 00000001 0066010D )
  2D4:  				Else
  2DC:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228730 )
  2F4:  					Call     SetAnimation 	( .Actor:Self 00000001 0066010A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  348:  		Switch  *Var[0] 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call     $Function_80219308 ( 0000000E )
  394:  				SetConst  *Var[0]  00000001 
  3A4:  				SetConst  *Var[1]  0066010E 
  3B4:  				SetConst  *Var[2]  FFFFFFFF 
  3C4:  				ExecWait DoBurnHit 
  3D0:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  3E8:  				ConstAND *Var[0] 000000C0 
  3F8:  				If  *Var[0]  !=  000000C0 
  408:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802286A0 )
  420:  					Call     SetAnimation 	( .Actor:Self 00000001 0066010D )
  438:  				Else
  440:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228730 )
  458:  					Call     SetAnimation 	( .Actor:Self 00000001 0066010A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4AC:  		Switch  *Var[0] 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var[0]  00000001 
  4D4:  				SetConst  *Var[1]  00660108 
  4E4:  				ExecWait DoImmune 
  4F0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660109 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var[0]  00000001 
  53C:  				SetConst  *Var[1]  0066011F 
  54C:  				ExecWait DoImmune 
  558:  				Call     SetAnimation 	( .Actor:Self 00000001 00660120 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait     0000000F 
  58C:  	Case  ==  00000005 
  598:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  5B0:  		Switch  *Var[0] 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set  *Flag[00]  00000000 
  5FC:  				If  *Var[0]  ==  00000003 
  60C:  					Set  *Flag[00]  00000001 
  61C:  				EndIf
  624:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  638:  				Call     $Function_80218D70 ( *Var[0] *Var[1] *Var[2] )
  650:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  66C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066010A )
  684:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228730 )
  69C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  6BC:  				If  *Flag[00]  ==  00000001 
  6CC:  					Call     $Function_80218BA0 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call     SetAnimation 	( .Actor:Self 00000001 0066010C )
  72C:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022873C )
  744:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  764:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  784:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  79C:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7D4:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  				Call     HPBarToHome 	( .Actor:Self )
  800:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802286DC )
  818:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022850C )
  830:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  848:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  860:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  8B0:  		Switch  *Var[0] 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set  *Flag[00]  00000000 
  8FC:  				If  *Var[0]  ==  00000003 
  90C:  					Set  *Flag[00]  00000001 
  91C:  				EndIf
  924:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  938:  				Call     $Function_80218D70 ( *Var[0] *Var[1] *Var[2] )
  950:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  96C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066010E )
  984:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228730 )
  99C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  9BC:  				If  *Flag[00]  ==  00000001 
  9CC:  					Call     $Function_80218BA0 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A30:  				Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  A48:  				DivF  *Var[3]  *Fixed[2.0] 
  A58:  				AddF  *Var[1]  *Var[3] 
  A68:  				AddF  *Var[2]  *Fixed[5.0] 
  A78:  				DivF  *Var[3]  *Fixed[10.0] 
  A88:  				Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066010C )
  AE4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022873C )
  AFC:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B1C:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  B3C:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  B54:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  B70:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B8C:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BA8:  				Call     HPBarToHome 	( .Actor:Self )
  BB8:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802286DC )
  BD0:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022850C )
  BE8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  C00:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  C18:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  C68:  		Switch  *Var[0] 
  C74:  			Case  ==  00000001 
  C80:  				Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  C98:  				Sub  *Var[0]  00000001 
  CA8:  				If  *Var[0]  >  00000000 
  CB8:  					Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
  CD0:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait     00000014 
  CF8:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait     0000000C 
  D40:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D58:  					Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  D74:  					Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set  *Var[0]  00000000 
  DA0:  						Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop     00000004 
  DC8:  							Add  *Var[0]  00000016 
  DD8:  							Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  DF4:  							Wait     00000001 
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E2C:  					Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  E40:  					Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E5C:  					Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  E7C:  					Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  E90:  					Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  EFC:  					Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228500 )
  F14:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228610 )
  F2C:  					Call     SetAnimation 	( .Actor:Self 00000001 00660104 )
  F44:  					Call     8026F838 ( FFFFFF81 00000002 )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait     00000014 
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FA0:  		Switch  *Var[0] 
  FAC:  			Case  ==  00000002 
  FB8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FFC:  		Switch  *Var[0] 
 1008:  			Case  ==  00000003 
 1014:  				Call     SetAnimation 	( .Actor:Self 00000001 00660108 )
 102C:  				Wait     0000000A 
 1038:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1050:  				Switch  *Var[0] 
 105C:  					Case  ==  00000004 
 1068:  						Call     PlaySoundAtActor 	( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call     PlaySoundAtActor 	( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call     PlaySoundAtActor 	( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660107 )
 10DC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F8:  				Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1114:  				Wait     0000003C 
 1120:  				Thread
 1128:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 114C:  					Switch  *Var[0] 
 1158:  						Case  ==  00000005 
 1164:  							Wait     00000014 
 1170:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  00000006 
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[A] )
 11D0:  					Label    00000000 
 11DC:  					Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
 11F8:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 1214:  					If  *Var[0]  >  *Var[3] 
 1224:  						Wait     00000001 
 1230:  						Goto     00000000 
 123C:  					EndIf
 1244:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 1258:  					Call     SetGoalToTarget 	( .Actor:Self )
 1268:  					Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[1] )
 1280:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 *Var[1] 00000020 )
 12A8:  				EndThread
 12B0:  				Call     UseCamPreset 	( 00000002 )
 12C0:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 12D4:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 12F0:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1304:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 131C:  				Switch  *Var[0] 
 1328:  					Case  ==  00000004 
 1334:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 13AC:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 13C8:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 13E0:  				Call     8026F838 ( FFFFFF81 00000000 )
 13F4:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set  *Var[0]  00000000 
 1440:  					Loop     00000028 
 144C:  						Sub  *Var[0]  0000002D 
 145C:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 147C:  						Wait     00000001 
 1488:  					EndLoop
 1490:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 14F0:  				Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 150C:  				Set  *Var[4]  0000000F 
 151C:  				Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1538:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[B] )
 1550:  				Set  *Var[0]  *Var[B] 
 1560:  				Sub  *Var[0]  00000001 
 1570:  				Mul  *Var[0]  00000012 
 1580:  				Switch  *Var[B] 
 158C:  					Case  ==  00000004 
 1598:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1620:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1640:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1658:  				Switch  *Var[0] 
 1664:  					Case  ==  00000004 
 1670:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 168C:  						Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 0000003C )
 16A8:  						Wait     0000003C 
 16B4:  					Case  ==  00000003 
 16C0:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 16DC:  						Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 00000032 )
 16F8:  						Wait     00000032 
 1704:  					Case  ==  00000002 
 1710:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 172C:  						Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1748:  						Wait     00000028 
 1754:  				EndSwitch
 175C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660109 )
 1774:  				Wait     0000000A 
 1780:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 1794:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 17A8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066011B )
 17C0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 17DC:  				Sub  *Var[0]  00000016 
 17EC:  				Add  *Var[1]  00000013 
 17FC:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait     0000001E 
 184C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660104 )
 1864:  				Wait     00000014 
 1870:  				Call     SetActorVar 	( .Actor:Enemy4 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066011F )
 18C4:  				Wait     0000000A 
 18D0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660107 )
 18E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1904:  				Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1920:  				Wait     0000003C 
 192C:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1940:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1958:  				Switch  *Var[0] 
 1964:  					Case  ==  00000004 
 1970:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 19E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1A04:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 1A20:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1A38:  				Call     8026F838 ( FFFFFF81 00000000 )
 1A4C:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set  *Var[0]  00000000 
 1A98:  					Loop     00000028 
 1AA4:  						Sub  *Var[0]  0000002D 
 1AB4:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 1AD4:  						Wait     00000001 
 1AE0:  					EndLoop
 1AE8:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1B48:  				Switch  *Var[0] 
 1B54:  					Case  ==  00000004 
 1B60:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1B78:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1B94:  						Set  *Var[4]  0000000F 
 1BA4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1BC0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C00:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1C1C:  						Set  *Var[4]  0000000F 
 1C2C:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1C48:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C88:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1CA4:  						Set  *Var[4]  0000000F 
 1CB4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1CD0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1D08:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1D28:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1D40:  				Switch  *Var[0] 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1D74:  						Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 00000032 )
 1D90:  						Wait     00000032 
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1DC4:  						Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1DE0:  						Wait     00000028 
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1E14:  						Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1E30:  						Wait     0000001E 
 1E3C:  				EndSwitch
 1E44:  				Call     SetAnimation 	( .Actor:Self 00000001 00660120 )
 1E5C:  				Wait     0000000A 
 1E68:  				Call     SetAnimation 	( .Actor:Self 00000001 00660105 )
 1E80:  				Wait     0000001E 
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1EC0:  		Switch  *Var[0] 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1EF4:  				Set  *Var[2]  0000000F 
 1F04:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1F20:  				Call     SetAnimation 	( .Actor:Self 00000001 00660103 )
 1F38:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 1F50:  				Call     SetAnimation 	( .Actor:Self 00000001 0066011F )
 1F68:  				Wait     0000000A 
 1F74:  				Call     PlaySoundAtActor 	( .Actor:Self 00000353 )
 1F88:  				Call     SetAnimation 	( .Actor:Self 00000001 00660107 )
 1FA0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1FBC:  				Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1FD8:  				Wait     0000001E 
 1FE4:  				Thread
 1FEC:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 2010:  					Switch  *Var[0] 
 201C:  						Case  ==  00000005 
 2028:  							Wait     00000014 
 2034:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  00000006 
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label    00000000 
 2088:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 20A4:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 20C0:  					If  *Var[0]  >  *Var[3] 
 20D0:  						Wait     00000001 
 20DC:  						Goto     00000000 
 20E8:  					EndIf
 20F0:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 2104:  					Call     SetGoalToTarget 	( .Actor:Self )
 2114:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call     UseCamPreset 	( 00000002 )
 2154:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 2168:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 2184:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 2198:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 21AC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 21C8:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 21E4:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 21FC:  				Call     8026F838 ( FFFFFF81 00000000 )
 2210:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set  *Var[0]  00000000 
 225C:  					Loop     00000028 
 2268:  						Sub  *Var[0]  0000002D 
 2278:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 2298:  						Wait     00000001 
 22A4:  					EndLoop
 22AC:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2310:  				Set  *Var[2]  0000000F 
 2320:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 233C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 2350:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 2370:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 238C:  				Call     $Function_80218BF8 ( *Var[0] *Var[1] *Var[2] 0000001E )
 23A8:  				Wait     0000001E 
 23B4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660109 )
 23CC:  				Wait     0000000A 
 23D8:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 23EC:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 2400:  				Call     SetAnimation 	( .Actor:Self 00000001 0066011B )
 2418:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2434:  				Sub  *Var[0]  00000016 
 2444:  				Add  *Var[1]  00000013 
 2454:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait     0000001E 
 24A4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660103 )
 24BC:  				Call     SetGoalToHome 	( .Actor:Self )
 24CC:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 24E4:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 24FC:  				ConstAND *Var[0] FFFFFDFF 
 250C:  				Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End

#new:Script $Script_Init_8022AC8C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022B474 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022AD80 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022ADE8 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022B484 )
   50:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   6C:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   88:  Call     HPBarToHome 	( .Actor:Self )
   98:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   B4:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End

#new:Script $Script_Idle_8022AD80
    0:  Return
    8:  End

#new:IntTable $IntTable_8022AD90
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_8022ADE8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  0066010B 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  0066010E 
   C0:  		SetConst  *Var[2]  0066010F 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  0066010E 
  108:  		SetConst  *Var[2]  0066010F 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  0066010F 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  0066010B 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  0066010B 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  0066010B 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger
  208:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  220:  		Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  238:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802286DC )
  250:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022850C )
  268:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  29C:  		If  *Var[0]  ==  00000000 
  2AC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066010B )
  2C4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait     00000004 
  2F4:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait     00000001 
  31C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait     00000001 
  344:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait     00000001 
  36C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait     00000001 
  394:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait     00000001 
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066010C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer $IntTable_8022AD90 
  3F8:  		Loop     00000016 
  404:  			Get1Int  *Var[0] 
  410:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  42C:  			Wait     00000001 
  438:  		EndLoop
  440:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017
  484:  	CaseOR  ==  .Event:Immune
  490:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4A8:  		If  *Var[0]  ==  00000000 
  4B8:  			SetConst  *Var[0]  00000001 
  4C8:  			SetConst  *Var[1]  00660108 
  4D8:  			ExecWait DoImmune 
  4E4:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  4F8:  			If  *Var[0]  ==  00000000 
  508:  				Call     SetAnimation 	( .Actor:Self 00000001 00660109 )
  520:  				Wait     0000000A 
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var[0]  00000001 
  54C:  			SetConst  *Var[1]  0066010C 
  55C:  			ExecWait DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death
  584:  		SetConst  *Var[0]  00000001 
  594:  		SetConst  *Var[1]  0066010B 
  5A4:  		ExecWait DoNormalHit 
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  0066010B 
  5D0:  		ExecWait DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus
  5F0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  608:  		If  *Var[0]  ==  00000000 
  618:  			SetConst  *Var[0]  00000001 
  628:  			SetConst  *Var[1]  00660104 
  638:  			ExecWait DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  668:  Call     UseIdleAnimation 	( .Actor:Self .True )
  67C:  Return
  684:  End

#new:Script $Script_TakeTurn_8022B474
    0:  Return
    8:  End

#new:Script $Script_NextTurn_8022B484
    0:  Return
    8:  End

PADDING: 8022B494 to 8022B4A0 (004C4684 to 004C4690)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_8022B4A0
.Element:Normal 00000001
.Element:End

#new:DefenseTable $DefenseTable_8022B4AC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022B4B8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   60`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_8022B564
00800000 01000000 FB2400FF $IdleAnimations_8022B5B0 $DefenseTable_8022B4A0 00001000 00000000 00000000 00000000 

#new:Actor $BNinjakoopa
% stats
[Index]        9Db 
[Level]        17`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00240000 
[StatusTable] $StatusTable_8022B4B8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022B564 
[Script]      $Script_Init_8022DC2C 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8022B5B0
.Status:Normal    00660004
.Status:Stone     00660000
.Status:Sleep     00660015
.Status:Poison    00660000
.Status:Stop      00660000
.Status:Static    00660000
.Status:Paralyze  00660000
.Status:Paralyze  00660000
.Status:Dizzy     00660018
.Status:Dizzy     00660018
.Status:End

#new:IdleAnimations $IdleAnimations_8022B604
.Status:Normal    00660005
.Status:Stone     00660001
.Status:Poison    00660001
.Status:Stop      00660001
.Status:Static    00660001
.Status:Paralyze  00660001
.Status:Paralyze  00660001
.Status:End

#new:IdleAnimations $IdleAnimations_8022B640
.Status:Normal    0066000D
.Status:Stone     00660001
.Status:Poison    00660001
.Status:Stop      00660001
.Status:Static    00660001
.Status:Paralyze  00660001
.Status:Paralyze  00660001
.Status:End

#new:IdleAnimations $IdleAnimations_8022B67C
.Status:Normal    0066000C
.Status:Stone     00660017
.Status:Sleep     00660017
.Status:Poison    00660017
.Status:Stop      00660017
.Status:Static    00660017
.Status:Paralyze  00660017
.Status:Paralyze  00660017
.Status:Dizzy     00660022
.Status:Dizzy     00660022
.Status:End

#new:IdleAnimations $IdleAnimations_8022B6D0
.Status:Normal    0066000A
.Status:End

#new:IdleAnimations $IdleAnimations_8022B6DC
.Status:Normal    0066000C
.Status:End

#new:Script $Script_8022B6E8
    0:  Call     SetOwnerID  	( .Actor:Enemy2 )
   10:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   24:  If  *Var[0]  !=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Switch  *Var[A] 
   64:  	Case  ==  00000000 
   70:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   88:  		Switch  *Var[0] 
   94:  			Case  ==  00000003 
   A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B5B0 )
   B8:  				Call     SetAnimation 	( .Actor:Self 00000001 00660004 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B604 )
  10C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660005 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  158:  		Switch  *Var[0] 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait     00000005 
  1A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B640 )
  1B8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066000D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  204:  		Switch  *Var[0] 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var[0]  00000001 
  250:  				SetConst  *Var[1]  0066000B 
  260:  				ExecWait DoNormalHit 
  26C:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  284:  				ConstAND *Var[0] 000000C0 
  294:  				If  *Var[0]  !=  000000C0 
  2A4:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B640 )
  2BC:  					Call     SetAnimation 	( .Actor:Self 00000001 0066000D )
  2D4:  				Else
  2DC:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
  2F4:  					Call     SetAnimation 	( .Actor:Self 00000001 0066000A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  348:  		Switch  *Var[0] 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call     $Function_80219AC8 ( 0000000E )
  394:  				SetConst  *Var[0]  00000001 
  3A4:  				SetConst  *Var[1]  0066000E 
  3B4:  				SetConst  *Var[2]  FFFFFFFF 
  3C4:  				ExecWait DoBurnHit 
  3D0:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  3E8:  				ConstAND *Var[0] 000000C0 
  3F8:  				If  *Var[0]  !=  000000C0 
  408:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B640 )
  420:  					Call     SetAnimation 	( .Actor:Self 00000001 0066000D )
  438:  				Else
  440:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
  458:  					Call     SetAnimation 	( .Actor:Self 00000001 0066000A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4AC:  		Switch  *Var[0] 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var[0]  00000001 
  4D4:  				SetConst  *Var[1]  00660008 
  4E4:  				ExecWait DoImmune 
  4F0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660009 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var[0]  00000001 
  53C:  				SetConst  *Var[1]  0066001F 
  54C:  				ExecWait DoImmune 
  558:  				Call     SetAnimation 	( .Actor:Self 00000001 00660020 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait     0000000F 
  58C:  	Case  ==  00000005 
  598:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  5B0:  		Switch  *Var[0] 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set  *Flag[00]  00000000 
  5FC:  				If  *Var[0]  ==  00000003 
  60C:  					Set  *Flag[00]  00000001 
  61C:  				EndIf
  624:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  638:  				Call     $Function_80219530 ( *Var[0] *Var[1] *Var[2] )
  650:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  66C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066000A )
  684:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
  69C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  6BC:  				If  *Flag[00]  ==  00000001 
  6CC:  					Call     $Function_80219360 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call     SetAnimation 	( .Actor:Self 00000001 0066000C )
  72C:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B6DC )
  744:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  764:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  784:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  79C:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7D4:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  				Call     HPBarToHome 	( .Actor:Self )
  800:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B67C )
  818:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022B4AC )
  830:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  848:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  860:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  8B0:  		Switch  *Var[0] 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set  *Flag[00]  00000000 
  8FC:  				If  *Var[0]  ==  00000003 
  90C:  					Set  *Flag[00]  00000001 
  91C:  				EndIf
  924:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  938:  				Call     $Function_80219530 ( *Var[0] *Var[1] *Var[2] )
  950:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  96C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066000E )
  984:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B6D0 )
  99C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  9BC:  				If  *Flag[00]  ==  00000001 
  9CC:  					Call     $Function_80219360 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A30:  				Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  A48:  				DivF  *Var[3]  *Fixed[2.0] 
  A58:  				AddF  *Var[1]  *Var[3] 
  A68:  				AddF  *Var[2]  *Fixed[5.0] 
  A78:  				DivF  *Var[3]  *Fixed[10.0] 
  A88:  				Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066000C )
  AE4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B6DC )
  AFC:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B1C:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  B3C:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  B54:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  B70:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B8C:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BA8:  				Call     HPBarToHome 	( .Actor:Self )
  BB8:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B67C )
  BD0:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022B4AC )
  BE8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  C00:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  C18:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  C68:  		Switch  *Var[0] 
  C74:  			Case  ==  00000001 
  C80:  				Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  C98:  				Sub  *Var[0]  00000001 
  CA8:  				If  *Var[0]  >  00000000 
  CB8:  					Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
  CD0:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait     00000014 
  CF8:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait     0000000C 
  D40:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D58:  					Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  D74:  					Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set  *Var[0]  00000000 
  DA0:  						Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop     00000004 
  DC8:  							Add  *Var[0]  00000016 
  DD8:  							Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  DF4:  							Wait     00000001 
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E2C:  					Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  E40:  					Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E5C:  					Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  E7C:  					Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  E90:  					Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  EFC:  					Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022B4A0 )
  F14:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B5B0 )
  F2C:  					Call     SetAnimation 	( .Actor:Self 00000001 00660004 )
  F44:  					Call     8026F838 ( FFFFFF81 00000002 )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait     00000014 
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FA0:  		Switch  *Var[0] 
  FAC:  			Case  ==  00000002 
  FB8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FFC:  		Switch  *Var[0] 
 1008:  			Case  ==  00000003 
 1014:  				Call     SetAnimation 	( .Actor:Self 00000001 00660008 )
 102C:  				Wait     0000000A 
 1038:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1050:  				Switch  *Var[0] 
 105C:  					Case  ==  00000004 
 1068:  						Call     PlaySoundAtActor 	( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call     PlaySoundAtActor 	( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call     PlaySoundAtActor 	( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660007 )
 10DC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F8:  				Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1114:  				Wait     0000003C 
 1120:  				Thread
 1128:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 114C:  					Switch  *Var[0] 
 1158:  						Case  ==  00000005 
 1164:  							Wait     00000014 
 1170:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  00000006 
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[A] )
 11D0:  					Label    00000000 
 11DC:  					Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
 11F8:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 1214:  					If  *Var[0]  >  *Var[3] 
 1224:  						Wait     00000001 
 1230:  						Goto     00000000 
 123C:  					EndIf
 1244:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 1258:  					Call     SetGoalToTarget 	( .Actor:Self )
 1268:  					Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[1] )
 1280:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 *Var[1] 00000020 )
 12A8:  				EndThread
 12B0:  				Call     UseCamPreset 	( 00000002 )
 12C0:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 12D4:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 12F0:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1304:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 131C:  				Switch  *Var[0] 
 1328:  					Case  ==  00000004 
 1334:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 13AC:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 13C8:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 13E0:  				Call     8026F838 ( FFFFFF81 00000000 )
 13F4:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set  *Var[0]  00000000 
 1440:  					Loop     00000028 
 144C:  						Sub  *Var[0]  0000002D 
 145C:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 147C:  						Wait     00000001 
 1488:  					EndLoop
 1490:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 14F0:  				Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 150C:  				Set  *Var[4]  0000000F 
 151C:  				Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1538:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[B] )
 1550:  				Set  *Var[0]  *Var[B] 
 1560:  				Sub  *Var[0]  00000001 
 1570:  				Mul  *Var[0]  00000012 
 1580:  				Switch  *Var[B] 
 158C:  					Case  ==  00000004 
 1598:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1620:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1640:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1658:  				Switch  *Var[0] 
 1664:  					Case  ==  00000004 
 1670:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 168C:  						Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 0000003C )
 16A8:  						Wait     0000003C 
 16B4:  					Case  ==  00000003 
 16C0:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 16DC:  						Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 00000032 )
 16F8:  						Wait     00000032 
 1704:  					Case  ==  00000002 
 1710:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 172C:  						Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1748:  						Wait     00000028 
 1754:  				EndSwitch
 175C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660009 )
 1774:  				Wait     0000000A 
 1780:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 1794:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 17A8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066001B )
 17C0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 17DC:  				Sub  *Var[0]  00000016 
 17EC:  				Add  *Var[1]  00000013 
 17FC:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait     0000001E 
 184C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660004 )
 1864:  				Wait     00000014 
 1870:  				Call     SetActorVar 	( .Actor:Enemy4 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066001F )
 18C4:  				Wait     0000000A 
 18D0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660007 )
 18E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1904:  				Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1920:  				Wait     0000003C 
 192C:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1940:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1958:  				Switch  *Var[0] 
 1964:  					Case  ==  00000004 
 1970:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 19E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1A04:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 1A20:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1A38:  				Call     8026F838 ( FFFFFF81 00000000 )
 1A4C:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set  *Var[0]  00000000 
 1A98:  					Loop     00000028 
 1AA4:  						Sub  *Var[0]  0000002D 
 1AB4:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 1AD4:  						Wait     00000001 
 1AE0:  					EndLoop
 1AE8:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1B48:  				Switch  *Var[0] 
 1B54:  					Case  ==  00000004 
 1B60:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1B78:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1B94:  						Set  *Var[4]  0000000F 
 1BA4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1BC0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C00:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1C1C:  						Set  *Var[4]  0000000F 
 1C2C:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1C48:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C88:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1CA4:  						Set  *Var[4]  0000000F 
 1CB4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1CD0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1D08:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1D28:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1D40:  				Switch  *Var[0] 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1D74:  						Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 00000032 )
 1D90:  						Wait     00000032 
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1DC4:  						Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1DE0:  						Wait     00000028 
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1E14:  						Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1E30:  						Wait     0000001E 
 1E3C:  				EndSwitch
 1E44:  				Call     SetAnimation 	( .Actor:Self 00000001 00660020 )
 1E5C:  				Wait     0000000A 
 1E68:  				Call     SetAnimation 	( .Actor:Self 00000001 00660005 )
 1E80:  				Wait     0000001E 
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1EC0:  		Switch  *Var[0] 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1EF4:  				Set  *Var[2]  0000000F 
 1F04:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1F20:  				Call     SetAnimation 	( .Actor:Self 00000001 00660003 )
 1F38:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 1F50:  				Call     SetAnimation 	( .Actor:Self 00000001 0066001F )
 1F68:  				Wait     0000000A 
 1F74:  				Call     PlaySoundAtActor 	( .Actor:Self 00000353 )
 1F88:  				Call     SetAnimation 	( .Actor:Self 00000001 00660007 )
 1FA0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1FBC:  				Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1FD8:  				Wait     0000001E 
 1FE4:  				Thread
 1FEC:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 2010:  					Switch  *Var[0] 
 201C:  						Case  ==  00000005 
 2028:  							Wait     00000014 
 2034:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  00000006 
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label    00000000 
 2088:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 20A4:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 20C0:  					If  *Var[0]  >  *Var[3] 
 20D0:  						Wait     00000001 
 20DC:  						Goto     00000000 
 20E8:  					EndIf
 20F0:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 2104:  					Call     SetGoalToTarget 	( .Actor:Self )
 2114:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call     UseCamPreset 	( 00000002 )
 2154:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 2168:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 2184:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 2198:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 21AC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 21C8:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 21E4:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 21FC:  				Call     8026F838 ( FFFFFF81 00000000 )
 2210:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set  *Var[0]  00000000 
 225C:  					Loop     00000028 
 2268:  						Sub  *Var[0]  0000002D 
 2278:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 2298:  						Wait     00000001 
 22A4:  					EndLoop
 22AC:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2310:  				Set  *Var[2]  0000000F 
 2320:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 233C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 2350:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 2370:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 238C:  				Call     $Function_802193B8 ( *Var[0] *Var[1] *Var[2] 0000001E )
 23A8:  				Wait     0000001E 
 23B4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660009 )
 23CC:  				Wait     0000000A 
 23D8:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 23EC:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 2400:  				Call     SetAnimation 	( .Actor:Self 00000001 0066001B )
 2418:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2434:  				Sub  *Var[0]  00000016 
 2444:  				Add  *Var[1]  00000013 
 2454:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait     0000001E 
 24A4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660003 )
 24BC:  				Call     SetGoalToHome 	( .Actor:Self )
 24CC:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 24E4:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 24FC:  				ConstAND *Var[0] FFFFFDFF 
 250C:  				Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End

#new:Script $Script_Init_8022DC2C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022E414 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022DD20 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022DD88 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022E424 )
   50:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   6C:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   88:  Call     HPBarToHome 	( .Actor:Self )
   98:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   B4:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End

#new:Script $Script_Idle_8022DD20
    0:  Return
    8:  End

#new:IntTable $IntTable_8022DD30
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_8022DD88
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  0066000B 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  0066000E 
   C0:  		SetConst  *Var[2]  0066000F 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  0066000E 
  108:  		SetConst  *Var[2]  0066000F 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  0066000F 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  0066000B 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  0066000B 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  0066000B 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger
  208:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  220:  		Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  238:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022B67C )
  250:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022B4AC )
  268:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  29C:  		If  *Var[0]  ==  00000000 
  2AC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066000B )
  2C4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait     00000004 
  2F4:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait     00000001 
  31C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait     00000001 
  344:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait     00000001 
  36C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait     00000001 
  394:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait     00000001 
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066000C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer $IntTable_8022DD30 
  3F8:  		Loop     00000016 
  404:  			Get1Int  *Var[0] 
  410:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  42C:  			Wait     00000001 
  438:  		EndLoop
  440:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017
  484:  	CaseOR  ==  .Event:Immune
  490:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4A8:  		If  *Var[0]  ==  00000000 
  4B8:  			SetConst  *Var[0]  00000001 
  4C8:  			SetConst  *Var[1]  00660008 
  4D8:  			ExecWait DoImmune 
  4E4:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  4F8:  			If  *Var[0]  ==  00000000 
  508:  				Call     SetAnimation 	( .Actor:Self 00000001 00660009 )
  520:  				Wait     0000000A 
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var[0]  00000001 
  54C:  			SetConst  *Var[1]  0066000C 
  55C:  			ExecWait DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death
  584:  		SetConst  *Var[0]  00000001 
  594:  		SetConst  *Var[1]  0066000B 
  5A4:  		ExecWait DoNormalHit 
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  0066000B 
  5D0:  		ExecWait DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus
  5F0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  608:  		If  *Var[0]  ==  00000000 
  618:  			SetConst  *Var[0]  00000001 
  628:  			SetConst  *Var[1]  00660004 
  638:  			ExecWait DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  668:  Call     UseIdleAnimation 	( .Actor:Self .True )
  67C:  Return
  684:  End

#new:Script $Script_TakeTurn_8022E414
    0:  Return
    8:  End

#new:Script $Script_NextTurn_8022E424
    0:  Return
    8:  End

PADDING: 8022E434 to 8022E440 (004C7624 to 004C7630)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_8022E440
.Element:Normal 00000001
.Element:End

#new:DefenseTable $DefenseTable_8022E44C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022E458
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_8022E504
00800000 01000000 FB2400FF $IdleAnimations_8022E550 $DefenseTable_8022E440 00001000 00000000 00000000 00000000 

#new:Actor $YNinjakoopa
% stats
[Index]        9Eb 
[Level]        16`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00240000 
[StatusTable] $StatusTable_8022E458 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022E504 
[Script]      $Script_Init_80230BCC 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8022E550
.Status:Normal    00660204
.Status:Stone     00660200
.Status:Sleep     00660215
.Status:Poison    00660200
.Status:Stop      00660200
.Status:Static    00660200
.Status:Paralyze  00660200
.Status:Paralyze  00660200
.Status:Dizzy     00660218
.Status:Dizzy     00660218
.Status:End

#new:IdleAnimations $IdleAnimations_8022E5A4
.Status:Normal    00660205
.Status:Stone     00660201
.Status:Poison    00660201
.Status:Stop      00660201
.Status:Static    00660201
.Status:Paralyze  00660201
.Status:Paralyze  00660201
.Status:End

#new:IdleAnimations $IdleAnimations_8022E5E0
.Status:Normal    0066020D
.Status:Stone     00660201
.Status:Poison    00660201
.Status:Stop      00660201
.Status:Static    00660201
.Status:Paralyze  00660201
.Status:Paralyze  00660201
.Status:End

#new:IdleAnimations $IdleAnimations_8022E61C
.Status:Normal    0066020C
.Status:Stone     00660217
.Status:Sleep     00660217
.Status:Poison    00660217
.Status:Stop      00660217
.Status:Static    00660217
.Status:Paralyze  00660217
.Status:Paralyze  00660217
.Status:Dizzy     00660222
.Status:Dizzy     00660222
.Status:End

#new:IdleAnimations $IdleAnimations_8022E670
.Status:Normal    0066020A
.Status:End

#new:IdleAnimations $IdleAnimations_8022E67C
.Status:Normal    0066020C
.Status:End

#new:Script $Script_8022E688
    0:  Call     SetOwnerID  	( .Actor:Enemy1 )
   10:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   24:  If  *Var[0]  !=  00000000 
   34:  	Return
   3C:  EndIf
   44:  Call     UseIdleAnimation 	( .Actor:Self .False )
   58:  Switch  *Var[A] 
   64:  	Case  ==  00000000 
   70:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   88:  		Switch  *Var[0] 
   94:  			Case  ==  00000003 
   A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E550 )
   B8:  				Call     SetAnimation 	( .Actor:Self 00000001 00660204 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E5A4 )
  10C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660205 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  158:  		Switch  *Var[0] 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait     00000005 
  1A0:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E5E0 )
  1B8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066020D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  204:  		Switch  *Var[0] 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var[0]  00000001 
  250:  				SetConst  *Var[1]  0066020B 
  260:  				ExecWait DoNormalHit 
  26C:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  284:  				ConstAND *Var[0] 000000C0 
  294:  				If  *Var[0]  !=  000000C0 
  2A4:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E5E0 )
  2BC:  					Call     SetAnimation 	( .Actor:Self 00000001 0066020D )
  2D4:  				Else
  2DC:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E670 )
  2F4:  					Call     SetAnimation 	( .Actor:Self 00000001 0066020A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  348:  		Switch  *Var[0] 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call     $Function_8021A288 ( 0000000E )
  394:  				SetConst  *Var[0]  00000001 
  3A4:  				SetConst  *Var[1]  0066020E 
  3B4:  				SetConst  *Var[2]  FFFFFFFF 
  3C4:  				ExecWait DoBurnHit 
  3D0:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
  3E8:  				ConstAND *Var[0] 000000C0 
  3F8:  				If  *Var[0]  !=  000000C0 
  408:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E5E0 )
  420:  					Call     SetAnimation 	( .Actor:Self 00000001 0066020D )
  438:  				Else
  440:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E670 )
  458:  					Call     SetAnimation 	( .Actor:Self 00000001 0066020A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4AC:  		Switch  *Var[0] 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var[0]  00000001 
  4D4:  				SetConst  *Var[1]  00660208 
  4E4:  				ExecWait DoImmune 
  4F0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660209 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var[0]  00000001 
  53C:  				SetConst  *Var[1]  0066021F 
  54C:  				ExecWait DoImmune 
  558:  				Call     SetAnimation 	( .Actor:Self 00000001 00660220 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait     0000000F 
  58C:  	Case  ==  00000005 
  598:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  5B0:  		Switch  *Var[0] 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set  *Flag[00]  00000000 
  5FC:  				If  *Var[0]  ==  00000003 
  60C:  					Set  *Flag[00]  00000001 
  61C:  				EndIf
  624:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  638:  				Call     $Function_80219CF0 ( *Var[0] *Var[1] *Var[2] )
  650:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  66C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066020A )
  684:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E670 )
  69C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  6BC:  				If  *Flag[00]  ==  00000001 
  6CC:  					Call     $Function_80219B20 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call     SetAnimation 	( .Actor:Self 00000001 0066020C )
  72C:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E67C )
  744:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  764:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  784:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  79C:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7D4:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F0:  				Call     HPBarToHome 	( .Actor:Self )
  800:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E61C )
  818:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022E44C )
  830:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  848:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  860:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  8B0:  		Switch  *Var[0] 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set  *Flag[00]  00000000 
  8FC:  				If  *Var[0]  ==  00000003 
  90C:  					Set  *Flag[00]  00000001 
  91C:  				EndIf
  924:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  938:  				Call     $Function_80219CF0 ( *Var[0] *Var[1] *Var[2] )
  950:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  96C:  				Call     SetAnimation 	( .Actor:Self 00000001 0066020E )
  984:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E670 )
  99C:  				Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  9BC:  				If  *Flag[00]  ==  00000001 
  9CC:  					Call     $Function_80219B20 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.80078125] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A30:  				Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
  A48:  				DivF  *Var[3]  *Fixed[2.0] 
  A58:  				AddF  *Var[1]  *Var[3] 
  A68:  				AddF  *Var[2]  *Fixed[5.0] 
  A78:  				DivF  *Var[3]  *Fixed[10.0] 
  A88:  				Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066020C )
  AE4:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E67C )
  AFC:  				Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B1C:  				Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  B3C:  				Call     SetActorFlagBits 	( .Actor:Self 00040000 .False )
  B54:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
  B70:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B8C:  				Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BA8:  				Call     HPBarToHome 	( .Actor:Self )
  BB8:  				Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E61C )
  BD0:  				Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022E44C )
  BE8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  C00:  				Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  C18:  				Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  C68:  		Switch  *Var[0] 
  C74:  			Case  ==  00000001 
  C80:  				Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
  C98:  				Sub  *Var[0]  00000001 
  CA8:  				If  *Var[0]  >  00000000 
  CB8:  					Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
  CD0:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait     00000014 
  CF8:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait     0000000C 
  D40:  					Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  D58:  					Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  D74:  					Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set  *Var[0]  00000000 
  DA0:  						Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop     00000004 
  DC8:  							Add  *Var[0]  00000016 
  DD8:  							Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  DF4:  							Wait     00000001 
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E2C:  					Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
  E40:  					Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  E5C:  					Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  E7C:  					Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
  E90:  					Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
  EFC:  					Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022E440 )
  F14:  					Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E550 )
  F2C:  					Call     SetAnimation 	( .Actor:Self 00000001 00660204 )
  F44:  					Call     8026F838 ( FFFFFF81 00000002 )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait     00000014 
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FA0:  		Switch  *Var[0] 
  FAC:  			Case  ==  00000002 
  FB8:  				Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  FFC:  		Switch  *Var[0] 
 1008:  			Case  ==  00000003 
 1014:  				Call     SetAnimation 	( .Actor:Self 00000001 00660208 )
 102C:  				Wait     0000000A 
 1038:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1050:  				Switch  *Var[0] 
 105C:  					Case  ==  00000004 
 1068:  						Call     PlaySoundAtActor 	( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call     PlaySoundAtActor 	( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call     PlaySoundAtActor 	( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660207 )
 10DC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10F8:  				Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1114:  				Wait     0000003C 
 1120:  				Thread
 1128:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 114C:  					Switch  *Var[0] 
 1158:  						Case  ==  00000005 
 1164:  							Wait     00000014 
 1170:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  00000006 
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[A] )
 11D0:  					Label    00000000 
 11DC:  					Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
 11F8:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 1214:  					If  *Var[0]  >  *Var[3] 
 1224:  						Wait     00000001 
 1230:  						Goto     00000000 
 123C:  					EndIf
 1244:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 1258:  					Call     SetGoalToTarget 	( .Actor:Self )
 1268:  					Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[1] )
 1280:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 *Var[1] 00000020 )
 12A8:  				EndThread
 12B0:  				Call     UseCamPreset 	( 00000002 )
 12C0:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 12D4:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 12F0:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1304:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 131C:  				Switch  *Var[0] 
 1328:  					Case  ==  00000004 
 1334:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 13AC:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 13C8:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 13E0:  				Call     8026F838 ( FFFFFF81 00000000 )
 13F4:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set  *Var[0]  00000000 
 1440:  					Loop     00000028 
 144C:  						Sub  *Var[0]  0000002D 
 145C:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 147C:  						Wait     00000001 
 1488:  					EndLoop
 1490:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 14F0:  				Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 150C:  				Set  *Var[4]  0000000F 
 151C:  				Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1538:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[B] )
 1550:  				Set  *Var[0]  *Var[B] 
 1560:  				Sub  *Var[0]  00000001 
 1570:  				Mul  *Var[0]  00000012 
 1580:  				Switch  *Var[B] 
 158C:  					Case  ==  00000004 
 1598:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[0] FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1620:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1640:  				Call     GetActorVar 	( .Actor:Enemy4 00000003 *Var[0] )
 1658:  				Switch  *Var[0] 
 1664:  					Case  ==  00000004 
 1670:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 168C:  						Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 0000003C )
 16A8:  						Wait     0000003C 
 16B4:  					Case  ==  00000003 
 16C0:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 16DC:  						Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 00000032 )
 16F8:  						Wait     00000032 
 1704:  					Case  ==  00000002 
 1710:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 172C:  						Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1748:  						Wait     00000028 
 1754:  				EndSwitch
 175C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660209 )
 1774:  				Wait     0000000A 
 1780:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 1794:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 17A8:  				Call     SetAnimation 	( .Actor:Self 00000001 0066021B )
 17C0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 17DC:  				Sub  *Var[0]  00000016 
 17EC:  				Add  *Var[1]  00000013 
 17FC:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait     0000001E 
 184C:  				Call     SetAnimation 	( .Actor:Self 00000001 00660204 )
 1864:  				Wait     00000014 
 1870:  				Call     SetActorVar 	( .Actor:Enemy4 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call     SetAnimation 	( .Actor:Self 00000001 0066021F )
 18C4:  				Wait     0000000A 
 18D0:  				Call     SetAnimation 	( .Actor:Self 00000001 00660207 )
 18E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1904:  				Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 0000003C )
 1920:  				Wait     0000003C 
 192C:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 1940:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1958:  				Switch  *Var[0] 
 1964:  					Case  ==  00000004 
 1970:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 19E8:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1A04:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 1A20:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 1A38:  				Call     8026F838 ( FFFFFF81 00000000 )
 1A4C:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set  *Var[0]  00000000 
 1A98:  					Loop     00000028 
 1AA4:  						Sub  *Var[0]  0000002D 
 1AB4:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 1AD4:  						Wait     00000001 
 1AE0:  					EndLoop
 1AE8:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1B48:  				Switch  *Var[0] 
 1B54:  					Case  ==  00000004 
 1B60:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1B78:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1B94:  						Set  *Var[4]  0000000F 
 1BA4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1BC0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C00:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1C1C:  						Set  *Var[4]  0000000F 
 1C2C:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1C48:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call     GetActorVar 	( .Actor:Enemy4 00000004 *Var[1] )
 1C88:  						Call     GetHomePos  	( *Var[1] *Var[2] *Var[3] *Var[4] )
 1CA4:  						Set  *Var[4]  0000000F 
 1CB4:  						Call     SetGoalToPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
 1CD0:  						Call     AddToGoalPos 	( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 1D08:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 1D28:  				Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1D40:  				Switch  *Var[0] 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1D74:  						Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 00000032 )
 1D90:  						Wait     00000032 
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1DC4:  						Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 00000028 )
 1DE0:  						Wait     00000028 
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1E14:  						Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1E30:  						Wait     0000001E 
 1E3C:  				EndSwitch
 1E44:  				Call     SetAnimation 	( .Actor:Self 00000001 00660220 )
 1E5C:  				Wait     0000000A 
 1E68:  				Call     SetAnimation 	( .Actor:Self 00000001 00660205 )
 1E80:  				Wait     0000001E 
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
 1EC0:  		Switch  *Var[0] 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1EF4:  				Set  *Var[2]  0000000F 
 1F04:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1F20:  				Call     SetAnimation 	( .Actor:Self 00000001 00660203 )
 1F38:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 1F50:  				Call     SetAnimation 	( .Actor:Self 00000001 0066021F )
 1F68:  				Wait     0000000A 
 1F74:  				Call     PlaySoundAtActor 	( .Actor:Self 00000353 )
 1F88:  				Call     SetAnimation 	( .Actor:Self 00000001 00660207 )
 1FA0:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1FBC:  				Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 0000001E )
 1FD8:  				Wait     0000001E 
 1FE4:  				Thread
 1FEC:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000000 00000010 )
 2010:  					Switch  *Var[0] 
 201C:  						Case  ==  00000005 
 2028:  							Wait     00000014 
 2034:  							Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  00000006 
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label    00000000 
 2088:  					Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 20A4:  					Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
 20C0:  					If  *Var[0]  >  *Var[3] 
 20D0:  						Wait     00000001 
 20DC:  						Goto     00000000 
 20E8:  					EndIf
 20F0:  					Call     SetTargetActor ( .Actor:Self .Actor:Player )
 2104:  					Call     SetGoalToTarget 	( .Actor:Self )
 2114:  					Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call     UseCamPreset 	( 00000002 )
 2154:  				Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
 2168:  				Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
 2184:  				Call     EnableActorBlur 	( .Actor:Self 00000001 )
 2198:  				Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
 21AC:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 21C8:  				Call     SetGoalToPos 	( .Actor:Self FFFFFF60 *Var[1] *Var[2] )
 21E4:  				Call     RunToGoal   	( .Actor:Self 00000000 .False )
 21FC:  				Call     8026F838 ( FFFFFF81 00000000 )
 2210:  				Call     EnableActorBlur 	( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set  *Var[0]  00000000 
 225C:  					Loop     00000028 
 2268:  						Sub  *Var[0]  0000002D 
 2278:  						Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
 2298:  						Wait     00000001 
 22A4:  					EndLoop
 22AC:  					Call     SetSpriteRotationOffset 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call     GetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2310:  				Set  *Var[2]  0000000F 
 2320:  				Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 233C:  				Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
 2350:  				Call     JumpToGoal  	( .Actor:Self 00000028 00000000 00000001 00000000 )
 2370:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 238C:  				Call     $Function_80219B78 ( *Var[0] *Var[1] *Var[2] 0000001E )
 23A8:  				Wait     0000001E 
 23B4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660209 )
 23CC:  				Wait     0000000A 
 23D8:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
 23EC:  				Call     SetActorAngle 	( .Actor:Self 00000000 )
 2400:  				Call     SetAnimation 	( .Actor:Self 00000001 0066021B )
 2418:  				Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 2434:  				Sub  *Var[0]  00000016 
 2444:  				Add  *Var[1]  00000013 
 2454:  				Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait     0000001E 
 24A4:  				Call     SetAnimation 	( .Actor:Self 00000001 00660203 )
 24BC:  				Call     SetGoalToHome 	( .Actor:Self )
 24CC:  				Call     RunToGoal   	( .Actor:Self 0000000A .False )
 24E4:  				Call     GetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 24FC:  				ConstAND *Var[0] FFFFFDFF 
 250C:  				Call     SetActorVar 	( .Actor:Enemy4 00000000 *Var[0] )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End

#new:Script $Script_Init_80230BCC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802313B4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80230CC0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80230D28 )
   3C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_802313C4 )
   50:  Call     SetActorPos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   6C:  Call     ForceHomePos 	( .Actor:Self 00000000 FFFFFC18 00000000 )
   88:  Call     HPBarToHome 	( .Actor:Self )
   98:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   B4:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   CC:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End

#new:Script $Script_Idle_80230CC0
    0:  Return
    8:  End

#new:IntTable $IntTable_80230CD0
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80230D28
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  0066020B 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  0066020E 
   C0:  		SetConst  *Var[2]  0066020F 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  0066020E 
  108:  		SetConst  *Var[2]  0066020F 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  0066020F 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  0066020B 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  0066020B 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  0066020B 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger
  208:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  220:  		Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
  238:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022E61C )
  250:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8022E44C )
  268:  		Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  29C:  		If  *Var[0]  ==  00000000 
  2AC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066020B )
  2C4:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait     00000004 
  2F4:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait     00000001 
  31C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait     00000001 
  344:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait     00000001 
  36C:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait     00000001 
  394:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait     00000001 
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call     SetAnimation 	( .Actor:Self 00000001 0066020C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer $IntTable_80230CD0 
  3F8:  		Loop     00000016 
  404:  			Get1Int  *Var[0] 
  410:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  42C:  			Wait     00000001 
  438:  		EndLoop
  440:  		Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017
  484:  	CaseOR  ==  .Event:Immune
  490:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  4A8:  		If  *Var[0]  ==  00000000 
  4B8:  			SetConst  *Var[0]  00000001 
  4C8:  			SetConst  *Var[1]  00660208 
  4D8:  			ExecWait DoImmune 
  4E4:  			Call     GetStatusFlags ( .Actor:Self *Var[0] )
  4F8:  			If  *Var[0]  ==  00000000 
  508:  				Call     SetAnimation 	( .Actor:Self 00000001 00660209 )
  520:  				Wait     0000000A 
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var[0]  00000001 
  54C:  			SetConst  *Var[1]  0066020C 
  55C:  			ExecWait DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death
  584:  		SetConst  *Var[0]  00000001 
  594:  		SetConst  *Var[1]  0066020B 
  5A4:  		ExecWait DoNormalHit 
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  0066020B 
  5D0:  		ExecWait DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus
  5F0:  		Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
  608:  		If  *Var[0]  ==  00000000 
  618:  			SetConst  *Var[0]  00000001 
  628:  			SetConst  *Var[1]  00660204 
  638:  			ExecWait DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  668:  Call     UseIdleAnimation 	( .Actor:Self .True )
  67C:  Return
  684:  End

#new:Script $Script_TakeTurn_802313B4
    0:  Return
    8:  End

#new:Script $Script_NextTurn_802313C4
    0:  Return
    8:  End

PADDING: 802313D4 to 802313E0 (004CA5C4 to 004CA5D0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_802313E0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8023141C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8023142C
00000009 00000000 

#new:Stage $Stage_80231434
$ASCII_80235DEC  % trd_tex
$ASCII_80235DDC  % trd_bt00_shape
$ASCII_80235DCC  % trd_bt00_hit
$Script_BeforeBattle_802313E0 
$Script_AfterBattle_8023141C 
00000000 
$ForegroundModelList_8023142C 
00000000 
00000000 
00000000 

PADDING: 8023145C to 80231460 (004CA64C to 004CA650)
00000000 

#new:Script $Script_BeforeBattle_80231460
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Return
   34:  End

#new:Script $Script_AfterBattle_8023149C
    0:  Return
    8:  End

#new:Stage $Stage_802314AC
$ASCII_80235E14  % trd_tex
$ASCII_80235E04  % trd_bt01_shape
$ASCII_80235DF4  % trd_bt01_hit
$Script_BeforeBattle_80231460 
$Script_AfterBattle_8023149C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 802314D4 to 802314E0 (004CA6C4 to 004CA6D0)
00000000 00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_802314E0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_802315F8
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_80231BA4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     EnableModel 	( 0000000C .False )
   40:  Thread
   48:  	Set  *Var[0]  00000013 
   58:  	Exec     $Script_802315F8 
   64:  	Wait     00000005 
   70:  	Set  *Var[0]  00000011 
   80:  	Exec     $Script_802315F8 
   8C:  	Wait     00000005 
   98:  	Set  *Var[0]  0000000F 
   A8:  	Exec     $Script_802315F8 
   B4:  	Wait     00000005 
   C0:  	Set  *Var[0]  0000000D 
   D0:  	Exec     $Script_802315F8 
   DC:  EndThread
   E4:  Return
   EC:  End

#new:Script $Script_AfterBattle_80231C98
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80231CA8
00000016 00000000 

#new:Stage $Stage_80231CB0
$ASCII_80235E3C  % trd_tex
$ASCII_80235E2C  % trd_bt02_shape
$ASCII_80235E1C  % trd_bt02_hit
$Script_BeforeBattle_80231BA4 
$Script_AfterBattle_80231C98 
00000000 
$ForegroundModelList_80231CA8 
00000000 
00000000 
00000000 

PADDING: 80231CD8 to 80231CE0 (004CAEC8 to 004CAED0)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80231CE0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80231DF8
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_802323A4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     EnableModel 	( 00000016 .False )
   40:  Call     EnableModel 	( 00000009 .False )
   54:  Call     EnableModel 	( 0000000A .False )
   68:  Thread
   70:  	Set  *Var[0]  00000013 
   80:  	Exec     $Script_80231DF8 
   8C:  	Wait     00000005 
   98:  	Set  *Var[0]  00000011 
   A8:  	Exec     $Script_80231DF8 
   B4:  	Wait     00000005 
   C0:  	Set  *Var[0]  0000000F 
   D0:  	Exec     $Script_80231DF8 
   DC:  	Wait     00000005 
   E8:  	Set  *Var[0]  0000000D 
   F8:  	Exec     $Script_80231DF8 
  104:  EndThread
  10C:  Return
  114:  End

#new:Script $Script_AfterBattle_802324C0
    0:  Return
    8:  End

#new:Stage $Stage_802324D0
$ASCII_80235E64  % trd_tex
$ASCII_80235E54  % trd_bt02_shape
$ASCII_80235E44  % trd_bt02_hit
$Script_BeforeBattle_802323A4 
$Script_AfterBattle_802324C0 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 802324F8 to 80232500 (004CB6E8 to 004CB6F0)
00000000 00000000 

#new:Script $Script_80232500
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[7]  *Var[2] 
   20:  Mul  *Var[7]  0000000A 
   30:  Label    00000000 
   3C:  Add  *Var[7]  00000004 
   4C:  If  *Var[7]  >  00000E0F 
   5C:  	Sub  *Var[7]  00000E10 
   6C:  EndIf
   74:  Call     $Function_8021A2E0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   94:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   B0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
   D0:  Wait     00000001 
   DC:  Goto     00000000 
   E8:  Return
   F0:  End

#new:Script $Script_802325F8
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[7]  *Var[2] 
   40:  Mul  *Var[7]  0000000A 
   50:  Label    00000000 
   5C:  Add  *Var[7]  00000004 
   6C:  If  *Var[7]  >  00000E0F 
   7C:  	Sub  *Var[7]  00000E10 
   8C:  EndIf
   94:  Call     $Function_8021A2E0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   B4:  AddF  *Var[1]  *Var[B] 
   C4:  AddF  *Var[2]  *Var[C] 
   D4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   F0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  110:  Wait     00000001 
  11C:  Goto     00000000 
  128:  Return
  130:  End

% Origin: HEURISTIC
#new:Script $Script_80232730
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[D]  *Var[5] 
   40:  Set  *Var[7]  *Var[2] 
   50:  Mul  *Var[7]  0000000A 
   60:  Label    00000000 
   6C:  Add  *Var[7]  00000004 
   7C:  If  *Var[7]  >  00000E0F 
   8C:  	Sub  *Var[7]  00000E10 
   9C:  EndIf
   A4:  Call     $Function_8021A2E0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   C4:  AddF  *Var[0]  *Var[B] 
   D4:  AddF  *Var[1]  *Var[C] 
   E4:  AddF  *Var[2]  *Var[D] 
   F4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  110:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  130:  Wait     00000001 
  13C:  Goto     00000000 
  148:  Return
  150:  End

#new:Script $Script_BeforeBattle_80232888
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Set  *Var[0]  00000004 
   20:  Set  *Var[2]  00000000 
   30:  Exec     $Script_80232500 
   3C:  Set  *Var[0]  00000002 
   4C:  Set  *Var[2]  00000046 
   5C:  Set  *Var[3]  000000AF 
   6C:  Set  *Var[4]  FFFFFF56 
   7C:  Exec     $Script_802325F8 
   88:  Return
   90:  End

#new:Script $Script_AfterBattle_80232920
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80232930
0000000F 0000000E 0000000D 00000000 

#new:Stage $Stage_80232940
$ASCII_80235E94  % trd_tex
$ASCII_80235E84  % trd_bt03_shape
$ASCII_80235E74  % trd_bt03_hit
$Script_BeforeBattle_80232888 
$Script_AfterBattle_80232920 
$ASCII_80235E6C  % nok_bg
$ForegroundModelList_80232930 
00000000 
00000000 
00000000 

PADDING: 80232968 to 80232970 (004CBB58 to 004CBB60)
00000000 00000000 

#new:Script $Script_80232970
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
   8C:  	Add  *Var[0]  *Var[B] 
   9C:  	Add  *Var[1]  *Var[C] 
   AC:  	Wait     00000001 
   B8:  EndLoop
   C0:  Return
   C8:  End

% Origin: HEURISTIC
#new:Script $Script_80232A40
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
   8C:  	Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

% Origin: HEURISTIC
#new:Script $Script_80232B2C
    0:  Set  *Var[A]  *Var[1] 
   10:  Set  *Var[B]  *Var[2] 
   20:  Set  *Var[C]  *Var[3] 
   30:  Call     SetTexPanner 	( *Var[0] *Var[1] )
   44:  Set  *Var[0]  00000000 
   54:  Set  *Var[1]  00000000 
   64:  Loop     
   70:  	Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
   8C:  	Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
   A8:  	Add  *Var[0]  *Var[B] 
   B8:  	Add  *Var[1]  *Var[C] 
   C8:  	Wait     00000001 
   D4:  EndLoop
   DC:  Return
   E4:  End

#new:Script $Script_BeforeBattle_80232C18
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  0000000D 
   3C:  Set  *Var[1]  00000000 
   4C:  Set  *Var[2]  00000028 
   5C:  Set  *Var[3]  00000000 
   6C:  Exec     $Script_80232970 
   78:  Return
   80:  End

#new:Script $Script_AfterBattle_80232CA0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80232CB0
0000000D 00000000 

#new:Stage $Stage_80232CB8
$ASCII_80235EBC  % trd_tex
$ASCII_80235EAC  % trd_bt04_shape
$ASCII_80235E9C  % trd_bt04_hit
$Script_BeforeBattle_80232C18 
$Script_AfterBattle_80232CA0 
00000000 
$ForegroundModelList_80232CB0 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_80232CE0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80232DF8
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_802333A4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Thread
   34:  	Set  *Var[0]  0000001B 
   44:  	Exec     $Script_80232DF8 
   50:  	Wait     00000005 
   5C:  	Set  *Var[0]  00000019 
   6C:  	Exec     $Script_80232DF8 
   78:  EndThread
   80:  Thread
   88:  	Set  *Var[0]  00000006 
   98:  	Exec     $Script_80232DF8 
   A4:  	Wait     00000005 
   B0:  	Set  *Var[0]  00000004 
   C0:  	Exec     $Script_80232DF8 
   CC:  	Wait     00000005 
   D8:  	Set  *Var[0]  00000002 
   E8:  	Exec     $Script_80232DF8 
   F4:  EndThread
   FC:  Return
  104:  End

#new:Script $Script_AfterBattle_802334B0
    0:  Return
    8:  End

#new:Stage $Stage_802334C0
$ASCII_80235EEC  % trd_tex
$ASCII_80235EDC  % trd_bt05_shape
$ASCII_80235ECC  % trd_bt05_hit
$Script_BeforeBattle_802333A4 
$Script_AfterBattle_802334B0 
$ASCII_80235EC4  % nok_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 802334E8 to 802334F0 (004CC6D8 to 004CC6E0)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_802334F0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_80233608
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_80233BB4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     EnableModel 	( 00000010 .False )
   40:  Call     EnableModel 	( 00000011 .False )
   54:  Call     EnableModel 	( 00000002 .False )
   68:  Call     EnableModel 	( 00000004 .False )
   7C:  Call     EnableModel 	( 00000006 .False )
   90:  Call     EnableModel 	( 00000014 .False )
   A4:  Call     EnableModel 	( 00000012 .False )
   B8:  Call     EnableModel 	( 00000013 .False )
   CC:  Call     EnableModel 	( 00000019 .False )
   E0:  Call     EnableModel 	( 0000001B .False )
   F4:  Return
   FC:  End

#new:Script $Script_AfterBattle_80233CB8
    0:  Return
    8:  End

#new:Stage $Stage_80233CC8
$ASCII_80235F14  % trd_tex
$ASCII_80235F04  % trd_bt05_shape
$ASCII_80235EF4  % trd_bt05_hit
$Script_BeforeBattle_80233BB4 
$Script_AfterBattle_80233CB8 
00000000 
00000000 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_80233CF0
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80233E08
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_802343B4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     EnableModel 	( 0000000A .False )
   40:  Call     EnableModel 	( 0000000F .False )
   54:  Call     EnableModel 	( 00000014 .False )
   68:  Call     EnableModel 	( 00000012 .False )
   7C:  Call     EnableModel 	( 00000013 .False )
   90:  Call     EnableModel 	( 00000019 .False )
   A4:  Set  *Var[0]  0000001B 
   B4:  Exec     $Script_80233E08 
   C0:  Thread
   C8:  	Set  *Var[0]  00000006 
   D8:  	Exec     $Script_80233E08 
   E4:  	Wait     00000005 
   F0:  	Set  *Var[0]  00000004 
  100:  	Exec     $Script_80233E08 
  10C:  	Wait     00000005 
  118:  	Set  *Var[0]  00000002 
  128:  	Exec     $Script_80233E08 
  134:  EndThread
  13C:  Return
  144:  End

#new:Script $Script_AfterBattle_80234500
    0:  Return
    8:  End

#new:Stage $Stage_80234510
$ASCII_80235F3C  % trd_tex
$ASCII_80235F2C  % trd_bt05_shape
$ASCII_80235F1C  % trd_bt05_hit
$Script_BeforeBattle_802343B4 
$Script_AfterBattle_80234500 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80234538 to 80234540 (004CD728 to 004CD730)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80234540
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80234658
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_80234C04
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     EnableModel 	( 0000000A .False )
   40:  Call     EnableModel 	( 0000000F .False )
   54:  Call     EnableModel 	( 00000010 .False )
   68:  Call     EnableModel 	( 00000011 .False )
   7C:  Call     EnableModel 	( 00000019 .False )
   90:  Call     EnableModel 	( 0000000E .False )
   A4:  Call     EnableModel 	( 0000001B .False )
   B8:  Thread
   C0:  	Set  *Var[0]  00000006 
   D0:  	Exec     $Script_80234658 
   DC:  	Wait     00000005 
   E8:  	Set  *Var[0]  00000004 
   F8:  	Exec     $Script_80234658 
  104:  	Wait     00000005 
  110:  	Set  *Var[0]  00000002 
  120:  	Exec     $Script_80234658 
  12C:  EndThread
  134:  Return
  13C:  End

#new:Script $Script_AfterBattle_80234D48
    0:  Return
    8:  End

#new:Stage $Stage_80234D58
$ASCII_80235F64  % trd_tex
$ASCII_80235F54  % trd_bt05_shape
$ASCII_80235F44  % trd_bt05_hit
$Script_BeforeBattle_80234C04 
$Script_AfterBattle_80234D48 
00000000 
00000000 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_80234D80
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_80234E98
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_80235444
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     EnableModel 	( 0000001B .False )
   40:  Call     EnableModel 	( 00000002 .False )
   54:  Call     EnableModel 	( 00000004 .False )
   68:  Call     EnableModel 	( 00000006 .False )
   7C:  Call     EnableModel 	( 00000014 .False )
   90:  Call     EnableModel 	( 00000012 .False )
   A4:  Call     EnableModel 	( 00000013 .False )
   B8:  Call     EnableModel 	( 00000019 .False )
   CC:  Return
   D4:  End

#new:Script $Script_AfterBattle_80235520
    0:  Return
    8:  End

#new:Stage $Stage_80235530
$ASCII_80235F8C  % trd_tex
$ASCII_80235F7C  % trd_bt05_shape
$ASCII_80235F6C  % trd_bt05_hit
$Script_BeforeBattle_80235444 
$Script_AfterBattle_80235520 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80235558 to 80235560 (004CE748 to 004CE750)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80235560
    0:  Set  *Var[A]  *Var[0] 
   10:  Label    00000000 
   1C:  Call     RotateGroup 	( *Var[A] 00000002 00000000 00000000 00000001 )
   3C:  Wait     00000005 
   48:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   68:  Wait     00000005 
   74:  Call     RotateGroup 	( *Var[A] FFFFFFFE 00000000 00000000 00000001 )
   94:  Wait     00000005 
   A0:  Call     RotateGroup 	( *Var[A] 00000001 00000000 00000000 00000001 )
   C0:  Wait     00000005 
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  0000001E 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80235678
    0:  Set  *Var[A]  *Var[0] 
   10:  Loop     
   1C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   38:  	Wait     00000002 
   44:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
   60:  	Wait     00000001 
   6C:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[-0.5] 00000000 )
   88:  	Wait     00000001 
   94:  	Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
   B0:  	Wait     00000001 
   BC:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] FFFFFFFF 00000000 )
   D8:  	Wait     00000001 
   E4:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  100:  	Wait     00000002 
  10C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  128:  	Wait     00000002 
  134:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  150:  	Wait     00000001 
  15C:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] *Fixed[-1.5] 00000000 )
  178:  	Wait     00000001 
  184:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1A0:  	Wait     00000002 
  1AC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  1C8:  	Wait     00000001 
  1D4:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  1F0:  	Wait     00000001 
  1FC:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  218:  	Wait     00000002 
  224:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  240:  	Wait     00000002 
  24C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
  268:  	Wait     00000001 
  274:  	Call     TranslateModel ( *Var[A] 00000003 *Fixed[-2.5] 00000000 )
  290:  	Wait     00000001 
  29C:  	Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
  2B8:  	Wait     00000001 
  2C4:  	Call     TranslateModel ( *Var[A] *Fixed[2.5] FFFFFFFE 00000000 )
  2E0:  	Wait     00000001 
  2EC:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
  308:  	Wait     00000001 
  314:  	Call     TranslateModel ( *Var[A] 00000002 *Fixed[-1.5] 00000000 )
  330:  	Wait     00000001 
  33C:  	Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
  358:  	Wait     00000001 
  364:  	Call     TranslateModel ( *Var[A] *Fixed[1.5] *Fixed[-0.5] 00000000 )
  380:  	Wait     00000001 
  38C:  	Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
  3A8:  	Wait     00000001 
  3B4:  	Call     TranslateModel ( *Var[A] 00000001 *Fixed[0.5] 00000000 )
  3D0:  	Wait     00000001 
  3DC:  	Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
  3F8:  	Wait     00000001 
  404:  	Call     TranslateModel ( *Var[A] *Fixed[0.5] 00000001 00000000 )
  420:  	Wait     00000001 
  42C:  	Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
  448:  	Wait     00000001 
  454:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000001 00000000 )
  470:  	Wait     00000001 
  47C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  498:  	Wait     00000002 
  4A4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
  4C0:  	Wait     00000001 
  4CC:  	Call     TranslateModel ( *Var[A] FFFFFFFF *Fixed[0.5] 00000000 )
  4E8:  	Wait     00000001 
  4F4:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  510:  	Wait     00000002 
  51C:  	Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
  538:  	Wait     00000001 
  544:  	Call     TranslateModel ( *Var[A] *Fixed[-0.5] 00000000 00000000 )
  560:  	Wait     00000001 
  56C:  	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
  588:  	Wait     00000002 
  594:  EndLoop
  59C:  Return
  5A4:  End

#new:Script $Script_BeforeBattle_80235C24
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  0000001B 
   3C:  Exec     $Script_80235678 
   48:  Call     EnableModel 	( 00000002 .False )
   5C:  Call     EnableModel 	( 00000004 .False )
   70:  Call     EnableModel 	( 00000006 .False )
   84:  Call     EnableModel 	( 00000014 .False )
   98:  Call     EnableModel 	( 00000012 .False )
   AC:  Call     EnableModel 	( 00000013 .False )
   C0:  Call     EnableModel 	( 00000019 .False )
   D4:  Call     EnableModel 	( 0000000F .False )
   E8:  Return
   F0:  End

#new:Script $Script_AfterBattle_80235D1C
    0:  Return
    8:  End

#new:Stage $Stage_80235D2C
$ASCII_80235FB4  % trd_tex
$ASCII_80235FA4  % trd_bt05_shape
$ASCII_80235F94  % trd_bt05_hit
$Script_BeforeBattle_80235C24 
$Script_AfterBattle_80235D1C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80235D54 to 80235D60 (004CEF44 to 004CEF50)
00000000 00000000 00000000 

#new:SJIS $SJIS_80235D60
% nokoburosu
836D8352 8375838D 83580000 

#new:ASCII $ASCII_80235D6C
trd_05f

#new:ASCII $ASCII_80235D74
trd_05e

#new:ASCII $ASCII_80235D7C
trd_05d

#new:ASCII $ASCII_80235D84
trd_05c

#new:ASCII $ASCII_80235D8C
trd_05b

#new:ASCII $ASCII_80235D94
trd_05

#new:ASCII $ASCII_80235D9C
trd_04

#new:ASCII $ASCII_80235DA4
trd_03

#new:ASCII $ASCII_80235DAC
trd_02b

#new:ASCII $ASCII_80235DB4
trd_02

#new:ASCII $ASCII_80235DBC
trd_01

#new:ASCII $ASCII_80235DC4
trd_00

#new:ASCII $ASCII_80235DCC
trd_bt00_hit

#new:ASCII $ASCII_80235DDC
trd_bt00_shape

#new:ASCII $ASCII_80235DEC
trd_tex

#new:ASCII $ASCII_80235DF4
trd_bt01_hit

#new:ASCII $ASCII_80235E04
trd_bt01_shape

#new:ASCII $ASCII_80235E14
trd_tex

#new:ASCII $ASCII_80235E1C
trd_bt02_hit

#new:ASCII $ASCII_80235E2C
trd_bt02_shape

#new:ASCII $ASCII_80235E3C
trd_tex

#new:ASCII $ASCII_80235E44
trd_bt02_hit

#new:ASCII $ASCII_80235E54
trd_bt02_shape

#new:ASCII $ASCII_80235E64
trd_tex

#new:ASCII $ASCII_80235E6C
nok_bg

#new:ASCII $ASCII_80235E74
trd_bt03_hit

#new:ASCII $ASCII_80235E84
trd_bt03_shape

#new:ASCII $ASCII_80235E94
trd_tex

#new:ASCII $ASCII_80235E9C
trd_bt04_hit

#new:ASCII $ASCII_80235EAC
trd_bt04_shape

#new:ASCII $ASCII_80235EBC
trd_tex

#new:ASCII $ASCII_80235EC4
nok_bg

#new:ASCII $ASCII_80235ECC
trd_bt05_hit

#new:ASCII $ASCII_80235EDC
trd_bt05_shape

#new:ASCII $ASCII_80235EEC
trd_tex

#new:ASCII $ASCII_80235EF4
trd_bt05_hit

#new:ASCII $ASCII_80235F04
trd_bt05_shape

#new:ASCII $ASCII_80235F14
trd_tex

#new:ASCII $ASCII_80235F1C
trd_bt05_hit

#new:ASCII $ASCII_80235F2C
trd_bt05_shape

#new:ASCII $ASCII_80235F3C
trd_tex

#new:ASCII $ASCII_80235F44
trd_bt05_hit

#new:ASCII $ASCII_80235F54
trd_bt05_shape

#new:ASCII $ASCII_80235F64
trd_tex

#new:ASCII $ASCII_80235F6C
trd_bt05_hit

#new:ASCII $ASCII_80235F7C
trd_bt05_shape

#new:ASCII $ASCII_80235F8C
trd_tex

#new:ASCII $ASCII_80235F94
trd_bt05_hit

#new:ASCII $ASCII_80235FA4
trd_bt05_shape

#new:ASCII $ASCII_80235FB4
trd_tex

PADDING: 80235FBC to 80235FC0 (004CF1AC to 004CF1B0)
00000000 

