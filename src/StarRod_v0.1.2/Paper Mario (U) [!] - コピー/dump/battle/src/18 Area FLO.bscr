% Script File: 18 Area FLO.bscr
% Decoded from: 5B14B0 to 5CE690 (18 Area FLO)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_802180CC
    0:  ADDIU     SP, SP, FFC8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F22, 30 (SP)
   24:  SDC1      F20, 28 (SP)
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       {Func:GetVariable}
   34:  ADDIU     S0, S0, 4
   38:  LW        A1, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  DADDU     A0, S1, R0
   44:  JAL       {Func:GetVariable}
   48:  DADDU     S3, V0, R0
   4C:  LW        A1, 0 (S0)
   50:  ADDIU     S0, S0, 4
   54:  DADDU     A0, S1, R0
   58:  JAL       {Func:GetVariable}
   5C:  DADDU     S4, V0, R0
   60:  DADDU     A0, S1, R0
   64:  LW        A1, 0 (S0)
   68:  JAL       {Func:GetVariable}
   6C:  DADDU     S2, V0, R0
   70:  MTC1      V0, F20
   74:  NOP
   78:  CVT.S.W   F20, F20
   7C:  JAL       {Func:CosDeg}
   80:  MOV.S     F12, F20
   84:  MTC1      S2, F22
   88:  NOP
   8C:  CVT.S.W   F22, F22
   90:  MUL.S     F0, F22, F0
   94:  NOP
   98:  MOV.S     F12, F20
   9C:  MTC1      S3, F20
   A0:  NOP
   A4:  CVT.S.W   F20, F20
   A8:  ADD.S     F20, F20, F0
   AC:  JAL       {Func:SinDeg}
   B0:  ADDIU     S0, S0, 4
   B4:  MUL.S     F22, F22, F0
   B8:  NOP
   BC:  LW        A1, 0 (S0)
   C0:  ADDIU     S0, S0, 4
   C4:  DADDU     A0, S1, R0
   C8:  MFC1      A2, F20
   CC:  MTC1      S4, F20
   D0:  NOP
   D4:  CVT.S.W   F20, F20
   D8:  JAL       {Func:SetFloatVariable}
   DC:  SUB.S     F20, F20, F22
   E0:  LW        A1, 0 (S0)
   E4:  MFC1      A2, F20
   E8:  JAL       {Func:SetFloatVariable}
   EC:  DADDU     A0, S1, R0
   F0:  LW        RA, 24 (SP)
   F4:  LW        S4, 20 (SP)
   F8:  LW        S3, 1C (SP)
   FC:  LW        S2, 18 (SP)
  100:  LW        S1, 14 (SP)
  104:  LW        S0, 10 (SP)
  108:  LDC1      F22, 30 (SP)
  10C:  LDC1      F20, 28 (SP)
  110:  ADDIU     V0, R0, 2
  114:  JR        RA
  118:  ADDIU     SP, SP, 38

PADDING: 802181E8 to 802181F0 (005B1698 to 005B16A0)
00000000 00000000 

#new:Function $Function_802181F0
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A1, S4, R0
   44:  DADDU     S3, V0, R0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       {Func:GetFloatVariable}
   5C:  DADDU     A0, S2, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S2, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S2, R0
   80:  JAL       {Func:GetVariable}
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S2, R0
   94:  JAL       {Func:GetVariable}
   98:  DADDU     S1, V0, R0
   9C:  DADDU     A0, S2, R0
   A0:  LW        A1, 0 (S0)
   A4:  JAL       {Func:GetFloatVariable}
   A8:  DADDU     S0, V0, R0
   AC:  LIF       F2, 180.0
   B4:  LIO       AT, 40490FD8
   BC:  MTC1      AT, F4
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  DADDU     A0, S2, R0
   F4:  DADDU     S3, S1, R0
   F8:  DADDU     A1, S4, R0
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A2, S1, R0
        .o104
  104:  LIO       AT, 40490FD8
  10C:  MTC1      AT, F0
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       {Func:CosRad}
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  DADDU     A0, S2, R0
  150:  MFC1      A2, F2
  154:  JAL       {Func:SetFloatVariable}
  158:  DADDU     A1, S5, R0
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  ADDIU     V0, R0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48

#new:Function $Function_80218380
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_8021844C
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F20, 28 (SP)
   24:  LW        S0, C (S1)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetVariable}
   4C:  DADDU     S2, V0, R0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S3, V0, R0
   64:  DADDU     A0, S1, R0
   68:  LW        A1, 0 (S0)
   6C:  JAL       {Func:GetFloatVariable}
   70:  DADDU     S0, V0, R0
   74:  LIO       AT, 40C90FD8
   7C:  MTC1      AT, F8
   80:  MTC1      S2, F4
   84:  NOP
   88:  CVT.S.W   F4, F4
   8C:  MUL.S     F8, F4, F8
   90:  NOP
   94:  MTC1      S0, F6
   98:  NOP
   9C:  CVT.S.W   F6, F6
   A0:  LIF       F2, 1.0
   A8:  DIV.S     F4, F4, F6
   AC:  SUB.S     F2, F2, F4
   B0:  MUL.S     F20, F0, F2
   B4:  NOP
   B8:  MTC1      S3, F12
   BC:  NOP
   C0:  CVT.S.W   F12, F12
   C4:  JAL       {Func:CosRad}
   C8:  DIV.S     F12, F8, F12
   CC:  MUL.S     F20, F20, F0
   D0:  NOP
   D4:  DADDU     A0, S1, R0
   D8:  TRUNC.W.S F10, F20
   DC:  MFC1      A2, F10
   E0:  JAL       {Func:SetVariable}
   E4:  DADDU     A1, S4, R0
   E8:  LW        RA, 24 (SP)
   EC:  LW        S4, 20 (SP)
   F0:  LW        S3, 1C (SP)
   F4:  LW        S2, 18 (SP)
   F8:  LW        S1, 14 (SP)
   FC:  LW        S0, 10 (SP)
  100:  LDC1      F20, 28 (SP)
  104:  ADDIU     V0, R0, 2
  108:  JR        RA
  10C:  ADDIU     SP, SP, 30

PADDING: 8021855C to 80218560 (005B1A0C to 005B1A10)
00000000 

#new:Function $Function_80218560
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

% Origin: HINT
#new:Function $Function_802186B8
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_802186E4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

% Origin: HINT
#new:Function $Function_802187B0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218808
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 802188CC to 802188D0 (005B1D7C to 005B1D80)
00000000 

#new:Function $Function_802188D0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

#new:Function $Function_80218A28
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_80218A54
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80218B20
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218B78
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 80218C3C to 80218C40 (005B20EC to 005B20F0)
00000000 

#new:Function $Function_80218C40
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

% Origin: HINT
#new:Function $Function_80218D98
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

% Origin: HINT
#new:Function $Function_80218DC4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

% Origin: HINT
#new:Function $Function_80218E90
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218EE8
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

#new:Function $Function_80218FAC
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        S2, 18 (SP)
   10:  LIA       S2, 8010F290
   18:  SW        RA, 1C (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LB        A2, 0 (S2)
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:SetVariable}
   30:  ADDIU     S0, S0, 4
   34:  LW        A1, 0 (S0)
   38:  LB        A2, 1 (S2)
   3C:  JAL       {Func:SetVariable}
   40:  DADDU     A0, S1, R0
   44:  LW        RA, 1C (SP)
   48:  LW        S2, 18 (SP)
   4C:  LW        S1, 14 (SP)
   50:  LW        S0, 10 (SP)
   54:  ADDIU     V0, R0, 2
   58:  JR        RA
   5C:  ADDIU     SP, SP, 20

#new:Function $Function_8021900C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S3, 1C (SP)
    8:  DADDU     S3, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S2, 18 (SP)
   14:  SW        S1, 14 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S3)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  DADDU     S1, V0, R0
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     A0, S3, R0
   40:  DADDU     S2, V0, R0
   44:  ADDIU     V0, R0, FF81
   48:  BNE       S1, V0, .o54
   4C:  NOP
   50:  LW        S1, 148 (S3)
        .o54
   54:  JAL       {Func:GetActor}
   58:  DADDU     A0, S1, R0
   5C:  DADDU     A0, V0, R0
   60:  JAL       {Func:GetSprite}
   64:  DADDU     A1, S2, R0
   68:  LW        A0, 78 (V0)
   6C:  JAL       80265E44
   70:  ADDIU     A1, R0, 1
   74:  DADDU     A0, S3, R0
   78:  LW        A1, 0 (S0)
   7C:  JAL       {Func:SetVariable}
   80:  DADDU     A2, V0, R0
   84:  LW        RA, 20 (SP)
   88:  LW        S3, 1C (SP)
   8C:  LW        S2, 18 (SP)
   90:  LW        S1, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  ADDIU     V0, R0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28

#new:Function $Function_802190B0
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S1, 24 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S0, 20 (SP)
   14:  SDC1      F30, 58 (SP)
   18:  SDC1      F28, 50 (SP)
   1C:  SDC1      F26, 48 (SP)
   20:  SDC1      F24, 40 (SP)
   24:  SDC1      F22, 38 (SP)
   28:  SDC1      F20, 30 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       {Func:GetFloatVariable}
   38:  ADDIU     S0, S0, 4
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  DADDU     A0, S1, R0
   48:  JAL       {Func:GetFloatVariable}
   4C:  MOV.S     F30, F0
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  DADDU     A0, S1, R0
   5C:  JAL       {Func:GetFloatVariable}
   60:  MOV.S     F20, F0
   64:  LW        A1, 0 (S0)
   68:  ADDIU     S0, S0, 4
   6C:  DADDU     A0, S1, R0
   70:  JAL       {Func:GetFloatVariable}
   74:  MOV.S     F28, F0
   78:  LW        A1, 0 (S0)
   7C:  ADDIU     S0, S0, 4
   80:  DADDU     A0, S1, R0
   84:  JAL       {Func:GetFloatVariable}
   88:  MOV.S     F26, F0
   8C:  LW        A1, 0 (S0)
   90:  ADDIU     S0, S0, 4
   94:  DADDU     A0, S1, R0
   98:  JAL       {Func:GetFloatVariable}
   9C:  MOV.S     F24, F0
   A0:  DADDU     A0, S1, R0
   A4:  LW        A1, 0 (S0)
   A8:  JAL       {Func:GetVariable}
   AC:  MOV.S     F22, F0
   B0:  LW        A0, 148 (S1)
   B4:  JAL       {Func:GetActor}
   B8:  DADDU     S0, V0, R0
   BC:  CVT.D.S   F20, F20
   C0:  MFC1      A1, F30
   C4:  LIF       F1, 2.3125
   CC:  MTC1      R0, F0
   D0:  MFC1      A3, F28
   D4:  ADD.D     F20, F20, F0
   D8:  DADDU     A0, R0, R0
   DC:  SW        S0, 1C (SP)
   E0:  CVT.S.D   F20, F20
   E4:  MFC1      A2, F20
   E8:  DADDU     S0, V0, R0
   EC:  SWC1      F26, 10 (SP)
   F0:  SWC1      F24, 14 (SP)
   F4:  JAL       8006FF50
   F8:  SWC1      F22, 18 (SP)
   FC:  DADDU     A0, V0, R0
  100:  LB        V1, 210 (S0)
  104:  ADDIU     V0, R0, A
  108:  BNE       V1, V0, .o128
  10C:  NOP
  110:  LW        V0, C (A0)
  114:  LIO       AT, 3ECCCCCD
  11C:  MTC1      AT, F0
  120:  NOP
  124:  SWC1      F0, 28 (V0)
        .o128
  128:  LW        RA, 28 (SP)
  12C:  LW        S1, 24 (SP)
  130:  LW        S0, 20 (SP)
  134:  LDC1      F30, 58 (SP)
  138:  LDC1      F28, 50 (SP)
  13C:  LDC1      F26, 48 (SP)
  140:  LDC1      F24, 40 (SP)
  144:  LDC1      F22, 38 (SP)
  148:  LDC1      F20, 30 (SP)
  14C:  ADDIU     V0, R0, 2
  150:  JR        RA
  154:  ADDIU     SP, SP, 60

#new:Function $Function_80219208
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  LAH       A2, 800DC1EC
   14:  JAL       {Func:SetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        RA, 10 (SP)
   20:  ADDIU     V0, R0, 2
   24:  JR        RA
   28:  ADDIU     SP, SP, 18

#new:Function $Function_80219234
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       {Func:GetVariable}
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  DADDU     A0, S1, R0
   38:  JAL       {Func:GetVariable}
   3C:  DADDU     S3, V0, R0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  DADDU     A0, S1, R0
   4C:  JAL       {Func:GetVariable}
   50:  DADDU     S2, V0, R0
   54:  DADDU     A0, S1, R0
   58:  LW        A1, 0 (S0)
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     S0, V0, R0
   64:  LW        A0, 148 (S1)
   68:  JAL       {Func:GetActor}
   6C:  DADDU     S1, V0, R0
   70:  DADDU     V1, V0, R0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  ADDIU     V0, R0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28

#new:Function $Function_80219300
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80219358
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, V0, R0
   28:  ADDIU     V0, R0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       {Func:GetActor}
   3C:  NOP
   40:  DADDU     A0, V0, R0
   44:  LBU       V1, 136 (A0)
   48:  ADDIU     V0, R0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  DADDU     A0, S1, R0
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  DADDU     A0, S1, R0
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  ADDIU     A2, R0, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  ADDIU     V0, R0, 1
   84:  BNE       V1, V0, .o9C
   88:  DADDU     A0, S1, R0
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  ADDIU     A2, R0, FFFF
        .o98
   98:  DADDU     A0, S1, R0
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  DADDU     A2, R0, R0
        .oA4
   A4:  JAL       {Func:SetVariable}
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  ADDIU     V0, R0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20

PADDING: 8021941C to 80219420 (005B28CC to 005B28D0)
00000000 

#new:Function $Function_80219420
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_802311D8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_802194E0
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80231678
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_802195A0
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80231B08
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_80219660
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80231FA8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_80219720
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80232428
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_802197E0
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_802328D8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_802198A0
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80232BE8
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_80219960
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A1, S4, R0
   44:  DADDU     S3, V0, R0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       {Func:GetFloatVariable}
   5C:  DADDU     A0, S2, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S2, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S2, R0
   80:  JAL       {Func:GetVariable}
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S2, R0
   94:  JAL       {Func:GetVariable}
   98:  DADDU     S1, V0, R0
   9C:  DADDU     A0, S2, R0
   A0:  LW        A1, 0 (S0)
   A4:  JAL       {Func:GetFloatVariable}
   A8:  DADDU     S0, V0, R0
   AC:  LIF       F2, 180.0
   B4:  LIO       AT, 40490FD8
   BC:  MTC1      AT, F4
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  DADDU     A0, S2, R0
   F4:  DADDU     S3, S1, R0
   F8:  DADDU     A1, S4, R0
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A2, S1, R0
        .o104
  104:  LIO       AT, 40490FD8
  10C:  MTC1      AT, F0
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       {Func:CosRad}
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  DADDU     A0, S2, R0
  150:  MFC1      A2, F2
  154:  JAL       {Func:SetFloatVariable}
  158:  DADDU     A1, S5, R0
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  ADDIU     V0, R0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48

#new:Function $Function_80219AF0
    0:  ADDIU     SP, SP, FFB8
    4:  SW        S2, 18 (SP)
    8:  DADDU     S2, A0, R0
    C:  SW        RA, 28 (SP)
   10:  SW        S5, 24 (SP)
   14:  SW        S4, 20 (SP)
   18:  SW        S3, 1C (SP)
   1C:  SW        S1, 14 (SP)
   20:  SW        S0, 10 (SP)
   24:  SDC1      F24, 40 (SP)
   28:  SDC1      F22, 38 (SP)
   2C:  SDC1      F20, 30 (SP)
   30:  LW        S0, C (S2)
   34:  LW        S4, 0 (S0)
   38:  ADDIU     S0, S0, 4
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     A1, S4, R0
   44:  DADDU     S3, V0, R0
   48:  LW        S5, 0 (S0)
   4C:  ADDIU     S0, S0, 4
   50:  LW        A1, 0 (S0)
   54:  ADDIU     S0, S0, 4
   58:  JAL       {Func:GetFloatVariable}
   5C:  DADDU     A0, S2, R0
   60:  LW        A1, 0 (S0)
   64:  ADDIU     S0, S0, 4
   68:  DADDU     A0, S2, R0
   6C:  JAL       {Func:GetFloatVariable}
   70:  MOV.S     F24, F0
   74:  LW        A1, 0 (S0)
   78:  ADDIU     S0, S0, 4
   7C:  DADDU     A0, S2, R0
   80:  JAL       {Func:GetVariable}
   84:  MOV.S     F20, F0
   88:  LW        A1, 0 (S0)
   8C:  ADDIU     S0, S0, 4
   90:  DADDU     A0, S2, R0
   94:  JAL       {Func:GetVariable}
   98:  DADDU     S1, V0, R0
   9C:  DADDU     A0, S2, R0
   A0:  LW        A1, 0 (S0)
   A4:  JAL       {Func:GetFloatVariable}
   A8:  DADDU     S0, V0, R0
   AC:  LIF       F2, 180.0
   B4:  LIO       AT, 40490FD8
   BC:  MTC1      AT, F4
   C0:  DIV.S     F0, F0, F2
   C4:  MUL.S     F22, F0, F4
   C8:  NOP
   CC:  SUB.S     F20, F20, F24
   D0:  LIF       F0, 0.5
   D8:  NOP
   DC:  MUL.S     F20, F20, F0
   E0:  NOP
   E4:  BEQ       S0, R0, .o104
   E8:  SLT       V0, S1, S3
   EC:  BEQ       V0, R0, .o104
   F0:  DADDU     A0, S2, R0
   F4:  DADDU     S3, S1, R0
   F8:  DADDU     A1, S4, R0
   FC:  JAL       {Func:SetVariable}
  100:  DADDU     A2, S1, R0
        .o104
  104:  LIO       AT, 40490FD8
  10C:  MTC1      AT, F0
  110:  MTC1      S3, F12
  114:  NOP
  118:  CVT.S.W   F12, F12
  11C:  MUL.S     F12, F12, F0
  120:  NOP
  124:  MTC1      S1, F0
  128:  NOP
  12C:  CVT.S.W   F0, F0
  130:  DIV.S     F12, F12, F0
  134:  JAL       {Func:CosRad}
  138:  ADD.S     F12, F12, F22
  13C:  MUL.S     F0, F20, F0
  140:  NOP
  144:  ADD.S     F2, F24, F20
  148:  SUB.S     F2, F2, F0
  14C:  DADDU     A0, S2, R0
  150:  MFC1      A2, F2
  154:  JAL       {Func:SetFloatVariable}
  158:  DADDU     A1, S5, R0
  15C:  LW        RA, 28 (SP)
  160:  LW        S5, 24 (SP)
  164:  LW        S4, 20 (SP)
  168:  LW        S3, 1C (SP)
  16C:  LW        S2, 18 (SP)
  170:  LW        S1, 14 (SP)
  174:  LW        S0, 10 (SP)
  178:  LDC1      F24, 40 (SP)
  17C:  LDC1      F22, 38 (SP)
  180:  LDC1      F20, 30 (SP)
  184:  ADDIU     V0, R0, 2
  188:  JR        RA
  18C:  ADDIU     SP, SP, 48

#new:Function $Function_80219C80
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80233564
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_80219D40
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80233870
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:Function $Function_80219E00
    0:  ADDIU     SP, SP, FFD0
    4:  SW        S2, 20 (SP)
    8:  DADDU     S2, R0, R0
    C:  SW        S1, 1C (SP)
   10:  DADDU     S1, S2, R0
   14:  SW        S3, 24 (SP)
   18:  LIA       S3, 800934F0
   20:  SW        S0, 18 (SP)
   24:  LIA       S0, $???_80233950
   2C:  SW        RA, 28 (SP)
        .o30
   30:  LAW       V0, 8007419C
   38:  LW        A1, 0 (S0)
   3C:  LH        V1, 86 (V0)
   40:  LH        V0, 8C (V0)
   44:  SLL       V1, V1, 4
   48:  ADDU      V1, V1, S3
   4C:  LW        V1, 4 (V1)
   50:  SLL       V0, V0, 5
   54:  ADDU      V0, V0, V1
   58:  JAL       {Func:StringCompare}
   5C:  LW        A0, 0 (V0)
   60:  BNE       V0, R0, .o70
   64:  ADDIU     S1, S1, 1
   68:  BEQ       R0, R0, .o7C
   6C:  ADDIU     S2, R0, 1
        .o70
   70:  SLTIU     V0, S1, B
   74:  BNE       V0, R0, .o30
   78:  ADDIU     S0, S0, 4
        .o7C
   7C:  MTC1      R0, F0
   80:  NOP
   84:  MFC1      A1, F0
   88:  DADDU     A0, S2, R0
   8C:  SW        R0, 14 (SP)
   90:  DADDU     A2, A1, R0
   94:  DADDU     A3, A1, R0
   98:  JAL       80072950
   9C:  SW        A1, 10 (SP)
   A0:  LW        RA, 28 (SP)
   A4:  LW        S3, 24 (SP)
   A8:  LW        S2, 20 (SP)
   AC:  LW        S1, 1C (SP)
   B0:  LW        S0, 18 (SP)
   B4:  ADDIU     V0, R0, 2
   B8:  JR        RA
   BC:  ADDIU     SP, SP, 30

#new:IdleAnimations $IdleAnimations_80219EC0
.Status:Normal    00490001
.Status:Stone     00490000
.Status:Sleep     00490008
.Status:Poison    00490001
.Status:Stop      00490000
.Status:Static    00490001
.Status:Paralyze  00490000
.Status:Dizzy     00490009
.Status:Fear      00490009
.Status:End

#new:IdleAnimations $IdleAnimations_80219F0C
.Status:Normal    0049000B
.Status:End

#new:IdleAnimations $IdleAnimations_80219F18
.Status:Normal    004A0001
.Status:End

#new:DefenseTable $DefenseTable_80219F24
.Element:Normal 00000000
.Element:Mystery00000000
.Element:End

#new:StatusTable $StatusTable_80219F38
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80219FE4
00800000 01000000 FB2300FF $IdleAnimations_80219EC0 $DefenseTable_80219F24 00000000 00000000 00F30000 00000000 
00120001 02000000 000000FF $IdleAnimations_80219F0C $DefenseTable_80219F24 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_80219F18 $DefenseTable_80219F24 00000000 00000000 00000000 00000000 

#new:Actor $Lakitu
% stats
[Index]        2Eb 
[Level]        20`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80219F38 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80219FE4 
[Script]      $Script_Init_8021A078 
% move effectiveness
[Escape]       40`b 
[Item]         50`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -11`b  20`b % dx dy
[StatusIcon]   10`b  34`b % dx dy

#new:Script $Script_Init_8021A078
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021BD2C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021A0DC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A16C )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_8021A0DC
    0:  Return
    8:  End

#new:Script $Script_8021A0EC
    0:  Call     SetAnimation 	( .Actor:Self 00000001 00490003 )
   18:  Call     SetGoalToHome 	( .Actor:Self )
   28:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
   3C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:SinOut )
   58:  Call     SetAnimation 	( .Actor:Self 00000001 00490001 )
   70:  Return
   78:  End

#new:Script $Script_HandleEvent_8021A16C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00490004 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00490005 
   C0:  		SetConst  *Var[2]  00490006 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00490005 
  108:  		SetConst  *Var[2]  00490006 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00490006 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00490004 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00490004 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00490004 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  00490004 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  00490004 
  254:  		ExecWait 8029BD70 
  260:  		ExecWait $Script_8021A0EC 
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  00490004 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  00490004 
  2C4:  		ExecWait DoDeath 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  00490001 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  00490004 
  35C:  		ExecWait DoNormalHit 
  368:  		Wait     0000000A 
  374:  		SetConst  *Var[0]  00000001 
  384:  		SetConst  *Var[1]  00490004 
  394:  		ExecWait DoDeath 
  3A0:  		Return
  3A8:  	Case  ==  .Event:BeginFirstStrike
  3B4:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  3D0:  		Call     HPBarToCurrent ( .Actor:Self )
  3E0:  	Case  ==  .Event:EndFirstStrike
  3EC:  		ExecWait $Script_8021A0EC 
  3F8:  		Call     HPBarToHome 	( .Actor:Self )
  408:  	Case  ==  .Event:RecoverStatus
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00490001 
  434:  		ExecWait DoRecover 
  440:  	Case  ==  .Event:ScareAway
  44C:  		SetConst  *Var[0]  00000001 
  45C:  		SetConst  *Var[1]  00490003 
  46C:  		SetConst  *Var[2]  00490004 
  47C:  		ExecWait DoScareAway 
  488:  		Return
  490:  	Case  ==  .Event:BeginAirLift
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00490004 
  4BC:  		ExecWait DoAirLift 
  4C8:  	Case  ==  .Event:BlowAway
  4D4:  		SetConst  *Var[0]  00000001 
  4E4:  		SetConst  *Var[1]  00490004 
  4F4:  		ExecWait DoBlowAway 
  500:  		Return
  508:  	Default
  510:  EndSwitch
  518:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  52C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  540:  Return
  548:  End

#new:Script $Script_ThrowSpint
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   88:  Call     SetAnimation 	( .Actor:Self 00000001 00490003 )
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Call     SetGoalToPos 	( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
   D8:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   F0:  Call     SetAnimation 	( .Actor:Self 00000001 00490001 )
  108:  Call     SetAnimation 	( .Actor:Self 00000002 0049000B )
  120:  Call     SetAnimation 	( .Actor:Self 00000001 00490012 )
  138:  Wait     00000014 
  144:  Call     SetAnimation 	( .Actor:Self 00000001 00490013 )
  15C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  170:  If  *Var[A]  &  00080000 
  180:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  19C:  	Add  *Var[0]  FFFFFFFD 
  1AC:  	Add  *Var[1]  00000010 
  1BC:  	Add  *Var[2]  00000002 
  1CC:  	Call     PlayEffect  	( {FX:EnergyIn:ShortStreaks} *Var[0] *Var[1] *Var[2] *Fixed[0.40039062] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  210:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  22C:  	Add  *Var[1]  0000000C 
  23C:  	Add  *Var[2]  00000000 
  24C:  	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  26C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  28C:  Else
  294:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B0:  	Add  *Var[0]  FFFFFFF8 
  2C0:  	Add  *Var[1]  00000028 
  2D0:  	Add  *Var[2]  00000005 
  2E0:  	Call     PlayEffect  	( {FX:EnergyIn:ShortStreaks} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  324:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  340:  	Add  *Var[1]  0000001E 
  350:  	Add  *Var[2]  00000002 
  360:  	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  380:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  3A0:  EndIf
  3A8:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  3C4:  Wait     0000000A 
  3D0:  Thread
  3D8:  	Call     SetAnimation 	( .Actor:Self 00000001 00490015 )
  3F0:  	Wait     00000014 
  3FC:  	Call     SetAnimation 	( .Actor:Self 00000001 00490001 )
  414:  EndThread
  41C:  Call     SetAnimation 	( .Actor:Self 00000002 0049000C )
  434:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000020D2 )
  44C:  Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  46C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  490:  Switch  *Var[0] 
  49C:  	CaseOR  ==  00000006 
  4A8:  	CaseOR  ==  00000005 
  4B4:  		Set  *Var[A]  *Var[0] 
  4C4:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.0] )
  4DC:  		Call     SetGoalToTarget 	( .Actor:Self )
  4EC:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  508:  		Sub  *Var[0]  00000028 
  518:  		Set  *Var[1]  00000000 
  528:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
  550:  		Sub  *Var[0]  0000001E 
  560:  		If  *Var[A]  ==  00000005 
  570:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  594:  		EndIf
  59C:  		Call     8026F6EC ( FFFFFF81 )
  5AC:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000A .True )
  5D4:  		Sub  *Var[0]  00000014 
  5E4:  		Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000005 .True )
  60C:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  628:  		Wait     00000014 
  634:  		Call     8027D7F0 ( )
  640:  		Call     UseCamPreset 	( 00000002 )
  650:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  66C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  680:  		ExecWait $Script_8021A0EC 
  68C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  6A0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  6B8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6CC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  6E0:  		Return
  6E8:  	EndCaseGroup
  6F0:  EndSwitch
  6F8:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.0] )
  710:  Call     SetGoalToTarget 	( .Actor:Self )
  720:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  73C:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
  764:  Call     8026F6EC ( FFFFFF81 )
  774:  Wait     00000002 
  780:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  7A8:  Switch  *Var[0] 
  7B4:  	CaseOR  ==  00000000 
  7C0:  	CaseOR  ==  00000002 
  7CC:  		Call     UseCamPreset 	( 00000002 )
  7DC:  		Thread
  7E4:  			Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.0] )
  7FC:  			Call     SetGoalToTarget 	( .Actor:Self )
  80C:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  828:  			Sub  *Var[0]  00000028 
  838:  			Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
  860:  			Sub  *Var[0]  0000001E 
  870:  			Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000A .True )
  898:  			Sub  *Var[0]  00000014 
  8A8:  			Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000005 .True )
  8D0:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  8EC:  		EndThread
  8F4:  		Wait     00000014 
  900:  		Call     8027D7F0 ( )
  90C:  		ExecWait $Script_8021A0EC 
  918:  	EndCaseGroup
  920:  EndSwitch
  928:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  93C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  950:  Return
  958:  End

#new:Vector3D $Vector3D_8021B01C
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021B028
$Spiny $Vector3D_8021B01C 00000064 00000001 00000000 00000000 00000000 

#new:Script $Script_SummonSpiny
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000000E )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     SummonEnemy 	( $SpecialFormation_8021B028 00000000 )
   70:  Call     8027DCBC ( FFFFFF81 *Var[0] )
   84:  Set  *Var[B]  *Var[0] 
   94:  Call     SetAnimation 	( .Actor:Self 00000002 0049000B )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 00490012 )
   C4:  Wait     00000014 
   D0:  Call     SetAnimation 	( .Actor:Self 00000001 00490013 )
   E8:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   FC:  If  *Var[0]  &  00080000 
  10C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  128:  	Add  *Var[0]  FFFFFFFD 
  138:  	Add  *Var[1]  00000010 
  148:  	Add  *Var[2]  00000002 
  158:  	Call     PlayEffect  	( {FX:EnergyIn:ShortStreaks} *Var[0] *Var[1] *Var[2] *Fixed[0.40039062] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  19C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B8:  	Add  *Var[1]  0000000C 
  1C8:  	Add  *Var[2]  00000000 
  1D8:  	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  1F8:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  218:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  238:  Else
  240:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  25C:  	Add  *Var[0]  FFFFFFF8 
  26C:  	Add  *Var[1]  00000028 
  27C:  	Add  *Var[2]  00000005 
  28C:  	Call     PlayEffect  	( {FX:EnergyIn:ShortStreaks} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2EC:  	Add  *Var[1]  0000001E 
  2FC:  	Add  *Var[2]  00000002 
  30C:  	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  32C:  	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  34C:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  36C:  EndIf
  374:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  390:  Wait     0000000A 
  39C:  Thread
  3A4:  	Call     SetAnimation 	( .Actor:Self 00000001 00490015 )
  3BC:  	Wait     00000014 
  3C8:  	Call     SetAnimation 	( .Actor:Self 00000001 00490001 )
  3E0:  EndThread
  3E8:  Call     UseCamPreset 	( 00000002 )
  3F8:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000020D2 )
  410:  Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
  430:  Call     SetAnimation 	( .Actor:Self 00000002 0049000C )
  448:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.6005859] )
  460:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  47C:  Sub  *Var[0]  00000028 
  48C:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000C .True )
  4B4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] )
  4D4:  Sub  *Var[0]  0000001E 
  4E4:  Thread
  4EC:  	Call     SetSpriteRotationOffset 	( .Actor:Self 00000003 00000000 00000010 00000000 )
  50C:  	Set  *Var[0]  00000000 
  51C:  	Set  *Var[1]  00000000 
  52C:  	Set  *Flag[00]  00000000 
  53C:  	Loop     0000000C 
  548:  		Add  *Var[0]  0000001E 
  558:  		Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
  578:  		Add  *Var[1]  00000001 
  588:  		If  *Var[1]  >=  00000006 
  598:  			If  *Flag[00]  ==  00000001 
  5A8:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  5C4:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  5E0:  				Set  *Flag[00]  00000000 
  5F0:  			Else
  5F8:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  614:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  630:  				Set  *Flag[00]  00000001 
  640:  			EndIf
  648:  		EndIf
  650:  		Wait     00000001 
  65C:  	EndLoop
  664:  EndThread
  66C:  Thread
  674:  	Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[1.3007812] )
  68C:  	Call     JumpSpriteA 	( .Actor:Self 00000003 *Var[0] 00000000 *Var[2] 0000000C .True )
  6B4:  EndThread
  6BC:  Wait     00000001 
  6C8:  Call     8026F6EC ( FFFFFF81 )
  6D8:  Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
  6F0:  Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000C .True )
  718:  Call     PlayEffect  	( {FX:Steam:SmallOutward} *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  75C:  Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
  77C:  Call     SetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  798:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  7B4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  7D0:  Call     SetAnimation 	( *Var[B] 00000001 004A0001 )
  7E8:  Wait     00000014 
  7F4:  Call     SetAnimation 	( *Var[B] 00000001 004A0004 )
  80C:  Call     SetGoalToIndex ( *Var[B] *Var[A] )
  820:  Call     GetGoalPos  	( *Var[B] *Var[0] *Var[1] *Var[2] )
  83C:  Call     GetActorPos 	( *Var[B] *Var[3] *Var[4] *Var[5] )
  858:  If  *Var[0]  <  *Var[3] 
  868:  	Call     SetActorAngle 	( *Var[B] 00000000 )
  87C:  Else
  884:  	Call     SetActorAngle 	( *Var[B] 000000B4 )
  898:  EndIf
  8A0:  Call     SetActorSpeed 	( *Var[B] *Fixed[4.0] )
  8B4:  Call     RunToGoal   	( *Var[B] 00000000 .False )
  8CC:  Call     SetAnimation 	( *Var[B] 00000001 004A0001 )
  8E4:  Call     SetActorAngle 	( *Var[B] 00000000 )
  8F8:  Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  914:  Call     ForceHomePos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
  930:  Call     HPBarToHome 	( *Var[B] )
  940:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  958:  Add  *Var[0]  00000001 
  968:  Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
  980:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  994:  Call     UseIdleAnimation 	( .Actor:Self .True )
  9A8:  Return
  9B0:  End

#new:Script $Script_GetFirstOpenColumn
    0:  Call     CreateTargetList 	( 00008002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000000 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[5] )
   3C:  Call     GetIndexFromHome 	( *Var[0] *Var[5] )
   50:  Mod  *Var[5]  00000004 
   60:  Switch  *Var[5] 
   6C:  	Case  ==  00000000 
   78:  		Set  *Flag[01]  00000001 
   88:  	Case  ==  00000001 
   94:  		Set  *Flag[02]  00000001 
   A4:  	Case  ==  00000002 
   B0:  		Set  *Flag[03]  00000001 
   C0:  	Case  ==  00000003 
   CC:  		Set  *Flag[04]  00000001 
   DC:  EndSwitch
   E4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   F8:  If  *Var[0]  !=  FFFFFFFF 
  108:  	Goto     00000000 
  114:  EndIf
  11C:  If  *Flag[01]  ==  00000000 
  12C:  	Set  *Var[A]  00000000 
  13C:  	Return
  144:  EndIf
  14C:  If  *Flag[02]  ==  00000000 
  15C:  	Set  *Var[A]  00000001 
  16C:  	Return
  174:  EndIf
  17C:  If  *Flag[03]  ==  00000000 
  18C:  	Set  *Var[A]  00000002 
  19C:  	Return
  1A4:  EndIf
  1AC:  If  *Flag[04]  ==  00000000 
  1BC:  	Set  *Var[A]  00000003 
  1CC:  	Return
  1D4:  EndIf
  1DC:  Set  *Var[A]  FFFFFFFF 
  1EC:  Return
  1F4:  End

#new:Script $Script_CountActiveSummoners
    0:  Set  *Var[9]  00000000 
   10:  Call     CreateTargetList 	( 00008002 )
   20:  Call     InitTargetIterator 	( )
   2C:  Label    00000000 
   38:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   4C:  Call     GetActorType 	( *Var[0] *Var[2] )
   60:  Switch  *Var[2] 
   6C:  	Case  ==  0000002E 
   78:  		Call     GetStatusFlags ( *Var[0] *Var[3] )
   8C:  		If  *Var[3]  !&  0035D000 
   9C:  			Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
   B4:  			If  *Var[3]  <  00000003 
   C4:  				Add  *Var[9]  00000001 
   D4:  			EndIf
   DC:  		EndIf
   E4:  EndSwitch
   EC:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  100:  If  *Var[0]  !=  FFFFFFFF 
  110:  	Goto     00000000 
  11C:  EndIf
  124:  Return
  12C:  End

#new:Script $Script_TakeTurn_8021BD2C
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  >=  00000003 
   28:  	ExecWait $Script_ThrowSpint 
   34:  	Return
   3C:  EndIf
   44:  ExecWait $Script_GetFirstOpenColumn 
   50:  If  *Var[A]  ==  FFFFFFFF 
   60:  	ExecWait $Script_ThrowSpint 
   6C:  	Return
   74:  EndIf
   7C:  ExecWait $Script_CountActiveSummoners 
   88:  Switch  *Var[9] 
   94:  	Case  ==  00000001 
   A0:  		Call     RandInt     	( 000003E8 *Var[0] )
   B4:  		If  *Var[0]  <  000001F4 
   C4:  			ExecWait $Script_SummonSpiny 
   D0:  			Return
   D8:  		EndIf
   E0:  	Case  ==  00000002 
   EC:  		Call     RandInt     	( 000003E8 *Var[0] )
  100:  		If  *Var[0]  <  000000FA 
  110:  			ExecWait $Script_SummonSpiny 
  11C:  			Return
  124:  		EndIf
  12C:  	Case  ==  00000003 
  138:  		Call     RandInt     	( 000003E8 *Var[0] )
  14C:  		If  *Var[0]  <  00000096 
  15C:  			ExecWait $Script_SummonSpiny 
  168:  			Return
  170:  		EndIf
  178:  EndSwitch
  180:  ExecWait $Script_ThrowSpint 
  18C:  Return
  194:  End

PADDING: 8021BEC8 to 8021BED0 (005B5378 to 005B5380)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021BED0
.Status:Normal    004A0001
.Status:Stone     004A0000
.Status:Sleep     004A0010
.Status:Poison    004A0001
.Status:Stop      004A0000
.Status:Static    004A0001
.Status:Paralyze  004A0000
.Status:Dizzy     004A0012
.Status:Fear      004A0012
.Status:End

#new:IdleAnimations $IdleAnimations_8021BF1C
.Status:Normal    004A0002
.Status:Stone     004A0015
.Status:Sleep     004A0011
.Status:Poison    004A0002
.Status:Stop      004A0015
.Status:Static    004A0002
.Status:Paralyze  004A0015
.Status:Dizzy     004A0013
.Status:Fear      004A0013
.Status:End

#new:IdleAnimations $IdleAnimations_8021BF68
.Status:Normal    0049000B
.Status:End

#new:DefenseTable $DefenseTable_8021BF74
.Element:Normal 00000003
.Element:End

#new:DefenseTable $DefenseTable_8021BF80
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021BF8C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021C038
00800000 01000000 001400FF $IdleAnimations_8021BED0 $DefenseTable_8021BF74 00201000 00000000 00FC0000 00000000 
00020001 02000000 000000FF $IdleAnimations_8021BF68 $DefenseTable_8021BF74 00000000 00000000 00000000 00000000 

#new:Actor $Spiny
% stats
[Index]        2Fb 
[Level]        19`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021BF8C 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8021C038 
[Script]      $Script_Init_8021C0A8 
% move effectiveness
[Escape]       60`b 
[Item]         60`b 
[AirLift]      75`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_8021C0A8
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021C124 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021CDC0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021C2F4 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   6C:  Return
   74:  End

#new:Script $Script_Idle_8021C124
    0:  Return
    8:  End

#new:Script $Script_8021C134
    0:  Call     SetAnimation 	( .Actor:Self 00000002 0049000C )
   18:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00000001 .True )
   34:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
   50:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   64:  Call     SetGoalToHome 	( .Actor:Self )
   74:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   8C:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   A0:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00000001 .False )
   BC:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
   D8:  Call     SetAnimation 	( .Actor:Self 00000001 004A001A )
   F0:  Wait     00000008 
   FC:  Call     SetAnimation 	( .Actor:Self 00000001 004A0001 )
  114:  Return
  11C:  End

#new:Script $Script_8021C258
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[3] )
   18:  If  *Var[3]  ==  00000001 
   28:  	Set  *Var[1]  *Var[2] 
   38:  EndIf
   40:  Return
   48:  End

#new:IntTable $IntTable_8021C2A8
00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015 
00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004 
00000000 00000002 00000000 

#new:Script $Script_HandleEvent_8021C2F4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  004A0009 
   80:  		SetConst  *Var[2]  004A000A 
   90:  		ExecWait $Script_8021C258 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   D4:  		If  *Var[0]  !=  00000001 
   E4:  			SetConst  *Var[0]  00000001 
   F4:  			SetConst  *Var[1]  004A000B 
  104:  			SetConst  *Var[2]  004A000C 
  114:  			ExecWait DoBurnHit 
  120:  		Else
  128:  			SetConst  *Var[0]  00000001 
  138:  			SetConst  *Var[1]  004A000D 
  148:  			SetConst  *Var[2]  004A000E 
  158:  			ExecWait DoBurnHit 
  164:  		EndIf
  16C:  	Case  ==  .Event:BurnDeath
  178:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  190:  		If  *Var[0]  !=  00000001 
  1A0:  			SetConst  *Var[0]  00000001 
  1B0:  			SetConst  *Var[1]  004A000B 
  1C0:  			SetConst  *Var[2]  004A000C 
  1D0:  			ExecWait DoBurnHit 
  1DC:  			SetConst  *Var[0]  00000001 
  1EC:  			SetConst  *Var[1]  004A000C 
  1FC:  			ExecWait DoDeath 
  208:  		Else
  210:  			SetConst  *Var[0]  00000001 
  220:  			SetConst  *Var[1]  004A000D 
  230:  			SetConst  *Var[2]  004A000E 
  240:  			ExecWait DoBurnHit 
  24C:  			SetConst  *Var[0]  00000001 
  25C:  			SetConst  *Var[1]  004A000E 
  26C:  			ExecWait DoDeath 
  278:  		EndIf
  280:  		Return
  288:  	Case  ==  .Event:MultibounceHit
  294:  		SetConst  *Var[0]  00000001 
  2A4:  		SetConst  *Var[1]  004A0009 
  2B4:  		SetConst  *Var[2]  004A000A 
  2C4:  		ExecWait $Script_8021C258 
  2D0:  		ExecWait 8029B998 
  2DC:  	Case  ==  .Event:MultibounceDeath
  2E8:  		SetConst  *Var[0]  00000001 
  2F8:  		SetConst  *Var[1]  004A0009 
  308:  		SetConst  *Var[2]  004A000A 
  318:  		ExecWait $Script_8021C258 
  324:  		ExecWait 8029B998 
  330:  		SetConst  *Var[0]  00000001 
  340:  		SetConst  *Var[1]  004A0009 
  350:  		SetConst  *Var[2]  004A000A 
  360:  		ExecWait $Script_8021C258 
  36C:  		ExecWait DoDeath 
  378:  		Return
  380:  	Case  ==  .Event:FlipTrigger
  38C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  3A4:  		If  *Var[0]  ==  00000001 
  3B4:  			Call     SetAnimation 	( .Actor:Self 00000001 004A000A )
  3CC:  		Else
  3D4:  			Call     SetAnimation 	( .Actor:Self 00000001 004A0016 )
  3EC:  		EndIf
  3F4:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
  40C:  		Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
  424:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021BF80 )
  43C:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021BF1C )
  454:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00200000 .False )
  470:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  488:  		UseIntBuffer $IntTable_8021C2A8 
  494:  		Loop     00000013 
  4A0:  			Get1Int  *Var[0] 
  4AC:  			Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
  4C8:  			Wait     00000001 
  4D4:  		EndLoop
  4DC:  		Wait     00000014 
  4E8:  	CaseOR  ==  00000017
  4F4:  	CaseOR  ==  .Event:Immune
  500:  	CaseOR  ==  .Event:AirLiftFailed
  50C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  524:  		Switch  *Var[0] 
  530:  			Case  ==  00000000 
  53C:  				SetConst  *Var[0]  00000001 
  54C:  				SetConst  *Var[1]  004A0006 
  55C:  				ExecWait DoImmune 
  568:  				Call     SetAnimation 	( .Actor:Self 00000001 004A0007 )
  580:  				Wait     0000000A 
  58C:  			Case  ==  00000001 
  598:  				SetConst  *Var[0]  00000001 
  5A8:  				SetConst  *Var[1]  004A0002 
  5B8:  				ExecWait DoImmune 
  5C4:  		EndSwitch
  5CC:  	EndCaseGroup
  5D4:  	Case  ==  .Event:SpikeTaunt
  5E0:  		Wait     0000000A 
  5EC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  608:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  61C:  		If  *Var[0]  &  00080000 
  62C:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  644:  			If  *Var[A]  ==  00000000 
  654:  				Add  *Var[0]  00000000 
  664:  			EndIf
  66C:  			Add  *Var[1]  00000008 
  67C:  		Else
  684:  			Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
  69C:  			If  *Var[A]  ==  00000000 
  6AC:  				Add  *Var[0]  FFFFFFFF 
  6BC:  			EndIf
  6C4:  			Add  *Var[1]  00000016 
  6D4:  		EndIf
  6DC:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  720:  		Wait     00000014 
  72C:  	Case  ==  .Event:Death
  738:  		SetConst  *Var[0]  00000001 
  748:  		SetConst  *Var[1]  004A0009 
  758:  		SetConst  *Var[2]  004A000A 
  768:  		ExecWait $Script_8021C258 
  774:  		ExecWait DoNormalHit 
  780:  		Wait     0000000A 
  78C:  		SetConst  *Var[0]  00000001 
  79C:  		SetConst  *Var[1]  004A0009 
  7AC:  		SetConst  *Var[2]  004A000A 
  7BC:  		ExecWait $Script_8021C258 
  7C8:  		ExecWait DoDeath 
  7D4:  		Return
  7DC:  	Case  ==  .Event:RecoverStatus
  7E8:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  800:  		Switch  *Var[0] 
  80C:  			Case  ==  00000000 
  818:  				SetConst  *Var[0]  00000001 
  828:  				SetConst  *Var[1]  004A0001 
  838:  				ExecWait DoRecover 
  844:  			Case  ==  00000001 
  850:  				SetConst  *Var[0]  00000001 
  860:  				SetConst  *Var[1]  004A0002 
  870:  				ExecWait DoImmune 
  87C:  		EndSwitch
  884:  	Case  ==  .Event:ScareAway
  890:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  8A8:  		Switch  *Var[0] 
  8B4:  			Case  ==  00000000 
  8C0:  				SetConst  *Var[0]  00000001 
  8D0:  				SetConst  *Var[1]  004A0004 
  8E0:  				SetConst  *Var[2]  004A0009 
  8F0:  				ExecWait DoScareAway 
  8FC:  				Return
  904:  			Case  ==  00000001 
  910:  				SetConst  *Var[0]  00000001 
  920:  				SetConst  *Var[1]  004A0002 
  930:  				ExecWait DoImmune 
  93C:  		EndSwitch
  944:  	Case  ==  .Event:BeginAirLift
  950:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  968:  		Switch  *Var[0] 
  974:  			Case  ==  00000000 
  980:  				SetConst  *Var[0]  00000001 
  990:  				SetConst  *Var[1]  004A0004 
  9A0:  			Case  ==  00000001 
  9AC:  				SetConst  *Var[0]  00000001 
  9BC:  				SetConst  *Var[1]  004A0002 
  9CC:  		EndSwitch
  9D4:  		ExecWait DoAirLift 
  9E0:  	Case  ==  .Event:BlowAway
  9EC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  A04:  		Switch  *Var[0] 
  A10:  			Case  ==  00000000 
  A1C:  				SetConst  *Var[0]  00000001 
  A2C:  				SetConst  *Var[1]  004A0004 
  A3C:  			Case  ==  00000001 
  A48:  				SetConst  *Var[0]  00000001 
  A58:  				SetConst  *Var[1]  004A0002 
  A68:  		EndSwitch
  A70:  		ExecWait DoBlowAway 
  A7C:  		Return
  A84:  	Default
  A8C:  EndSwitch
  A94:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  AA8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  ABC:  Return
  AC4:  End

#new:Script $Script_TakeTurn_8021CDC0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   40:  If  *Var[0]  ==  00000001 
   50:  	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   68:  	Sub  *Var[0]  00000001 
   78:  	Call     SetActorVar 	( .Actor:Self 00000001 *Var[0] )
   90:  	If  *Var[0]  >  00000000 
   A0:  		Call     SetAnimation 	( .Actor:Self 00000001 004A0014 )
   B8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   D4:  		Wait     0000001E 
   E0:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   F8:  	Else
  100:  		Call     SetAnimation 	( .Actor:Self 00000001 004A0014 )
  118:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  134:  		Wait     00000014 
  140:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  158:  		SetConst  *Var[0]  00000001 
  168:  		SetConst  *Var[1]  004A0002 
  178:  		SetConst  *Var[2]  004A0001 
  188:  		ExecWait 8029BBB4 
  194:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  1AC:  		Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021BF74 )
  1C4:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021BED0 )
  1DC:  		Call     SetSpriteEventBits 	( .Actor:Self 00000001 00200000 .True )
  1F8:  		Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  210:  	EndIf
  218:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  22C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  240:  	Return
  248:  EndIf
  250:  Call     UseCamPreset 	( 0000003F )
  260:  Call     CamTargetActor ( .Actor:Self )
  270:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  288:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  29C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  2B4:  If  *Var[0]  ==  00000000 
  2C4:  	Wait     0000000A 
  2D0:  	Call     SetAnimation 	( .Actor:Self 00000001 004A0019 )
  2E8:  	Wait     00000008 
  2F4:  	Call     SetAnimation 	( .Actor:Self 00000001 004A0018 )
  30C:  	Wait     0000000A 
  318:  Else
  320:  	Wait     00000014 
  32C:  EndIf
  334:  Thread
  33C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  39C:  	Wait     0000000A 
  3A8:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  3EC:  	Wait     00000005 
  3F8:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  43C:  EndThread
  444:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  458:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00000001 .True )
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
  490:  Call     SetAnimation 	( .Actor:Self 00000002 0049000C )
  4A8:  Wait     0000000A 
  4B4:  Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002C7 )
  4CC:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  4E8:  Call     8026FA00 ( FFFFFF81 00000002 00000000 00000000 00000000 )
  508:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000004 00000010 )
  52C:  Switch  *Var[A] 
  538:  	CaseOR  ==  00000006 
  544:  	CaseOR  ==  00000005 
  550:  		Thread
  558:  			Loop     
  564:  				Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  580:  				Add  *Var[0]  0000001E 
  590:  				Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  5AC:  				If  *Var[0]  >  *Var[3] 
  5BC:  					BreakLoop
  5C4:  				EndIf
  5CC:  				Wait     00000001 
  5D8:  			EndLoop
  5E0:  			Call     UseCamPreset 	( 00000001 )
  5F0:  			If  *Var[A]  ==  00000005 
  600:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  624:  			EndIf
  62C:  			Wait     0000000F 
  638:  			Call     UseCamPreset 	( 00000002 )
  648:  		EndThread
  650:  		Call     SetGoalToTarget 	( .Actor:Self )
  660:  		Call     AddToGoalPos 	( .Actor:Self FFFFFF38 00000000 00000000 )
  67C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  690:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  6A8:  		Call     8026F6EC ( FFFFFF81 )
  6B8:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  6CC:  		Call     UseCamPreset 	( 00000002 )
  6DC:  		Call     8027D7F0 ( )
  6E8:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  704:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  718:  		ExecWait $Script_8021C134 
  724:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  73C:  		Return
  744:  	EndCaseGroup
  74C:  EndSwitch
  754:  Call     SetGoalToTarget 	( .Actor:Self )
  764:  Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
  778:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  790:  Call     8026F6EC ( FFFFFF81 )
  7A0:  Wait     00000002 
  7AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
  7D4:  Switch  *Var[0] 
  7E0:  	CaseOR  ==  00000000 
  7EC:  	CaseOR  ==  00000002 
  7F8:  		Call     UseCamPreset 	( 00000002 )
  808:  		Call     SetAnimation 	( .Actor:Self 00000002 0049000B )
  820:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  83C:  		Add  *Var[0]  00000014 
  84C:  		Set  *Var[1]  00000000 
  85C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  870:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  88C:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  8AC:  		Add  *Var[0]  0000000A 
  8BC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8D8:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  8F8:  		Add  *Var[0]  0000000A 
  908:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  924:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  944:  		Call     EnableActorBlur 	( .Actor:Self 00000000 )
  958:  		Call     8027D7F0 ( )
  964:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  978:  		ExecWait $Script_8021C134 
  984:  	EndCaseGroup
  98C:  EndSwitch
  994:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  9A8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  9BC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  9D0:  Return
  9D8:  End

#new:DefenseTable $DefenseTable_8021D7A0
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021D7AC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   30`
.Status:Shrink     30`
.Status:Stop       30`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021D858
00800000 01000000 FE1E00FF $IdleAnimations_8021D8A4 $DefenseTable_8021D7A0 00000000 00000000 00F80000 00000000 

#new:Actor $CrazeeDayzee
% stats
[Index]        32b 
[Level]        19`b 
[MaxHP]         8`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D7AC 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021D858 
[Script]      $Script_Init_8021D8F0 
% move effectiveness
[Escape]       50`b 
[Item]        100`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  34`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -14`b  17`b % dx dy
[StatusIcon]    9`b  25`b % dx dy

#new:IdleAnimations $IdleAnimations_8021D8A4
.Status:Normal    00480001
.Status:Stone     00480000
.Status:Sleep     0048000C
.Status:Poison    00480001
.Status:Stop      00480000
.Status:Static    00480001
.Status:Paralyze  00480000
.Status:Dizzy     0048000B
.Status:Fear      0048000B
.Status:End

#new:Script $Script_Init_8021D8F0
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021E7BC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021D93C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D988 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021D93C
    0:  Return
    8:  End

#new:Script $Script_8021D94C
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00480003 
   20:  ExecWait DoReturnHome 
   2C:  Return
   34:  End

#new:Script $Script_HandleEvent_8021D988
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  00480008 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  00480009 
   AC:  		SetConst  *Var[2]  0048000A 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  00480009 
   F4:  		SetConst  *Var[2]  0048000A 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  0048000A 
  130:  		ExecWait DoDeath 
  13C:  		Return
  144:  	Case  ==  .Event:MultibounceHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  00480008 
  170:  		ExecWait 8029B998 
  17C:  	Case  ==  .Event:MultibounceDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  00480008 
  1A8:  		ExecWait 8029B998 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  00480008 
  1D4:  		ExecWait DoDeath 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  00480008 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00480008 
  240:  		ExecWait 8029BD70 
  24C:  		ExecWait $Script_8021D94C 
  258:  	Case  ==  .Event:ShockDeath
  264:  		SetConst  *Var[0]  00000001 
  274:  		SetConst  *Var[1]  00480008 
  284:  		ExecWait DoShockHit 
  290:  		SetConst  *Var[0]  00000001 
  2A0:  		SetConst  *Var[1]  00480008 
  2B0:  		ExecWait DoDeath 
  2BC:  		Return
  2C4:  	CaseOR  ==  00000017
  2D0:  	CaseOR  ==  .Event:Immune
  2DC:  	CaseOR  ==  .Event:AirLiftFailed
  2E8:  		SetConst  *Var[0]  00000001 
  2F8:  		SetConst  *Var[1]  00480001 
  308:  		ExecWait DoImmune 
  314:  	EndCaseGroup
  31C:  	Case  ==  .Event:Death
  328:  		SetConst  *Var[0]  00000001 
  338:  		SetConst  *Var[1]  00480008 
  348:  		ExecWait DoNormalHit 
  354:  		Wait     0000000A 
  360:  		SetConst  *Var[0]  00000001 
  370:  		SetConst  *Var[1]  00480008 
  380:  		ExecWait DoDeath 
  38C:  		Return
  394:  	Case  ==  .Event:RecoverStatus
  3A0:  		SetConst  *Var[0]  00000001 
  3B0:  		SetConst  *Var[1]  00480001 
  3C0:  		ExecWait DoRecover 
  3CC:  	Case  ==  .Event:ScareAway
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00480004 
  3F8:  		SetConst  *Var[2]  00480008 
  408:  		ExecWait DoScareAway 
  414:  		Return
  41C:  	Case  ==  .Event:BeginAirLift
  428:  		SetConst  *Var[0]  00000001 
  438:  		SetConst  *Var[1]  00480004 
  448:  		ExecWait DoAirLift 
  454:  	Case  ==  .Event:BlowAway
  460:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  474:  		If  *Var[0]  !&  0035D000 
  484:  			If  *Var[0]  &  00080000 
  494:  				Call     8026BA04 ( FFFFFF81 00000000 00000001 00000000 )
  4B0:  			Else
  4B8:  				Call     8026BA04 ( FFFFFF81 00000000 00000003 00000000 )
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  		SetConst  *Var[0]  00000001 
  4F4:  		SetConst  *Var[1]  00480008 
  504:  		ExecWait DoBlowAway 
  510:  		Return
  518:  	Default
  520:  EndSwitch
  528:  Call     UseIdleAnimation 	( .Actor:Self .True )
  53C:  Return
  544:  End

#new:Script $Script_Crazee_Sing
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     GetBattlePhase ( *Var[0] )
   38:  If  *Var[0]  ==  .Phase:FirstStrike
   48:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   64:  	Call     SetActorPos 	( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
   80:  Else
   88:  	Call     UseCamPreset 	( 0000003F )
   98:  	Call     CamTargetActor ( .Actor:Self )
   A8:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   C0:  	Call     MoveCamOver 	( 00000046 )
   D0:  	Set  *Flag[00]  00000000 
   E0:  	Label    00000000 
   EC:  	If  *Flag[00]  ==  00000000 
   FC:  		Call     SetAnimation 	( .Actor:Self 00000001 0048000E )
  114:  		Set  *Flag[00]  00000001 
  124:  	Else
  12C:  		Call     SetAnimation 	( .Actor:Self 00000001 0048000F )
  144:  		Set  *Flag[00]  00000000 
  154:  	EndIf
  15C:  	Wait     00000001 
  168:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  17C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  198:  	Sub  *Var[0]  00000014 
  1A8:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C4:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  1E4:  	If  *Var[0]  >  00000000 
  1F4:  		Goto     00000000 
  200:  	EndIf
  208:  	If  *Flag[00]  ==  00000000 
  218:  		Call     SetAnimation 	( .Actor:Self 00000001 0048000E )
  230:  		Set  *Flag[00]  00000001 
  240:  	Else
  248:  		Call     SetAnimation 	( .Actor:Self 00000001 0048000F )
  260:  		Set  *Flag[00]  00000000 
  270:  	EndIf
  278:  	Wait     00000001 
  284:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  298:  	Call     SetGoalToPos 	( .Actor:Self FFFFFFDD 00000000 0000000A )
  2B4:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  2D4:  EndIf
  2DC:  Call     SetAnimation 	( .Actor:Self 00000001 00480001 )
  2F4:  Wait     0000000A 
  300:  Thread
  308:  	Call     SetAnimation 	( .Actor:Self 00000001 00480006 )
  320:  	Wait     00000028 
  32C:  	Call     SetAnimation 	( .Actor:Self 00000001 00480007 )
  344:  EndThread
  34C:  Wait     00000014 
  358:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:DayzeeSong )
  36C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  Add  *Var[1]  00000019 
  398:  Add  *Var[2]  00000002 
  3A8:  Loop     0000000D 
  3B4:  	Call     RandInt     	( 0000001E *Var[3] )
  3C8:  	Sub  *Var[3]  0000000F 
  3D8:  	Add  *Var[3]  *Var[0] 
  3E8:  	Call     PlayEffect  	( {FX:MusicNote:Left} *Var[3] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  	Wait     0000000A 
  438:  EndLoop
  440:  Call     SetAnimation 	( .Actor:Self 00000001 00480001 )
  458:  Wait     0000000A 
  464:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  488:  Switch  *Var[0] 
  494:  	CaseOR  ==  00000006 
  4A0:  	CaseOR  ==  00000005 
  4AC:  		Set  *Var[A]  *Var[0] 
  4BC:  		If  *Var[A]  ==  00000005 
  4CC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4F0:  		EndIf
  4F8:  		Call     UseCamPreset 	( 00000002 )
  508:  		Wait     0000000F 
  514:  		Call     8027D7F0 ( )
  520:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		ExecWait $Script_8021D94C 
  55C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  574:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  5C8:  Call     SetGoalToTarget 	( .Actor:Self )
  5D8:  Wait     00000002 
  5E4:  Call     DamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 80001314 00000004 00000020 )
  60C:  Switch  *Var[F] 
  618:  	CaseOR  ==  00000000 
  624:  	CaseOR  ==  00000002 
  630:  		Call     UseCamPreset 	( 00000002 )
  640:  		Call     MoveCamOver 	( 0000000A )
  650:  		Wait     00000014 
  65C:  		Call     8027D7F0 ( )
  668:  		ExecWait $Script_8021D94C 
  674:  	EndCaseGroup
  67C:  EndSwitch
  684:  Call     UseIdleAnimation 	( .Actor:Self .True )
  698:  Return
  6A0:  End

#new:Script $Script_Crazee_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     UseCamPreset 	( 00000013 )
   24:  Call     SetCamZoom  	( 0000012C )
   34:  Call     SetCamOffsetZ 	( 0000001E )
   44:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Sub  *Var[0]  00000014 
   70:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   88:  Call     MoveCamOver 	( 0000001E )
   98:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 00480003 )
   C4:  Wait     0000000A 
   D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
  100:  Sub  *Var[0]  00000014 
  110:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  144:  Wait     00000014 
  150:  Call     UseCamPreset 	( 00000002 )
  160:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  174:  Call     SetAnimation 	( .Actor:Self 00000001 00480004 )
  18C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  1A0:  Add  *Var[0]  000000C8 
  1B0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1E4:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  1F8:  Call     SetBattleFlagBits 	( 00040000 .True )
  20C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  220:  Call     RemoveActor 	( .Actor:Self )
  230:  Return
  238:  End

#new:Script $Script_TakeTurn_8021E7BC
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_Crazee_Sing 
   2C:  	Return
   34:  EndIf
   3C:  Call     GetActorHP  	( .Actor:Self *Var[0] )
   50:  Call     RandInt     	( 00000064 *Var[1] )
   64:  Switch  *Var[0] 
   70:  	Case  ==  00000001 
   7C:  		If  *Var[1]  <  00000050 
   8C:  			ExecWait $Script_Crazee_RunAway 
   98:  			Return
   A0:  		EndIf
   A8:  	Case  ==  00000002 
   B4:  		If  *Var[1]  <  00000028 
   C4:  			ExecWait $Script_Crazee_RunAway 
   D0:  			Return
   D8:  		EndIf
   E0:  	Case  ==  00000003 
   EC:  		If  *Var[1]  <  00000014 
   FC:  			ExecWait $Script_Crazee_RunAway 
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  00000004 
  124:  		If  *Var[1]  <  0000000A 
  134:  			ExecWait $Script_Crazee_RunAway 
  140:  			Return
  148:  		EndIf
  150:  EndSwitch
  158:  ExecWait $Script_Crazee_Sing 
  164:  Return
  16C:  End

#new:IdleAnimations $IdleAnimations_8021E930
.Status:Normal    004B0001
.Status:Stone     004B0000
.Status:Sleep     004B0009
.Status:Poison    004B0001
.Status:Stop      004B0000
.Status:Static    004B0001
.Status:Paralyze  004B0000
.Status:Dizzy     004B000A
.Status:Fear      004B000A
.Status:End

#new:DefenseTable $DefenseTable_8021E97C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021E988
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021EA34
00800000 01000000 F92100FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 02F60000 00000000 
00120001 02000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000 
00120001 03000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000 
00120001 04000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000 
00120001 05000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000 
00120001 06000000 001800FF $IdleAnimations_8021E930 $DefenseTable_8021E97C 00000000 00000000 FFFB0000 00000000 

#new:Actor $Bzzap
% stats
[Index]        31b 
[Level]        19`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021E988 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_8021EA34 
[Script]      $Script_Init_8021EB34 
% move effectiveness
[Escape]       40`b 
[Item]         70`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_8021EB34
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022139C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021EC20 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021EDB8 )
   3C:  Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
   5C:  Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
   7C:  Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
   9C:  Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
   BC:  Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
   DC:  Return
   E4:  End

#new:Script $Script_Idle_8021EC20
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   20:  If  *Var[A]  &  00041000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF9 00000013 )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 00000002 FFFFFFFA )
   68:  	Call     $Function_80218000 ( FFFFFFEC 00000014 0000000A 0000001B )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF9 00000021 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 00000002 FFFFFFF6 )
   C4:  	Call     $Function_80218000 ( FFFFFFF0 00000016 00000004 00000016 )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_8021ED30
    0:  Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
   20:  Call     SetAnimation 	( .Actor:Self 00000001 004B0003 )
   38:  Call     SetGoalToHome 	( .Actor:Self )
   48:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   5C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   78:  Return
   80:  End

#new:Script $Script_HandleEvent_8021EDB8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  004B0006 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  004B0007 
   C0:  		SetConst  *Var[2]  004B0008 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  004B0007 
  108:  		SetConst  *Var[2]  004B0008 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  004B0008 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  004B0006 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  004B0006 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  004B000B 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  004B0006 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  004B0006 
  254:  		ExecWait 8029BD70 
  260:  		ExecWait $Script_8021ED30 
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  004B0006 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  004B000B 
  2C4:  		ExecWait DoDeath 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  004B0001 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  004B0006 
  35C:  		ExecWait DoNormalHit 
  368:  		Wait     0000000A 
  374:  		SetConst  *Var[0]  00000001 
  384:  		SetConst  *Var[1]  004B000B 
  394:  		ExecWait DoDeath 
  3A0:  		Return
  3A8:  	Case  ==  .Event:BeginFirstStrike
  3B4:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  3D0:  		Call     HPBarToCurrent ( .Actor:Self )
  3E0:  	Case  ==  .Event:EndFirstStrike
  3EC:  		ExecWait $Script_8021ED30 
  3F8:  		Call     HPBarToHome 	( .Actor:Self )
  408:  	Case  ==  .Event:RecoverStatus
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  004B0001 
  434:  		ExecWait DoRecover 
  440:  	Case  ==  .Event:ScareAway
  44C:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  464:  		SetConst  *Var[0]  00000001 
  474:  		SetConst  *Var[1]  004B0003 
  484:  		SetConst  *Var[2]  004B0006 
  494:  		ExecWait DoScareAway 
  4A0:  		Return
  4A8:  	Case  ==  .Event:BeginAirLift
  4B4:  		SetConst  *Var[0]  00000001 
  4C4:  		SetConst  *Var[1]  004B0001 
  4D4:  		ExecWait DoAirLift 
  4E0:  	Case  ==  .Event:BlowAway
  4EC:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  500:  		If  *Var[0]  !&  0035D000 
  510:  			If  *Var[0]  &  00080000 
  520:  				Call     8026BA04 ( FFFFFF81 00000000 00000003 00000000 )
  53C:  			Else
  544:  				Call     8026BA04 ( FFFFFF81 00000000 00000009 00000000 )
  560:  			EndIf
  568:  		EndIf
  570:  		SetConst  *Var[0]  00000001 
  580:  		SetConst  *Var[1]  004B0006 
  590:  		ExecWait DoBlowAway 
  59C:  	Default
  5A4:  EndSwitch
  5AC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5C0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5D4:  Return
  5DC:  End

#new:Script $Script_Sting
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 004B0003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000034 0000000A 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
   E8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  10C:  Switch  *Var[0] 
  118:  	CaseOR  ==  00000006 
  124:  	CaseOR  ==  00000005 
  130:  		Set  *Var[A]  *Var[0] 
  140:  		Wait     0000000A 
  14C:  		Call     SetGoalToTarget 	( .Actor:Self )
  15C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  178:  		Add  *Var[0]  00000014 
  188:  		Add  *Var[2]  00000001 
  198:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  1C8:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  1E4:  		Wait     00000005 
  1F0:  		Call     PlaySoundAtActor 	( .Actor:Self 000020CA )
  204:  		Call     SetAnimation 	( .Actor:Self 00000001 004B0004 )
  21C:  		Wait     0000000A 
  228:  		If  *Var[A]  ==  00000005 
  238:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  25C:  		EndIf
  264:  		Wait     0000000F 
  270:  		Call     UseCamPreset 	( 00000002 )
  280:  		Call     8027D7F0 ( )
  28C:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  2A0:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  2BC:  		ExecWait $Script_8021ED30 
  2C8:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  2E0:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  2F4:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  308:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  31C:  		Return
  324:  	EndCaseGroup
  32C:  EndSwitch
  334:  Wait     0000000A 
  340:  Call     SetGoalToTarget 	( .Actor:Self )
  350:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  36C:  Add  *Var[0]  00000014 
  37C:  Add  *Var[2]  00000001 
  38C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3A8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  3BC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  3D8:  Wait     00000005 
  3E4:  Call     PlaySoundAtActor 	( .Actor:Self 000020CA )
  3F8:  Call     SetAnimation 	( .Actor:Self 00000001 004B0004 )
  410:  Wait     00000006 
  41C:  Wait     00000002 
  428:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020328 00000006 00000020 )
  450:  Switch  *Var[0] 
  45C:  	CaseOR  ==  00000000 
  468:  	CaseOR  ==  00000002 
  474:  		Call     UseCamPreset 	( 00000002 )
  484:  		Wait     00000014 
  490:  		Call     8027D7F0 ( )
  49C:  		ExecWait $Script_8021ED30 
  4A8:  	EndCaseGroup
  4B0:  EndSwitch
  4B8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4CC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  4E0:  Return
  4E8:  End

#new:Script $Script_8021F88C
    0:  Set  *Var[9]  *Var[0] 
   10:  Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
   28:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   44:  Add  *Var[A]  000000C8 
   54:  Add  *Var[B]  00000064 
   64:  Call     SetSpritePos 	( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] )
   84:  Call     SetSpriteFlagBits 	( .Actor:Self *Var[9] 00000001 .False )
   A0:  Call     SetAnimation 	( .Actor:Self *Var[9] 004B0003 )
   B8:  Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
   D4:  Add  *Var[B]  00000032 
   E4:  Sub  *Var[C]  0000001E 
   F4:  Call     SetSpriteSpeed ( .Actor:Self *Var[9] *Fixed[6.0] )
  10C:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[9] *Fixed[1.0] )
  124:  Call     MoveSpriteTo 	( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
  150:  Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  16C:  Call     GetSpriteOffset 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
  18C:  Call     MakeLerp    	( 0000005A 000001C2 00000032 00000000 )
  1A8:  Label    00000000 
  1B4:  Call     UpdateLerp  	( )
  1C0:  Call     $Function_802180CC ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
  1E4:  Call     SetSpritePos 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
  204:  If  *Var[3]  >  *Var[6] 
  214:  	Call     8026B438 ( FFFFFF81 *Var[9] 000000B4 )
  22C:  Else
  234:  	Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
  24C:  EndIf
  254:  Wait     00000001 
  260:  If  *Var[1]  ==  00000001 
  270:  	Goto     00000000 
  27C:  EndIf
  284:  Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
  29C:  If  *Var[9]  ==  00000002 
  2AC:  	Call     UseCamPreset 	( 00000008 )
  2BC:  	Call     SetCamZoom  	( 00000190 )
  2CC:  	Call     SetCamOffsetZ 	( 0000001E )
  2DC:  	Call     CamTargetActor ( .Actor:Player )
  2EC:  	Call     MoveCamOver 	( 0000003C )
  2FC:  EndIf
  304:  Call     SetAnimation 	( .Actor:Self *Var[9] 004B0003 )
  31C:  Call     GetActorPos 	( .Actor:Player *Var[A] *Var[B] *Var[C] )
  338:  Add  *Var[B]  0000001E 
  348:  Add  *Var[C]  0000001E 
  358:  Call     SetSpriteSpeed ( .Actor:Self *Var[9] *Fixed[6.0] )
  370:  Call     SetSpriteJumpscale 	( .Actor:Self *Var[9] *Fixed[1.0] )
  388:  Call     MoveSpriteTo 	( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
  3B4:  Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
  3D0:  Call     GetSpriteOffset 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
  3F0:  Call     MakeLerp    	( FFFFFFA6 FFFFFD30 00000064 00000000 )
  40C:  Label    00000001 
  418:  Call     UpdateLerp  	( )
  424:  Call     $Function_802180CC ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
  448:  Call     SetSpritePos 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
  468:  If  *Var[3]  >  *Var[6] 
  478:  	Call     8026B438 ( FFFFFF81 *Var[9] 000000B4 )
  490:  Else
  498:  	Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
  4B0:  EndIf
  4B8:  Wait     00000001 
  4C4:  If  *Var[1]  ==  00000001 
  4D4:  	Goto     00000001 
  4E0:  EndIf
  4E8:  Return
  4F0:  End

#new:Script $Script_Swarm
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     8026FA00 ( FFFFFF81 00000002 00000001 00000000 00000000 )
   94:  Call     8026FA00 ( FFFFFF81 00000003 00000001 00000000 00000000 )
   B4:  Call     8026FA00 ( FFFFFF81 00000004 00000001 00000000 00000000 )
   D4:  Call     8026FA00 ( FFFFFF81 00000005 00000001 00000000 00000000 )
   F4:  Call     8026FA00 ( FFFFFF81 00000006 00000001 00000000 00000000 )
  114:  Call     PlaySoundAtActor 	( .Actor:Self 000020CC )
  128:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  13C:  Call     SetAnimation 	( .Actor:Self 00000001 004B0005 )
  154:  Wait     00000028 
  160:  Call     SetAnimation 	( .Actor:Self 00000001 004B0001 )
  178:  Call     SetActorAngle 	( .Actor:Self 00000000 )
  18C:  Call     PlaySound   	( 00000358 )
  19C:  Set  *Var[0]  00000002 
  1AC:  Exec     $Script_8021F88C *Var[A] 
  1BC:  Wait     0000000B 
  1C8:  Set  *Var[0]  00000003 
  1D8:  Exec     $Script_8021F88C 
  1E4:  Wait     0000000B 
  1F0:  Set  *Var[0]  00000004 
  200:  Exec     $Script_8021F88C 
  20C:  Wait     0000000B 
  218:  Set  *Var[0]  00000005 
  228:  Exec     $Script_8021F88C 
  234:  Wait     0000000B 
  240:  Set  *Var[0]  00000006 
  250:  Exec     $Script_8021F88C 
  25C:  Label    00000000 
  268:  DoesScriptExist *Var[A] *Var[0] 
  278:  Wait     00000001 
  284:  If  *Var[0]  ==  00000001 
  294:  	Goto     00000000 
  2A0:  EndIf
  2A8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2CC:  Switch  *Var[0] 
  2D8:  	CaseOR  ==  00000006 
  2E4:  	CaseOR  ==  00000005 
  2F0:  		Set  *Var[A]  *Var[0] 
  300:  		Thread
  308:  			Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000020CB )
  320:  			Call     SetAnimation 	( .Actor:Self 00000002 004B0004 )
  338:  			Call     SetGoalToTarget 	( .Actor:Self )
  348:  			Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
  364:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  			Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[3.0] )
  398:  			Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
  3C4:  			Call     SetAnimation 	( .Actor:Self 00000002 004B0003 )
  3DC:  			Call     8026B438 ( FFFFFF81 00000002 000000B4 )
  3F4:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  410:  			Add  *Var[1]  00000064 
  420:  			Add  *Var[2]  00000064 
  430:  			Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  44C:  			Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
  478:  			Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  490:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  4AC:  		EndThread
  4B4:  		Wait     0000000B 
  4C0:  		Thread
  4C8:  			Call     PlaySoundAtSprite 	( .Actor:Self 00000003 000020CB )
  4E0:  			Call     SetAnimation 	( .Actor:Self 00000003 004B0004 )
  4F8:  			Call     SetGoalToTarget 	( .Actor:Self )
  508:  			Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
  524:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  			Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[3.0] )
  558:  			Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
  584:  			Call     SetAnimation 	( .Actor:Self 00000003 004B0003 )
  59C:  			Call     8026B438 ( FFFFFF81 00000003 000000B4 )
  5B4:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5D0:  			Add  *Var[1]  00000064 
  5E0:  			Add  *Var[2]  00000064 
  5F0:  			Call     AddActorDecoration 	( .Actor:Self 00000003 00000000 .Decoration:Sweat )
  60C:  			Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
  638:  			Call     RemoveActorDecoration 	( .Actor:Self 00000003 00000000 )
  650:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  66C:  		EndThread
  674:  		Wait     0000000B 
  680:  		Thread
  688:  			Call     PlaySoundAtSprite 	( .Actor:Self 00000004 000020CB )
  6A0:  			Call     SetAnimation 	( .Actor:Self 00000004 004B0004 )
  6B8:  			Call     SetGoalToTarget 	( .Actor:Self )
  6C8:  			Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
  6E4:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  700:  			Call     SetSpriteSpeed ( .Actor:Self 00000004 *Fixed[3.0] )
  718:  			Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
  744:  			Call     SetAnimation 	( .Actor:Self 00000004 004B0003 )
  75C:  			Call     8026B438 ( FFFFFF81 00000004 000000B4 )
  774:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  790:  			Add  *Var[1]  00000064 
  7A0:  			Add  *Var[2]  00000064 
  7B0:  			Call     AddActorDecoration 	( .Actor:Self 00000004 00000000 .Decoration:Sweat )
  7CC:  			Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
  7F8:  			Call     RemoveActorDecoration 	( .Actor:Self 00000004 00000000 )
  810:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
  82C:  		EndThread
  834:  		Wait     0000000B 
  840:  		Thread
  848:  			Call     PlaySoundAtSprite 	( .Actor:Self 00000005 000020CB )
  860:  			Call     SetAnimation 	( .Actor:Self 00000005 004B0004 )
  878:  			Call     SetGoalToTarget 	( .Actor:Self )
  888:  			Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
  8A4:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8C0:  			Call     SetSpriteSpeed ( .Actor:Self 00000005 *Fixed[3.0] )
  8D8:  			Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
  904:  			Call     SetAnimation 	( .Actor:Self 00000005 004B0003 )
  91C:  			Call     8026B438 ( FFFFFF81 00000005 000000B4 )
  934:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  950:  			Add  *Var[1]  00000064 
  960:  			Add  *Var[2]  00000064 
  970:  			Call     AddActorDecoration 	( .Actor:Self 00000005 00000000 .Decoration:Sweat )
  98C:  			Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
  9B8:  			Call     RemoveActorDecoration 	( .Actor:Self 00000005 00000000 )
  9D0:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
  9EC:  		EndThread
  9F4:  		Wait     0000000B 
  A00:  		Thread
  A08:  			Call     PlaySoundAtSprite 	( .Actor:Self 00000006 000020CB )
  A20:  			Call     SetAnimation 	( .Actor:Self 00000006 004B0004 )
  A38:  			Call     SetGoalToTarget 	( .Actor:Self )
  A48:  			Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
  A64:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A80:  			Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
  A98:  			Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
  AC4:  			Call     SetAnimation 	( .Actor:Self 00000006 004B0003 )
  ADC:  			Call     8026B438 ( FFFFFF81 00000006 000000B4 )
  AF4:  			Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B10:  			Add  *Var[1]  00000064 
  B20:  			Add  *Var[2]  00000064 
  B30:  			Call     AddActorDecoration 	( .Actor:Self 00000006 00000000 .Decoration:Sweat )
  B4C:  			Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
  B78:  			Call     RemoveActorDecoration 	( .Actor:Self 00000006 00000000 )
  B90:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
  BAC:  		EndThread
  BB4:  		Wait     0000000B 
  BC0:  		If  *Var[A]  ==  00000005 
  BD0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  BF4:  		EndIf
  BFC:  		Wait     0000001E 
  C08:  		Call     UseCamPreset 	( 00000002 )
  C18:  		Wait     0000001E 
  C24:  		Call     802D62B8 ( 00000358 )
  C34:  		Call     8027D7F0 ( )
  C40:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  C54:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  C68:  		Return
  C70:  	EndCaseGroup
  C78:  EndSwitch
  C80:  Thread
  C88:  	Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000020CB )
  CA0:  	Call     SetAnimation 	( .Actor:Self 00000002 004B0004 )
  CB8:  	Call     SetGoalToTarget 	( .Actor:Self )
  CC8:  	Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
  CE4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  D00:  	Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[3.0] )
  D18:  	Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
  D44:  	Wait     00000002 
  D50:  	Call     SetGoalToTarget 	( .Actor:Self )
  D60:  	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000010 )
  D88:  	Call     SetAnimation 	( .Actor:Self 00000002 004B0003 )
  DA0:  	Call     8026B438 ( FFFFFF81 00000002 000000B4 )
  DB8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  DD4:  	Add  *Var[1]  00000064 
  DE4:  	Add  *Var[2]  00000064 
  DF4:  	Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
  E20:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
  E3C:  EndThread
  E44:  Wait     0000000B 
  E50:  Thread
  E58:  	Call     PlaySoundAtSprite 	( .Actor:Self 00000003 000020CB )
  E70:  	Call     SetAnimation 	( .Actor:Self 00000003 004B0004 )
  E88:  	Call     SetGoalToTarget 	( .Actor:Self )
  E98:  	Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
  EB4:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  ED0:  	Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[3.0] )
  EE8:  	Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
  F14:  	Wait     00000002 
  F20:  	Call     SetGoalToTarget 	( .Actor:Self )
  F30:  	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000040 )
  F58:  	Call     SetAnimation 	( .Actor:Self 00000003 004B0003 )
  F70:  	Call     8026B438 ( FFFFFF81 00000003 000000B4 )
  F88:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  FA4:  	Add  *Var[1]  00000064 
  FB4:  	Add  *Var[2]  00000064 
  FC4:  	Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
  FF0:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
 100C:  EndThread
 1014:  Wait     0000000B 
 1020:  Thread
 1028:  	Call     PlaySoundAtSprite 	( .Actor:Self 00000004 000020CB )
 1040:  	Call     SetAnimation 	( .Actor:Self 00000004 004B0004 )
 1058:  	Call     SetGoalToTarget 	( .Actor:Self )
 1068:  	Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
 1084:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 10A0:  	Call     SetSpriteSpeed ( .Actor:Self 00000004 *Fixed[3.0] )
 10B8:  	Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
 10E4:  	Wait     00000002 
 10F0:  	Call     SetGoalToTarget 	( .Actor:Self )
 1100:  	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000040 )
 1128:  	Call     SetAnimation 	( .Actor:Self 00000004 004B0003 )
 1140:  	Call     8026B438 ( FFFFFF81 00000004 000000B4 )
 1158:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1174:  	Add  *Var[1]  00000064 
 1184:  	Add  *Var[2]  00000064 
 1194:  	Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
 11C0:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
 11DC:  EndThread
 11E4:  Wait     0000000B 
 11F0:  Thread
 11F8:  	Call     PlaySoundAtSprite 	( .Actor:Self 00000005 000020CB )
 1210:  	Call     SetAnimation 	( .Actor:Self 00000005 004B0004 )
 1228:  	Call     SetGoalToTarget 	( .Actor:Self )
 1238:  	Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
 1254:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1270:  	Call     SetSpriteSpeed ( .Actor:Self 00000005 *Fixed[3.0] )
 1288:  	Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
 12B4:  	Wait     00000002 
 12C0:  	Call     SetGoalToTarget 	( .Actor:Self )
 12D0:  	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000040 )
 12F8:  	Call     SetAnimation 	( .Actor:Self 00000005 004B0003 )
 1310:  	Call     8026B438 ( FFFFFF81 00000005 000000B4 )
 1328:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1344:  	Add  *Var[1]  00000064 
 1354:  	Add  *Var[2]  00000064 
 1364:  	Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
 1390:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
 13AC:  EndThread
 13B4:  Wait     0000000B 
 13C0:  Wait     00000001 
 13CC:  Call     PlaySoundAtSprite 	( .Actor:Self 00000006 000020CB )
 13E4:  Call     SetAnimation 	( .Actor:Self 00000006 004B0004 )
 13FC:  Call     SetGoalToTarget 	( .Actor:Self )
 140C:  Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
 1428:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 1444:  Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
 145C:  Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
 1488:  Wait     00000002 
 1494:  Call     SetGoalToTarget 	( .Actor:Self )
 14A4:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000020 )
 14CC:  Switch  *Var[0] 
 14D8:  	CaseOR  ==  00000000 
 14E4:  	CaseOR  ==  00000002 
 14F0:  		Call     UseCamPreset 	( 00000002 )
 1500:  		Call     SetAnimation 	( .Actor:Self 00000006 004B0003 )
 1518:  		Call     8026B438 ( FFFFFF81 00000006 000000B4 )
 1530:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
 154C:  		Add  *Var[1]  00000064 
 155C:  		Add  *Var[2]  00000064 
 156C:  		Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
 1598:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
 15B4:  		Call     802D62B8 ( 00000358 )
 15C4:  		Call     8027D7F0 ( )
 15D0:  	EndCaseGroup
 15D8:  EndSwitch
 15E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 15F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
 1608:  Return
 1610:  End

#new:Script $Script_TakeTurn_8022139C
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_Sting 
   2C:  	Return
   34:  EndIf
   3C:  Call     RandInt     	( 000003E8 *Var[0] )
   50:  If  *Var[0]  <  000001F4 
   60:  	ExecWait $Script_Sting 
   6C:  Else
   74:  	ExecWait $Script_Swarm 
   80:  EndIf
   88:  Return
   90:  End

PADDING: 80221434 to 80221440 (005BA8E4 to 005BA8F0)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_80221440
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_8022144C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      10`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      10`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   10`
.Status:Shrink     10`
.Status:Stop       10`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_802214F8
00800000 01000000 FE1E00FF $IdleAnimations_80221544 $DefenseTable_80221440 00000000 00000000 00F80000 00000000 

#new:Actor $AmazyDayzee
% stats
[Index]        33b 
[Level]       100`b 
[MaxHP]        20`b 
[Coins]         5`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022144C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802214F8 
[Script]      $Script_Init_80221590 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  70`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  34`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -14`b  17`b % dx dy
[StatusIcon]    9`b  25`b % dx dy

#new:IdleAnimations $IdleAnimations_80221544
.Status:Normal    00480101
.Status:Stone     00480100
.Status:Sleep     0048010C
.Status:Poison    00480101
.Status:Stop      00480100
.Status:Static    00480101
.Status:Paralyze  00480100
.Status:Dizzy     0048010B
.Status:Fear      0048010B
.Status:End

#new:Script $Script_Init_80221590
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222500 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802215DC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802216CC )
   3C:  Return
   44:  End

#new:Script $Script_Idle_802215DC
    0:  Label    00000000 
    C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   28:  Add  *Var[1]  0000000F 
   38:  Sub  *Var[2]  00000002 
   48:  Call     PlayEffect  	( 00000011 00000002 *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   8C:  Wait     0000000F 
   98:  Goto     00000000 
   A4:  Return
   AC:  End

#new:Script $Script_80221690
    0:  SetConst  *Var[0]  00000001 
   10:  SetConst  *Var[1]  00480103 
   20:  ExecWait DoReturnHome 
   2C:  Return
   34:  End

#new:Script $Script_HandleEvent_802216CC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	CaseOR  ==  .Event:HitCombo
   40:  	CaseOR  ==  .Event:Hit
   4C:  		SetConst  *Var[0]  00000001 
   5C:  		SetConst  *Var[1]  00480108 
   6C:  		ExecWait DoNormalHit 
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit
   8C:  		SetConst  *Var[0]  00000001 
   9C:  		SetConst  *Var[1]  00480109 
   AC:  		SetConst  *Var[2]  0048010A 
   BC:  		ExecWait DoBurnHit 
   C8:  	Case  ==  .Event:BurnDeath
   D4:  		SetConst  *Var[0]  00000001 
   E4:  		SetConst  *Var[1]  00480109 
   F4:  		SetConst  *Var[2]  0048010A 
  104:  		ExecWait DoBurnHit 
  110:  		SetConst  *Var[0]  00000001 
  120:  		SetConst  *Var[1]  0048010A 
  130:  		ExecWait DoDeath 
  13C:  		Return
  144:  	Case  ==  .Event:MultibounceHit
  150:  		SetConst  *Var[0]  00000001 
  160:  		SetConst  *Var[1]  00480108 
  170:  		ExecWait 8029B998 
  17C:  	Case  ==  .Event:MultibounceDeath
  188:  		SetConst  *Var[0]  00000001 
  198:  		SetConst  *Var[1]  00480108 
  1A8:  		ExecWait 8029B998 
  1B4:  		SetConst  *Var[0]  00000001 
  1C4:  		SetConst  *Var[1]  00480108 
  1D4:  		ExecWait DoDeath 
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit
  1F4:  		SetConst  *Var[0]  00000001 
  204:  		SetConst  *Var[1]  00480108 
  214:  		ExecWait DoShockHit 
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00480108 
  240:  		ExecWait 8029BD70 
  24C:  		ExecWait $Script_80221690 
  258:  	Case  ==  .Event:ShockDeath
  264:  		SetConst  *Var[0]  00000001 
  274:  		SetConst  *Var[1]  00480108 
  284:  		ExecWait DoShockHit 
  290:  		SetConst  *Var[0]  00000001 
  2A0:  		SetConst  *Var[1]  00480108 
  2B0:  		ExecWait DoDeath 
  2BC:  		Return
  2C4:  	CaseOR  ==  00000017
  2D0:  	CaseOR  ==  .Event:Immune
  2DC:  	CaseOR  ==  .Event:AirLiftFailed
  2E8:  		SetConst  *Var[0]  00000001 
  2F8:  		SetConst  *Var[1]  00480101 
  308:  		ExecWait DoImmune 
  314:  	EndCaseGroup
  31C:  	Case  ==  .Event:Death
  328:  		SetConst  *Var[0]  00000001 
  338:  		SetConst  *Var[1]  00480108 
  348:  		ExecWait DoNormalHit 
  354:  		Wait     0000000A 
  360:  		SetConst  *Var[0]  00000001 
  370:  		SetConst  *Var[1]  00480108 
  380:  		ExecWait DoDeath 
  38C:  		Return
  394:  	Case  ==  .Event:RecoverStatus
  3A0:  		SetConst  *Var[0]  00000001 
  3B0:  		SetConst  *Var[1]  00480101 
  3C0:  		ExecWait DoRecover 
  3CC:  	Case  ==  .Event:ScareAway
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00480104 
  3F8:  		SetConst  *Var[2]  00480108 
  408:  		ExecWait DoScareAway 
  414:  		Return
  41C:  	Case  ==  .Event:BeginAirLift
  428:  		SetConst  *Var[0]  00000001 
  438:  		SetConst  *Var[1]  00480104 
  448:  		ExecWait DoAirLift 
  454:  	Case  ==  .Event:BlowAway
  460:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  474:  		If  *Var[0]  !&  0035D000 
  484:  			If  *Var[0]  &  00080000 
  494:  				Call     8026BA04 ( FFFFFF81 00000000 00000001 00000000 )
  4B0:  			Else
  4B8:  				Call     8026BA04 ( FFFFFF81 00000000 00000003 00000000 )
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  		SetConst  *Var[0]  00000001 
  4F4:  		SetConst  *Var[1]  00480108 
  504:  		ExecWait DoBlowAway 
  510:  		Return
  518:  	Default
  520:  EndSwitch
  528:  Call     UseIdleAnimation 	( .Actor:Self .True )
  53C:  Return
  544:  End

#new:Script $Script_Amazy_Sing
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   28:  Call     GetBattlePhase ( *Var[0] )
   38:  If  *Var[0]  ==  .Phase:FirstStrike
   48:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   64:  	Call     SetActorPos 	( .Actor:Self FFFFFFEC *Var[1] *Var[2] )
   80:  Else
   88:  	Call     UseCamPreset 	( 0000003F )
   98:  	Call     CamTargetActor ( .Actor:Self )
   A8:  	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   C0:  	Call     MoveCamOver 	( 00000046 )
   D0:  	Set  *Flag[00]  00000000 
   E0:  	Label    00000000 
   EC:  	If  *Flag[00]  ==  00000000 
   FC:  		Call     SetAnimation 	( .Actor:Self 00000001 0048010E )
  114:  		Set  *Flag[00]  00000001 
  124:  	Else
  12C:  		Call     SetAnimation 	( .Actor:Self 00000001 0048010F )
  144:  		Set  *Flag[00]  00000000 
  154:  	EndIf
  15C:  	Wait     00000001 
  168:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  17C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  198:  	Sub  *Var[0]  00000014 
  1A8:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C4:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  1E4:  	If  *Var[0]  >  00000000 
  1F4:  		Goto     00000000 
  200:  	EndIf
  208:  	If  *Flag[00]  ==  00000000 
  218:  		Call     SetAnimation 	( .Actor:Self 00000001 0048010E )
  230:  		Set  *Flag[00]  00000001 
  240:  	Else
  248:  		Call     SetAnimation 	( .Actor:Self 00000001 0048010F )
  260:  		Set  *Flag[00]  00000000 
  270:  	EndIf
  278:  	Wait     00000001 
  284:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
  298:  	Call     SetGoalToPos 	( .Actor:Self FFFFFFDD 00000000 0000000A )
  2B4:  	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  2D4:  EndIf
  2DC:  Call     SetAnimation 	( .Actor:Self 00000001 00480101 )
  2F4:  Wait     0000000A 
  300:  Thread
  308:  	Call     SetAnimation 	( .Actor:Self 00000001 00480106 )
  320:  	Wait     00000028 
  32C:  	Call     SetAnimation 	( .Actor:Self 00000001 00480107 )
  344:  EndThread
  34C:  Wait     00000014 
  358:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:DayzeeSong )
  36C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  388:  Add  *Var[1]  00000019 
  398:  Add  *Var[2]  00000002 
  3A8:  Loop     0000000D 
  3B4:  	Call     RandInt     	( 0000001E *Var[3] )
  3C8:  	Sub  *Var[3]  0000000F 
  3D8:  	Add  *Var[3]  *Var[0] 
  3E8:  	Call     PlayEffect  	( {FX:MusicNote:Left} *Var[3] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  42C:  	Wait     0000000A 
  438:  EndLoop
  440:  Call     SetAnimation 	( .Actor:Self 00000001 00480101 )
  458:  Wait     0000000A 
  464:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  488:  Switch  *Var[0] 
  494:  	CaseOR  ==  00000006 
  4A0:  	CaseOR  ==  00000005 
  4AC:  		Set  *Var[A]  *Var[0] 
  4BC:  		If  *Var[A]  ==  00000005 
  4CC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4F0:  		EndIf
  4F8:  		Call     UseCamPreset 	( 00000002 )
  508:  		Wait     0000000F 
  514:  		Call     8027D7F0 ( )
  520:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  534:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  550:  		ExecWait $Script_80221690 
  55C:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  574:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  588:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  5C8:  Call     SetGoalToTarget 	( .Actor:Self )
  5D8:  Wait     00000002 
  5E4:  Call     DamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 8000130F 00000014 00000020 )
  60C:  Switch  *Var[F] 
  618:  	CaseOR  ==  00000000 
  624:  	CaseOR  ==  00000002 
  630:  		Call     UseCamPreset 	( 00000002 )
  640:  		Call     MoveCamOver 	( 0000000A )
  650:  		Wait     00000014 
  65C:  		Call     8027D7F0 ( )
  668:  		ExecWait $Script_80221690 
  674:  	EndCaseGroup
  67C:  EndSwitch
  684:  Call     UseIdleAnimation 	( .Actor:Self .True )
  698:  Return
  6A0:  End

#new:Script $Script_Amazy_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     UseCamPreset 	( 00000013 )
   24:  Call     SetCamZoom  	( 0000012C )
   34:  Call     SetCamOffsetZ 	( 0000001E )
   44:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   60:  Sub  *Var[0]  00000014 
   70:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
   88:  Call     MoveCamOver 	( 0000001E )
   98:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   AC:  Call     SetAnimation 	( .Actor:Self 00000001 00480103 )
   C4:  Wait     0000000A 
   D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
  100:  Sub  *Var[0]  00000014 
  110:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  144:  Wait     00000014 
  150:  Call     UseCamPreset 	( 00000002 )
  160:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  174:  Call     SetAnimation 	( .Actor:Self 00000001 00480104 )
  18C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[12.0] )
  1A0:  Add  *Var[0]  000000C8 
  1B0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1E4:  Call     EnableActorBlur 	( .Actor:Self 00000000 )
  1F8:  Call     SetBattleFlagBits 	( 00040000 .True )
  20C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  220:  Call     RemoveActor 	( .Actor:Self )
  230:  Return
  238:  End

#new:Script $Script_TakeTurn_80222500
    0:  Call     GetBattlePhase ( *Var[0] )
   10:  If  *Var[0]  ==  .Phase:FirstStrike
   20:  	ExecWait $Script_Amazy_Sing 
   2C:  	Return
   34:  EndIf
   3C:  Call     RandInt     	( 000003E8 *Var[0] )
   50:  Switch  *Var[0] 
   5C:  	Case  <  00000352 
   68:  		ExecWait $Script_Amazy_RunAway 
   74:  	Default
   7C:  		ExecWait $Script_Amazy_Sing 
   88:  EndSwitch
   90:  Return
   98:  End

#new:IdleAnimations $IdleAnimations_802225A0
.Status:Normal    007D0001
.Status:Stone     007D0000
.Status:Sleep     007D0009
.Status:Poison    007D0001
.Status:Stop      007D0000
.Status:Static    007D0001
.Status:Paralyze  007D0000
.Status:Dizzy     007D000B
.Status:End

#new:DefenseTable $DefenseTable_802225E4
.Element:Normal 00000000
.Element:Mystery00000000
.Element:End

#new:StatusTable $StatusTable_802225F8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     90`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   40`
.Status:Shrink     75`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_802226A4
00800000 01000000 FE1A00FF $IdleAnimations_802225A0 $DefenseTable_802225E4 00000000 00000000 00F30000 00000000 

#new:Actor $RuffPuff
% stats
[Index]        34b 
[Level]        19`b 
[MaxHP]        10`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_802225F8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802226A4 
[Script]      $Script_Init_802226F0 
% move effectiveness
[Escape]       50`b 
[Item]         40`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_802226F0
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222DE8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022273C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80222898 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8022273C
    0:  Set  *Var[F]  00000000 
   10:  Loop     
   1C:  	Call     $Function_802181F0 ( *Var[F] *Var[0] *Fixed[0.9707031] *Fixed[1.0302734] 0000000F 00000000 00000000 )
   44:  	Call     $Function_802181F0 ( *Var[F] *Var[1] *Fixed[1.0302734] *Fixed[0.9707031] 0000000F 00000000 00000000 )
   6C:  	Add  *Var[F]  00000001 
   7C:  	Call     SetActorScale 	( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
   98:  	If  *Var[F]  >=  0000001E 
   A8:  		Set  *Var[F]  00000000 
   B8:  	EndIf
   C0:  	Wait     00000001 
   CC:  EndLoop
   D4:  Return
   DC:  End

#new:Script $Script_80222820
    0:  Call     UseCamPreset 	( 00000002 )
   10:  Call     SetAnimation 	( .Actor:Self 00000001 007D0004 )
   28:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
   3C:  Call     SetGoalToHome 	( .Actor:Self )
   4C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:SinOut )
   68:  Return
   70:  End

#new:Script $Script_HandleEvent_80222898
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  007D0006 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  007D0007 
   C0:  		SetConst  *Var[2]  007D0008 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  007D0007 
  108:  		SetConst  *Var[2]  007D0008 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  007D0008 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  007D0006 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  007D0006 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  007D0006 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  007D0006 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  007D0006 
  254:  		ExecWait 8029BD70 
  260:  		ExecWait $Script_80222820 
  26C:  	Case  ==  .Event:ShockDeath
  278:  		SetConst  *Var[0]  00000001 
  288:  		SetConst  *Var[1]  007D0006 
  298:  		ExecWait DoShockHit 
  2A4:  		SetConst  *Var[0]  00000001 
  2B4:  		SetConst  *Var[1]  007D0006 
  2C4:  		ExecWait DoDeath 
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017
  2E4:  	CaseOR  ==  .Event:Immune
  2F0:  	CaseOR  ==  .Event:AirLiftFailed
  2FC:  		SetConst  *Var[0]  00000001 
  30C:  		SetConst  *Var[1]  007D0001 
  31C:  		ExecWait DoImmune 
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death
  33C:  		SetConst  *Var[0]  00000001 
  34C:  		SetConst  *Var[1]  007D0006 
  35C:  		ExecWait DoNormalHit 
  368:  		Wait     0000000A 
  374:  		SetConst  *Var[0]  00000001 
  384:  		SetConst  *Var[1]  007D0006 
  394:  		ExecWait DoDeath 
  3A0:  		Return
  3A8:  	Case  ==  .Event:BeginFirstStrike
  3B4:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  3D0:  		Call     HPBarToCurrent ( .Actor:Self )
  3E0:  	Case  ==  .Event:EndFirstStrike
  3EC:  		ExecWait $Script_80222820 
  3F8:  		Call     HPBarToHome 	( .Actor:Self )
  408:  	Case  ==  .Event:RecoverStatus
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  007D0001 
  434:  		ExecWait DoRecover 
  440:  	Case  ==  .Event:ScareAway
  44C:  		SetConst  *Var[0]  00000001 
  45C:  		SetConst  *Var[1]  007D0004 
  46C:  		SetConst  *Var[2]  007D0006 
  47C:  		ExecWait DoScareAway 
  488:  		Return
  490:  	Case  ==  .Event:BeginAirLift
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  007D0004 
  4BC:  		ExecWait DoAirLift 
  4C8:  	Case  ==  .Event:BlowAway
  4D4:  		SetConst  *Var[0]  00000001 
  4E4:  		SetConst  *Var[1]  007D0004 
  4F4:  		ExecWait DoBlowAway 
  500:  		Return
  508:  	Default
  510:  EndSwitch
  518:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  52C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  540:  Return
  548:  End

#new:Script $Script_TakeTurn_80222DE8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 007D0004 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:SinOut )
   E8:  Call     SetAnimation 	( .Actor:Self 00000001 007D0001 )
  100:  Wait     00000005 
  10C:  Call     SetAnimation 	( .Actor:Self 00000001 007D0005 )
  124:  Wait     00000005 
  130:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  154:  Switch  *Var[0] 
  160:  	CaseOR  ==  00000006 
  16C:  	CaseOR  ==  00000005 
  178:  		Set  *Var[A]  *Var[0] 
  188:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  19C:  		Call     SetGoalToTarget 	( .Actor:Self )
  1AC:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  1E4:  		Thread
  1EC:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  208:  			SetF  *Var[0]  *Fixed[0.0] 
  218:  			Loop     0000000F 
  224:  				AddF  *Var[0]  *Fixed[12.0] 
  234:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  250:  				Wait     00000001 
  25C:  			EndLoop
  264:  		EndThread
  26C:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  288:  		Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  2A8:  		If  *Var[A]  ==  00000005 
  2B8:  			Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
  2DC:  		EndIf
  2E4:  		Thread
  2EC:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  308:  			SetF  *Var[0]  *Fixed[180.0] 
  318:  			Loop     0000000A 
  324:  				AddF  *Var[0]  *Fixed[18.0] 
  334:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  350:  				Wait     00000001 
  35C:  			EndLoop
  364:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  380:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  39C:  		EndThread
  3A4:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 00000000 00000000 )
  3C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  3E0:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFEC 00000000 00000000 )
  3FC:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  41C:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
  438:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  458:  		Wait     0000000F 
  464:  		Call     UseCamPreset 	( 00000002 )
  474:  		Call     8027D7F0 ( )
  480:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  494:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4B0:  		ExecWait $Script_80222820 
  4BC:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  4D4:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  4E8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  510:  		Return
  518:  	EndCaseGroup
  520:  EndSwitch
  528:  Thread
  530:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000D 00000000 )
  54C:  	SetF  *Var[0]  *Fixed[0.0] 
  55C:  	Loop     00000008 
  568:  		AddF  *Var[0]  *Fixed[22.5] 
  578:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  594:  		Wait     00000001 
  5A0:  	EndLoop
  5A8:  EndThread
  5B0:  Call     SetGoalToTarget 	( .Actor:Self )
  5C0:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  5D4:  Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  5F4:  Wait     00000002 
  600:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
  628:  Switch  *Var[0] 
  634:  	CaseOR  ==  00000000 
  640:  	CaseOR  ==  00000002 
  64C:  		Call     UseCamPreset 	( 00000002 )
  65C:  		Thread
  664:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  680:  			SetF  *Var[0]  *Fixed[180.0] 
  690:  			Loop     0000000A 
  69C:  				SubF  *Var[0]  *Fixed[22.5] 
  6AC:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  6C8:  				Wait     00000001 
  6D4:  			EndLoop
  6DC:  			Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  6F8:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  714:  		EndThread
  71C:  		Call     SetGoalToTarget 	( .Actor:Self )
  72C:  		Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
  748:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  75C:  		Call     80279728 ( FFFFFF81 0000000A *Fixed[5.0] )
  774:  		Wait     0000000A 
  780:  		Call     8027D7F0 ( )
  78C:  		ExecWait $Script_80222820 
  798:  	EndCaseGroup
  7A0:  EndSwitch
  7A8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7BC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7D0:  Return
  7D8:  End

PADDING: 802235C8 to 802235D0 (005BCA78 to 005BCA80)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_802235D0
.Status:Normal    00400001
.Status:Stone     00400000
.Status:Sleep     00400004
.Status:Poison    00400001
.Status:Stop      00400000
.Status:Static    00400001
.Status:Paralyze  00400000
.Status:Dizzy     0040000A
.Status:Fear      0040000A
.Status:End

#new:DefenseTable $DefenseTable_8022361C
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End

#new:StatusTable $StatusTable_80223630
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802236DC
00800000 01000000 FE2600FF $IdleAnimations_802235D0 $DefenseTable_8022361C 00000000 00000000 FFFB0000 00000000 

#new:Actor $MediGuy
% stats
[Index]        22b 
[Level]        14`b 
[MaxHP]         7`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80223630 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802236DC 
[Script]      $Script_Init_80223728 
% move effectiveness
[Escape]       60`b 
[Item]         70`b 
[AirLift]      90`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   12`b  31`b % dx dy

#new:Script $Script_Init_80223728
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224B0C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802237CC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802239A0 )
   3C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   58:  Sub  *Var[1]  00000005 
   68:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   84:  Call     HPBarToHome 	( .Actor:Self )
   94:  Return
   9C:  End

#new:Script $Script_Idle_802237CC
    0:  Label    00000000 
    C:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   20:  If  *Var[0]  &  00001000 
   30:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000018 )
   4C:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   68:  	Call     $Function_80218380 ( FFFFFFF6 00000014 0000000A 00000014 )
   84:  Else
   8C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFE 00000026 )
   A8:  	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFB )
   C4:  	Call     $Function_80218380 ( FFFFFFF6 00000014 0000000C 0000001F )
   E0:  EndIf
   E8:  Wait     00000001 
   F4:  Goto     00000000 
  100:  Return
  108:  End

#new:Script $Script_802238DC
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
   30:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
   44:  Call     SetAnimation 	( .Actor:Self 00000001 00400003 )
   5C:  Call     SetGoalToHome 	( .Actor:Self )
   6C:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
   88:  Call     SetAnimation 	( .Actor:Self 00000001 00400001 )
   A0:  Call     SetActorAngle 	( .Actor:Self 00000000 )
   B4:  Return
   BC:  End

#new:Script $Script_HandleEvent_802239A0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00400006 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00400008 
   C0:  		SetConst  *Var[2]  00400009 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00400008 
  108:  		SetConst  *Var[2]  00400009 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00400009 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00400006 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00400006 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00400007 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:ShockHit
  208:  		SetConst  *Var[0]  00000001 
  218:  		SetConst  *Var[1]  00400006 
  228:  		ExecWait DoShockHit 
  234:  		SetConst  *Var[0]  00000001 
  244:  		SetConst  *Var[1]  00400006 
  254:  		ExecWait 8029BD70 
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  274:  		ExecWait $Script_802238DC 
  280:  	Case  ==  .Event:ShockDeath
  28C:  		SetConst  *Var[0]  00000001 
  29C:  		SetConst  *Var[1]  00400006 
  2AC:  		ExecWait DoShockHit 
  2B8:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00400007 
  2F8:  		ExecWait DoDeath 
  304:  		Return
  30C:  	CaseOR  ==  00000017
  318:  	CaseOR  ==  .Event:Immune
  324:  	CaseOR  ==  .Event:AirLiftFailed
  330:  		SetConst  *Var[0]  00000001 
  340:  		SetConst  *Var[1]  00400001 
  350:  		ExecWait DoImmune 
  35C:  	EndCaseGroup
  364:  	Case  ==  .Event:Death
  370:  		SetConst  *Var[0]  00000001 
  380:  		SetConst  *Var[1]  00400006 
  390:  		ExecWait DoNormalHit 
  39C:  		Wait     0000000A 
  3A8:  		SetConst  *Var[0]  00000001 
  3B8:  		SetConst  *Var[1]  00400007 
  3C8:  		ExecWait DoDeath 
  3D4:  		Return
  3DC:  	Case  ==  .Event:BeginFirstStrike
  3E8:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  404:  		Call     HPBarToCurrent ( .Actor:Self )
  414:  	Case  ==  .Event:EndFirstStrike
  420:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  434:  		ExecWait $Script_802238DC 
  440:  		Call     HPBarToHome 	( .Actor:Self )
  450:  	Case  ==  .Event:RecoverStatus
  45C:  		SetConst  *Var[0]  00000001 
  46C:  		SetConst  *Var[1]  00400001 
  47C:  		ExecWait DoRecover 
  488:  	Case  ==  .Event:ScareAway
  494:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4AC:  		SetConst  *Var[0]  00000001 
  4BC:  		SetConst  *Var[1]  00400003 
  4CC:  		SetConst  *Var[2]  0040000B 
  4DC:  		ExecWait DoScareAway 
  4E8:  		Return
  4F0:  	Case  ==  .Event:BeginAirLift
  4FC:  		SetConst  *Var[0]  00000001 
  50C:  		SetConst  *Var[1]  00400006 
  51C:  		ExecWait DoAirLift 
  528:  	Case  ==  .Event:BlowAway
  534:  		SetConst  *Var[0]  00000001 
  544:  		SetConst  *Var[1]  00400006 
  554:  		ExecWait DoBlowAway 
  560:  		Return
  568:  	Default
  570:  EndSwitch
  578:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  58C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5A0:  Return
  5A8:  End

#new:Script $Script_FlyingAttack
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Thread
   7C:  	SetF  *Var[0]  *Fixed[0.0] 
   8C:  	Loop     0000000F 
   98:  		AddF  *Var[0]  *Fixed[2.0] 
   A8:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[0] )
   C8:  		Wait     00000001 
   D4:  	EndLoop
   DC:  EndThread
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00400003 )
   FC:  Call     SetGoalToTarget 	( .Actor:Self )
  10C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
  128:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  13C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
  158:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
  17C:  Switch  *Var[A] 
  188:  	CaseOR  ==  00000006 
  194:  	CaseOR  ==  00000005 
  1A0:  		Wait     0000000A 
  1AC:  		Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
  1C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1D4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1E8:  		Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  200:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  21C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  238:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  258:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  274:  		Call     PlaySoundAtActor 	( .Actor:Self 000002F9 )
  288:  		Thread
  290:  			Wait     00000005 
  29C:  			Set  *Var[0]  00000000 
  2AC:  			Loop     0000003C 
  2B8:  				Call     $Function_8021844C ( *Var[0] *Var[1] 0000000F 0000003C *Fixed[30.0] )
  2D8:  				Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 *Var[1] )
  2F8:  				Add  *Var[0]  00000001 
  308:  				Wait     00000001 
  314:  			EndLoop
  31C:  		EndThread
  324:  		Call     SetGoalToTarget 	( .Actor:Self )
  334:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  350:  		Sub  *Var[0]  00000032 
  360:  		Add  *Var[2]  00000001 
  370:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  38C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  3B8:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  3D4:  		If  *Var[A]  ==  00000005 
  3E4:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  408:  		EndIf
  410:  		Wait     0000001E 
  41C:  		Call     8026F6EC ( FFFFFF81 )
  42C:  		Call     UseCamPreset 	( 00000002 )
  43C:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  458:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  46C:  		ExecWait $Script_802238DC 
  478:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  490:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4A4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  4B8:  		Return
  4C0:  	EndCaseGroup
  4C8:  EndSwitch
  4D0:  Wait     0000000A 
  4DC:  Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
  4F0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  504:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  518:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  530:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  54C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  568:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  588:  Set  *Var[A]  *Var[0] 
  598:  Set  *Var[B]  *Var[1] 
  5A8:  Set  *Var[C]  *Var[2] 
  5B8:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  5D4:  Call     PlaySoundAtActor 	( .Actor:Self 000002F9 )
  5E8:  Call     SetGoalToTarget 	( .Actor:Self )
  5F8:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  614:  Add  *Var[2]  00000001 
  624:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  640:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  654:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
  66C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  688:  Wait     00000002 
  694:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  6BC:  Switch  *Var[0] 
  6C8:  	CaseOR  ==  00000000 
  6D4:  	CaseOR  ==  00000002 
  6E0:  		Call     8026F6EC ( FFFFFF81 )
  6F0:  		Call     UseCamPreset 	( 00000002 )
  700:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  71C:  		Add  *Var[0]  0000001E 
  72C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
  740:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  75C:  		Call     80279728 ( FFFFFF81 0000000A *Fixed[2.0] )
  774:  		Wait     00000014 
  780:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  794:  		ExecWait $Script_802238DC 
  7A0:  	EndCaseGroup
  7A8:  EndSwitch
  7B0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7C4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7D8:  Return
  7E0:  End

#new:Script $Script_HealOneAlly
    0:  Set  *Var[A]  *Var[0] 
   10:  Call     UseIdleAnimation 	( .Actor:Self .False )
   24:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   38:  Call     UseCamPreset 	( 0000003F )
   48:  Call     CamTargetActor ( .Actor:Self )
   58:  Call     GetOwnerID  	( *Var[0] )
   68:  Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
   84:  Call     PlaySoundAtActor 	( .Actor:Self 000002F8 )
   98:  Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
   AC:  Call     PlaySoundAtActor 	( .Actor:Self 00000000 )
   C0:  Call     SetAnimation 	( .Actor:Self 00000001 00400005 )
   D8:  Add  *Var[2]  00000032 
   E8:  Call     PlayEffect  	( {FX:Sparkles:Random} *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  12C:  Call     PlayEffect  	( {FX:Recover:LittleHeart} *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  170:  Wait     0000001E 
  17C:  Call     SetAnimation 	( .Actor:Self 00000001 00400001 )
  194:  Wait     0000000A 
  1A0:  Call     UseCamPreset 	( 0000003F )
  1B0:  Call     CamTargetActor ( *Var[A] )
  1C0:  Call     GetEnemyMaxHP 	( *Var[A] *Var[4] )
  1D4:  Mul  *Var[4]  0000003C 
  1E4:  Div  *Var[4]  00000064 
  1F4:  Thread
  1FC:  	Wait     00000005 
  208:  	Call     PlaySoundAtActor 	( *Var[A] 0000206D )
  21C:  	Call     PlaySoundAtActor 	( *Var[A] 00000214 )
  230:  	Wait     0000001E 
  23C:  	Call     PlaySoundAtActor 	( *Var[A] 0000025C )
  250:  EndThread
  258:  Thread
  260:  	Call     8026BF48 ( 00000001 )
  270:  	Call     HealActor   	( *Var[A] *Var[4] 00000000 )
  288:  	Call     8026BF48 ( 00000000 )
  298:  EndThread
  2A0:  Call     8027114C ( )
  2AC:  Call     UseCamPreset 	( 00000002 )
  2BC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  2D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  2E4:  Return
  2EC:  End

#new:Script $Script_80224A2C
    0:  Call     CreateTargetList 	( 00000002 )
   10:  Call     InitTargetIterator 	( )
   1C:  Label    00000000 
   28:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   3C:  Call     GetActorHP  	( *Var[0] *Var[2] )
   50:  Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
   64:  If  *Var[2]  !=  *Var[3] 
   74:  	Call     GetOwnerTarget ( *Var[0] *Var[1] )
   88:  	Return
   90:  EndIf
   98:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
   AC:  If  *Var[0]  !=  FFFFFFFF 
   BC:  	Goto     00000000 
   C8:  EndIf
   D0:  Return
   D8:  End

#new:Script $Script_TakeTurn_80224B0C
    0:  ExecWait $Script_80224A2C 
    C:  If  *Var[0]  ==  FFFFFFFF 
   1C:  	ExecWait $Script_FlyingAttack 
   28:  Else
   30:  	Call     RandInt     	( 000003E8 *Var[A] )
   44:  	If  *Var[A]  <  00000258 
   54:  		ExecWait $Script_HealOneAlly 
   60:  	Else
   68:  		ExecWait $Script_FlyingAttack 
   74:  	EndIf
   7C:  EndIf
   84:  Return
   8C:  End

#new:DefenseTable $DefenseTable_80224BA0
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:DefenseTable $DefenseTable_80224BAC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80224BB8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:StatusTable $StatusTable_80224C64
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80224D10
00800000 01000000 022300FF $IdleAnimations_80224DF0 $DefenseTable_80224BA0 00000000 00000000 FBF40000 00000000 

% Origin: HINT
#new:SpriteTable $SpriteTable_80224D34
00020001 01000000 022300FF $IdleAnimations_80224DF0 $DefenseTable_80224BAC 00800000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_80224E3C $DefenseTable_80224BAC 00000000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80224E88 $DefenseTable_80224BAC 00000000 00000000 00000000 00000000 

#new:Actor $RMagikoopa
% stats
[Index]        51b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224BB8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80224D10 
[Script]      $Script_Init_80226FD8 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

% Origin: HINT
#new:Actor $FlyingRMagikoopa
% stats
[Index]        52b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80224C64 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80224D34 
[Script]      $Script_Init_8022707C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_80224DF0
.Status:Normal    00560101
.Status:Stone     00560100
.Status:Sleep     00560108
.Status:Poison    00560101
.Status:Stop      00560100
.Status:Static    00560101
.Status:Paralyze  00560100
.Status:Dizzy     00560107
.Status:Fear      00560107
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224E3C
.Status:Normal    00570101
.Status:Stone     00570100
.Status:Sleep     00570108
.Status:Poison    00570101
.Status:Stop      00570100
.Status:Static    00570101
.Status:Paralyze  00570100
.Status:Dizzy     00570107
.Status:Fear      00570107
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_80224E88
.Status:Normal    0057010A
.Status:End

#new:Script $Script_Idle_80224E94
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80224EA4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560104 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560105 
   C0:  		SetConst  *Var[2]  00560106 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560105 
  108:  		SetConst  *Var[2]  00560106 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560106 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560104 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560104 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560104 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560101 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560104 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560104 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560101 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
  3B8:  		ExecWait $Script_RMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560102 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560104 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

% Origin: HINT
#new:Script $Script_802253BC
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_802186B8 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

% Origin: HINT
#new:Script $Script_802254C8
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_802187B0 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560104 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224EA4 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000051 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80224BB8 )
  4FC:  Call     $Function_802186E4 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

% Origin: HINT
#new:Script $Script_HandleEvent_80225AC4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_802253BC 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570104 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_802253BC 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570104 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_802254C8 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_802253BC 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570105 
  134:  		SetConst  *Var[2]  00570106 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_802254C8 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570105 
  190:  		SetConst  *Var[2]  00570106 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570106 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570104 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570104 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570104 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570101 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570104 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570104 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570101 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570104 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  504:  		ExecWait $Script_RMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570102 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570104 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_RMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570103 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_80218560 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570103 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_80218560 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_RMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560103 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_RMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_80226FD8
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80224E94 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80227120 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80224EA4 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

% Origin: HINT
#new:Script $Script_Init_8022707C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80224E94 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80227120 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80225AC4 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_80227120
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218808 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetActorAttackBoost 	( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  <  00000003 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_RMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_RMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_RMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560102 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570102 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560101 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570101 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Call     PlaySoundAtActor 	( *Var[8] 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call     8026BF48 ( 00000001 )
  6A8:  	Call     BoostAttack 	( *Var[8] 00000001 )
  6BC:  	Call     8026BF48 ( 00000000 )
  6CC:  EndThread
  6D4:  Call     8027114C ( )
  6E0:  Call     UseCamPreset 	( 00000002 )
  6F0:  Wait     0000000A 
  6FC:  Call     8027D7F0 ( )
  708:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  71C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  730:  Return
  738:  End

% Origin: HINT
#new:DefenseTable $DefenseTable_80227860
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_8022786C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80227878
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80227924
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:SpriteTable $SpriteTable_802279D0
00800000 01000000 022300FF $IdleAnimations_80227AB0 $DefenseTable_80227860 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_802279F4
00020001 01000000 022300FF $IdleAnimations_80227AB0 $DefenseTable_8022786C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_80227AFC $DefenseTable_8022786C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80227B48 $DefenseTable_8022786C 00000000 00000000 00000000 00000000 

% Origin: HINT
#new:Actor $GRNMagikoopa
% stats
[Index]        53b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80227878 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802279D0 
[Script]      $Script_Init_80229C98 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingGRNMagikoopa
% stats
[Index]        54b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80227924 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_802279F4 
[Script]      $Script_Init_80229D3C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_80227AB0
.Status:Normal    00560401
.Status:Stone     00560400
.Status:Sleep     00560408
.Status:Poison    00560401
.Status:Stop      00560400
.Status:Static    00560401
.Status:Paralyze  00560400
.Status:Dizzy     00560407
.Status:Fear      00560407
.Status:End

#new:IdleAnimations $IdleAnimations_80227AFC
.Status:Normal    00570401
.Status:Stone     00570400
.Status:Sleep     00570408
.Status:Poison    00570401
.Status:Stop      00570400
.Status:Static    00570401
.Status:Paralyze  00570400
.Status:Dizzy     00570407
.Status:Fear      00570407
.Status:End

#new:IdleAnimations $IdleAnimations_80227B48
.Status:Normal    0057040A
.Status:End

#new:Script $Script_Idle_80227B54
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_80227B64
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560404 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560405 
   C0:  		SetConst  *Var[2]  00560406 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560405 
  108:  		SetConst  *Var[2]  00560406 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560406 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560404 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560404 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560404 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560401 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560404 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560404 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560401 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560402 )
  3B8:  		ExecWait $Script_GRNMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560402 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560404 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

#new:Script $Script_8022807C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218A28 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_80228188
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218B20 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560404 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227B64 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000053 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_80227878 )
  4FC:  Call     $Function_80218A54 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_HandleEvent_80228784
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022807C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570404 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022807C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570404 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_80228188 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022807C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570405 
  134:  		SetConst  *Var[2]  00570406 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_80228188 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570405 
  190:  		SetConst  *Var[2]  00570406 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570406 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570404 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570404 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570404 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570401 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570404 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570404 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570401 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570401 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570401 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570404 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570402 )
  504:  		ExecWait $Script_GRNMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570402 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570404 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_GRNMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570402 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570403 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_802188D0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570403 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_802188D0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_GRNMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560402 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560403 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_GRNMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

% Origin: HINT
#new:Script $Script_Init_80229C98
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227B54 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80229DE0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80227B64 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_Init_80229D3C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80227B54 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80229DE0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80228784 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_80229DE0
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80218B78 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetActorDefenseBoost 	( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  <  00000003 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_GRNMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_GRNMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_GRNMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560402 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570402 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560401 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570401 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Call     PlaySoundAtActor 	( *Var[8] 000002DD )
  688:  EndThread
  690:  Thread
  698:  	Call     8026BF48 ( 00000001 )
  6A8:  	Call     BoostDefense 	( *Var[8] 00000001 )
  6BC:  	Call     8026BF48 ( 00000000 )
  6CC:  EndThread
  6D4:  Call     8027114C ( )
  6E0:  Call     UseCamPreset 	( 00000002 )
  6F0:  Wait     0000000A 
  6FC:  Call     8027D7F0 ( )
  708:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  71C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  730:  Return
  738:  End

#new:DefenseTable $DefenseTable_8022A520
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:DefenseTable $DefenseTable_8022A52C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022A538
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

% Origin: HINT
#new:StatusTable $StatusTable_8022A5E4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8022A690
00800000 01000000 022300FF $IdleAnimations_8022A770 $DefenseTable_8022A520 00000000 00000000 FBF40000 00000000 

% Origin: HINT
#new:SpriteTable $SpriteTable_8022A6B4
00020001 01000000 022300FF $IdleAnimations_8022A770 $DefenseTable_8022A52C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8022A7BC $DefenseTable_8022A52C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8022A808 $DefenseTable_8022A52C 00000000 00000000 00000000 00000000 

#new:Actor $WMagikoopa
% stats
[Index]        59b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022A538 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022A690 
[Script]      $Script_Init_8022C958 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

% Origin: HINT
#new:Actor $FlyingWMagikoopa
% stats
[Index]        5Ab 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8022A5E4 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8022A6B4 
[Script]      $Script_Init_8022C9BC 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_8022A770
.Status:Normal    00560301
.Status:Stone     00560300
.Status:Sleep     00560308
.Status:Poison    00560301
.Status:Stop      00560300
.Status:Static    00560301
.Status:Paralyze  00560300
.Status:Dizzy     00560307
.Status:Fear      00560307
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A7BC
.Status:Normal    00570301
.Status:Stone     00570300
.Status:Sleep     00570308
.Status:Poison    00570301
.Status:Stop      00570300
.Status:Static    00570301
.Status:Paralyze  00570300
.Status:Dizzy     00570307
.Status:Fear      00570307
.Status:End

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022A808
.Status:Normal    0057030A
.Status:End

#new:Script $Script_Idle_8022A814
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8022A824
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560304 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560305 
   C0:  		SetConst  *Var[2]  00560306 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560305 
  108:  		SetConst  *Var[2]  00560306 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560306 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560304 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560304 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560304 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560301 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560304 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560304 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560301 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  3B8:  		ExecWait $Script_WMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560302 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560304 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

% Origin: HINT
#new:Script $Script_8022AD3C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80218D98 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

% Origin: HINT
#new:Script $Script_8022AE48
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80218E90 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560304 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022A824 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000059 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_8022A538 )
  4FC:  Call     $Function_80218DC4 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

% Origin: HINT
#new:Script $Script_HandleEvent_8022B444
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022AD3C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570304 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022AD3C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570304 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_8022AE48 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022AD3C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570305 
  134:  		SetConst  *Var[2]  00570306 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_8022AE48 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570305 
  190:  		SetConst  *Var[2]  00570306 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570306 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570304 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570304 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570304 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570301 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570304 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570304 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570301 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570304 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  504:  		ExecWait $Script_WMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570302 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570304 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_WMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_80218C40 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570303 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_80218C40 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_WMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560303 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_WMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_8022C958
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022A814 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022DEE4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022A824 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

% Origin: HINT
#new:Script $Script_Init_8022C9BC
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022A814 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022DEE4 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022B444 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_HealOne
    0:  Set  *Var[8]  00000000 
   10:  Set  *Var[9]  0000270F 
   20:  Call     CreateTargetList 	( 00008002 )
   30:  Call     InitTargetIterator 	( )
   3C:  Label    00000000 
   48:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   5C:  Call     GetActorHP  	( *Var[0] *Var[2] )
   70:  Call     $Function_80218FAC ( *Var[3] *Var[4] )
   84:  If  *Var[3]  >  *Var[4] 
   94:  	Set  *Var[3]  *Var[4] 
   A4:  EndIf
   AC:  Call     $Function_8021900C ( *Var[0] *Var[1] *Var[5] )
   C4:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
   D8:  Add  *Var[5]  *Var[6] 
   E8:  Sub  *Var[3]  *Var[5] 
   F8:  Sub  *Var[2]  *Var[3] 
  108:  Call     $Function_80218EE8 ( *Var[0] *Var[A] )
  11C:  If  *Var[A]  ==  00000000 
  12C:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  140:  	Call     GetActorHP  	( *Var[0] *Var[B] )
  154:  	If  *Var[A]  !=  *Var[B] 
  164:  		If  *Var[2]  <  *Var[9] 
  174:  			Set  *Var[8]  *Var[0] 
  184:  			Set  *Var[9]  *Var[2] 
  194:  		Else
  19C:  			If  *Var[2]  ==  *Var[9] 
  1AC:  				If  *Var[0]  <  *Var[8] 
  1BC:  					Set  *Var[8]  *Var[0] 
  1CC:  					Set  *Var[9]  *Var[2] 
  1DC:  				EndIf
  1E4:  			EndIf
  1EC:  		EndIf
  1F4:  	EndIf
  1FC:  EndIf
  204:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  218:  If  *Var[0]  !=  FFFFFFFF 
  228:  	Goto     00000000 
  234:  EndIf
  23C:  If  *Var[8]  !=  00000000 
  24C:  	Goto     00000064 
  258:  EndIf
  260:  Set  *Var[8]  00000000 
  270:  Set  *Var[9]  0000270F 
  280:  Call     CreateTargetList 	( 00008002 )
  290:  Call     InitTargetIterator 	( )
  29C:  Label    00000001 
  2A8:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  2BC:  Call     GetActorHP  	( *Var[0] *Var[2] )
  2D0:  Call     $Function_80218FAC ( *Var[3] *Var[4] )
  2E4:  If  *Var[3]  >  *Var[4] 
  2F4:  	Set  *Var[3]  *Var[4] 
  304:  EndIf
  30C:  Call     $Function_8021900C ( *Var[0] *Var[1] *Var[5] )
  324:  Call     GetActorDefenseBoost 	( *Var[0] *Var[6] )
  338:  Add  *Var[5]  *Var[6] 
  348:  Sub  *Var[3]  *Var[5] 
  358:  Sub  *Var[2]  *Var[4] 
  368:  Set  *Flag[00]  00000000 
  378:  Call     GetActorType 	( *Var[0] *Var[A] )
  38C:  If  *Var[A]  ==  00000047 
  39C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  3B4:  	If  *Var[A]  ==  00000001 
  3C4:  		Set  *Flag[00]  00000001 
  3D4:  	EndIf
  3DC:  EndIf
  3E4:  Call     GetOwnerID  	( *Var[A] )
  3F4:  If  *Var[A]  !=  *Var[0] 
  404:  	If  *Flag[00]  ==  00000000 
  414:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  428:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  43C:  		If  *Var[A]  !=  *Var[B] 
  44C:  			If  *Var[2]  <  *Var[9] 
  45C:  				Set  *Var[8]  *Var[0] 
  46C:  				Set  *Var[9]  *Var[2] 
  47C:  			Else
  484:  				If  *Var[2]  ==  *Var[9] 
  494:  					If  *Var[0]  <  *Var[8] 
  4A4:  						Set  *Var[8]  *Var[0] 
  4B4:  						Set  *Var[9]  *Var[2] 
  4C4:  					EndIf
  4CC:  				EndIf
  4D4:  			EndIf
  4DC:  		EndIf
  4E4:  	EndIf
  4EC:  EndIf
  4F4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  508:  If  *Var[0]  !=  FFFFFFFF 
  518:  	Goto     00000001 
  524:  EndIf
  52C:  If  *Var[8]  !=  00000000 
  53C:  	Goto     00000064 
  548:  EndIf
  550:  Call     CreateTargetList 	( 00008002 )
  560:  Call     InitTargetIterator 	( )
  56C:  Label    00000002 
  578:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  58C:  Set  *Flag[00]  00000000 
  59C:  Call     GetActorType 	( *Var[0] *Var[A] )
  5B0:  If  *Var[A]  ==  00000047 
  5C0:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[A] )
  5D8:  	If  *Var[A]  ==  00000001 
  5E8:  		Set  *Flag[00]  00000001 
  5F8:  	EndIf
  600:  EndIf
  608:  Call     GetOwnerID  	( *Var[A] )
  618:  If  *Var[A]  !=  *Var[0] 
  628:  	If  *Flag[00]  ==  00000000 
  638:  		Call     GetEnemyMaxHP 	( *Var[0] *Var[A] )
  64C:  		Call     GetActorHP  	( *Var[0] *Var[B] )
  660:  		If  *Var[A]  !=  *Var[B] 
  670:  			Set  *Var[8]  *Var[0] 
  680:  			Goto     00000064 
  68C:  		EndIf
  694:  	EndIf
  69C:  EndIf
  6A4:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  6B8:  If  *Var[0]  !=  FFFFFFFF 
  6C8:  	Goto     00000002 
  6D4:  EndIf
  6DC:  Call     GetEnemyMaxHP 	( .Actor:Self *Var[A] )
  6F0:  Call     GetActorHP  	( .Actor:Self *Var[B] )
  704:  If  *Var[A]  !=  *Var[B] 
  714:  	Set  *Var[8]  FFFFFF81 
  724:  	Goto     00000064 
  730:  EndIf
  738:  Call     CreateTargetList 	( 00008002 )
  748:  Call     InitTargetIterator 	( )
  754:  Label    00000003 
  760:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  774:  Call     GetOwnerID  	( *Var[A] )
  784:  If  *Var[A]  !=  *Var[0] 
  794:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  7A8:  	If  *Var[0]  &  00000200 
  7B8:  		ExecWait $Script_WMagikoopa_ShapeSpell 
  7C4:  	Else
  7CC:  		ExecWait $Script_WMagikoopa_WandStrike 
  7D8:  	EndIf
  7E0:  	Return
  7E8:  EndIf
  7F0:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  804:  If  *Var[0]  !=  FFFFFFFF 
  814:  	Goto     00000003 
  820:  EndIf
  828:  ExecWait $Script_WMagikoopa_RunAway 
  834:  Return
  83C:  Label    00000064 
  848:  Call     RandInt     	( 000003E8 *Var[0] )
  85C:  If  *Var[0]  >  000002EE 
  86C:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
  880:  	If  *Var[0]  &  00000200 
  890:  		ExecWait $Script_WMagikoopa_ShapeSpell 
  89C:  	Else
  8A4:  		ExecWait $Script_WMagikoopa_WandStrike 
  8B0:  	EndIf
  8B8:  	Return
  8C0:  EndIf
  8C8:  Call     UseIdleAnimation 	( .Actor:Self .False )
  8DC:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  8F0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  904:  Call     UseCamPreset 	( 0000000E )
  914:  Call     CamTargetActor ( .Actor:Self )
  924:  Call     MoveCamOver 	( 0000000F )
  934:  Wait     0000000F 
  940:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  954:  If  *Var[0]  !&  00000200 
  964:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  97C:  Else
  984:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  99C:  EndIf
  9A4:  Wait     00000005 
  9B0:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  9C4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  9D8:  If  *Var[0]  !&  00000200 
  9E8:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A04:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  A18:  	If  *Var[A]  &  00080000 
  A28:  		Sub  *Var[0]  00000006 
  A38:  		Add  *Var[1]  0000000C 
  A48:  		Sub  *Var[2]  00000002 
  A58:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  	Else
  AA4:  		Sub  *Var[0]  00000010 
  AB4:  		Add  *Var[1]  0000001F 
  AC4:  		Sub  *Var[2]  00000002 
  AD4:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B18:  	EndIf
  B20:  Else
  B28:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B44:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  B58:  	If  *Var[A]  &  00080000 
  B68:  		Sub  *Var[0]  0000000C 
  B78:  		Add  *Var[1]  0000000E 
  B88:  		Sub  *Var[2]  00000002 
  B98:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BDC:  	Else
  BE4:  		Sub  *Var[0]  0000001E 
  BF4:  		Add  *Var[1]  00000024 
  C04:  		Sub  *Var[2]  00000002 
  C14:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C58:  	EndIf
  C60:  EndIf
  C68:  Wait     0000001E 
  C74:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  C88:  If  *Var[0]  !&  00000200 
  C98:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  CB0:  Else
  CB8:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  CD0:  EndIf
  CD8:  Wait     00000005 
  CE4:  Thread
  CEC:  	Wait     00000005 
  CF8:  	Call     PlaySoundAtActor 	( *Var[8] 0000206D )
  D0C:  	Call     PlaySoundAtActor 	( *Var[8] 00000214 )
  D20:  	Wait     0000001E 
  D2C:  	Call     PlaySoundAtActor 	( *Var[8] 0000025C )
  D40:  EndThread
  D48:  Thread
  D50:  	Call     8026BF48 ( 00000001 )
  D60:  	Call     HealActor   	( *Var[8] 00000005 00000000 )
  D78:  	Call     8026BF48 ( 00000000 )
  D88:  EndThread
  D90:  Call     8027114C ( )
  D9C:  Call     UseCamPreset 	( 00000002 )
  DAC:  Wait     0000000A 
  DB8:  Call     8027D7F0 ( )
  DC4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  DD8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  DEC:  Return
  DF4:  End

#new:Script $Script_HealAll
    0:  Call     RandInt     	( 000003E8 *Var[0] )
   14:  If  *Var[0]  >  000002EE 
   24:  	Call     GetActorFlags 	( .Actor:Self *Var[0] )
   38:  	If  *Var[0]  &  00000200 
   48:  		ExecWait $Script_WMagikoopa_ShapeSpell 
   54:  	Else
   5C:  		ExecWait $Script_WMagikoopa_WandStrike 
   68:  	EndIf
   70:  	Return
   78:  EndIf
   80:  Call     UseIdleAnimation 	( .Actor:Self .False )
   94:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   A8:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   BC:  Call     UseCamPreset 	( 0000000E )
   CC:  Call     CamTargetActor ( .Actor:Self )
   DC:  Call     MoveCamOver 	( 0000000F )
   EC:  Wait     0000000F 
   F8:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  10C:  If  *Var[0]  !&  00000200 
  11C:  	Call     SetAnimation 	( .Actor:Self 00000001 00560302 )
  134:  Else
  13C:  	Call     SetAnimation 	( .Actor:Self 00000002 00570302 )
  154:  EndIf
  15C:  Wait     00000005 
  168:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
  17C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  190:  If  *Var[0]  !&  00000200 
  1A0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  1D0:  	If  *Var[A]  &  00080000 
  1E0:  		Sub  *Var[0]  00000006 
  1F0:  		Add  *Var[1]  0000000C 
  200:  		Sub  *Var[2]  00000002 
  210:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  254:  	Else
  25C:  		Sub  *Var[0]  00000010 
  26C:  		Add  *Var[1]  0000001F 
  27C:  		Sub  *Var[2]  00000002 
  28C:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  	EndIf
  2D8:  Else
  2E0:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2FC:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  310:  	If  *Var[A]  &  00080000 
  320:  		Sub  *Var[0]  0000000C 
  330:  		Add  *Var[1]  0000000E 
  340:  		Sub  *Var[2]  00000002 
  350:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  394:  	Else
  39C:  		Sub  *Var[0]  0000001E 
  3AC:  		Add  *Var[1]  00000024 
  3BC:  		Sub  *Var[2]  00000002 
  3CC:  		Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  410:  	EndIf
  418:  EndIf
  420:  Wait     0000001E 
  42C:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  440:  If  *Var[0]  !&  00000200 
  450:  	Call     SetAnimation 	( .Actor:Self 00000001 00560301 )
  468:  Else
  470:  	Call     SetAnimation 	( .Actor:Self 00000002 00570301 )
  488:  EndIf
  490:  Wait     00000005 
  49C:  Call     CreateTargetList 	( 00008002 )
  4AC:  Call     InitTargetIterator 	( )
  4B8:  Label    00000000 
  4C4:  Set  *Flag[00]  00000000 
  4D4:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
  4E8:  Call     GetActorType 	( *Var[0] *Var[1] )
  4FC:  If  *Var[1]  ==  00000047 
  50C:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
  524:  	If  *Var[1]  ==  00000001 
  534:  		Set  *Flag[00]  00000001 
  544:  	EndIf
  54C:  EndIf
  554:  If  *Flag[00]  ==  00000000 
  564:  	Thread
  56C:  		Wait     00000005 
  578:  		Call     PlaySoundAtActor 	( *Var[0] 0000206D )
  58C:  		Call     PlaySoundAtActor 	( *Var[0] 00000214 )
  5A0:  		Wait     0000001E 
  5AC:  		Call     PlaySoundAtActor 	( *Var[0] 0000025C )
  5C0:  	EndThread
  5C8:  	Thread
  5D0:  		Call     8026BF48 ( 00000001 )
  5E0:  		Call     HealActor   	( *Var[0] 00000003 00000001 )
  5F8:  		Call     8026BF48 ( 00000000 )
  608:  	EndThread
  610:  EndIf
  618:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  62C:  If  *Var[0]  !=  FFFFFFFF 
  63C:  	Goto     00000000 
  648:  EndIf
  650:  Call     8027114C ( )
  65C:  Wait     00000001 
  668:  Call     UseCamPreset 	( 00000002 )
  678:  Wait     0000000A 
  684:  Call     8027D7F0 ( )
  690:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  6A4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B8:  Return
  6C0:  End

#new:Script $Script_TakeTurn_8022DEE4
    0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_WMagikoopa_RunAway 
   34:  	Return
   3C:  EndIf
   44:  Set  *Var[A]  00000000 
   54:  Set  *Var[B]  00000000 
   64:  Call     CreateTargetList 	( 00008002 )
   74:  Call     InitTargetIterator 	( )
   80:  Label    00000000 
   8C:  Set  *Flag[00]  00000000 
   9C:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   B0:  Call     GetActorType 	( *Var[0] *Var[1] )
   C4:  If  *Var[1]  ==  00000047 
   D4:  	Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
   EC:  	If  *Var[1]  ==  00000001 
   FC:  		Set  *Flag[00]  00000001 
  10C:  	EndIf
  114:  EndIf
  11C:  If  *Flag[00]  ==  00000000 
  12C:  	Call     GetActorHP  	( *Var[0] *Var[2] )
  140:  	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
  154:  	If  *Var[2]  !=  *Var[3] 
  164:  		Add  *Var[A]  00000001 
  174:  	EndIf
  17C:  	Add  *Var[B]  00000001 
  18C:  EndIf
  194:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  1A8:  If  *Var[0]  !=  FFFFFFFF 
  1B8:  	Goto     00000000 
  1C4:  EndIf
  1CC:  Mul  *Var[A]  00000064 
  1DC:  Div  *Var[A]  *Var[B] 
  1EC:  Switch  *Var[A] 
  1F8:  	Case  >=  0000003C 
  204:  		ExecWait $Script_HealAll 
  210:  	Case  ==  00000000 
  21C:  		Call     GetActorFlags 	( .Actor:Self *Var[0] )
  230:  		If  *Var[0]  &  00000200 
  240:  			ExecWait $Script_WMagikoopa_ShapeSpell 
  24C:  		Else
  254:  			ExecWait $Script_WMagikoopa_WandStrike 
  260:  		EndIf
  268:  	Default
  270:  		ExecWait $Script_HealOne 
  27C:  EndSwitch
  284:  Return
  28C:  End

PADDING: 8022E178 to 8022E180 (005C7628 to 005C7630)
00000000 00000000 

#new:DefenseTable $DefenseTable_8022E180
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_8022E18C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022E198
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_8022E244
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8022E2F0
00800000 01000000 022300FF $IdleAnimations_8022E3D0 $DefenseTable_8022E180 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_8022E314
00020001 01000000 022300FF $IdleAnimations_8022E3D0 $DefenseTable_8022E18C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8022E41C $DefenseTable_8022E18C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8022E468 $DefenseTable_8022E18C 00000000 00000000 00000000 00000000 

#new:Actor $YMagikoopa
% stats
[Index]        55b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022E198 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022E2F0 
[Script]      $Script_Init_802305B8 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingYMagikoopa
% stats
[Index]        56b 
[Level]        21`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8022E244 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8022E314 
[Script]      $Script_Init_8023065C 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      95`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_8022E3D0
.Status:Normal    00560201
.Status:Stone     00560200
.Status:Sleep     00560208
.Status:Poison    00560201
.Status:Stop      00560200
.Status:Static    00560201
.Status:Paralyze  00560200
.Status:Dizzy     00560207
.Status:Fear      00560207
.Status:End

#new:IdleAnimations $IdleAnimations_8022E41C
.Status:Normal    00570201
.Status:Stone     00570200
.Status:Sleep     00570208
.Status:Poison    00570201
.Status:Stop      00570200
.Status:Static    00570201
.Status:Paralyze  00570200
.Status:Dizzy     00570207
.Status:Fear      00570207
.Status:End

#new:IdleAnimations $IdleAnimations_8022E468
.Status:Normal    0057020A
.Status:End

#new:Script $Script_Idle_8022E474
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8022E484
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000001 
   70:  		SetConst  *Var[1]  00560204 
   80:  		ExecWait DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00560205 
   C0:  		SetConst  *Var[2]  00560206 
   D0:  		ExecWait DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath
   E8:  		SetConst  *Var[0]  00000001 
   F8:  		SetConst  *Var[1]  00560205 
  108:  		SetConst  *Var[2]  00560206 
  118:  		ExecWait DoBurnHit 
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00560206 
  144:  		ExecWait DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:MultibounceHit
  164:  		SetConst  *Var[0]  00000001 
  174:  		SetConst  *Var[1]  00560204 
  184:  		ExecWait 8029B998 
  190:  	Case  ==  .Event:MultibounceDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  00560204 
  1BC:  		ExecWait 8029B998 
  1C8:  		SetConst  *Var[0]  00000001 
  1D8:  		SetConst  *Var[1]  00560204 
  1E8:  		ExecWait DoDeath 
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017
  208:  	CaseOR  ==  .Event:Immune
  214:  	CaseOR  ==  .Event:AirLiftFailed
  220:  		SetConst  *Var[0]  00000001 
  230:  		SetConst  *Var[1]  00560201 
  240:  		ExecWait DoImmune 
  24C:  	EndCaseGroup
  254:  	Case  ==  .Event:Death
  260:  		SetConst  *Var[0]  00000001 
  270:  		SetConst  *Var[1]  00560204 
  280:  		ExecWait DoNormalHit 
  28C:  		Wait     0000000A 
  298:  		SetConst  *Var[0]  00000001 
  2A8:  		SetConst  *Var[1]  00560204 
  2B8:  		ExecWait DoDeath 
  2C4:  		Return
  2CC:  	Case  ==  .Event:RecoverStatus
  2D8:  		SetConst  *Var[0]  00000001 
  2E8:  		SetConst  *Var[1]  00560201 
  2F8:  		ExecWait DoRecover 
  304:  	Case  ==  .Event:ScareAway
  310:  		Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
  328:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  33C:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  358:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  374:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  394:  		Wait     0000000F 
  3A0:  		Call     SetAnimation 	( .Actor:Self 00000001 00560202 )
  3B8:  		ExecWait $Script_YMagikoopa_RunAway 
  3C4:  		Return
  3CC:  	Case  ==  .Event:BeginAirLift
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		SetConst  *Var[1]  00560202 
  3F8:  		ExecWait DoAirLift 
  404:  	Case  ==  .Event:BlowAway
  410:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  424:  		If  *Var[0]  !&  0035D000 
  434:  			If  *Var[0]  &  00080000 
  444:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
  464:  			Else
  46C:  				Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
  48C:  			EndIf
  494:  		EndIf
  49C:  		SetConst  *Var[0]  00000001 
  4AC:  		SetConst  *Var[1]  00560204 
  4BC:  		ExecWait DoBlowAway 
  4C8:  		Return
  4D0:  	Default
  4D8:  EndSwitch
  4E0:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  4F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  508:  Return
  510:  End

#new:Script $Script_8022E99C
    0:  Call     GetBattleFlags ( *Var[0] )
   10:  If  *Var[0]  !&  00080000 
   20:  	If  *Var[0]  &  00000240 
   30:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   48:  	EndIf
   50:  Else
   58:  	Call     $Function_80219208 ( *Var[0] )
   68:  	Switch  *Var[0] 
   74:  		CaseOR  ==  00000083 
   80:  		CaseOR  ==  00000084 
   8C:  		CaseOR  ==  00000085 
   98:  		CaseOR  ==  00000088 
   A4:  			Call     GetBattleFlags ( *Var[0] )
   B4:  			If  *Var[0]  &  00000240 
   C4:  				Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   DC:  			EndIf
   E4:  		EndCaseGroup
   EC:  	EndSwitch
   F4:  EndIf
   FC:  Return
  104:  End

#new:Script $Script_8022EAA8
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
   40:  	Goto     00000000 
   4C:  EndIf
   54:  Call     GetLastElement ( *Var[0] )
   64:  If  *Var[0]  &  00000400 
   74:  	Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
   8C:  	Goto     00000000 
   98:  EndIf
   A0:  Return
   A8:  Label    00000000 
   B4:  Call     8027D32C ( FFFFFF81 )
   C4:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   D8:  If  *Var[0]  &  00080000 
   E8:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  108:  EndIf
  110:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
  12C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
  148:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
  164:  Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
  180:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
  19C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  1B8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D4:  Sub  *Var[2]  00000001 
  1E4:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  204:  Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
  218:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  234:  Set  *Var[1]  00000000 
  244:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  258:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  274:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  294:  Call     $Function_80219300 ( 00000096 0000000A )
  2A8:  Thread
  2B0:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
  2CC:  EndThread
  2D4:  Call     GetEventType 	( .Actor:Self *Var[3] )
  2E8:  If  *Var[3]  ==  0000000F
  2F8:  	Call     SetAnimation 	( .Actor:Self 00000001 00560204 )
  310:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  32C:  	Add  *Var[4]  0000000A 
  33C:  	Add  *Var[5]  00000005 
  34C:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  EndIf
  398:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3B4:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  3D4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3F0:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  410:  Loop     00000014 
  41C:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  438:  	Wait     00000001 
  444:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  460:  	Wait     00000001 
  46C:  EndLoop
  474:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  490:  Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  4A8:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4C0:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022E484 )
  4D4:  Call     SetActorType 	( FFFFFF81 00000055 )
  4E8:  Call     SetStatusTable ( .Actor:Self $StatusTable_8022E198 )
  4FC:  Call     $Function_80219234 ( FFFFFFF6 00000014 0000000A 00000020 )
  518:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  530:  Call     8026F6EC ( FFFFFF81 )
  540:  Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
  554:  Mod  *Var[0]  00000004 
  564:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  578:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  58C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  5A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5C0:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  Call     HPBarToHome 	( .Actor:Self )
  5EC:  Return
  5F4:  End

#new:Script $Script_HandleEvent_8022F0A4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		ExecWait $Script_8022E99C 
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00570204 
   80:  		ExecWait DoNormalHit 
   8C:  	CaseOR  ==  .Event:Hit
   98:  	CaseOR  ==  .Event:FallTrigger
   A4:  		ExecWait $Script_8022E99C 
   B0:  		SetConst  *Var[0]  00000002 
   C0:  		SetConst  *Var[1]  00570204 
   D0:  		ExecWait DoNormalHit 
   DC:  		ExecWait $Script_8022EAA8 
   E8:  	EndCaseGroup
   F0:  	CaseOR  ==  .Event:BurnHit
   FC:  	CaseOR  ==  0000000F
  108:  		ExecWait $Script_8022E99C 
  114:  		SetConst  *Var[0]  00000002 
  124:  		SetConst  *Var[1]  00570205 
  134:  		SetConst  *Var[2]  00570206 
  144:  		ExecWait DoBurnHit 
  150:  		ExecWait $Script_8022EAA8 
  15C:  	EndCaseGroup
  164:  	Case  ==  .Event:BurnDeath
  170:  		SetConst  *Var[0]  00000002 
  180:  		SetConst  *Var[1]  00570205 
  190:  		SetConst  *Var[2]  00570206 
  1A0:  		ExecWait DoBurnHit 
  1AC:  		SetConst  *Var[0]  00000002 
  1BC:  		SetConst  *Var[1]  00570206 
  1CC:  		ExecWait DoDeath 
  1D8:  		Return
  1E0:  	Case  ==  .Event:MultibounceHit
  1EC:  		SetConst  *Var[0]  00000002 
  1FC:  		SetConst  *Var[1]  00570204 
  20C:  		ExecWait 8029B998 
  218:  	Case  ==  .Event:MultibounceDeath
  224:  		SetConst  *Var[0]  00000002 
  234:  		SetConst  *Var[1]  00570204 
  244:  		ExecWait 8029B998 
  250:  		SetConst  *Var[0]  00000002 
  260:  		SetConst  *Var[1]  00570204 
  270:  		ExecWait DoDeath 
  27C:  		Return
  284:  	CaseOR  ==  00000017
  290:  	CaseOR  ==  .Event:Immune
  29C:  	CaseOR  ==  .Event:AirLiftFailed
  2A8:  		SetConst  *Var[0]  00000002 
  2B8:  		SetConst  *Var[1]  00570201 
  2C8:  		ExecWait DoImmune 
  2D4:  	EndCaseGroup
  2DC:  	Case  ==  .Event:Death
  2E8:  		SetConst  *Var[0]  00000002 
  2F8:  		SetConst  *Var[1]  00570204 
  308:  		ExecWait DoNormalHit 
  314:  		Wait     0000000A 
  320:  		SetConst  *Var[0]  00000002 
  330:  		SetConst  *Var[1]  00570204 
  340:  		ExecWait DoDeath 
  34C:  		Return
  354:  	Case  ==  .Event:BeginFirstStrike
  360:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  37C:  		Call     HPBarToCurrent ( .Actor:Self )
  38C:  	Case  ==  .Event:EndFirstStrike
  398:  		Call     SetAnimation 	( .Actor:Self 00000002 00570201 )
  3B0:  		Call     SetGoalToHome 	( .Actor:Self )
  3C0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  3D4:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
  3F0:  		Call     SetAnimation 	( .Actor:Self 00000002 00570201 )
  408:  		Call     HPBarToHome 	( .Actor:Self )
  418:  	Case  ==  .Event:RecoverStatus
  424:  		SetConst  *Var[0]  00000002 
  434:  		SetConst  *Var[1]  00570201 
  444:  		ExecWait DoRecover 
  450:  	Case  ==  .Event:ScareAway
  45C:  		Call     SetAnimation 	( .Actor:Self 00000002 00570204 )
  474:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
  488:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  4E0:  		Wait     0000000F 
  4EC:  		Call     SetAnimation 	( .Actor:Self 00000002 00570202 )
  504:  		ExecWait $Script_YMagikoopa_RunAway 
  510:  		Return
  518:  	Case  ==  .Event:BeginAirLift
  524:  		SetConst  *Var[0]  00000002 
  534:  		SetConst  *Var[1]  00570202 
  544:  		ExecWait DoAirLift 
  550:  	Case  ==  .Event:BlowAway
  55C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  570:  		If  *Var[0]  !&  0035D000 
  580:  			If  *Var[0]  &  00080000 
  590:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
  5B0:  			Else
  5B8:  				Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
  5D8:  			EndIf
  5E0:  		EndIf
  5E8:  		SetConst  *Var[0]  00000002 
  5F8:  		SetConst  *Var[1]  00570204 
  608:  		ExecWait DoBlowAway 
  614:  		Return
  61C:  	Default
  624:  EndSwitch
  62C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  640:  Call     UseIdleAnimation 	( .Actor:Self .True )
  654:  Return
  65C:  End

#new:Script $Script_YMagikoopa_ShapeSpell
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     GetBattlePhase ( *Var[0] )
   4C:  If  *Var[0]  ==  .Phase:FirstStrike
   5C:  	Call     UseCamPreset 	( 00000002 )
   6C:  	Call     MoveCamOver 	( 00000001 )
   7C:  Else
   84:  	Call     UseCamPreset 	( 00000002 )
   94:  	Call     MoveCamOver 	( 0000000A )
   A4:  EndIf
   AC:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
   C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   DC:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
   F0:  If  *Var[A]  &  00080000 
  100:  	Sub  *Var[0]  0000000C 
  110:  	Add  *Var[1]  0000000E 
  120:  Else
  128:  	Sub  *Var[0]  0000001E 
  138:  	Add  *Var[1]  00000024 
  148:  EndIf
  150:  Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call     SetAnimation 	( .Actor:Self 00000002 00570202 )
  1AC:  Wait     0000001E 
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1DC:  Switch  *Var[0] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Set  *Var[A]  *Var[0] 
  210:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  224:  		Call     SetAnimation 	( .Actor:Self 00000002 00570203 )
  23C:  		Wait     00000005 
  248:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  264:  		Call     GetStatusFlags ( .Actor:Self *Var[9] )
  278:  		If  *Var[9]  &  00080000 
  288:  			Sub  *Var[0]  00000008 
  298:  			Add  *Var[1]  00000008 
  2A8:  		Else
  2B0:  			Sub  *Var[0]  00000014 
  2C0:  			Add  *Var[1]  00000014 
  2D0:  		EndIf
  2D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  2E8:  		Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  304:  		Sub  *Var[3]  00000032 
  314:  		Set  *Var[4]  00000000 
  324:  		Call     $Function_802190B0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000019 )
  34C:  		Wait     00000032 
  358:  		If  *Var[A]  ==  00000005 
  368:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  38C:  		EndIf
  394:  		Wait     0000000E 
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3C8:  		Wait     0000001E 
  3D4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  3EC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  400:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  414:  		Return
  41C:  	EndCaseGroup
  424:  EndSwitch
  42C:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
  440:  Call     SetAnimation 	( .Actor:Self 00000002 00570203 )
  458:  Wait     00000005 
  464:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  480:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  494:  If  *Var[A]  &  00080000 
  4A4:  	Sub  *Var[0]  00000008 
  4B4:  	Add  *Var[1]  00000008 
  4C4:  Else
  4CC:  	Sub  *Var[0]  00000014 
  4DC:  	Add  *Var[1]  00000014 
  4EC:  EndIf
  4F4:  Call     SetGoalToTarget 	( .Actor:Self )
  504:  Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  520:  Sub  *Var[3]  0000000A 
  530:  Call     $Function_802190B0 ( *Var[0] *Var[1] *Var[5] *Var[3] *Var[4] *Var[5] 00000014 )
  558:  Wait     00000012 
  564:  Wait     00000002 
  570:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
  598:  Switch  *Var[0] 
  5A4:  	CaseOR  ==  00000000 
  5B0:  	CaseOR  ==  00000002 
  5BC:  		Wait     00000013 
  5C8:  		Call     8027D7F0 ( )
  5D4:  	EndCaseGroup
  5DC:  EndSwitch
  5E4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  5F8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  60C:  Return
  614:  End

#new:Script $Script_YMagikoopa_WandStrike
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     PlaySoundAtActor 	( .Actor:Self 000002DB )
   88:  Thread
   90:  	Call     SetAnimation 	( .Actor:Self 00000001 00560202 )
   A8:  	Set  *Var[0]  000000C8 
   B8:  	Loop     00000014 
   C4:  		Sub  *Var[0]  0000000A 
   D4:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
   EC:  		Wait     00000001 
   F8:  	EndLoop
  100:  EndThread
  108:  Wait     0000000A 
  114:  Call     SetGoalToTarget 	( .Actor:Self )
  124:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  140:  Call     GetStatusFlags ( .Actor:Self *Var[A] )
  154:  If  *Var[A]  &  00080000 
  164:  	Add  *Var[0]  00000005 
  174:  Else
  17C:  	Add  *Var[0]  00000019 
  18C:  EndIf
  194:  Set  *Var[1]  00000000 
  1A4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1C0:  Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  1DC:  Set  *Var[0]  00000037 
  1EC:  Loop     00000014 
  1F8:  	Add  *Var[0]  0000000A 
  208:  	Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  220:  	Wait     00000001 
  22C:  EndLoop
  234:  Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00560203 )
  264:  Wait     0000000B 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000002DC )
  284:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  2A8:  Switch  *Var[0] 
  2B4:  	CaseOR  ==  00000006 
  2C0:  	CaseOR  ==  00000005 
  2CC:  		Set  *Var[A]  *Var[0] 
  2DC:  		Call     UseCamPreset 	( 00000002 )
  2EC:  		If  *Var[A]  ==  00000005 
  2FC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  320:  		EndIf
  328:  		Wait     0000000F 
  334:  		Set  *Var[0]  000000C8 
  344:  		Loop     00000014 
  350:  			Sub  *Var[0]  0000000A 
  360:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  378:  			Wait     00000001 
  384:  		EndLoop
  38C:  		Call     8027D7F0 ( )
  398:  		Call     SetGoalToHome 	( .Actor:Self )
  3A8:  		Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  3C0:  		Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
  3DC:  		Set  *Var[0]  00000037 
  3EC:  		Loop     00000014 
  3F8:  			Add  *Var[0]  0000000A 
  408:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  420:  			Wait     00000001 
  42C:  		EndLoop
  434:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  44C:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  460:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  474:  		Return
  47C:  	EndCaseGroup
  484:  EndSwitch
  48C:  Call     SetGoalToTarget 	( .Actor:Self )
  49C:  Wait     00000002 
  4A8:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
  4D0:  Switch  *Var[0] 
  4DC:  	CaseOR  ==  00000000 
  4E8:  	CaseOR  ==  00000002 
  4F4:  		Call     UseCamPreset 	( 00000002 )
  504:  		Wait     0000000A 
  510:  		Set  *Var[0]  000000C8 
  520:  		Loop     00000014 
  52C:  			Sub  *Var[0]  0000000A 
  53C:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  554:  			Wait     00000001 
  560:  		EndLoop
  568:  		Call     8027D7F0 ( )
  574:  		Call     SetGoalToHome 	( .Actor:Self )
  584:  		Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  59C:  		Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CosInOut )
  5B8:  		Set  *Var[0]  00000037 
  5C8:  		Loop     00000014 
  5D4:  			Add  *Var[0]  0000000A 
  5E4:  			Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
  5FC:  			Wait     00000001 
  608:  		EndLoop
  610:  		Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
  628:  	EndCaseGroup
  630:  EndSwitch
  638:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  64C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  660:  Return
  668:  End

#new:Script $Script_YMagikoopa_RunAway
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     8027D32C ( FFFFFF81 )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  If  *Var[0]  !=  .Event:ScareAway
   5C:  	Call     UseCamPreset 	( 0000000E )
   6C:  	Call     CamTargetActor ( .Actor:Self )
   7C:  	Call     MoveCamOver 	( 0000000F )
   8C:  	Wait     0000000F 
   98:  	Call     UseCamPreset 	( 00000001 )
   A8:  EndIf
   B0:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   C4:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   E0:  Add  *Var[0]  00000014 
   F0:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  10C:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  124:  Wait     0000000A 
  130:  Call     SetActorAngle 	( .Actor:Self 000000B4 )
  144:  Call     EnableActorBlur 	( .Actor:Self 00000001 )
  158:  Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
  16C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  188:  Add  *Var[0]  000000C8 
  198:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  1CC:  Call     8027D7F0 ( )
  1D8:  Call     UseCamPreset 	( 00000002 )
  1E8:  ExecWait 80298BF0 
  1F4:  Call     8027D32C ( FFFFFF81 )
  204:  Call     RemoveActor 	( .Actor:Self )
  214:  Return
  21C:  End

#new:Script $Script_Init_802305B8
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022E474 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80230700 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022E484 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_Init_8023065C
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_8022E474 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80230700 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022F0A4 )
   3C:  Call     GetBattleVar 	( 00000002 *Var[0] )
   50:  If  *Var[0]  ==  00000000 
   60:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
   74:  EndIf
   7C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   94:  Return
   9C:  End

#new:Script $Script_TakeTurn_80230700
    0:  Set  *Flag[00]  00000000 
   10:  Label    0000000A 
   1C:  Call     CreateTargetList 	( 00008002 )
   2C:  Call     InitTargetIterator 	( )
   38:  Label    00000000 
   44:  Call     GetOwnerTarget ( *Var[0] *Var[1] )
   58:  Call     GetIndexFromHome 	( *Var[0] *Var[1] )
   6C:  Call     GetBattleVar 	( 00000002 *Var[2] )
   80:  If  *Var[1]  >  *Var[2] 
   90:  	Call     $Function_80219358 ( *Var[0] *Var[3] )
   A4:  	If  *Var[3]  ==  00000000 
   B4:  		Call     GetStatusFlags ( *Var[0] *Var[4] )
   C8:  		If  *Var[4]  !&  04002000 
   D8:  			Set  *Var[8]  *Var[0] 
   E8:  			Call     SetBattleVar 	( 00000002 *Var[1] )
   FC:  			Goto     00000064 
  108:  		EndIf
  110:  	EndIf
  118:  EndIf
  120:  Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
  134:  If  *Var[0]  !=  FFFFFFFF 
  144:  	Goto     00000000 
  150:  EndIf
  158:  If  *Flag[00]  ==  00000000 
  168:  	Set  *Flag[00]  00000001 
  178:  	Call     SetBattleVar 	( 00000002 FFFFFFFF )
  18C:  	Goto     0000000A 
  198:  EndIf
  1A0:  Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
  1B8:  If  *Var[0]  ==  00000001 
  1C8:  	ExecWait $Script_YMagikoopa_RunAway 
  1D4:  	Return
  1DC:  EndIf
  1E4:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  1F8:  If  *Var[0]  &  00000200 
  208:  	ExecWait $Script_YMagikoopa_ShapeSpell 
  214:  Else
  21C:  	ExecWait $Script_YMagikoopa_WandStrike 
  228:  EndIf
  230:  Return
  238:  Label    00000064 
  244:  Call     UseIdleAnimation 	( .Actor:Self .False )
  258:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
  26C:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  280:  Call     UseCamPreset 	( 0000000E )
  290:  Call     CamTargetActor ( .Actor:Self )
  2A0:  Call     MoveCamOver 	( 0000000F )
  2B0:  Wait     0000000F 
  2BC:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  2D0:  If  *Var[0]  !&  00000200 
  2E0:  	Call     SetAnimation 	( .Actor:Self 00000001 00560202 )
  2F8:  Else
  300:  	Call     SetAnimation 	( .Actor:Self 00000002 00570202 )
  318:  EndIf
  320:  Wait     00000005 
  32C:  Call     PlaySoundAtActor 	( .Actor:Self 000002F0 )
  340:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  354:  If  *Var[0]  !&  00000200 
  364:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  380:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  394:  	If  *Var[A]  &  00080000 
  3A4:  		Sub  *Var[0]  00000006 
  3B4:  		Add  *Var[1]  0000000C 
  3C4:  		Sub  *Var[2]  00000002 
  3D4:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  418:  	Else
  420:  		Sub  *Var[0]  00000010 
  430:  		Add  *Var[1]  0000001F 
  440:  		Sub  *Var[2]  00000002 
  450:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  494:  	EndIf
  49C:  Else
  4A4:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  	Call     GetStatusFlags ( .Actor:Self *Var[A] )
  4D4:  	If  *Var[A]  &  00080000 
  4E4:  		Sub  *Var[0]  0000000C 
  4F4:  		Add  *Var[1]  0000000E 
  504:  		Sub  *Var[2]  00000002 
  514:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  558:  	Else
  560:  		Sub  *Var[0]  0000001E 
  570:  		Add  *Var[1]  00000024 
  580:  		Sub  *Var[2]  00000002 
  590:  		Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5D4:  	EndIf
  5DC:  EndIf
  5E4:  Wait     0000001E 
  5F0:  Call     GetActorFlags 	( .Actor:Self *Var[0] )
  604:  If  *Var[0]  !&  00000200 
  614:  	Call     SetAnimation 	( .Actor:Self 00000001 00560201 )
  62C:  Else
  634:  	Call     SetAnimation 	( .Actor:Self 00000002 00570201 )
  64C:  EndIf
  654:  Wait     00000005 
  660:  Thread
  668:  	Wait     0000000A 
  674:  	Loop     00000004 
  680:  		Call     PlaySoundAtActor 	( *Var[8] 000003D2 )
  694:  		Call     RandInt     	( 00000003 *Var[0] )
  6A8:  		Add  *Var[0]  00000003 
  6B8:  		Wait     *Var[0] 
  6C4:  	EndLoop
  6CC:  EndThread
  6D4:  Thread
  6DC:  	Call     8026BF48 ( 00000001 )
  6EC:  	Call     ElectrifyActor ( *Var[8] 00000003 )
  700:  	Call     8026BF48 ( 00000000 )
  710:  EndThread
  718:  Call     8027114C ( )
  724:  Call     UseCamPreset 	( 00000002 )
  734:  Wait     0000000A 
  740:  Call     8027D7F0 ( )
  74C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  760:  Call     UseIdleAnimation 	( .Actor:Self .True )
  774:  Return
  77C:  End

PADDING: 80230E84 to 80230E90 (005CA334 to 005CA340)
00000000 00000000 00000000 

#new:Script $Script_80230E90
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Sub  *Var[2]  00000064 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 00000014 *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_80230FA8
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000032 *Var[2] )
   54:  Add  *Var[2]  00000047 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_802310C0
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000032 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Add  *Var[2]  FFFFFF84 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Unknown $???_802311D8
$ASCII_80234920 $ASCII_80234918 $ASCII_80234910 $ASCII_80234908 $ASCII_80234900 $ASCII_802348F8 $ASCII_802348F0 $ASCII_802348E8 
$ASCII_802348E0 $ASCII_802348D8 $ASCII_802348D0 

#new:Script $Script_80231204
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_80219420 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_80231238
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000025 00000001 )
   40:  Call     802C9308 ( 0000001C 00000000 )
   54:  Call     802C9308 ( 00000016 00000000 )
   68:  Exec     $Script_80230E90 
   74:  ExecWait $Script_80231204 
   80:  Return
   88:  End

#new:Script $Script_AfterBattle_802312C8
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802312D8
FFFFFFFF 0000001D 0000001E 0000001F 00000021 00000022 00000023 00000024 
00000000 

#new:Stage $Stage_802312FC
$ASCII_80234950  % flo_tex
$ASCII_80234940  % flo_bt01_shape
$ASCII_80234930  % flo_bt01_hit
$Script_BeforeBattle_80231238 
$Script_AfterBattle_802312C8 
$ASCII_80234928  % fla_bg
$ForegroundModelList_802312D8 
00000000 
00000000 
00000000 

PADDING: 80231324 to 80231330 (005CA7D4 to 005CA7E0)
00000000 00000000 00000000 

#new:Script $Script_80231330
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Sub  *Var[2]  00000064 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 00000014 *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_80231448
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000032 *Var[2] )
   54:  Add  *Var[2]  00000047 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_80231560
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000032 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Add  *Var[2]  FFFFFF84 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Unknown $???_80231678
$ASCII_802349A8 $ASCII_802349A0 $ASCII_80234998 $ASCII_80234990 $ASCII_80234988 $ASCII_80234980 $ASCII_80234978 $ASCII_80234970 
$ASCII_80234968 $ASCII_80234960 $ASCII_80234958 

#new:Script $Script_802316A4
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_802194E0 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_802316D8
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000025 00000000 )
   40:  Call     802C9308 ( 0000001C 00000001 )
   54:  Call     802C9308 ( 00000016 00000000 )
   68:  Exec     $Script_80231330 
   74:  ExecWait $Script_802316A4 
   80:  Return
   88:  End

#new:Script $Script_AfterBattle_80231768
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80231778
FFFFFFFF 00000017 00000018 00000019 0000001A 0000001B 00000000 

#new:Stage $Stage_80231794
$ASCII_802349D8  % flo_tex
$ASCII_802349C8  % flo_bt01_shape
$ASCII_802349B8  % flo_bt01_hit
$Script_BeforeBattle_802316D8 
$Script_AfterBattle_80231768 
$ASCII_802349B0  % fla_bg
$ForegroundModelList_80231778 
00000000 
00000000 
00000000 

PADDING: 802317BC to 802317C0 (005CAC6C to 005CAC70)
00000000 

#new:Script $Script_802317C0
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Sub  *Var[2]  00000064 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 00000014 *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_802318D8
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000032 *Var[2] )
   54:  Add  *Var[2]  00000047 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_802319F0
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000032 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Add  *Var[2]  FFFFFF84 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Unknown $???_80231B08
$ASCII_80234A30 $ASCII_80234A28 $ASCII_80234A20 $ASCII_80234A18 $ASCII_80234A10 $ASCII_80234A08 $ASCII_80234A00 $ASCII_802349F8 
$ASCII_802349F0 $ASCII_802349E8 $ASCII_802349E0 

#new:Script $Script_80231B34
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_802195A0 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_80231B68
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000025 00000000 )
   40:  Call     802C9308 ( 0000001C 00000000 )
   54:  Call     802C9308 ( 00000016 00000001 )
   68:  Exec     $Script_802317C0 
   74:  Exec     $Script_802318D8 
   80:  ExecWait $Script_80231B34 
   8C:  Return
   94:  End

#new:Script $Script_AfterBattle_80231C04
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80231C14
FFFFFFFF 0000000F 00000010 00000013 00000014 00000015 00000011 00000000 

#new:Stage $Stage_80231C34
$ASCII_80234A60  % flo_tex
$ASCII_80234A50  % flo_bt01_shape
$ASCII_80234A40  % flo_bt01_hit
$Script_BeforeBattle_80231B68 
$Script_AfterBattle_80231C04 
$ASCII_80234A38  % fla_bg
$ForegroundModelList_80231C14 
00000000 
00000000 
00000000 

PADDING: 80231C5C to 80231C60 (005CB10C to 005CB110)
00000000 

% Origin: HEURISTIC
#new:Script $Script_80231C60
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Sub  *Var[2]  00000064 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 00000014 *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_80231D78
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000032 *Var[2] )
   54:  Add  *Var[2]  00000047 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80231E90
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000032 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Add  *Var[2]  FFFFFF84 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Unknown $???_80231FA8
$ASCII_80234AB8 $ASCII_80234AB0 $ASCII_80234AA8 $ASCII_80234AA0 $ASCII_80234A98 $ASCII_80234A90 $ASCII_80234A88 $ASCII_80234A80 
$ASCII_80234A78 $ASCII_80234A70 $ASCII_80234A68 

#new:Script $Script_80231FD4
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_80219660 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_80232008
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000023 00000001 )
   40:  Call     802C9308 ( 0000002F 00000000 )
   54:  Call     802C9308 ( 00000016 00000000 )
   68:  Exec     $Script_80231E90 
   74:  ExecWait $Script_80231FD4 
   80:  Return
   88:  End

#new:Script $Script_AfterBattle_80232098
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802320A8
FFFFFFFF 00000020 00000021 00000000 

#new:Stage $Stage_802320B8
$ASCII_80234AE8  % flo_tex
$ASCII_80234AD8  % flo_bt02_shape
$ASCII_80234AC8  % flo_bt02_hit
$Script_BeforeBattle_80232008 
$Script_AfterBattle_80232098 
$ASCII_80234AC0  % fla_bg
$ForegroundModelList_802320A8 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_802320E0
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Sub  *Var[2]  00000064 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 00000014 *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_802321F8
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000032 *Var[2] )
   54:  Add  *Var[2]  00000047 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_80232310
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000032 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Add  *Var[2]  FFFFFF84 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Unknown $???_80232428
$ASCII_80234B40 $ASCII_80234B38 $ASCII_80234B30 $ASCII_80234B28 $ASCII_80234B20 $ASCII_80234B18 $ASCII_80234B10 $ASCII_80234B08 
$ASCII_80234B00 $ASCII_80234AF8 $ASCII_80234AF0 

#new:Script $Script_80232454
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_80219720 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_80232488
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000023 00000000 )
   40:  Call     802C9308 ( 0000002F 00000001 )
   54:  Call     802C9308 ( 00000016 00000000 )
   68:  Exec     $Script_80232310 
   74:  Call     ModifyColliderFlags 	( 00000003 00000000 00000006 )
   8C:  ExecWait $Script_80232454 
   98:  Return
   A0:  End

#new:Script $Script_AfterBattle_80232530
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80232540
FFFFFFFF 00000025 00000026 00000027 00000028 00000028 0000002A 00000000 

#new:Stage $Stage_80232560
$ASCII_80234B70  % flo_tex
$ASCII_80234B60  % flo_bt02_shape
$ASCII_80234B50  % flo_bt02_hit
$Script_BeforeBattle_80232488 
$Script_AfterBattle_80232530 
$ASCII_80234B48  % fla_bg
$ForegroundModelList_80232540 
00000000 
00000000 
00000000 

PADDING: 80232588 to 80232590 (005CBA38 to 005CBA40)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80232590
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Sub  *Var[2]  00000064 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 00000014 *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

% Origin: HEURISTIC
#new:Script $Script_802326A8
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000000 
   40:  Call     RandInt     	( 00000032 *Var[2] )
   54:  Add  *Var[2]  00000047 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Script $Script_802327C0
    0:  Label    00000000 
    C:  Call     RandInt     	( 000000FA *Var[0] )
   20:  Sub  *Var[0]  0000007D 
   30:  Set  *Var[1]  00000032 
   40:  Call     RandInt     	( 00000028 *Var[2] )
   54:  Add  *Var[2]  FFFFFF84 
   64:  Call     RandInt     	( 0000001E *Var[3] )
   78:  Add  *Var[3]  0000005A 
   88:  Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   CC:  Call     RandInt     	( 0000001E *Var[0] )
   E0:  Add  *Var[0]  00000014 
   F0:  Wait     *Var[0] 
   FC:  Goto     00000000 
  108:  Return
  110:  End

#new:Unknown $???_802328D8
$ASCII_80234BC8 $ASCII_80234BC0 $ASCII_80234BB8 $ASCII_80234BB0 $ASCII_80234BA8 $ASCII_80234BA0 $ASCII_80234B98 $ASCII_80234B90 
$ASCII_80234B88 $ASCII_80234B80 $ASCII_80234B78 

#new:Script $Script_80232904
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_802197E0 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_80232938
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Call     802C9308 ( 00000023 00000001 )
   40:  Call     802C9308 ( 0000002F 00000000 )
   54:  Call     802C9308 ( 00000010 00000000 )
   68:  Call     802C9308 ( 00000016 00000001 )
   7C:  Exec     $Script_802327C0 
   88:  ExecWait $Script_80232904 
   94:  Return
   9C:  End

#new:Script $Script_AfterBattle_802329DC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802329EC
FFFFFFFF 00000020 00000021 00000000 

#new:Stage $Stage_802329FC
$ASCII_80234BF8  % flo_tex
$ASCII_80234BE8  % flo_bt02_shape
$ASCII_80234BD8  % flo_bt02_hit
$Script_BeforeBattle_80232938 
$Script_AfterBattle_802329DC 
$ASCII_80234BD0  % fla_bg
$ForegroundModelList_802329EC 
00000000 
00000000 
00000000 

PADDING: 80232A24 to 80232A30 (005CBED4 to 005CBEE0)
00000000 00000000 00000000 

#new:Script $Script_80232A30
    0:  Set  *Var[A]  *Var[0] 
   10:  UseIntBuffer *Var[A] 
   1C:  Loop     
   28:  	Get1Int  *Var[0] 
   34:  	If  *Var[0]  ==  00000000 
   44:  		BreakLoop
   4C:  	EndIf
   54:  	Call     SetTexPanner 	( *Var[0] 0000000E )
   68:  	Get1Int  *Var[0] 
   74:  	If  *Var[0]  ==  00000000 
   84:  		BreakLoop
   8C:  	EndIf
   94:  	Call     SetTexPanner 	( *Var[0] 0000000F )
   A8:  EndLoop
   B0:  Set  *Var[0]  00000000 
   C0:  Set  *Var[1]  00000000 
   D0:  Label    00000000 
   DC:  Label    00000000 
   E8:  Add  *Var[0]  FFFFFF74 
   F8:  If  *Var[0]  <  00000000 
  108:  	Add  *Var[0]  00010000 
  118:  EndIf
  120:  Call     802C9364 ( 0000000E 00000000 *Var[0] 00000000 )
  13C:  Add  *Var[1]  FFFFFF38 
  14C:  If  *Var[1]  <  00000000 
  15C:  	Add  *Var[1]  00010000 
  16C:  EndIf
  174:  Call     802C9364 ( 0000000F 00000000 *Var[1] 00000000 )
  190:  Wait     00000001 
  19C:  Goto     00000000 
  1A8:  Return
  1B0:  End

#new:Unknown $???_80232BE8
$ASCII_80234C50 $ASCII_80234C48 $ASCII_80234C40 $ASCII_80234C38 $ASCII_80234C30 $ASCII_80234C28 $ASCII_80234C20 $ASCII_80234C18 
$ASCII_80234C10 $ASCII_80234C08 $ASCII_80234C00 

#new:Script $Script_80232C14
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_802198A0 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_80232C48
    0:  Call     EnableModel 	( *Var[F] .True )
   14:  Set  *Var[E]  0000009F 
   24:  Loop     *Var[E] 
   30:  	AddF  *Var[3]  00000000 
   40:  	AddF  *Var[4]  *Fixed[0.0] 
   50:  	SetF  *Var[5]  *Fixed[0.0107421875] 
   60:  	AddF  *Var[0]  *Var[3] 
   70:  	AddF  *Var[1]  *Var[4] 
   80:  	AddF  *Var[2]  *Var[5] 
   90:  	MulF  *Var[6]  *Fixed[1.0107422] 
   A0:  	AddF  *Var[7]  *Fixed[0.0107421875] 
   B0:  	SetF  *Var[8]  *Var[6] 
   C0:  	Call     $Function_80219960 ( *Var[E] *Var[A] *Fixed[0.0] *Fixed[0.203125] 0000000F 00000000 00000000 )
   E8:  	AddF  *Var[8]  *Var[A] 
   F8:  	SetF  *Var[9]  *Var[7] 
  108:  	Call     $Function_80219960 ( *Var[E] *Var[A] *Fixed[0.0] *Fixed[0.203125] 00000014 00000000 0000005A )
  130:  	AddF  *Var[9]  *Var[A] 
  140:  	SetF  *Var[A]  *Var[0] 
  150:  	MulF  *Var[A]  *Fixed[10.0] 
  160:  	Call     TranslateModel ( *Var[F] *Var[0] *Var[1] *Var[2] )
  17C:  	Call     ScaleModel  	( *Var[F] *Var[8] *Var[9] 00000001 )
  198:  	Call     RotateModel 	( *Var[F] *Var[A] 00000000 00000000 00000001 )
  1B8:  	Wait     00000001 
  1C4:  EndLoop
  1CC:  Call     EnableModel 	( *Var[F] .False )
  1E0:  Return
  1E8:  End

#new:Unknown $???_80232E38
00000021 00000022 00000023 00000000 

#new:Script $Script_BeforeBattle_80232E48
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  $???_80232E38 
   3C:  Exec     $Script_80232A30 
   48:  Call     SetTexPanner 	( 00000024 00000001 )
   5C:  Call     SetTexPanner 	( 00000025 00000002 )
   70:  Call     SetTexPanner 	( 00000026 00000003 )
   84:  Call     SetTexPanner 	( 00000027 00000004 )
   98:  Call     SetTexPanner 	( 00000028 00000005 )
   AC:  Call     SetTexPanner 	( 00000029 00000006 )
   C0:  Call     SetTexPanner 	( 0000002A 00000007 )
   D4:  Thread
   DC:  	Set  *Var[E]  00000001 
   EC:  	Set  *Var[F]  00000000 
   FC:  	Loop     
  108:  		AddF  *Var[F]  *Var[E] 
  118:  		If  *Var[F]  >=  00000438 
  128:  			Set  *Var[F]  00000000 
  138:  		EndIf
  140:  		Set  *Var[0]  *Var[F] 
  150:  		Div  *Var[0]  00000009 
  160:  		Mod  *Var[0]  00000002 
  170:  		Mul  *Var[0]  00004000 
  180:  		Set  *Var[1]  *Var[F] 
  190:  		Div  *Var[1]  00000004 
  1A0:  		Mod  *Var[1]  00000002 
  1B0:  		Mul  *Var[1]  00004000 
  1C0:  		Set  *Var[2]  *Var[F] 
  1D0:  		Div  *Var[2]  00000005 
  1E0:  		Mod  *Var[2]  00000002 
  1F0:  		Mul  *Var[2]  00004000 
  200:  		Set  *Var[3]  *Var[F] 
  210:  		Div  *Var[3]  00000006 
  220:  		Mod  *Var[3]  00000002 
  230:  		Mul  *Var[3]  00004000 
  240:  		Set  *Var[4]  *Var[F] 
  250:  		Div  *Var[4]  00000002 
  260:  		Mod  *Var[4]  00000002 
  270:  		Mul  *Var[4]  00004000 
  280:  		Set  *Var[5]  *Var[F] 
  290:  		Div  *Var[5]  00000008 
  2A0:  		Mod  *Var[5]  00000002 
  2B0:  		Mul  *Var[5]  00004000 
  2C0:  		Set  *Var[6]  *Var[F] 
  2D0:  		Div  *Var[6]  00000008 
  2E0:  		Mod  *Var[6]  00000002 
  2F0:  		Mul  *Var[6]  00008000 
  300:  		Call     802C9364 ( 00000001 00000000 *Var[0] 00000000 )
  31C:  		Call     802C9364 ( 00000002 00000000 *Var[1] 00000000 )
  338:  		Call     802C9364 ( 00000003 00000000 *Var[2] 00000000 )
  354:  		Call     802C9364 ( 00000004 00000000 *Var[3] 00000000 )
  370:  		Call     802C9364 ( 00000005 00000000 *Var[4] 00000000 )
  38C:  		Call     802C9364 ( 00000006 00000000 *Var[5] 00000000 )
  3A8:  		Call     802C9364 ( 00000007 00000000 *Var[6] 00000000 )
  3C4:  		Wait     00000001 
  3D0:  	EndLoop
  3D8:  EndThread
  3E0:  Thread
  3E8:  	Set  *Var[0]  00000000 
  3F8:  	Loop     00000010 
  404:  		Set  *Var[1]  *Var[0] 
  414:  		Add  *Var[1]  00002710 
  424:  		Add  *Var[0]  00000001 
  434:  		Call     CloneModel  	( 0000002C *Var[1] )
  448:  		Call     EnableModel 	( *Var[1] .False )
  45C:  	EndLoop
  464:  	Call     EnableModel 	( 0000002C .False )
  478:  	Set  *Var[E]  00000000 
  488:  	Loop     
  494:  		SetF  *Var[0]  *Fixed[106.0] 
  4A4:  		SetF  *Var[1]  *Fixed[94.0] 
  4B4:  		SetF  *Var[2]  *Fixed[-91.0] 
  4C4:  		Call     RandInt     	( 00000064 *Var[3] )
  4D8:  		AddF  *Var[3]  FFFFFFCE 
  4E8:  		DivF  *Var[3]  *Fixed[200.0] 
  4F8:  		SetF  *Var[4]  *Fixed[1.0] 
  508:  		SetF  *Var[5]  00000000 
  518:  		SetF  *Var[6]  *Fixed[0.296875] 
  528:  		SetF  *Var[7]  *Fixed[0.296875] 
  538:  		Set  *Var[F]  *Var[E] 
  548:  		Add  *Var[F]  00002710 
  558:  		Exec     $Script_80232C48 
  564:  		Add  *Var[E]  00000001 
  574:  		If  *Var[E]  >=  00000010 
  584:  			Set  *Var[E]  00000000 
  594:  		EndIf
  59C:  		Wait     0000000A 
  5A8:  	EndLoop
  5B0:  EndThread
  5B8:  ExecWait $Script_80232C14 
  5C4:  Return
  5CC:  End

#new:Script $Script_AfterBattle_8023341C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_8023342C
FFFFFFFF 00000017 0000001F 00000000 

#new:Stage $Stage_8023343C
$ASCII_80234C80  % flo_tex
$ASCII_80234C70  % flo_bt03_shape
$ASCII_80234C60  % flo_bt03_hit
$Script_BeforeBattle_80232E48 
$Script_AfterBattle_8023341C 
$ASCII_80234C58  % fla_bg
$ForegroundModelList_8023342C 
00000000 
00000000 
00000000 

PADDING: 80233464 to 80233470 (005CC914 to 005CC920)
00000000 00000000 00000000 

#new:Script $Script_80233470
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[F]  00000000 
   20:  Loop     
   2C:  	Call     $Function_80219AF0 ( *Var[F] *Var[0] *Fixed[0.96875] *Fixed[1.03125] 0000000F 00000000 00000000 )
   54:  	Call     $Function_80219AF0 ( *Var[F] *Var[1] *Fixed[1.03125] *Fixed[0.96875] 0000000F 00000000 00000000 )
   7C:  	Call     ScaleModel  	( *Var[A] *Var[1] *Var[0] 00000001 )
   98:  	Add  *Var[F]  00000001 
   A8:  	If  *Var[F]  >=  0000001E 
   B8:  		Set  *Var[F]  00000000 
   C8:  	EndIf
   D0:  	Wait     00000001 
   DC:  EndLoop
   E4:  Return
   EC:  End

#new:Unknown $???_80233564
$ASCII_80234CD8 $ASCII_80234CD0 $ASCII_80234CC8 $ASCII_80234CC0 $ASCII_80234CB8 $ASCII_80234CB0 $ASCII_80234CA8 $ASCII_80234CA0 
$ASCII_80234C98 $ASCII_80234C90 $ASCII_80234C88 

#new:Script $Script_80233590
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_80219C80 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_802335C4
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  Set  *Var[0]  0000000E 
   3C:  Exec     $Script_80233470 
   48:  Set  *Var[0]  00000010 
   58:  Exec     $Script_80233470 
   64:  Set  *Var[0]  00000012 
   74:  Exec     $Script_80233470 
   80:  Set  *Var[0]  00000014 
   90:  Exec     $Script_80233470 
   9C:  Set  *Var[0]  00000019 
   AC:  Exec     $Script_80233470 
   B8:  Thread
   C0:  	Set  *Var[0]  0000001F 
   D0:  	Exec     $Script_80233470 
   DC:  	Set  *Var[0]  00000020 
   EC:  	Exec     $Script_80233470 
   F8:  	Wait     00000005 
  104:  	Set  *Var[0]  00000000 
  114:  	Exec     $Script_80233470 
  120:  	Set  *Var[0]  00000001 
  130:  	Exec     $Script_80233470 
  13C:  	Wait     00000005 
  148:  	Set  *Var[0]  00000005 
  158:  	Exec     $Script_80233470 
  164:  	Set  *Var[0]  00000004 
  174:  	Exec     $Script_80233470 
  180:  	Set  *Var[0]  00000006 
  190:  	Exec     $Script_80233470 
  19C:  	Wait     00000005 
  1A8:  	Set  *Var[0]  00000021 
  1B8:  	Exec     $Script_80233470 
  1C4:  	Set  *Var[0]  00000022 
  1D4:  	Exec     $Script_80233470 
  1E0:  EndThread
  1E8:  Call     CloneModel  	( 0000001B 00002710 )
  1FC:  Call     EnableModel 	( 00002710 .False )
  210:  Call     TranslateModel ( 00002710 00000000 00000009 00000000 )
  22C:  Call     ParentColliderToModel 	( 00000000 00002710 )
  240:  ExecWait $Script_80233590 
  24C:  Return
  254:  End

#new:Script $Script_AfterBattle_80233820
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80233830
FFFFFFFF 0000001F 00000019 00000000 

#new:Stage $Stage_80233840
$ASCII_80234D08  % flo_tex
$ASCII_80234CF8  % flo_bt04_shape
$ASCII_80234CE8  % flo_bt04_hit
$Script_BeforeBattle_802335C4 
$Script_AfterBattle_80233820 
$ASCII_80234CE0  % sra_bg
$ForegroundModelList_80233830 
00000000 
00000000 
00000000 

PADDING: 80233868 to 80233870 (005CCD18 to 005CCD20)
00000000 00000000 

#new:Unknown $???_80233870
$ASCII_80234D60 $ASCII_80234D58 $ASCII_80234D50 $ASCII_80234D48 $ASCII_80234D40 $ASCII_80234D38 $ASCII_80234D30 $ASCII_80234D28 
$ASCII_80234D20 $ASCII_80234D18 $ASCII_80234D10 

#new:Script $Script_8023389C
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_80219D40 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_802338D0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  ExecWait $Script_8023389C 
   38:  Return
   40:  End

#new:Script $Script_AfterBattle_80233918
    0:  Return
    8:  End

#new:Stage $Stage_80233928
$ASCII_80234D90  % flo_tex
$ASCII_80234D80  % flo_bt05_shape
$ASCII_80234D70  % flo_bt05_hit
$Script_BeforeBattle_802338D0 
$Script_AfterBattle_80233918 
$ASCII_80234D68  % fla_bg
00000000 
00000000 
00000000 
00000000 

#new:Unknown $???_80233950
$ASCII_80234DE8 $ASCII_80234DE0 $ASCII_80234DD8 $ASCII_80234DD0 $ASCII_80234DC8 $ASCII_80234DC0 $ASCII_80234DB8 $ASCII_80234DB0 
$ASCII_80234DA8 $ASCII_80234DA0 $ASCII_80234D98 

#new:Script $Script_8023397C
    0:  If  *StoryProgress  >=  00000035 
   10:  	Call     $Function_80219E00 ( )
   1C:  EndIf
   24:  Return
   2C:  End

#new:Script $Script_BeforeBattle_802339B0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
   2C:  ExecWait $Script_8023397C 
   38:  Return
   40:  End

#new:Script $Script_AfterBattle_802339F8
    0:  Return
    8:  End

#new:Stage $Stage_80233A08
$ASCII_80234E18  % flo_tex
$ASCII_80234E08  % flo_bt06_shape
$ASCII_80234DF8  % flo_bt06_hit
$Script_BeforeBattle_802339B0 
$Script_AfterBattle_802339F8 
$ASCII_80234DF0  % fla_bg
00000000 
00000000 
00000000 
00000000 

#new:Formation $Formation_00
$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000 
$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000 
$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000 
$Bzzap 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$Lakitu 00000005 0000000A 00000000 00000000 00000000 00000000 
$Spiny 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000 
$Spiny 00000002 00000008 00000000 00000000 00000000 00000000 
$Spiny 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000 
$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000 
$Spiny 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000 
$WMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000 
$RMagikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$Lakitu 00000004 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000005 00000009 00000000 00000000 00000000 00000000 
$Lakitu 00000006 00000008 00000000 00000000 00000000 00000000 
$YMagikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$Spiny 00000001 0000000A 00000000 00000000 00000000 00000000 
$Spiny 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$Spiny 00000000 0000000A 00000000 00000000 00000000 00000000 
$Spiny 00000001 00000009 00000000 00000000 00000000 00000000 
$Spiny 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$Spiny 00000000 0000000A 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000 
$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_11
$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_12
$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_13
$CrazeeDayzee 00000001 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_14
$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_15
$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_16
$CrazeeDayzee 00000000 0000000A 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000001 00000009 00000000 00000000 00000000 00000000 
$AmazyDayzee 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_17
$Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_18
$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_19
$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000 
$FlyingGRNMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1A
$Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1B
$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1C
$AmazyDayzee 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1D
$AmazyDayzee 00000000 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1E
$AmazyDayzee 00000000 0000000A 00000000 00000000 00000000 00000000 
$AmazyDayzee 00000001 00000009 00000000 00000000 00000000 00000000 
$AmazyDayzee 00000002 00000008 00000000 00000000 00000000 00000000 
$AmazyDayzee 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1F
$RuffPuff 00000005 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_20
$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000 
$RuffPuff 00000006 00000008 00000000 00000000 00000000 00000000 
$RuffPuff 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_21
$RuffPuff 00000005 0000000A 00000000 00000000 00000000 00000000 
$Lakitu 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_22
$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_23
$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000 
$CrazeeDayzee 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_24
$RuffPuff 00000004 0000000A 00000000 00000000 00000000 00000000 
$RuffPuff 00000005 00000009 00000000 00000000 00000000 00000000 
$FlyingYMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80235180 00000002 $Formation_00 $Stage_802312FC 00000000 % unused
$SJIS_80235174 00000003 $Formation_01 $Stage_802312FC 00000000 % unused
$SJIS_8023515C 00000002 $Formation_02 $Stage_802312FC 00000000 % unused
$SJIS_80235144 00000003 $Formation_03 $Stage_802312FC 00000000 % unused
$SJIS_80235120 00000004 $Formation_04 $Stage_802312FC 00000000 
$SJIS_8023510C 00000002 $Formation_05 $Stage_802312FC 00000000 % unused
$SJIS_802350F8 00000002 $Formation_06 $Stage_802312FC 00000000 
$SJIS_802350E0 00000004 $Formation_07 $Stage_802312FC 00000000 
$SJIS_802350C8 00000004 $Formation_08 $Stage_802312FC 00000000 % unused
$SJIS_802350A8 00000003 $Formation_09 $Stage_802312FC 00000000 
$SJIS_8023508C 00000003 $Formation_0A $Stage_802312FC 00000000 
$SJIS_8023506C 00000004 $Formation_0B $Stage_802312FC 00000000 
$SJIS_80235060 00000002 $Formation_0C $Stage_802312FC 00000000 
$SJIS_80235054 00000003 $Formation_0D $Stage_802312FC 00000000 
$SJIS_8023502C 00000003 $Formation_0E $Stage_802312FC 00000000 % unused
$SJIS_8023501C 00000001 $Formation_0F $Stage_802312FC 00000000 
$SJIS_8023500C 00000002 $Formation_10 $Stage_802312FC 00000000 
$SJIS_80234FFC 00000003 $Formation_11 $Stage_802312FC 00000000 % unused
$SJIS_80234FEC 00000004 $Formation_12 $Stage_802312FC 00000000 
$SJIS_80234FD4 00000002 $Formation_13 $Stage_802312FC 00000000 % unused
$SJIS_80234FBC 00000003 $Formation_14 $Stage_802312FC 00000000 
$SJIS_80234FA4 00000003 $Formation_15 $Stage_802312FC 00000000 
$SJIS_80234F80 00000003 $Formation_16 $Stage_802312FC 00000000 % unused
$SJIS_80234F74 00000002 $Formation_17 $Stage_802312FC 00000000 
$SJIS_80234F68 00000003 $Formation_18 $Stage_802312FC 00000000 % unused
$SJIS_80234F44 00000003 $Formation_19 $Stage_802312FC 00000000 
$SJIS_80234F2C 00000002 $Formation_1A $Stage_802312FC 00000000 
$SJIS_80234F0C 00000003 $Formation_1B $Stage_802312FC 00000000 % unused
$SJIS_80234EF4 00000001 $Formation_1C $Stage_802312FC 00000000 
$SJIS_80234ED4 00000003 $Formation_1D $Stage_802312FC 00000000 % unused
$SJIS_80234EBC 00000004 $Formation_1E $Stage_802312FC 00000000 % unused
$SJIS_80234EAC 00000002 $Formation_1F $Stage_802312FC 00000000 
$SJIS_80234E9C 00000004 $Formation_20 $Stage_802312FC 00000000 
$SJIS_80234E84 00000002 $Formation_21 $Stage_802312FC 00000000 % unused
$SJIS_80234E68 00000003 $Formation_22 $Stage_802312FC 00000000 
$SJIS_80234E4C 00000003 $Formation_23 $Stage_802312FC 00000000 % unused
$SJIS_80234E20 00000003 $Formation_24 $Stage_802312FC 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_802351D4 $Stage_802312FC 
$ASCII_802351CC $Stage_80231794 
$ASCII_802351C4 $Stage_80231C34 
$ASCII_802351BC $Stage_802320B8 
$ASCII_802351B4 $Stage_80232560 
$ASCII_802351AC $Stage_802329FC 
$ASCII_802351A4 $Stage_8023343C 
$ASCII_8023519C $Stage_80233840 
$ASCII_80235194 $Stage_80233928 
$ASCII_8023518C $Stage_80233A08 
00000000 00000000 

PADDING: 802348C4 to 802348D0 (005CDD74 to 005CDD80)
00000000 00000000 00000000 

% Origin: HEURISTIC
#new:ASCII $ASCII_802348D0
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_802348D8
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_802348E0
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_802348E8
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_802348F0
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_802348F8
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234900
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234908
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234910
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234918
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234920
flo_03

#new:ASCII $ASCII_80234928
fla_bg

#new:ASCII $ASCII_80234930
flo_bt01_hit

#new:ASCII $ASCII_80234940
flo_bt01_shape

#new:ASCII $ASCII_80234950
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234958
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234960
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234968
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234970
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234978
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234980
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234988
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234990
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234998
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_802349A0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_802349A8
flo_03

#new:ASCII $ASCII_802349B0
fla_bg

#new:ASCII $ASCII_802349B8
flo_bt01_hit

#new:ASCII $ASCII_802349C8
flo_bt01_shape

#new:ASCII $ASCII_802349D8
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_802349E0
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_802349E8
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_802349F0
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_802349F8
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A00
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A08
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A10
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A18
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A20
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A28
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A30
flo_03

#new:ASCII $ASCII_80234A38
fla_bg

#new:ASCII $ASCII_80234A40
flo_bt01_hit

#new:ASCII $ASCII_80234A50
flo_bt01_shape

#new:ASCII $ASCII_80234A60
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A68
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A70
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A78
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A80
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A88
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A90
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234A98
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AA0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AA8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AB0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AB8
flo_03

#new:ASCII $ASCII_80234AC0
fla_bg

#new:ASCII $ASCII_80234AC8
flo_bt02_hit

#new:ASCII $ASCII_80234AD8
flo_bt02_shape

#new:ASCII $ASCII_80234AE8
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AF0
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234AF8
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B00
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B08
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B10
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B18
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B20
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B28
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B30
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B38
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B40
flo_03

#new:ASCII $ASCII_80234B48
fla_bg

#new:ASCII $ASCII_80234B50
flo_bt02_hit

#new:ASCII $ASCII_80234B60
flo_bt02_shape

#new:ASCII $ASCII_80234B70
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B78
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B80
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B88
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B90
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234B98
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BA0
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BA8
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BB0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BB8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BC0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234BC8
flo_03

#new:ASCII $ASCII_80234BD0
fla_bg

#new:ASCII $ASCII_80234BD8
flo_bt02_hit

#new:ASCII $ASCII_80234BE8
flo_bt02_shape

#new:ASCII $ASCII_80234BF8
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C00
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C08
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C10
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C18
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C20
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C28
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C30
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C38
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C40
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C48
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C50
flo_03

#new:ASCII $ASCII_80234C58
fla_bg

#new:ASCII $ASCII_80234C60
flo_bt03_hit

#new:ASCII $ASCII_80234C70
flo_bt03_shape

#new:ASCII $ASCII_80234C80
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C88
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C90
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234C98
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CA0
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CA8
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CB0
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CB8
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CC0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CC8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CD0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234CD8
flo_03

#new:ASCII $ASCII_80234CE0
sra_bg

#new:ASCII $ASCII_80234CE8
flo_bt04_hit

#new:ASCII $ASCII_80234CF8
flo_bt04_shape

#new:ASCII $ASCII_80234D08
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D10
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D18
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D20
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D28
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D30
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D38
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D40
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D48
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D50
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D58
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D60
flo_03

#new:ASCII $ASCII_80234D68
fla_bg

#new:ASCII $ASCII_80234D70
flo_bt05_hit

#new:ASCII $ASCII_80234D80
flo_bt05_shape

#new:ASCII $ASCII_80234D90
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80234D98
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DA0
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DA8
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DB0
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DB8
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DC0
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DC8
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DD0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DD8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DE0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80234DE8
flo_03

#new:ASCII $ASCII_80234DF0
fla_bg

#new:ASCII $ASCII_80234DF8
flo_bt06_hit

#new:ASCII $ASCII_80234E08
flo_bt06_shape

#new:ASCII $ASCII_80234E18
flo_tex

#new:SJIS $SJIS_80234E20
% kumokumo-nx2,iero-kameku?sora?
834E8382 834E8382 815B8393 7882512C 83438347 838D815B 834A8381 8362834E 
816982BB 82E7816A 00000000 

#new:SJIS $SJIS_80234E4C
% kumokumo-nx2,panji-
834E8382 834E8382 815B8393 7882512C 83708393 8357815B 00000000 

#new:SJIS $SJIS_80234E68
% kumokumo-nx2,hachi-
834E8382 834E8382 815B8393 7882512C 836E8362 8360815B 00000000 

#new:SJIS $SJIS_80234E84
% kumokumo-n,jugemu
834E8382 834E8382 815B8393 2C835783 85835183 80000000 

#new:SJIS $SJIS_80234E9C
% kumokumo-nx4
834E8382 834E8382 815B8393 78340000 

#new:SJIS $SJIS_80234EAC
% kumokumo-nx2
834E8382 834E8382 815B8393 78320000 

#new:SJIS $SJIS_80234EBC
% kiramekupanji-sanx4
82AB82E7 82DF82AD 83708393 8357815B 82B382F1 78825300 

#new:SJIS $SJIS_80234ED4
% kiramekupanji-san,hachi-x2
82AB82E7 82DF82AD 83708393 8357815B 82B382F1 2C836E83 62836081 5B783200 

#new:SJIS $SJIS_80234EF4
% kiramekupanji-san
82AB82E7 82DF82AD 83708393 8357815B 82B382F1 00000000 

#new:SJIS $SJIS_80234F0C
% hachi-,kumokumo-n,hachi-
836E8362 8360815B 2C834E83 82834E83 82815B83 932C836E 83628360 815B0000 

#new:SJIS $SJIS_80234F2C
% hachi-,kumokumo-n
836E8362 8360815B 2C834E83 82834E83 82815B83 93000000 

#new:SJIS $SJIS_80234F44
% hachi-x2,guri-nkameku?sora?
836E8362 8360815B 78322C83 4F838A81 5B839383 4A838183 62834E81 6982BB82 
E7816A00 

#new:SJIS $SJIS_80234F68
% hachi-x3
836E8362 8360815B 78330000 

#new:SJIS $SJIS_80234F74
% hachi-x2
836E8362 8360815B 78320000 

#new:SJIS $SJIS_80234F80
% panji-sanx2,kiramekupanji-san
83708393 8357815B 82B382F1 78322C82 AB82E782 DF82AD83 70839383 57815B82 
B382F100 

#new:SJIS $SJIS_80234FA4
% panji-sanx2,hachi-
83708393 8357815B 82B382F1 78322C83 6E836283 60815B00 

#new:SJIS $SJIS_80234FBC
% panji-san,hachi-x2
83708393 8357815B 82B382F1 2C836E83 62836081 5B783200 

#new:SJIS $SJIS_80234FD4
% panji-san,hachi-
83708393 8357815B 82B382F1 2C836E83 62836081 5B000000 

#new:SJIS $SJIS_80234FEC
% panji-sanx4
83708393 8357815B 82B382F1 78340000 

#new:SJIS $SJIS_80234FFC
% panji-sanx3
83708393 8357815B 82B382F1 78330000 

#new:SJIS $SJIS_8023500C
% panji-sanx2
83708393 8357815B 82B382F1 78320000 

#new:SJIS $SJIS_8023501C
% panji-san
83708393 8357815B 82B382F1 00000000 

#new:SJIS $SJIS_8023502C
% togezo-,panji-san,kaifukuheiho-
83678351 835D815B 2C837083 93835781 5B82B382 F12C82A9 82A282D3 82AD8377 
8343837A 815B0000 

#new:SJIS $SJIS_80235054
% togezo-x3
83678351 835D815B 78330000 

#new:SJIS $SJIS_80235060
% togezo-x2
83678351 835D815B 78320000 

#new:SJIS $SJIS_8023506C
% jugemux3,iero-kameku
83578385 83518380 7882522C 83438347 838D815B 834A8381 8362834E 00000000 

#new:SJIS $SJIS_8023508C
% jugemux2,redokameku
83578385 83518380 7882512C 838C8362 8368834A 83818362 834E0000 

#new:SJIS $SJIS_802350A8
% jugemux2,howaitokameku
83578385 83518380 7882512C 837A838F 83438367 834A8381 8362834E 00000000 

#new:SJIS $SJIS_802350C8
% jugemux3,togezo-
83578385 83518380 7882522C 83678351 835D815B 00000000 

#new:SJIS $SJIS_802350E0
% jugemux2,togezo-x2
83578385 83518380 7882512C 83678351 835D815B 78825100 

#new:SJIS $SJIS_802350F8
% jugemu,togezo-
83578385 83518380 2C836783 51835D81 5B000000 

#new:SJIS $SJIS_8023510C
% jugemu,panji-
83578385 83518380 2C837083 93835781 5B000000 

#new:SJIS $SJIS_80235120
% jugemu,hachi-,jugemu,hachi-
83578385 83518380 2C836E83 62836081 5B2C8357 83858351 83802C83 6E836283 
60815B00 

#new:SJIS $SJIS_80235144
% jugemu,hachi-x2
83578385 83518380 2C836E83 62836081 5B788251 00000000 

#new:SJIS $SJIS_8023515C
% jugemu,kumokumo-n
83578385 83518380 2C834E83 82834E83 82815B83 93000000 

#new:SJIS $SJIS_80235174
% jugemux3
83578385 83518380 78330000 

#new:SJIS $SJIS_80235180
% jugemux2
83578385 83518380 78320000 

#new:ASCII $ASCII_8023518C
flo_06

#new:ASCII $ASCII_80235194
flo_05

#new:ASCII $ASCII_8023519C
flo_04

#new:ASCII $ASCII_802351A4
flo_03

#new:ASCII $ASCII_802351AC
flo_02c

#new:ASCII $ASCII_802351B4
flo_02b

#new:ASCII $ASCII_802351BC
flo_02

#new:ASCII $ASCII_802351C4
flo_01c

#new:ASCII $ASCII_802351CC
flo_01b

#new:ASCII $ASCII_802351D4
flo_01

PADDING: 802351DC to 802351E0 (005CE68C to 005CE690)
00000000 

