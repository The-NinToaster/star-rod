% Script File: 09 Area IWA.bscr
% Decoded from: 4D01F0 to 4DA5E0 (09 Area IWA)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       {Func:GetVariable}
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       {Func:GetActor}
   24:  DADDU     S0, V0, R0
   28:  BNE       S0, R0, .o40
   2C:  NOP
   30:  LW        V1, 8 (V0)
   34:  ADDIU     V0, R0, 4
   38:  BEQ       R0, R0, .o48
   3C:  SB        V0, 1D (V1)
        .o40
   40:  LW        V0, 8 (V0)
   44:  SB        R0, 1D (V0)
        .o48
   48:  LW        RA, 14 (SP)
   4C:  LW        S0, 10 (SP)
   50:  ADDIU     V0, R0, 2
   54:  JR        RA
   58:  ADDIU     SP, SP, 18

#new:Function $Function_8021805C
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

PADDING: 802180B4 to 802180C0 (004D02A4 to 004D02B0)
00000000 00000000 00000000 

#new:Function $Function_802180C0
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

PADDING: 80218118 to 80218120 (004D0308 to 004D0310)
00000000 00000000 

#new:Function $Function_80218120
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  LIO       A1, *WhackaHitCount
   14:  DADDU     A0, R0, R0
   18:  SW        RA, 14 (SP)
   1C:  JAL       {Func:GetVariable}
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  ADDIU     V0, R0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  ADDIU     V0, R0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18

PADDING: 80218168 to 80218170 (004D0358 to 004D0360)
00000000 00000000 

#new:Function $Function_80218170
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  LIO       A1, *WhackaHitCount
   14:  DADDU     A0, R0, R0
   18:  SW        RA, 14 (SP)
   1C:  JAL       {Func:GetVariable}
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  ADDIU     V0, R0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  ADDIU     V0, R0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18

PADDING: 802181B8 to 802181C0 (004D03A8 to 004D03B0)
00000000 00000000 

% Origin: HINT
#new:Function $Function_802181C0
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  DADDU     S0, A0, R0
    C:  LIO       A1, *WhackaHitCount
   14:  DADDU     A0, R0, R0
   18:  SW        RA, 14 (SP)
   1C:  JAL       {Func:GetVariable}
   20:  SW        R0, 84 (S0)
   24:  SLTI      V0, V0, 8
   28:  BNE       V0, R0, .o34
   2C:  ADDIU     V0, R0, 1
   30:  SW        V0, 84 (S0)
        .o34
   34:  LW        RA, 14 (SP)
   38:  LW        S0, 10 (SP)
   3C:  ADDIU     V0, R0, 2
   40:  JR        RA
   44:  ADDIU     SP, SP, 18

PADDING: 80218208 to 80218210 (004D03F8 to 004D0400)
00000000 00000000 

#new:Formation $Formation_00
$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000001 00000009 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 
$MontyMole 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Vector3D $Vector3D_8021853C
90` 70` 0`

#new:Formation $Formation_0C
$Buzzar $Vector3D_8021853C 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$WhackaA 00000002 00000008 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80222330 00000001 $Formation_00 $Stage_802208B0 00000000 
$SJIS_80222320 00000002 $Formation_01 $Stage_802208B0 00000000 
$SJIS_80222310 00000003 $Formation_02 $Stage_802208B0 00000000 % unused
$SJIS_802222F8 00000002 $Formation_03 $Stage_802208B0 00000000 
$SJIS_802222DC 00000003 $Formation_04 $Stage_802208B0 00000000 
$SJIS_802222D0 00000001 $Formation_05 $Stage_802208B0 00000000 
$SJIS_802222C0 00000002 $Formation_06 $Stage_802208B0 00000000 
$SJIS_802222B0 00000003 $Formation_07 $Stage_802208B0 00000000 
$SJIS_802222A0 00000004 $Formation_08 $Stage_802208B0 00000000 % unused
$SJIS_80222288 00000002 $Formation_09 $Stage_802208B0 00000000 
$SJIS_8022226C 00000003 $Formation_0A $Stage_802208B0 00000000 % unused
$SJIS_80222248 00000003 $Formation_0B $Stage_802208B0 00000000 % unused
$SJIS_8022223C 00000001 $Formation_0C $Stage_802215CC 00000000 
$SJIS_80222230 00000003 $Formation_0D $Stage_802215CC 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8022234C $Stage_802208B0 
$ASCII_80222344 $Stage_80221560 
$ASCII_8022233C $Stage_802215CC 
00000000 00000000 

PADDING: 80218704 to 80218710 (004D08F4 to 004D0900)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_80218710
.Element:Normal 00000002
.Element:Fire   00000063
.Element:Magic  00000000
.Element:End

#new:DefenseTable $DefenseTable_8021872C
.Element:Normal 00000000
.Element:Fire   00000063
.Element:End

#new:StatusTable $StatusTable_80218740
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen    100`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802187EC
00800000 01000000 001600FF $IdleAnimations_80218838 $DefenseTable_80218710 00000010 00000000 00F60000 00000000 

#new:Actor $Cleft
% stats
[Index]        11b 
[Level]        10`b 
[MaxHP]         2`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218740 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802187EC 
[Script]      $Script_Init_802188D0 
% move effectiveness
[Escape]       80`b 
[Item]         40`b 
[AirLift]      40`b 
[Hurricane]    40`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80218838
.Status:Normal    00300002
.Status:Stone     00300000
.Status:Sleep     0030000C
.Status:Poison    00300002
.Status:Stop      00300000
.Status:Static    00300002
.Status:Paralyze  00300000
.Status:Dizzy     0030000E
.Status:Fear      0030000E
.Status:End

#new:IdleAnimations $IdleAnimations_80218884
.Status:Normal    00300005
.Status:Stone     00300001
.Status:Sleep     0030000D
.Status:Poison    00300005
.Status:Stop      00300001
.Status:Static    00300005
.Status:Paralyze  00300001
.Status:Dizzy     0030000F
.Status:Fear      0030000F
.Status:End

#new:Script $Script_Init_802188D0
    0:  Call     BindIdle    	( .Actor:Self $Script_Idle_80218934 )
   14:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021A3EC )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80218C3C )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Return
   5C:  End

#new:Script $Script_Idle_80218934
    0:  Return
    8:  End

#new:Script $Script_80218944
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   18:  Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
   30:  Call     SetAnimation 	( .Actor:Self 00000001 00300007 )
   48:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
   64:  Thread
   6C:  	Set  *Var[0]  00000000 
   7C:  	Loop     00000005 
   88:  		Add  *Var[0]  FFFFFFDC 
   98:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
   B4:  		Wait     00000001 
   C0:  	EndLoop
   C8:  EndThread
   D0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
  100:  Sub  *Var[1]  00000006 
  110:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  12C:  Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
  14C:  Call     $Function_8021805C ( 000000C8 0000000A )
  160:  Thread
  168:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  184:  EndThread
  18C:  Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000028 00000008 *Fixed[0.0] 00000014 00000000 00000000 00000000 00000000 00000000 )
  1D0:  Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  1EC:  Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  208:  Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  224:  Call     SetAnimation 	( .Actor:Self 00000001 00300003 )
  23C:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218884 )
  254:  Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021872C )
  26C:  Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 0000000F )
  288:  Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF9 )
  2A4:  Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
  2C0:  Call     $Function_80218000 ( 00000000 )
  2D0:  Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
  2E8:  Return
  2F0:  End

#new:Script $Script_HandleEvent_80218C3C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		Call     GetLastElement ( *Var[0] )
   70:  		Switch  *Var[0] 
   7C:  			Case  &  00000200 
   88:  				ExecWait $Script_80218944 
   94:  			Default
   9C:  				Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   B4:  				If  *Var[0]  ==  00000001 
   C4:  					SetConst  *Var[1]  00300009 
   D4:  				Else
   DC:  					SetConst  *Var[1]  00300008 
   EC:  				EndIf
   F4:  				SetConst  *Var[0]  00000001 
  104:  				ExecWait DoNormalHit 
  110:  		EndSwitch
  118:  	EndCaseGroup
  120:  	Case  ==  .Event:BurnHit
  12C:  		Call     GetLastElement ( *Var[0] )
  13C:  		Switch  *Var[0] 
  148:  			Case  &  00000200 
  154:  				ExecWait $Script_80218944 
  160:  			Default
  168:  				Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .True )
  184:  				Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  19C:  				If  *Var[0]  ==  00000001 
  1AC:  					SetConst  *Var[0]  00000001 
  1BC:  					SetConst  *Var[1]  00300009 
  1CC:  					SetConst  *Var[2]  FFFFFFFF 
  1DC:  					ExecWait DoBurnHit 
  1E8:  				Else
  1F0:  					SetConst  *Var[0]  00000001 
  200:  					SetConst  *Var[1]  00300008 
  210:  					SetConst  *Var[2]  FFFFFFFF 
  220:  					ExecWait DoBurnHit 
  22C:  				EndIf
  234:  				Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .False )
  250:  		EndSwitch
  258:  	Case  ==  .Event:BurnDeath
  264:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  27C:  		If  *Var[0]  ==  00000001 
  28C:  			SetConst  *Var[0]  00000001 
  29C:  			SetConst  *Var[1]  00300009 
  2AC:  			SetConst  *Var[2]  FFFFFFFF 
  2BC:  			ExecWait DoBurnHit 
  2C8:  			SetConst  *Var[0]  00000001 
  2D8:  			SetConst  *Var[1]  00300009 
  2E8:  			ExecWait DoDeath 
  2F4:  		Else
  2FC:  			SetConst  *Var[0]  00000001 
  30C:  			SetConst  *Var[1]  00300008 
  31C:  			SetConst  *Var[2]  FFFFFFFF 
  32C:  			ExecWait DoBurnHit 
  338:  			SetConst  *Var[0]  00000001 
  348:  			SetConst  *Var[1]  00300008 
  358:  			ExecWait DoDeath 
  364:  		EndIf
  36C:  		Return
  374:  	Case  ==  .Event:MultibounceHit
  380:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  398:  		If  *Var[0]  ==  00000001 
  3A8:  			SetConst  *Var[1]  00300009 
  3B8:  		Else
  3C0:  			SetConst  *Var[1]  00300008 
  3D0:  		EndIf
  3D8:  		SetConst  *Var[0]  00000001 
  3E8:  		ExecWait 8029B998 
  3F4:  	Case  ==  .Event:MultibounceDeath
  400:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  418:  		If  *Var[0]  ==  00000001 
  428:  			SetConst  *Var[0]  00000001 
  438:  			SetConst  *Var[1]  00300009 
  448:  			ExecWait 8029B998 
  454:  			SetConst  *Var[0]  00000001 
  464:  			SetConst  *Var[1]  00300009 
  474:  			ExecWait DoDeath 
  480:  		Else
  488:  			SetConst  *Var[0]  00000001 
  498:  			SetConst  *Var[1]  00300008 
  4A8:  			ExecWait 8029B998 
  4B4:  			SetConst  *Var[0]  00000001 
  4C4:  			SetConst  *Var[1]  00300008 
  4D4:  			ExecWait DoDeath 
  4E0:  		EndIf
  4E8:  		Return
  4F0:  	Case  ==  .Event:ShockHit
  4FC:  		SetConst  *Var[0]  00000001 
  50C:  		SetConst  *Var[1]  00300008 
  51C:  		ExecWait DoShockHit 
  528:  		SetConst  *Var[0]  00000001 
  538:  		SetConst  *Var[1]  00300008 
  548:  		ExecWait 8029BD70 
  554:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  574:  		SetConst  *Var[0]  00000001 
  584:  		SetConst  *Var[1]  00300007 
  594:  		ExecWait DoReturnHome 
  5A0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  5B4:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  5D4:  	Case  ==  .Event:ShockDeath
  5E0:  		SetConst  *Var[0]  00000001 
  5F0:  		SetConst  *Var[1]  00300008 
  600:  		ExecWait DoShockHit 
  60C:  		SetConst  *Var[0]  00000001 
  61C:  		SetConst  *Var[1]  00300008 
  62C:  		ExecWait DoDeath 
  638:  		Return
  640:  	Case  ==  .Event:StarBeam
  64C:  	Case  ==  .Event:SpikeTaunt
  658:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  66C:  		If  *Var[0]  !&  0035D000 
  67C:  			Call     SetAnimation 	( .Actor:Self 00000001 00300018 )
  694:  		EndIf
  69C:  		Wait     0000000A 
  6A8:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6C4:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  6D8:  		If  *Var[3]  &  00080000 
  6E8:  			Add  *Var[0]  FFFFFFFD 
  6F8:  			Add  *Var[1]  0000000A 
  708:  		Else
  710:  			Add  *Var[0]  FFFFFFF8 
  720:  			Add  *Var[1]  0000001B 
  730:  		EndIf
  738:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  77C:  		Wait     00000014 
  788:  	CaseOR  ==  00000017
  794:  	CaseOR  ==  .Event:Immune
  7A0:  	CaseOR  ==  .Event:AirLiftFailed
  7AC:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  7C4:  		If  *Var[0]  ==  00000001 
  7D4:  			SetConst  *Var[1]  00300003 
  7E4:  		Else
  7EC:  			SetConst  *Var[1]  00300002 
  7FC:  		EndIf
  804:  		SetConst  *Var[0]  00000001 
  814:  		ExecWait DoImmune 
  820:  	EndCaseGroup
  828:  	Case  ==  .Event:Death
  834:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  84C:  		If  *Var[0]  ==  00000001 
  85C:  			SetConst  *Var[0]  00000001 
  86C:  			SetConst  *Var[1]  00300009 
  87C:  			ExecWait DoNormalHit 
  888:  			Wait     0000000A 
  894:  			SetConst  *Var[0]  00000001 
  8A4:  			SetConst  *Var[1]  00300009 
  8B4:  			ExecWait DoDeath 
  8C0:  		Else
  8C8:  			SetConst  *Var[0]  00000001 
  8D8:  			SetConst  *Var[1]  00300008 
  8E8:  			ExecWait DoNormalHit 
  8F4:  			Wait     0000000A 
  900:  			SetConst  *Var[0]  00000001 
  910:  			SetConst  *Var[1]  00300008 
  920:  			ExecWait DoDeath 
  92C:  		EndIf
  934:  		Return
  93C:  	Case  ==  .Event:RecoverStatus
  948:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  960:  		If  *Var[0]  ==  00000000 
  970:  			SetConst  *Var[0]  00000001 
  980:  			SetConst  *Var[1]  00300002 
  990:  			ExecWait DoRecover 
  99C:  		EndIf
  9A4:  	Case  ==  .Event:ScareAway
  9B0:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  9C8:  		If  *Var[0]  ==  00000001 
  9D8:  			SetConst  *Var[0]  00000001 
  9E8:  			SetConst  *Var[1]  00300003 
  9F8:  			ExecWait DoImmune 
  A04:  		Else
  A0C:  			SetConst  *Var[0]  00000001 
  A1C:  			SetConst  *Var[1]  00300007 
  A2C:  			SetConst  *Var[2]  00300008 
  A3C:  			ExecWait DoScareAway 
  A48:  			Return
  A50:  		EndIf
  A58:  	Case  ==  .Event:BeginAirLift
  A64:  		SetConst  *Var[0]  00000001 
  A74:  		SetConst  *Var[1]  0030000F 
  A84:  		ExecWait DoAirLift 
  A90:  	Case  ==  .Event:BlowAway
  A9C:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  AB4:  		If  *Var[0]  ==  00000001 
  AC4:  			SetConst  *Var[0]  00000001 
  AD4:  			SetConst  *Var[1]  0030000F 
  AE4:  		Else
  AEC:  			SetConst  *Var[0]  00000001 
  AFC:  			SetConst  *Var[1]  00300008 
  B0C:  		EndIf
  B14:  		ExecWait DoBlowAway 
  B20:  		Return
  B28:  	Default
  B30:  EndSwitch
  B38:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  B4C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  B60:  Return
  B68:  End

#new:Script $Script_802197AC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   44:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
   5C:  Call     SetAnimation 	( .Actor:Self 00000001 00300003 )
   74:  Wait     00000014 
   80:  Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
   98:  Call     SetAnimation 	( .Actor:Self 00000001 00300005 )
   B0:  Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
   C8:  Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
   E0:  If  *Var[0]  >  00000000 
   F0:  	Sub  *Var[0]  00000001 
  100:  	Call     SetActorVar 	( .Actor:Self 00000001 *Var[0] )
  118:  Else
  120:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
  13C:  	Call     SetAnimation 	( .Actor:Self 00000001 00300003 )
  154:  	Thread
  15C:  		Wait     00000003 
  168:  		Loop     00000005 
  174:  			Add  *Var[0]  00000024 
  184:  			Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  1A0:  			Wait     00000001 
  1AC:  		EndLoop
  1B4:  	EndThread
  1BC:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D8:  	Sub  *Var[1]  00000006 
  1E8:  	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
  1FC:  	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  218:  	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  238:  	Call     $Function_8021805C ( 000000C8 0000000A )
  24C:  	Thread
  254:  		Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
  270:  	EndThread
  278:  	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
  294:  	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  2B0:  	Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
  2CC:  	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  2E4:  	Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
  2FC:  	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218838 )
  314:  	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80218710 )
  32C:  	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000016 )
  348:  	Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
  364:  	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
  380:  	Wait     00000001 
  38C:  	Call     $Function_80218000 ( 00000001 )
  39C:  	Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
  3B4:  EndIf
  3BC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  3E4:  Return
  3EC:  End

#new:Script $Script_80219BA0
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 0000003F )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     MoveCamOver 	( 0000001E )
   94:  Thread
   9C:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   B8:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
   FC:  	Wait     0000000A 
  108:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  14C:  	Wait     00000005 
  158:  	Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  19C:  EndThread
  1A4:  Call     SetAnimation 	( .Actor:Self 00000001 00300010 )
  1BC:  Wait     0000000A 
  1C8:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  1DC:  Call     SetAnimation 	( .Actor:Self 00000001 00300011 )
  1F4:  Call     SetGoalToTarget 	( .Actor:Self )
  204:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 FFFFFFFB )
  220:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  234:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  24C:  Call     SetAnimation 	( .Actor:Self 00000001 00300000 )
  264:  Wait     00000008 
  270:  Call     PlaySoundAtActor 	( .Actor:Self 000020D1 )
  284:  Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
  2A0:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
  2C4:  Switch  *Var[0] 
  2D0:  	CaseOR  ==  00000006 
  2DC:  	CaseOR  ==  00000005 
  2E8:  		Set  *Var[A]  *Var[0] 
  2F8:  		If  *Var[A]  ==  00000005 
  308:  			Thread
  310:  				Wait     0000000A 
  31C:  				Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  340:  			EndThread
  348:  		EndIf
  350:  		Call     SetAnimation 	( .Actor:Self 00000001 00300011 )
  368:  		Call     SetGoalToTarget 	( .Actor:Self )
  378:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  394:  		Sub  *Var[0]  00000064 
  3A4:  		Set  *Var[1]  00000000 
  3B4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  3D0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  3E4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  3FC:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 0000002D )
  41C:  		Call     SetAnimation 	( .Actor:Self 00000001 00300008 )
  434:  		Wait     0000000F 
  440:  		Wait     00000008 
  44C:  		Call     8026F6EC ( FFFFFF81 )
  45C:  		Call     UseCamPreset 	( 00000002 )
  46C:  		Call     8027D7F0 ( )
  478:  		Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
  498:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  4AC:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4C8:  		Call     SetAnimation 	( .Actor:Self 00000001 00300007 )
  4E0:  		Call     SetGoalToHome 	( .Actor:Self )
  4F0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  504:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  51C:  		Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
  534:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  54C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  560:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  574:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  588:  		Return
  590:  	EndCaseGroup
  598:  EndSwitch
  5A0:  Call     SetAnimation 	( .Actor:Self 00000001 00300011 )
  5B8:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  5D4:  Add  *Var[0]  00000014 
  5E4:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  600:  Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  614:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
  62C:  Call     8026F6EC ( FFFFFF81 )
  63C:  Wait     00000002 
  648:  Call     SetGoalToTarget 	( .Actor:Self )
  658:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  680:  Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
  698:  Call     UseCamPreset 	( 00000002 )
  6A8:  Switch  *Var[0] 
  6B4:  	CaseOR  ==  00000000 
  6C0:  	CaseOR  ==  00000002 
  6CC:  		Call     UseCamPreset 	( 00000002 )
  6DC:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6F8:  		Add  *Var[0]  0000000F 
  708:  		Set  *Var[1]  00000000 
  718:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.4003906] )
  72C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  748:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  768:  		Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
  780:  		Wait     00000005 
  78C:  		Call     8027D7F0 ( )
  798:  		Call     SetAnimation 	( .Actor:Self 00000001 00300007 )
  7B0:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  7C4:  		Call     SetGoalToHome 	( .Actor:Self )
  7D4:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  7EC:  		Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
  804:  	EndCaseGroup
  80C:  EndSwitch
  814:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  828:  Call     UseIdleAnimation 	( .Actor:Self .True )
  83C:  Return
  844:  End

#new:Script $Script_TakeTurn_8021A3EC
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	ExecWait $Script_802197AC 
   34:  Else
   3C:  	ExecWait $Script_80219BA0 
   48:  EndIf
   50:  Return
   58:  End

PADDING: 8021A44C to 8021A450 (004D263C to 004D2640)
00000000 

#new:DefenseTable $DefenseTable_8021A450
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021A45C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     80`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     10`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021A508
00020000 01000000 FE1000FF $IdleAnimations_8021A59C $DefenseTable_8021A450 00000000 00000000 00F90000 00000000 
80800001 020000F1 FE0C00FF $IdleAnimations_8021A59C $DefenseTable_8021A450 00000000 00000000 00F90000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021A5E8 $DefenseTable_8021A450 00000000 00000000 00000000 00000000 

#new:Actor $MontyMole
% stats
[Index]        12b 
[Level]         8`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021A45C 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8021A508 
[Script]      $Script_Init_8021A7B0 
% move effectiveness
[Escape]       80`b 
[Item]         85`b 
[AirLift]      70`b 
[Hurricane]    50`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         34`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021A59C
.Status:Normal    002F0001
.Status:Stone     002F0000
.Status:Sleep     002F0014
.Status:Poison    002F0001
.Status:Stop      002F0000
.Status:Static    002F0001
.Status:Paralyze  002F0000
.Status:Dizzy     002F0014
.Status:Fear      002F0014
.Status:End

#new:IdleAnimations $IdleAnimations_8021A5E8
.Status:Normal    002F000F
.Status:End

#new:IdleAnimations $IdleAnimations_8021A5F4
.Status:Normal    002F0012
.Status:End

MISSING: 8021A600 to 8021A60C (004D27F0 to 004D27FC)
00000001 002F0006 00000000 

#new:SpriteTable $SpriteTable_8021A60C
00022000 01000000 000000FF $IdleAnimations_8021A5F4 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_8021A630
    0:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   18:  If  *Var[0]  ==  00000001 
   28:  	Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
   48:  EndIf
   50:  Return
   58:  End

#new:Actor $EmptyMoleHole
% stats
[Index]        6Bb 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         2`b 
[Flags]       00640004 
[StatusTable] 00000000 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021A60C 
[Script]      $Script_Init_8021A630 
% move effectiveness
[Escape]       80`b 
[Item]         80`b 
[AirLift]       0`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    90`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         32`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Vector3D $Vector3D_8021A6B8
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021A6C4
$EmptyMoleHole $Vector3D_8021A6B8 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_8021A6E0
$EmptyMoleHole $Vector3D_8021A6B8 00000000 00000001 00000000 00000000 00000000 

#new:Script $Script_8021A6FC
    0:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   14:  If  *Var[0]  &  00080000 
   24:  	Call     SummonEnemy 	( $SpecialFormation_8021A6E0 00000000 )
   38:  Else
   40:  	Call     SummonEnemy 	( $SpecialFormation_8021A6C4 00000000 )
   54:  EndIf
   5C:  Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
   78:  Sub  *Var[3]  00000001 
   88:  Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
   A4:  Return
   AC:  End

#new:Script $Script_Init_8021A7B0
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021AFAC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021A814 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A824 )
   3C:  Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
   54:  Return
   5C:  End

#new:Script $Script_Idle_8021A814
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021A824
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetLastElement ( *Var[E] )
   38:  Call     GetEventType 	( .Actor:Self *Var[0] )
   4C:  Switch  *Var[0] 
   58:  	CaseOR  ==  .Event:HitCombo
   64:  	CaseOR  ==  .Event:Hit
   70:  		If  *Var[E]  &  00000040 
   80:  			ChildThread
   88:  				Wait     00000008 
   94:  				Call     SetAnimation 	( .Actor:Self 00000001 002F0007 )
   AC:  			EndChildThread
   B4:  			SetConst  *Var[0]  00000001 
   C4:  			SetConst  *Var[1]  002F0006 
   D4:  			ExecWait DoNormalHit 
   E0:  			Call     SetAnimation 	( .Actor:Self 00000001 002F0008 )
   F8:  			Wait     0000000A 
  104:  		Else
  10C:  			SetConst  *Var[0]  00000001 
  11C:  			SetConst  *Var[1]  002F0005 
  12C:  			ExecWait DoNormalHit 
  138:  		EndIf
  140:  	EndCaseGroup
  148:  	Case  ==  .Event:BurnHit
  154:  		SetConst  *Var[0]  00000001 
  164:  		SetConst  *Var[1]  002F000A 
  174:  		SetConst  *Var[2]  002F000B 
  184:  		ExecWait DoBurnHit 
  190:  	Case  ==  .Event:BurnDeath
  19C:  		SetConst  *Var[0]  00000001 
  1AC:  		SetConst  *Var[1]  002F000A 
  1BC:  		SetConst  *Var[2]  002F000B 
  1CC:  		ExecWait DoBurnHit 
  1D8:  		ExecWait $Script_8021A6FC 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  002F000C 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	CaseOR  ==  00000017
  224:  	CaseOR  ==  .Event:Immune
  230:  		Call     GetLastElement ( *Var[0] )
  240:  		If  *Var[0]  &  00000040 
  250:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  264:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  27C:  			Call     SetAnimation 	( .Actor:Self 00000001 002F0011 )
  294:  			Wait     00000050 
  2A0:  			Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  2B4:  			Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  2CC:  			Call     SetAnimation 	( .Actor:Self 00000001 002F0010 )
  2E4:  			Wait     00000014 
  2F0:  			Call     SetAnimation 	( .Actor:Self 00000001 002F0014 )
  308:  			Wait     00000014 
  314:  		Else
  31C:  			SetConst  *Var[0]  00000001 
  32C:  			SetConst  *Var[1]  002F0001 
  33C:  			ExecWait DoImmune 
  348:  		EndIf
  350:  	EndCaseGroup
  358:  	Case  ==  .Event:Death
  364:  		SetConst  *Var[0]  00000001 
  374:  		SetConst  *Var[1]  002F0005 
  384:  		ExecWait DoNormalHit 
  390:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0006 )
  3A8:  		Wait     0000000A 
  3B4:  		ExecWait $Script_8021A6FC 
  3C0:  		SetConst  *Var[0]  00000001 
  3D0:  		SetConst  *Var[1]  002F0009 
  3E0:  		ExecWait DoDeath 
  3EC:  		Return
  3F4:  	Case  ==  .Event:RecoverStatus
  400:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0006 )
  418:  		Wait     00000008 
  424:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0007 )
  43C:  		Wait     00000005 
  448:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0008 )
  460:  		Wait     00000008 
  46C:  	Case  ==  .Event:ScareAway
  478:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0006 )
  490:  		Wait     0000000F 
  49C:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0007 )
  4B4:  		Wait     0000000F 
  4C0:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0008 )
  4D8:  		Wait     0000000F 
  4E4:  		Call     SetActorFlagBits 	( .Actor:Self 00404000 .True )
  4FC:  		Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021A5F4 )
  514:  		Return
  51C:  	Case  ==  .Event:BeginAirLift
  528:  		SetConst  *Var[0]  00000001 
  538:  		SetConst  *Var[1]  002F0005 
  548:  		ExecWait DoAirLift 
  554:  	Case  ==  .Event:BlowAway
  560:  		ExecWait $Script_8021A6FC 
  56C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  580:  		If  *Var[0]  &  0035D000 
  590:  			Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
  5AC:  			Call     SetAnimation 	( .Actor:Self 00000001 002F0019 )
  5C4:  		Else
  5CC:  			If  *Var[0]  &  00080000 
  5DC:  				Call     8026BA04 ( FFFFFF81 00000000 FFFFFFF7 00000000 )
  5F8:  			Else
  600:  				Call     8026BA04 ( FFFFFF81 00000000 FFFFFFE9 00000000 )
  61C:  			EndIf
  624:  			Call     SetAnimation 	( .Actor:Self 00000001 002F0009 )
  63C:  		EndIf
  644:  		Wait     000003E8 
  650:  		Return
  658:  	Case  ==  .Event:AirLiftFailed
  664:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
  678:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  690:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0011 )
  6A8:  		Wait     00000028 
  6B4:  		Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
  6C8:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  6E0:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0010 )
  6F8:  		Wait     00000014 
  704:  		Call     SetAnimation 	( .Actor:Self 00000001 002F0014 )
  71C:  		Wait     00000014 
  728:  	Case  ==  .Event:UpAndAway
  734:  		ExecWait $Script_8021A6FC 
  740:  	Default
  748:  EndSwitch
  750:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  764:  Call     UseIdleAnimation 	( .Actor:Self .True )
  778:  Return
  780:  End

#new:Script $Script_TakeTurn_8021AFAC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     GetBattlePhase ( *Var[0] )
   5C:  If  *Var[0]  ==  .Phase:FirstStrike
   6C:  	Call     UseCamPreset 	( 00000002 )
   7C:  	Call     MoveCamOver 	( 00000001 )
   8C:  EndIf
   94:  ChildThread
   9C:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
   B0:  	Wait     00000014 
   BC:  	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
   D0:  EndChildThread
   D8:  Call     SetAnimation 	( .Actor:Self 00000001 002F0004 )
   F0:  Wait     00000025 
   FC:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  118:  Add  *Var[1]  00000014 
  128:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  148:  Wait     00000001 
  154:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  170:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
  184:  If  *Var[0]  &  00080000 
  194:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
  1B4:  Else
  1BC:  	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  1DC:  EndIf
  1E4:  Call     PlaySoundAtSprite 	( .Actor:Self 00000003 .Sound:MoleThrow )
  1FC:  Call     8026FA00 ( FFFFFF81 00000003 00000001 00000000 00000000 )
  21C:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000020 )
  240:  Switch  *Var[0] 
  24C:  	CaseOR  ==  00000006 
  258:  	CaseOR  ==  00000005 
  264:  		Set  *Var[A]  *Var[0] 
  274:  		Call     SetTargetActor ( .Actor:Self .Actor:Player )
  288:  		Call     SetGoalToTarget 	( .Actor:Self )
  298:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2B4:  		Sub  *Var[0]  00000064 
  2C4:  		Set  *Var[1]  FFFFFFFB 
  2D4:  		Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[12.0] )
  2EC:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
  304:  		Call     SetAnimation 	( .Actor:Self 00000003 002F000F )
  31C:  		Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
  348:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  364:  		If  *Var[A]  ==  00000005 
  374:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call     8027D7F0 ( )
  3AC:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3C0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  3D4:  		Return
  3DC:  	EndCaseGroup
  3E4:  EndSwitch
  3EC:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  400:  Call     SetGoalToTarget 	( .Actor:Self )
  410:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  42C:  Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[12.0] )
  444:  Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
  45C:  Call     SetAnimation 	( .Actor:Self 00000003 002F000F )
  474:  Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
  4A0:  Wait     00000002 
  4AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000020 )
  4D4:  Switch  *Var[0] 
  4E0:  	CaseOR  ==  00000000 
  4EC:  	CaseOR  ==  00000002 
  4F8:  		Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  514:  		Sub  *Var[0]  00000037 
  524:  		Set  *Var[1]  00000000 
  534:  		Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[6.0] )
  54C:  		Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
  564:  		Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
  590:  		Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[4.0] )
  5A8:  		Sub  *Var[0]  00000014 
  5B8:  		Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
  5E4:  		Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  600:  	EndCaseGroup
  608:  EndSwitch
  610:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  624:  Call     UseIdleAnimation 	( .Actor:Self .True )
  638:  Return
  640:  End

PADDING: 8021B5F4 to 8021B600 (004D37E4 to 004D37F0)
00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021B600
.Status:Normal    00670001
.Status:Stone     00670000
.Status:Sleep     00670019
.Status:Stop      00670000
.Status:Static    0067000C
.Status:Paralyze  0067000C
.Status:Dizzy     0067000C
.Status:Shrink    00670001
.Status:End

#new:IdleAnimations $IdleAnimations_8021B644
.Status:Normal    00670014
.Status:End

#new:DefenseTable $DefenseTable_8021B650
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021B65C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   70`
.Status:Shrink     75`
.Status:Stop       70`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021B708
00020000 01000000 EC3C00FF $IdleAnimations_8021B600 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 
00800001 02001F00 F21400FF $IdleAnimations_8021B600 $DefenseTable_8021B650 00000000 00000000 00F20000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 

#new:Actor $Buzzar
% stats
[Index]        A0b 
[Level]        35`b 
[MaxHP]        40`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021B65C 
% ai
[SpriteCount]   5`s 
[SpriteTable] $SpriteTable_8021B708 
[Script]      $Script_Init_8021B7E4 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         78`b  74`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -35`b  65`b % dx dy
[StatusIcon]    1`b  58`b % dx dy

#new:Script $Script_Init_8021B7E4
    0:  Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
   18:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   30:  Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
   48:  Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
   60:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021BCD8 )
   74:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021B930 )
   88:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021B940 )
   9C:  Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021B918 )
   B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   CC:  Set  *Var[1]  00000028 
   DC:  Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   F8:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  114:  Call     HPBarToHome 	( .Actor:Self )
  124:  Return
  12C:  End

#new:Script $Script_NextTurn_8021B918
    0:  Return
    8:  Return
   10:  End

#new:Script $Script_Idle_8021B930
    0:  Return
    8:  End

#new:Script $Script_HandleEvent_8021B940
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     GetEventType 	( .Actor:Self *Var[0] )
   28:  Switch  *Var[0] 
   34:  	Case  ==  .Event:HitCombo
   40:  		SetConst  *Var[0]  00000001 
   50:  		SetConst  *Var[1]  0067000B 
   60:  		ExecWait DoNormalHit 
   6C:  	Case  ==  .Event:Hit
   78:  		SetConst  *Var[0]  00000001 
   88:  		SetConst  *Var[1]  0067000B 
   98:  		ExecWait DoNormalHit 
   A4:  		ExecWait $Script_8021FC34 
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  0067000B 
   DC:  		SetConst  *Var[2]  FFFFFFFF 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  0067000B 
  124:  		SetConst  *Var[2]  FFFFFFFF 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  0067000B 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:ShockHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  0067000B 
  1A0:  		ExecWait DoShockHit 
  1AC:  		Call     UseCamPreset 	( 00000002 )
  1BC:  		Call     MoveCamOver 	( 00000014 )
  1CC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
  1E4:  		ExecWait $Script_8021F7EC 
  1F0:  	Case  ==  .Event:ShockDeath
  1FC:  		SetConst  *Var[0]  00000001 
  20C:  		SetConst  *Var[1]  0067000B 
  21C:  		ExecWait DoShockHit 
  228:  		SetConst  *Var[0]  00000001 
  238:  		SetConst  *Var[1]  0067000B 
  248:  		ExecWait DoDeath 
  254:  		Return
  25C:  	CaseOR  ==  00000017
  268:  	CaseOR  ==  .Event:Immune
  274:  	CaseOR  ==  .Event:AirLiftFailed
  280:  		SetConst  *Var[0]  00000001 
  290:  		SetConst  *Var[1]  00670001 
  2A0:  		ExecWait DoImmune 
  2AC:  	EndCaseGroup
  2B4:  	Case  ==  .Event:Death
  2C0:  		SetConst  *Var[0]  00000001 
  2D0:  		SetConst  *Var[1]  0067000B 
  2E0:  		ExecWait DoNormalHit 
  2EC:  		Wait     0000000A 
  2F8:  		SetConst  *Var[0]  00000001 
  308:  		SetConst  *Var[1]  0067000B 
  318:  		ExecWait DoDeath 
  324:  		Return
  32C:  	Case  ==  .Event:RecoverStatus
  338:  		SetConst  *Var[0]  00000001 
  348:  		SetConst  *Var[1]  00670001 
  358:  		ExecWait DoRecover 
  364:  	Default
  36C:  EndSwitch
  374:  Call     UseIdleAnimation 	( .Actor:Self .True )
  388:  Return
  390:  End

#new:Script $Script_TakeTurn_8021BCD8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetStatusFlags ( .Actor:Self *Var[0] )
   3C:  If  *Var[0]  &  00080000 
   4C:  	Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
   64:  EndIf
   6C:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   84:  Switch  *Var[0] 
   90:  	Case  ==  00000000 
   9C:  		Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   B4:  		ExecWait $Script_8021BEBC 
   C0:  	Case  ==  00000002 
   CC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
   E4:  		ExecWait $Script_8021F030 
   F0:  	Case  ==  00000004 
   FC:  		Call     SetActorVar 	( .Actor:Self 00000000 00000005 )
  114:  		ExecWait $Script_8021CCE8 
  120:  	Default
  128:  		Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
  140:  		If  *Var[0]  ==  00000005 
  150:  			Set  *Var[0]  00000000 
  160:  		Else
  168:  			Add  *Var[0]  00000001 
  178:  		EndIf
  180:  		Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
  198:  		ExecWait $Script_8021DF2C 
  1A4:  EndSwitch
  1AC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  1C0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  1D4:  Return
  1DC:  End

#new:Script $Script_8021BEBC
    0:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   14:  Call     SetGoalToTarget 	( .Actor:Self )
   24:  Call     UseCamPreset 	( 0000000D )
   34:  Call     SetCamZoom  	( 000000B4 )
   44:  Call     CamTargetActor ( .Actor:Self )
   54:  Call     MoveCamOver 	( 00000078 )
   64:  Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
   78:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   94:  Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000046 *Var[2] )
   B0:  Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
   C8:  Switch  *Var[0] 
   D4:  	CaseOR  ==  00670001 
   E0:  	CaseOR  ==  00670002 
   EC:  	CaseOR  ==  0067000D 
   F8:  	CaseOR  ==  00670016 
  104:  	CaseOR  ==  00670017 
  110:  		Loop     
  11C:  			Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
  134:  			If  *Var[0]  ==  00000001 
  144:  				BreakLoop
  14C:  			EndIf
  154:  			Wait     00000001 
  160:  		EndLoop
  168:  	EndCaseGroup
  170:  EndSwitch
  178:  Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
  190:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
  1AC:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 10000000 00000000 00000001 00000020 )
  1D0:  Switch  *Var[A] 
  1DC:  	Case  ==  00000006 
  1E8:  		Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  1FC:  		Call     CheckPlayerHit ( .Actor:Self *Var[A] 10000000 00000000 00000001 00000020 )
  220:  		Switch  *Var[A] 
  22C:  			Case  ==  00000006 
  238:  				Call     SetTargetActor ( .Actor:Self .Actor:Player )
  24C:  				Wait     00000008 
  258:  				Call     SetAnimation 	( .Actor:Self 00000001 00670011 )
  270:  				Wait     0000000F 
  27C:  				Call     SetAnimation 	( .Actor:Self 00000001 00670013 )
  294:  				Wait     00000006 
  2A0:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F0 )
  2B4:  				Call     UseCamPreset 	( 00000002 )
  2C4:  				Call     MoveCamOver 	( 00000032 )
  2D4:  				Thread
  2DC:  					Call     ShakeCam    	( 00000001 00000000 0000005A *Fixed[0.5] )
  2F8:  				EndThread
  300:  				Call     $Function_802180C0 ( 00000046 00000064 )
  314:  				Thread
  31C:  					Loop     00000014 
  328:  						Call     SetGoalToTarget 	( .Actor:Self )
  338:  						Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  354:  						Add  *Var[0]  0000000A 
  364:  						Call     PlayEffect  	( {FX:DeadLeaves:Gust3} *Var[0] 0000000A *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3A8:  						Wait     00000003 
  3B4:  					EndLoop
  3BC:  				EndThread
  3C4:  				Wait     0000003C 
  3D0:  				Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  3E8:  				If  *Var[A]  ==  00000005 
  3F8:  					Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  41C:  				EndIf
  424:  				Wait     00000019 
  430:  				ExecWait $Script_8021F7EC 
  43C:  				Return
  444:  			Default
  44C:  				Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  460:  				Call     ShowMessageBox ( 00000041 0000005A )
  474:  				Call     802694A4 ( 00000001 )
  484:  				Call     LoadActionCommand 	( 00000005 )
  494:  				Call     802A9000 ( 00000001 )
  4A4:  				Call     802691C8 ( 00000003 00000028 00000046 00000064 00000000 00000000 )
  4C8:  				Wait     00000008 
  4D4:  				Call     SetAnimation 	( .Actor:Self 00000001 00670011 )
  4EC:  				Wait     0000000F 
  4F8:  				Call     SetAnimation 	( .Actor:Self 00000001 00670013 )
  510:  				Wait     00000006 
  51C:  				Call     PlaySoundAtActor 	( .Actor:Self 000020F0 )
  530:  				Call     SetBattleFlagBits 	( 00004000 .False )
  544:  				Call     802A91E0 ( 00000000 00000058 00000003 )
  55C:  				Call     UseCamPreset 	( 00000013 )
  56C:  				Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
  584:  				Call     SetCamZoom  	( 000001CC )
  594:  				Call     SetCamOffsetZ 	( 00000000 )
  5A4:  				Call     MoveCamOver 	( 00000032 )
  5B4:  				Call     $Function_802180C0 ( 00000046 00000082 )
  5C8:  				Thread
  5D0:  					Loop     0000001E 
  5DC:  						Call     SetGoalToTarget 	( .Actor:Self )
  5EC:  						Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  608:  						Add  *Var[0]  0000000A 
  618:  						Call     PlayEffect  	( {FX:DeadLeaves:Gust3} *Var[0] 0000000A *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  65C:  						Wait     00000003 
  668:  					EndLoop
  670:  				EndThread
  678:  				Thread
  680:  					Call     ShakeCam    	( 00000001 00000000 0000005A *Fixed[0.5] )
  69C:  				EndThread
  6A4:  				Call     ActorExists 	( .Actor:Partner *Var[0] )
  6B8:  				If  *Var[0]  ==  00000001 
  6C8:  					Thread
  6D0:  						Call     UseIdleAnimation 	( .Actor:Partner .False )
  6E4:  						Set  *Var[0]  00000000 
  6F4:  						Set  *Var[1]  00000003 
  704:  						Loop     0000005D 
  710:  							Call     SetActorAngle 	( .Actor:Partner *Var[0] )
  724:  							Add  *Var[0]  *Var[1] 
  734:  							Add  *Var[1]  00000001 
  744:  							Wait     00000001 
  750:  						EndLoop
  758:  						Call     SetActorAngle 	( .Actor:Partner 00000000 )
  76C:  					EndThread
  774:  				EndIf
  77C:  				Wait     0000005A 
  788:  				Call     802695A8 ( *Var[1] )
  798:  				Call     ActorExists 	( .Actor:Partner *Var[0] )
  7AC:  				If  *Var[0]  ==  00000001 
  7BC:  					Wait     00000003 
  7C8:  					Call     UseIdleAnimation 	( .Actor:Partner .True )
  7DC:  					Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  7F0:  					Call     SetGoalToTarget 	( .Actor:Self )
  800:  					Call     DamageTarget 	( .Actor:Self *Var[0] 22000000 0000FFFF 00000000 *Var[1] 00000020 )
  828:  				EndIf
  830:  				Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  848:  				Wait     00000019 
  854:  				Call     UseCamPreset 	( 00000002 )
  864:  				Call     MoveCamOver 	( 00000014 )
  874:  				ExecWait $Script_8021F7EC 
  880:  				Return
  888:  		EndSwitch
  890:  	Default
  898:  EndSwitch
  8A0:  Call     ShowMessageBox ( 00000041 0000005A )
  8B4:  Call     802694A4 ( 00000001 )
  8C4:  Call     LoadActionCommand 	( 00000005 )
  8D4:  Call     802A9000 ( 00000001 )
  8E4:  Call     802691C8 ( 00000003 00000028 00000046 00000064 00000000 00000000 )
  908:  Wait     00000008 
  914:  Call     SetAnimation 	( .Actor:Self 00000001 00670011 )
  92C:  Wait     0000000F 
  938:  Call     SetAnimation 	( .Actor:Self 00000001 00670013 )
  950:  Wait     00000006 
  95C:  Call     PlaySoundAtActor 	( .Actor:Self 000020F0 )
  970:  Call     SetBattleFlagBits 	( 00004000 .False )
  984:  Call     802A91E0 ( 00000000 00000058 00000003 )
  99C:  Call     UseCamPreset 	( 00000013 )
  9AC:  Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
  9C4:  Call     SetCamZoom  	( 000001CC )
  9D4:  Call     SetCamOffsetZ 	( 00000000 )
  9E4:  Call     MoveCamOver 	( 00000032 )
  9F4:  Call     $Function_802180C0 ( 00000046 00000082 )
  A08:  Thread
  A10:  	Loop     0000001E 
  A1C:  		Call     SetGoalToTarget 	( .Actor:Self )
  A2C:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A48:  		Add  *Var[0]  0000000A 
  A58:  		Call     PlayEffect  	( {FX:DeadLeaves:Gust3} *Var[0] 0000000A *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A9C:  		Wait     00000003 
  AA8:  	EndLoop
  AB0:  EndThread
  AB8:  Thread
  AC0:  	Call     ShakeCam    	( 00000001 00000000 0000005A *Fixed[0.5] )
  ADC:  EndThread
  AE4:  Call     GetStatusFlags ( .Actor:Player *Var[1] )
  AF8:  If  *Var[1]  !&  00100000 
  B08:  	Thread
  B10:  		Call     UseIdleAnimation 	( .Actor:Player .False )
  B24:  		Call     SetAnimation 	( .Actor:Player 00000000 0001002E )
  B3C:  		Set  *Var[0]  00000000 
  B4C:  		Set  *Var[1]  00000003 
  B5C:  		Loop     0000005A 
  B68:  			Call     SetActorAngle 	( .Actor:Player *Var[0] )
  B7C:  			Add  *Var[0]  *Var[1] 
  B8C:  			Add  *Var[1]  00000001 
  B9C:  			Wait     00000001 
  BA8:  		EndLoop
  BB0:  		Call     SetActorAngle 	( .Actor:Player 00000000 )
  BC4:  	EndThread
  BCC:  EndIf
  BD4:  Call     ActorExists 	( .Actor:Partner *Var[0] )
  BE8:  If  *Var[0]  ==  00000001 
  BF8:  	Thread
  C00:  		Call     UseIdleAnimation 	( .Actor:Partner .False )
  C14:  		Set  *Var[0]  00000000 
  C24:  		Set  *Var[1]  00000003 
  C34:  		Loop     0000005D 
  C40:  			Call     SetActorAngle 	( .Actor:Partner *Var[0] )
  C54:  			Add  *Var[0]  *Var[1] 
  C64:  			Add  *Var[1]  00000001 
  C74:  			Wait     00000001 
  C80:  		EndLoop
  C88:  		Call     SetActorAngle 	( .Actor:Partner 00000000 )
  C9C:  	EndThread
  CA4:  EndIf
  CAC:  Call     8026BF48 ( 00000001 )
  CBC:  Wait     0000005A 
  CC8:  Call     802695A8 ( *Var[1] )
  CD8:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
  CEC:  Call     SetGoalToTarget 	( .Actor:Self )
  CFC:  Call     DamageTarget 	( .Actor:Self *Var[0] 22000000 0000FFFF 00000000 *Var[1] 00000020 )
  D24:  Call     ActorExists 	( .Actor:Partner *Var[0] )
  D38:  If  *Var[0]  ==  00000001 
  D48:  	Wait     00000003 
  D54:  	Call     UseIdleAnimation 	( .Actor:Partner .True )
  D68:  	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
  D7C:  	Call     SetGoalToTarget 	( .Actor:Self )
  D8C:  	Call     DamageTarget 	( .Actor:Self *Var[0] 22000000 0000FFFF 00000000 *Var[1] 00000020 )
  DB4:  EndIf
  DBC:  Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  DD4:  Wait     00000019 
  DE0:  Call     UseCamPreset 	( 00000002 )
  DF0:  Call     MoveCamOver 	( 00000014 )
  E00:  ExecWait $Script_8021F7EC 
  E0C:  Call     8026BF48 ( 00000000 )
  E1C:  Return
  E24:  End

#new:Script $Script_8021CCE8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 00000005 )
   5C:  Call     SetCamZoom  	( 000000B4 )
   6C:  Call     SetCamOffsetZ 	( 00000000 )
   7C:  Call     CamTargetActor ( .Actor:Self )
   8C:  Call     MoveCamOver 	( 00000028 )
   9C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   B0:  Call     SetGoalToTarget 	( .Actor:Self )
   C0:  Call     AddToGoalPos 	( .Actor:Self 0000005A 00000023 00000000 )
   DC:  Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
   F4:  Switch  *Var[0] 
  100:  	CaseOR  ==  00670001 
  10C:  	CaseOR  ==  00670002 
  118:  	CaseOR  ==  0067000D 
  124:  	CaseOR  ==  00670016 
  130:  	CaseOR  ==  00670017 
  13C:  		Loop     
  148:  			Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
  160:  			If  *Var[0]  ==  00000001 
  170:  				BreakLoop
  178:  			EndIf
  180:  			Wait     00000001 
  18C:  		EndLoop
  194:  	EndCaseGroup
  19C:  EndSwitch
  1A4:  Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
  1BC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF1 .Easing:CosInOut )
  1D8:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1F4:  Add  *Var[0]  FFFFFFE2 
  204:  Add  *Var[1]  00000019 
  214:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  234:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  Add  *Var[0]  FFFFFFE2 
  260:  Add  *Var[1]  00000023 
  270:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  290:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2AC:  Add  *Var[0]  FFFFFFEC 
  2BC:  Add  *Var[1]  00000019 
  2CC:  Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  2EC:  Call     SetAnimation 	( .Actor:Self 00000001 0067000E )
  304:  Wait     0000000F 
  310:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  32C:  Add  *Var[0]  00000018 
  33C:  Add  *Var[1]  00000018 
  34C:  Call     PlayEffect  	( {FX:ShinyFlare} *Var[0] *Var[1] *Var[2] *Fixed[0.60058594] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  390:  Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
  3A4:  Wait     0000000A 
  3B0:  Call     8026FA00 ( FFFFFF81 00000003 00000001 00000000 00000000 )
  3D0:  Call     8026FA00 ( FFFFFF81 00000004 00000001 00000000 00000000 )
  3F0:  Call     8026FA00 ( FFFFFF81 00000005 00000001 00000000 00000000 )
  410:  Call     UseCamPreset 	( 00000002 )
  420:  Call     MoveCamOver 	( 00000014 )
  430:  Thread
  438:  	Wait     00000014 
  444:  	Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  45C:  EndThread
  464:  Call     SetAnimation 	( .Actor:Self 00000001 00670010 )
  47C:  Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 FFFFFFD3 )
  49C:  Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 FFFFFFD3 )
  4BC:  Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 FFFFFFD3 )
  4DC:  Wait     0000000A 
  4E8:  Call     SetAnimation 	( .Actor:Self 00000003 00670014 )
  500:  Call     SetAnimation 	( .Actor:Self 00000004 00670014 )
  518:  Call     SetAnimation 	( .Actor:Self 00000005 00670014 )
  530:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  54C:  Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .False )
  568:  Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .False )
  584:  Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[6.0] )
  59C:  Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
  5B4:  Call     SetSpriteSpeed ( .Actor:Self 00000004 *Fixed[6.0] )
  5CC:  Call     SetSpriteJumpscale 	( .Actor:Self 00000004 *Fixed[0.10058594] )
  5E4:  Call     SetSpriteSpeed ( .Actor:Self 00000005 *Fixed[6.0] )
  5FC:  Call     SetSpriteJumpscale 	( .Actor:Self 00000005 *Fixed[0.10058594] )
  614:  Call     PlaySoundAtActor 	( .Actor:Self 000020F4 )
  628:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000010 )
  64C:  Switch  *Var[0] 
  658:  	CaseOR  ==  00000006 
  664:  	CaseOR  ==  00000005 
  670:  		Set  *Var[A]  *Var[0] 
  680:  		Call     SetGoalToTarget 	( .Actor:Self )
  690:  		Thread
  698:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6B4:  			Call     RandInt     	( 0000000A *Var[3] )
  6C8:  			Sub  *Var[3]  0000001E 
  6D8:  			Add  *Var[0]  *Var[3] 
  6E8:  			Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] 00000005 *Var[2] 00000009 00000000 .Easing:Linear )
  714:  			Call     SetAnimation 	( .Actor:Self 00000004 00670015 )
  72C:  		EndThread
  734:  		Thread
  73C:  			Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  758:  			Call     RandInt     	( 0000000A *Var[3] )
  76C:  			Sub  *Var[3]  00000028 
  77C:  			Add  *Var[0]  *Var[3] 
  78C:  			Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] 00000005 *Var[2] 00000009 00000000 .Easing:Linear )
  7B8:  			Call     SetAnimation 	( .Actor:Self 00000005 00670015 )
  7D0:  		EndThread
  7D8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  7F4:  		Sub  *Var[0]  0000001E 
  804:  		Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] 00000005 *Var[2] 00000009 00000000 .Easing:Linear )
  830:  		Call     SetAnimation 	( .Actor:Self 00000003 00670015 )
  848:  		Thread
  850:  			Wait     0000000A 
  85C:  			Call     SetAnimation 	( .Actor:Self 00000003 00670014 )
  874:  			Call     SetAnimation 	( .Actor:Self 00000004 00670014 )
  88C:  			Call     SetAnimation 	( .Actor:Self 00000005 00670014 )
  8A4:  			Wait     00000014 
  8B0:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  8CC:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
  8E8:  			Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
  904:  		EndThread
  90C:  		Wait     0000000A 
  918:  		Call     8024ECF8 ( 00000000 00000001 00000000 )
  930:  		Wait     0000000A 
  93C:  		If  *Var[A]  ==  00000005 
  94C:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  970:  		EndIf
  978:  		ExecWait $Script_8021F7EC 
  984:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  998:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  9AC:  		Return
  9B4:  	EndCaseGroup
  9BC:  	Default
  9C4:  EndSwitch
  9CC:  Call     8024ECF8 ( 00000000 00000001 00000000 )
  9E4:  Call     SetGoalToTarget 	( .Actor:Self )
  9F4:  Thread
  9FC:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  A18:  	Call     RandInt     	( 0000000A *Var[3] )
  A2C:  	Sub  *Var[3]  0000000A 
  A3C:  	Add  *Var[1]  *Var[3] 
  A4C:  	Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000006 00000000 .Easing:Linear )
  A78:  EndThread
  A80:  Thread
  A88:  	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AA4:  	Call     RandInt     	( 0000000A *Var[3] )
  AB8:  	Add  *Var[3]  0000000A 
  AC8:  	Add  *Var[1]  *Var[3] 
  AD8:  	Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000006 00000000 .Easing:Linear )
  B04:  EndThread
  B0C:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B28:  Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000006 00000000 .Easing:Linear )
  B54:  Wait     00000002 
  B60:  Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000020 )
  B88:  Set  *Var[F]  *Var[0] 
  B98:  Switch  *Var[F] 
  BA4:  	Default
  BAC:  		Thread
  BB4:  			Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 0000002D 0000005A )
  BD4:  			Call     GetSpriteOffset 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
  BF4:  			Sub  *Var[0]  00000028 
  C04:  			Set  *Var[1]  00000002 
  C14:  			Call     SetSpriteJumpscale 	( .Actor:Self 00000004 *Fixed[1.5] )
  C2C:  			Call     JumpSpriteA 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 0000000A .True )
  C54:  			Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000050 0000005A )
  C74:  			Wait     00000008 
  C80:  			Loop     0000000F 
  C8C:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .False )
  CA8:  				Wait     00000001 
  CB4:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
  CD0:  				Wait     00000001 
  CDC:  			EndLoop
  CE4:  		EndThread
  CEC:  		Thread
  CF4:  			Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 0000002D FFFFFFA6 )
  D14:  			Call     GetSpriteOffset 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
  D34:  			Add  *Var[0]  00000014 
  D44:  			Set  *Var[1]  00000004 
  D54:  			Call     SetSpriteJumpscale 	( .Actor:Self 00000005 *Fixed[1.5] )
  D6C:  			Call     JumpSpriteA 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 0000000A .True )
  D94:  			Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 0000005A FFFFFFA6 )
  DB4:  			Wait     00000008 
  DC0:  			Loop     0000000F 
  DCC:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .False )
  DE8:  				Wait     00000001 
  DF4:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
  E10:  				Wait     00000001 
  E1C:  			EndLoop
  E24:  		EndThread
  E2C:  		Thread
  E34:  			Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 0000002D FFFFFFA6 )
  E54:  			Call     GetSpriteOffset 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
  E74:  			Sub  *Var[0]  00000005 
  E84:  			Set  *Var[1]  00000004 
  E94:  			Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[1.5] )
  EAC:  			Call     JumpSpriteA 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 0000000A .True )
  ED4:  			Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 0000005A FFFFFFA6 )
  EF4:  			Wait     00000008 
  F00:  			Loop     0000000F 
  F0C:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  F28:  				Wait     00000001 
  F34:  				Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  F50:  				Wait     00000001 
  F5C:  			EndLoop
  F64:  		EndThread
  F6C:  		Wait     0000001E 
  F78:  		Call     8027D7F0 ( )
  F84:  		ExecWait $Script_8021F7EC 
  F90:  EndSwitch
  F98:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  FAC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  FC0:  Return
  FC8:  End

#new:Script $Script_8021DCB8
    0:  Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	CaseOR  ==  00670001 
   30:  	CaseOR  ==  00670002 
   3C:  	CaseOR  ==  0067000D 
   48:  	CaseOR  ==  00670016 
   54:  	CaseOR  ==  00670017 
   60:  		Loop     
   6C:  			Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
   84:  			If  *Var[0]  ==  00000001 
   94:  				BreakLoop
   9C:  			EndIf
   A4:  			Wait     00000001 
   B0:  		EndLoop
   B8:  	EndCaseGroup
   C0:  EndSwitch
   C8:  Call     8026F838 ( FFFFFF81 00000001 )
   DC:  Call     8026F740 ( FFFFFF81 00000005 FFFFFFF8 00000000 )
   F8:  ChildThread
  100:  	Loop     
  10C:  		Call     $Function_802180C0 ( 00000064 0000000A )
  120:  		Wait     0000000A 
  12C:  	EndLoop
  134:  EndChildThread
  13C:  ChildThread
  144:  	Call     SetActorSpeed 	( .Actor:Player *Fixed[5.0] )
  158:  	Call     SetActorJumpscale 	( .Actor:Player *Fixed[0.10058594] )
  16C:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  188:  	Add  *Var[1]  000000B4 
  198:  	Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  1B4:  	Call     MoveToGoal  	( .Actor:Player 00000063 00000000 .Easing:Linear )
  1D0:  EndChildThread
  1D8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1EC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.10058594] )
  200:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  21C:  Add  *Var[1]  000000B4 
  22C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  248:  Call     MoveToGoal  	( .Actor:Self 00000063 00000000 .Easing:Linear )
  264:  Return
  26C:  End

#new:Script $Script_8021DF2C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 0000003F )
   5C:  Call     SetCamZoom  	( 000000F0 )
   6C:  Call     CamTargetActor ( .Actor:Self )
   7C:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   90:  Call     SetGoalToTarget 	( .Actor:Self )
   A0:  Call     AddToGoalPos 	( .Actor:Self 0000002D 00000037 00000000 )
   BC:  Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
   D4:  Switch  *Var[0] 
   E0:  	CaseOR  ==  00670001 
   EC:  	CaseOR  ==  00670002 
   F8:  	CaseOR  ==  0067000D 
  104:  	CaseOR  ==  00670016 
  110:  	CaseOR  ==  00670017 
  11C:  		Loop     
  128:  			Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
  140:  			If  *Var[0]  ==  00000001 
  150:  				BreakLoop
  158:  			EndIf
  160:  			Wait     00000001 
  16C:  		EndLoop
  174:  	EndCaseGroup
  17C:  EndSwitch
  184:  Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
  19C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
  1B8:  Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000004 00000010 )
  1DC:  Switch  *Var[A] 
  1E8:  	CaseOR  ==  00000006 
  1F4:  	CaseOR  ==  00000005 
  200:  		Wait     0000000A 
  20C:  		Call     UseCamPreset 	( 00000042 )
  21C:  		Call     SetCamZoom  	( 000000F0 )
  22C:  		Call     SetCamOffsetZ 	( FFFFFFF6 )
  23C:  		Call     CamTargetActor ( .Actor:Self )
  24C:  		Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
  260:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  274:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  288:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2A4:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2C0:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  2E0:  		Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
  2F4:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  310:  		Call     SetGoalToTarget 	( .Actor:Self )
  320:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFD3 FFFFFFEC 00000000 )
  33C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  350:  		Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
  368:  		Call     MoveToGoal  	( .Actor:Self 0000000C FFFFFFF4 .Easing:Linear )
  384:  		Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  39C:  		Wait     0000000A 
  3A8:  		Call     UseCamPreset 	( 00000002 )
  3B8:  		If  *Var[A]  ==  00000005 
  3C8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3EC:  		EndIf
  3F4:  		ExecWait $Script_8021F808 
  400:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  414:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  428:  		Return
  430:  	EndCaseGroup
  438:  	Case  ==  00000008 
  444:  		Call     UseCamPreset 	( 00000042 )
  454:  		Call     SetCamZoom  	( 000000F0 )
  464:  		Call     SetCamOffsetZ 	( FFFFFFF6 )
  474:  		Call     CamTargetActor ( .Actor:Self )
  484:  		Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
  498:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  4AC:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  4C0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4DC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4F8:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  518:  		Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
  52C:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  548:  		Call     SetGoalToTarget 	( .Actor:Self )
  558:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFF1 FFFFFFF6 00000000 )
  574:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  588:  		Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
  5A0:  		Call     MoveToGoal  	( .Actor:Self 00000008 FFFFFFFB .Easing:Linear )
  5BC:  		Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
  5E4:  		Call     SetGoalToTarget 	( .Actor:Self )
  5F4:  		Call     AddToGoalPos 	( .Actor:Self 00000028 0000000A 00000000 )
  610:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  624:  		Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
  63C:  		Switch  *Var[0] 
  648:  			CaseOR  ==  00670001 
  654:  			CaseOR  ==  00670002 
  660:  			CaseOR  ==  0067000D 
  66C:  			CaseOR  ==  00670016 
  678:  			CaseOR  ==  00670017 
  684:  				Loop     
  690:  					Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
  6A8:  					If  *Var[0]  ==  00000001 
  6B8:  						BreakLoop
  6C0:  					EndIf
  6C8:  					Wait     00000001 
  6D4:  				EndLoop
  6DC:  			EndCaseGroup
  6E4:  		EndSwitch
  6EC:  		Call     8026F838 ( FFFFFF81 00000001 )
  700:  		Call     8026F740 ( FFFFFF81 00000005 FFFFFFF2 00000000 )
  71C:  		Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
  734:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  750:  		Wait     00000014 
  75C:  		Call     UseCamPreset 	( 00000002 )
  76C:  		ExecWait $Script_8021F7EC 
  778:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  78C:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7A0:  		Return
  7A8:  	Default
  7B0:  EndSwitch
  7B8:  Wait     0000000A 
  7C4:  Call     8024E664 ( 00000013 )
  7D4:  Call     SetCamZoom  	( 00000168 )
  7E4:  Call     MoveCamOver 	( 0000001E )
  7F4:  Thread
  7FC:  	Wait     00000005 
  808:  	Call     UseCamPreset 	( 00000013 )
  818:  	Call     SetCamZoom  	( 00000168 )
  828:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  844:  	Set  *Var[1]  0000001B 
  854:  	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  86C:  	Call     MoveCamOver 	( 00000014 )
  87C:  EndThread
  884:  Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
  898:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  8AC:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  8C0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8DC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  8F8:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  918:  Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
  92C:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  948:  Call     SetGoalToTarget 	( .Actor:Self )
  958:  Call     AddToGoalPos 	( .Actor:Self FFFFFFF1 FFFFFFF6 00000000 )
  974:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  988:  Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
  9A0:  Call     MoveToGoal  	( .Actor:Self 00000008 FFFFFFFB .Easing:Linear )
  9BC:  If  *Var[A]  ==  00000007 
  9CC:  	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
  9F4:  EndIf
  9FC:  Call     PlaySoundAtActor 	( .Actor:Self 000020F5 )
  A10:  Call     SetAnimation 	( .Actor:Self 00000001 00670016 )
  A28:  Call     $Function_802180C0 ( 000000B4 00000014 )
  A3C:  Call     UseIdleAnimation 	( .Actor:Player .False )
  A50:  Call     SetAnimation 	( .Actor:Player 00000000 0001002B )
  A68:  Call     ShowMessageBox ( 00000040 0000005A )
  A7C:  Thread
  A84:  	Loop     0000005A 
  A90:  		Call     80251408 ( 00000063 )
  AA0:  		Wait     00000001 
  AAC:  	EndLoop
  AB4:  	Call     80251408 ( 00000000 )
  AC4:  EndThread
  ACC:  Wait     00000014 
  AD8:  Call     LoadActionCommand 	( 00000004 )
  AE8:  Call     802A9000 ( )
  AF4:  Call     802691C8 ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
  B18:  Wait     0000000A 
  B24:  Call     SetAnimation 	( .Actor:Self 00000001 00670017 )
  B3C:  Call     UseCamPreset 	( 00000042 )
  B4C:  Call     SetCamZoom  	( 000000F0 )
  B5C:  Call     SetCamOffsetZ 	( FFFFFFF6 )
  B6C:  Call     CamTargetActor ( .Actor:Self )
  B7C:  Call     MoveCamOver 	( 0000003C )
  B8C:  Call     SetBattleFlagBits 	( 00004000 .False )
  BA0:  Call     802694A4 ( 00000001 )
  BB0:  Call     802A91B0 ( 00000000 0000003C 0000001E 00000003 )
  BCC:  Exec     $Script_8021DCB8 *Var[A] 
  BDC:  Wait     0000003E 
  BE8:  Call     802694F8 ( *Var[0] )
  BF8:  If  *Var[0]  >  00000000 
  C08:  	Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  C20:  	Wait     00000002 
  C2C:  	Kill     *Var[A] 
  C38:  	Call     SetJumpAnimations 	( .Actor:Player 00000000 00010007 00010007 00010009 )
  C58:  	Call     SetActorSpeed 	( .Actor:Player *Fixed[5.0] )
  C6C:  	Call     SetActorJumpscale 	( .Actor:Player *Fixed[1.8007812] )
  C80:  	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  C9C:  	Set  *Var[1]  00000000 
  CAC:  	Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  CC8:  	Call     80273894 ( 0000000F )
  CD8:  	Wait     00000008 
  CE4:  	Call     SetAnimation 	( .Actor:Player 00000000 00010002 )
  CFC:  	Call     UseIdleAnimation 	( .Actor:Player .True )
  D10:  	Wait     00000008 
  D1C:  	Call     UseCamPreset 	( 00000002 )
  D2C:  	ExecWait $Script_8021F808 
  D38:  	Call     EnableIdleScript 	( .Actor:Self 00000001 )
  D4C:  	Call     UseIdleAnimation 	( .Actor:Self .True )
  D60:  	Return
  D68:  EndIf
  D70:  Call     UseCamPreset 	( 00000013 )
  D80:  Call     SetCamZoom  	( 00000168 )
  D90:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  DAC:  Set  *Var[1]  00000032 
  DBC:  Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
  DD4:  Call     MoveCamOver 	( 000000C8 )
  DE4:  Wait     00000027 
  DF0:  Wait     0000000A 
  DFC:  Call     SetJumpAnimations 	( .Actor:Player 00000000 0001001B 0001001B 0001001B )
  E1C:  Call     SetActorSpeed 	( .Actor:Player *Fixed[5.0] )
  E30:  Call     SetActorJumpscale 	( .Actor:Player *Fixed[1.2001953] )
  E44:  Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  E60:  Set  *Var[1]  00000000 
  E70:  Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
  E8C:  Call     80273894 ( 00000018 )
  E9C:  Call     UseIdleAnimation 	( .Actor:Player .True )
  EB0:  Call     SetGoalToTarget 	( .Actor:Self )
  EC0:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
  EE8:  Set  *Var[F]  *Var[0] 
  EF8:  Switch  *Var[F] 
  F04:  	CaseOR  ==  00000000 
  F10:  	CaseOR  ==  00000002 
  F1C:  		Call     SetGoalToTarget 	( .Actor:Self )
  F2C:  		Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  F48:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  F5C:  		Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
  F74:  		Switch  *Var[0] 
  F80:  			CaseOR  ==  00670001 
  F8C:  			CaseOR  ==  00670002 
  F98:  			CaseOR  ==  0067000D 
  FA4:  			CaseOR  ==  00670016 
  FB0:  			CaseOR  ==  00670017 
  FBC:  				Loop     
  FC8:  					Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
  FE0:  					If  *Var[0]  ==  00000001 
  FF0:  						BreakLoop
  FF8:  					EndIf
 1000:  					Wait     00000001 
 100C:  				EndLoop
 1014:  			EndCaseGroup
 101C:  		EndSwitch
 1024:  		Call     8026F838 ( FFFFFF81 00000001 )
 1038:  		Call     8026F740 ( FFFFFF81 00000005 FFFFFFF2 00000000 )
 1054:  		Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
 106C:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
 1088:  		Wait     0000000A 
 1094:  		Call     UseCamPreset 	( 00000002 )
 10A4:  		Call     8027D7F0 ( )
 10B0:  		ExecWait $Script_8021F7EC 
 10BC:  	EndCaseGroup
 10C4:  EndSwitch
 10CC:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
 10E0:  Call     UseIdleAnimation 	( .Actor:Self .True )
 10F4:  Return
 10FC:  End

#new:Script $Script_8021F030
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 0000003F )
   5C:  Call     SetCamZoom  	( 000000F0 )
   6C:  Call     CamTargetActor ( .Actor:Self )
   7C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   94:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   A8:  Call     SetGoalToTarget 	( .Actor:Self )
   B8:  Call     AddToGoalPos 	( .Actor:Self 0000003C 0000000F 00000000 )
   D4:  Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
   EC:  Switch  *Var[0] 
   F8:  	CaseOR  ==  00670001 
  104:  	CaseOR  ==  00670002 
  110:  	CaseOR  ==  0067000D 
  11C:  	CaseOR  ==  00670016 
  128:  	CaseOR  ==  00670017 
  134:  		Loop     
  140:  			Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
  158:  			If  *Var[0]  ==  00000001 
  168:  				BreakLoop
  170:  			EndIf
  178:  			Wait     00000001 
  184:  		EndLoop
  18C:  	EndCaseGroup
  194:  EndSwitch
  19C:  Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
  1B4:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF1 .Easing:CosInOut )
  1D0:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
  1F4:  Switch  *Var[0] 
  200:  	CaseOR  ==  00000006 
  20C:  	CaseOR  ==  00000005 
  218:  		Set  *Var[A]  *Var[0] 
  228:  		Wait     0000000A 
  234:  		Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
  248:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  25C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  270:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  28C:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2A8:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  2C8:  		Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
  2DC:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  2F8:  		Call     SetGoalToTarget 	( .Actor:Self )
  308:  		Call     AddToGoalPos 	( .Actor:Self FFFFFFD3 FFFFFFEC 00000000 )
  324:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  338:  		Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
  350:  		Call     MoveToGoal  	( .Actor:Self 0000000C FFFFFFF4 .Easing:Linear )
  36C:  		Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  384:  		Wait     0000000A 
  390:  		Call     UseCamPreset 	( 00000002 )
  3A0:  		If  *Var[A]  ==  00000005 
  3B0:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  3D4:  		EndIf
  3DC:  		ExecWait $Script_8021F7EC 
  3E8:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  3FC:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  410:  		Return
  418:  	EndCaseGroup
  420:  EndSwitch
  428:  Wait     0000000A 
  434:  Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
  448:  Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  45C:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  470:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  48C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4A8:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  4C8:  Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
  4DC:  Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  4F8:  Call     SetGoalToTarget 	( .Actor:Self )
  508:  Call     AddToGoalPos 	( .Actor:Self FFFFFFFB FFFFFFF6 00000000 )
  524:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  538:  Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
  550:  Call     MoveToGoal  	( .Actor:Self 00000008 00000000 .Easing:Linear )
  56C:  Wait     00000002 
  578:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
  5A0:  Set  *Var[F]  *Var[0] 
  5B0:  Switch  *Var[F] 
  5BC:  	CaseOR  ==  00000000 
  5C8:  	CaseOR  ==  00000002 
  5D4:  		Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
  5EC:  		Switch  *Var[0] 
  5F8:  			CaseOR  ==  00670001 
  604:  			CaseOR  ==  00670002 
  610:  			CaseOR  ==  0067000D 
  61C:  			CaseOR  ==  00670016 
  628:  			CaseOR  ==  00670017 
  634:  				Loop     
  640:  					Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
  658:  					If  *Var[0]  ==  00000001 
  668:  						BreakLoop
  670:  					EndIf
  678:  					Wait     00000001 
  684:  				EndLoop
  68C:  			EndCaseGroup
  694:  		EndSwitch
  69C:  		Call     8026F838 ( FFFFFF81 00000001 )
  6B0:  		Call     8026F740 ( FFFFFF81 00000005 FFFFFFF2 00000000 )
  6CC:  		Call     SetGoalToTarget 	( .Actor:Self )
  6DC:  		Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  6F8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  70C:  		Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
  724:  		Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
  740:  		Wait     0000000A 
  74C:  		Call     UseCamPreset 	( 00000002 )
  75C:  		Call     8027D7F0 ( )
  768:  		ExecWait $Script_8021F7EC 
  774:  	EndCaseGroup
  77C:  EndSwitch
  784:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  798:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7AC:  Return
  7B4:  End

#new:Script $Script_8021F7EC
    0:  ExecWait $Script_8021F824 
    C:  Return
   14:  End

#new:Script $Script_8021F808
    0:  ExecWait $Script_8021FA2C 
    C:  Return
   14:  End

#new:Script $Script_8021F824
    0:  Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	CaseOR  ==  00670001 
   30:  	CaseOR  ==  00670002 
   3C:  	CaseOR  ==  0067000D 
   48:  	CaseOR  ==  00670016 
   54:  	CaseOR  ==  00670017 
   60:  		Loop     
   6C:  			Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
   84:  			If  *Var[0]  ==  00000001 
   94:  				BreakLoop
   9C:  			EndIf
   A4:  			Wait     00000001 
   B0:  		EndLoop
   B8:  	EndCaseGroup
   C0:  EndSwitch
   C8:  Call     8026F838 ( FFFFFF81 00000001 )
   DC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
   F0:  Call     SetGoalToHome 	( .Actor:Self )
  100:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  11C:  Set  *Var[1]  00000028 
  12C:  Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  144:  Call     8026F740 ( FFFFFF81 00000005 FFFFFFEC 00000000 )
  160:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  198:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D0:  Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  1E8:  Call     HPBarToHome 	( .Actor:Self )
  1F8:  Return
  200:  End

#new:Script $Script_8021FA2C
    0:  Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
   18:  Switch  *Var[0] 
   24:  	CaseOR  ==  00670001 
   30:  	CaseOR  ==  00670002 
   3C:  	CaseOR  ==  0067000D 
   48:  	CaseOR  ==  00670016 
   54:  	CaseOR  ==  00670017 
   60:  		Loop     
   6C:  			Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
   84:  			If  *Var[0]  ==  00000001 
   94:  				BreakLoop
   9C:  			EndIf
   A4:  			Wait     00000001 
   B0:  		EndLoop
   B8:  	EndCaseGroup
   C0:  EndSwitch
   C8:  Call     8026F838 ( FFFFFF81 00000001 )
   DC:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   F0:  Call     SetGoalToHome 	( .Actor:Self )
  100:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  11C:  Set  *Var[1]  00000028 
  12C:  Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  144:  Call     8026F740 ( FFFFFF81 00000005 FFFFFFEC 00000000 )
  160:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  17C:  Call     MoveToGoal  	( .Actor:Self 00000000 0000002D .Easing:Linear )
  198:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1B4:  Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1D0:  Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
  1E8:  Call     HPBarToHome 	( .Actor:Self )
  1F8:  Return
  200:  End

#new:Script $Script_8021FC34
    0:  Return
    8:  Return
   10:  End

PADDING: 8021FC4C to 8021FC50 (004D7E3C to 004D7E40)
00000000 

#new:IdleAnimations $IdleAnimations_8021FC50
.Status:Normal    00920001
.Status:Stone     00920000
.Status:Sleep     00920001
.Status:Poison    00920001
.Status:Stop      00920000
.Status:Static    00920001
.Status:Paralyze  00920000
.Status:Dizzy     00920001
.Status:Fear      00920001
.Status:End

#new:DefenseTable $DefenseTable_8021FC9C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021FCA8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021FD54
00800000 01000000 001E00FF $IdleAnimations_8021FC50 $DefenseTable_8021FC9C 00000000 00000000 00FB0000 00000000 

#new:Actor $WhackaA
% stats
[Index]        D0b 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040004 
[StatusTable] $StatusTable_8021FCA8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021FD54 
[Script]      $Script_Init_8021FDA0 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         47`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  40`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

#new:Script $Script_Init_8021FDA0
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80220634 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021FE5C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021FE90 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Call     $Function_80218120 ( )
   60:  If  *Var[0]  ==  00000000 
   70:  	Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   88:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End

#new:Script $Script_Idle_8021FE5C
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Goto     00000000 
   24:  Return
   2C:  End

#new:Script $Script_HandleEvent_8021FE90
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   68:  		SetConst  *Var[0]  00000001 
   78:  		SetConst  *Var[1]  00920001 
   88:  		ExecWait DoNormalHit 
   94:  	Case  ==  .Event:Hit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00920004 
   C0:  		ExecWait $Script_80220684 
   CC:  		ExecWait DoNormalHit 
   D8:  		Call     RandInt     	( 00000064 *Var[0] )
   EC:  		If  *Var[0]  <=  00000064 
   FC:  			ExecWait $Script_80220764 
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00920001 
  144:  		SetConst  *Var[2]  00920001 
  154:  		ExecWait $Script_80220684 
  160:  		ExecWait DoNormalHit 
  16C:  		Call     RandInt     	( 00000064 *Var[0] )
  180:  		If  *Var[0]  <=  00000064 
  190:  			ExecWait $Script_80220764 
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00920001 
  1D8:  		SetConst  *Var[2]  00920001 
  1E8:  		ExecWait $Script_80220684 
  1F4:  		ExecWait DoNormalHit 
  200:  		If  00000064  >=  00000064 
  210:  			ExecWait $Script_80220764 
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var[0]  00000001 
  23C:  			SetConst  *Var[1]  00920001 
  24C:  			ExecWait DoDeath 
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:MultibounceHit
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  00920001 
  294:  		ExecWait 8029B998 
  2A0:  		Call     RandInt     	( 00000064 *Var[0] )
  2B4:  		If  *Var[0]  <=  00000064 
  2C4:  			ExecWait $Script_80220764 
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:MultibounceDeath
  2EC:  		SetConst  *Var[0]  00000001 
  2FC:  		SetConst  *Var[1]  00920001 
  30C:  		ExecWait 8029B998 
  318:  		If  00000064  >=  00000064 
  328:  			ExecWait $Script_80220764 
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var[0]  00000001 
  354:  			SetConst  *Var[1]  00920001 
  364:  			ExecWait DoDeath 
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit
  38C:  		SetConst  *Var[0]  00000001 
  39C:  		SetConst  *Var[1]  00920001 
  3AC:  		ExecWait DoShockHit 
  3B8:  		SetConst  *Var[0]  00000001 
  3C8:  		SetConst  *Var[1]  00920001 
  3D8:  		ExecWait 8029BD70 
  3E4:  		SetConst  *Var[0]  00000001 
  3F4:  		SetConst  *Var[1]  00920001 
  404:  		ExecWait DoReturnHome 
  410:  	Case  ==  .Event:ShockDeath
  41C:  		SetConst  *Var[0]  00000001 
  42C:  		SetConst  *Var[1]  00920001 
  43C:  		ExecWait DoShockHit 
  448:  		SetConst  *Var[0]  00000001 
  458:  		SetConst  *Var[1]  00920001 
  468:  		ExecWait DoDeath 
  474:  		Return
  47C:  	Case  ==  00000017
  488:  		SetConst  *Var[0]  00000001 
  498:  		SetConst  *Var[1]  00920001 
  4A8:  		ExecWait DoImmune 
  4B4:  	Case  ==  .Event:Immune
  4C0:  		SetConst  *Var[0]  00000001 
  4D0:  		SetConst  *Var[1]  00920001 
  4E0:  		ExecWait DoImmune 
  4EC:  		Call     RandInt     	( 00000064 *Var[0] )
  500:  		If  *Var[0]  <=  00000064 
  510:  			ExecWait $Script_80220764 
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed
  538:  		SetConst  *Var[0]  00000001 
  548:  		SetConst  *Var[1]  00920001 
  558:  		ExecWait DoImmune 
  564:  		Call     RandInt     	( 00000064 *Var[0] )
  578:  		If  *Var[0]  <=  00000064 
  588:  			ExecWait $Script_80220764 
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  00920004 
  5D0:  		ExecWait $Script_80220684 
  5DC:  		ExecWait DoNormalHit 
  5E8:  		Wait     0000000A 
  5F4:  		If  00000064  >=  00000064 
  604:  			ExecWait $Script_80220764 
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var[0]  00000001 
  630:  			SetConst  *Var[1]  00920001 
  640:  			ExecWait DoDeath 
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus
  668:  		SetConst  *Var[0]  00000001 
  678:  		SetConst  *Var[1]  00920001 
  688:  		ExecWait DoRecover 
  694:  	Case  ==  .Event:ScareAway
  6A0:  		SetConst  *Var[0]  00000001 
  6B0:  		SetConst  *Var[1]  00920001 
  6C0:  		SetConst  *Var[2]  00920001 
  6D0:  		ExecWait DoScareAway 
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift
  6F0:  		SetConst  *Var[0]  00000001 
  700:  		SetConst  *Var[1]  00920001 
  710:  		ExecWait DoAirLift 
  71C:  	Case  ==  .Event:BlowAway
  728:  		SetConst  *Var[0]  00000001 
  738:  		SetConst  *Var[1]  00920001 
  748:  		ExecWait DoBlowAway 
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  780:  Call     UseIdleAnimation 	( .Actor:Self .True )
  794:  Return
  79C:  End

#new:Script $Script_TakeTurn_80220634
    0:  Call     RandInt     	( 00000064 *Var[0] )
   14:  If  *Var[0]  <=  00000064 
   24:  	ExecWait $Script_80220764 
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End

#new:Script $Script_80220684
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   18:  Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait     0000000F 
   40:  	Call     SetAnimation 	( .Actor:Self 00000001 00920001 )
   58:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   74:  	Add  *Var[0]  00000005 
   84:  	Add  *Var[1]  00000014 
   94:  	Add  *Var[2]  0000000A 
   A4:  	Call     MakeItemEntity ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] 0000000C 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End

#new:Script $Script_80220764
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 00920003 )
   54:  Wait     00000028 
   60:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   78:  If  *Var[0]  !=  00000000 
   88:  	Call     SetBattleFlagBits2 	( 10000000 .True )
   9C:  EndIf
   A4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   C0:  Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   D8:  Call     RemoveActor 	( .Actor:Self )
   E8:  Return
   F0:  End

PADDING: 8022085C to 80220860 (004D8A4C to 004D8A50)
00000000 

#new:Script $Script_BeforeBattle_80220860
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     802C9308 ( 00000015 00000000 )
   24:  Return
   2C:  End

#new:Script $Script_AfterBattle_80220894
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802208A4
00000017 00000018 00000000 

#new:Stage $Stage_802208B0
$ASCII_8022237C  % iwa_tex
$ASCII_8022236C  % iwa_bt01_shape
$ASCII_8022235C  % iwa_bt01_hit
$Script_BeforeBattle_80220860 
$Script_AfterBattle_80220894 
$ASCII_80222354  % iwa_bg
$ForegroundModelList_802208A4 
00000001 
$SpecialFormation_802208E4 
00000200 

#new:Vector3D $Vector3D_802208D8
116` 0` -30`

#new:SpecialFormation $SpecialFormation_802208E4
$WhackaB $Vector3D_802208D8 00000000 00000000 00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_80220900
.Status:Normal    00920001
.Status:Stone     00920000
.Status:Sleep     00920001
.Status:Poison    00920001
.Status:Stop      00920000
.Status:Static    00920001
.Status:Paralyze  00920000
.Status:Dizzy     00920001
.Status:Fear      00920001
.Status:End

#new:DefenseTable $DefenseTable_8022094C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80220958
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80220A04
00800000 01000000 001E00FF $IdleAnimations_80220900 $DefenseTable_8022094C 00000000 00000000 00FB0000 00000000 

#new:Actor $WhackaB
% stats
[Index]        D0b 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040004 
[StatusTable] $StatusTable_80220958 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80220A04 
[Script]      $Script_Init_80220A50 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         47`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  40`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

#new:Script $Script_Init_80220A50
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802212E4 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80220B0C )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220B40 )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Call     $Function_80218170 ( )
   60:  If  *Var[0]  ==  00000000 
   70:  	Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   88:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End

#new:Script $Script_Idle_80220B0C
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Goto     00000000 
   24:  Return
   2C:  End

#new:Script $Script_HandleEvent_80220B40
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   68:  		SetConst  *Var[0]  00000001 
   78:  		SetConst  *Var[1]  00920001 
   88:  		ExecWait DoNormalHit 
   94:  	Case  ==  .Event:Hit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00920004 
   C0:  		ExecWait $Script_80221334 
   CC:  		ExecWait DoNormalHit 
   D8:  		Call     RandInt     	( 00000064 *Var[0] )
   EC:  		If  *Var[0]  <=  00000064 
   FC:  			ExecWait $Script_80221414 
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00920001 
  144:  		SetConst  *Var[2]  00920001 
  154:  		ExecWait $Script_80221334 
  160:  		ExecWait DoNormalHit 
  16C:  		Call     RandInt     	( 00000064 *Var[0] )
  180:  		If  *Var[0]  <=  00000064 
  190:  			ExecWait $Script_80221414 
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00920001 
  1D8:  		SetConst  *Var[2]  00920001 
  1E8:  		ExecWait $Script_80221334 
  1F4:  		ExecWait DoNormalHit 
  200:  		If  00000064  >=  00000064 
  210:  			ExecWait $Script_80221414 
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var[0]  00000001 
  23C:  			SetConst  *Var[1]  00920001 
  24C:  			ExecWait DoDeath 
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:MultibounceHit
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  00920001 
  294:  		ExecWait 8029B998 
  2A0:  		Call     RandInt     	( 00000064 *Var[0] )
  2B4:  		If  *Var[0]  <=  00000064 
  2C4:  			ExecWait $Script_80221414 
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:MultibounceDeath
  2EC:  		SetConst  *Var[0]  00000001 
  2FC:  		SetConst  *Var[1]  00920001 
  30C:  		ExecWait 8029B998 
  318:  		If  00000064  >=  00000064 
  328:  			ExecWait $Script_80221414 
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var[0]  00000001 
  354:  			SetConst  *Var[1]  00920001 
  364:  			ExecWait DoDeath 
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit
  38C:  		SetConst  *Var[0]  00000001 
  39C:  		SetConst  *Var[1]  00920001 
  3AC:  		ExecWait DoShockHit 
  3B8:  		SetConst  *Var[0]  00000001 
  3C8:  		SetConst  *Var[1]  00920001 
  3D8:  		ExecWait 8029BD70 
  3E4:  		SetConst  *Var[0]  00000001 
  3F4:  		SetConst  *Var[1]  00920001 
  404:  		ExecWait DoReturnHome 
  410:  	Case  ==  .Event:ShockDeath
  41C:  		SetConst  *Var[0]  00000001 
  42C:  		SetConst  *Var[1]  00920001 
  43C:  		ExecWait DoShockHit 
  448:  		SetConst  *Var[0]  00000001 
  458:  		SetConst  *Var[1]  00920001 
  468:  		ExecWait DoDeath 
  474:  		Return
  47C:  	Case  ==  00000017
  488:  		SetConst  *Var[0]  00000001 
  498:  		SetConst  *Var[1]  00920001 
  4A8:  		ExecWait DoImmune 
  4B4:  	Case  ==  .Event:Immune
  4C0:  		SetConst  *Var[0]  00000001 
  4D0:  		SetConst  *Var[1]  00920001 
  4E0:  		ExecWait DoImmune 
  4EC:  		Call     RandInt     	( 00000064 *Var[0] )
  500:  		If  *Var[0]  <=  00000064 
  510:  			ExecWait $Script_80221414 
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed
  538:  		SetConst  *Var[0]  00000001 
  548:  		SetConst  *Var[1]  00920001 
  558:  		ExecWait DoImmune 
  564:  		Call     RandInt     	( 00000064 *Var[0] )
  578:  		If  *Var[0]  <=  00000064 
  588:  			ExecWait $Script_80221414 
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  00920004 
  5D0:  		ExecWait $Script_80221334 
  5DC:  		ExecWait DoNormalHit 
  5E8:  		Wait     0000000A 
  5F4:  		If  00000064  >=  00000064 
  604:  			ExecWait $Script_80221414 
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var[0]  00000001 
  630:  			SetConst  *Var[1]  00920001 
  640:  			ExecWait DoDeath 
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus
  668:  		SetConst  *Var[0]  00000001 
  678:  		SetConst  *Var[1]  00920001 
  688:  		ExecWait DoRecover 
  694:  	Case  ==  .Event:ScareAway
  6A0:  		SetConst  *Var[0]  00000001 
  6B0:  		SetConst  *Var[1]  00920001 
  6C0:  		SetConst  *Var[2]  00920001 
  6D0:  		ExecWait DoScareAway 
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift
  6F0:  		SetConst  *Var[0]  00000001 
  700:  		SetConst  *Var[1]  00920001 
  710:  		ExecWait DoAirLift 
  71C:  	Case  ==  .Event:BlowAway
  728:  		SetConst  *Var[0]  00000001 
  738:  		SetConst  *Var[1]  00920001 
  748:  		ExecWait DoBlowAway 
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  780:  Call     UseIdleAnimation 	( .Actor:Self .True )
  794:  Return
  79C:  End

#new:Script $Script_TakeTurn_802212E4
    0:  Call     RandInt     	( 00000064 *Var[0] )
   14:  If  *Var[0]  <=  00000064 
   24:  	ExecWait $Script_80221414 
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End

#new:Script $Script_80221334
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   18:  Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait     0000000F 
   40:  	Call     SetAnimation 	( .Actor:Self 00000001 00920001 )
   58:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   74:  	Add  *Var[0]  00000005 
   84:  	Add  *Var[1]  00000014 
   94:  	Add  *Var[2]  0000000A 
   A4:  	Call     MakeItemEntity ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] 0000000C 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End

#new:Script $Script_80221414
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 00920003 )
   54:  Wait     00000028 
   60:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   78:  If  *Var[0]  !=  00000000 
   88:  	Call     SetBattleFlagBits2 	( 10000000 .True )
   9C:  EndIf
   A4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   C0:  Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   D8:  Call     RemoveActor 	( .Actor:Self )
   E8:  Return
   F0:  End

PADDING: 8022150C to 80221510 (004D96FC to 004D9700)
00000000 

#new:Script $Script_BeforeBattle_80221510
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     802C9308 ( 0000000D 00000000 )
   24:  Return
   2C:  End

#new:Script $Script_AfterBattle_80221544
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80221554
00000017 00000018 00000000 

#new:Stage $Stage_80221560
$ASCII_802223AC  % iwa_tex
$ASCII_8022239C  % iwa_bt01_shape
$ASCII_8022238C  % iwa_bt01_hit
$Script_BeforeBattle_80221510 
$Script_AfterBattle_80221544 
$ASCII_80222384  % iwa_bg
$ForegroundModelList_80221554 
00000000 
00000000 
00000000 

PADDING: 80221588 to 80221590 (004D9778 to 004D9780)
00000000 00000000 

#new:Script $Script_BeforeBattle_80221590
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Return
   18:  End

#new:Script $Script_AfterBattle_802215B0
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_802215C0
00000011 00000010 00000000 

#new:Stage $Stage_802215CC
$ASCII_802223DC  % iwa_tex
$ASCII_802223CC  % iwa_bt02_shape
$ASCII_802223BC  % iwa_bt02_hit
$Script_BeforeBattle_80221590 
$Script_AfterBattle_802215B0 
$ASCII_802223B4  % iwa_bg
$ForegroundModelList_802215C0 
00000000 
00000000 
00000000 

#new:Unknown $???_802215F4
00000000 00000000 00000000 $WhackaC $???_802215F4 00000000 00000000 00000000 
00000000 00000000 

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022161C
.Status:Normal    00920001
.Status:Stone     00920000
.Status:Sleep     00920001
.Status:Poison    00920001
.Status:Stop      00920000
.Status:Static    00920001
.Status:Paralyze  00920000
.Status:Dizzy     00920001
.Status:Fear      00920001
.Status:End

% Origin: HINT
#new:DefenseTable $DefenseTable_80221668
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:StatusTable $StatusTable_80221674
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

% Origin: HINT
#new:SpriteTable $SpriteTable_80221720
00800000 01000000 001E00FF $IdleAnimations_8022161C $DefenseTable_80221668 00000000 00000000 00FB0000 00000000 

% Origin: HINT
#new:Actor $WhackaC
% stats
[Index]        D0b 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040004 
[StatusTable] $StatusTable_80221674 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80221720 
[Script]      $Script_Init_8022176C 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         47`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  40`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

% Origin: HINT
#new:Script $Script_Init_8022176C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222000 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_80221828 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022185C )
   3C:  Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
   54:  Call     $Function_802181C0 ( )
   60:  If  *Var[0]  ==  00000000 
   70:  	Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   88:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   A4:  EndIf
   AC:  Return
   B4:  End

% Origin: HINT
#new:Script $Script_Idle_80221828
    0:  Label    00000000 
    C:  Wait     00000001 
   18:  Goto     00000000 
   24:  Return
   2C:  End

% Origin: HINT
#new:Script $Script_HandleEvent_8022185C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	Case  ==  .Event:HitCombo
   54:  		Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   68:  		SetConst  *Var[0]  00000001 
   78:  		SetConst  *Var[1]  00920001 
   88:  		ExecWait DoNormalHit 
   94:  	Case  ==  .Event:Hit
   A0:  		SetConst  *Var[0]  00000001 
   B0:  		SetConst  *Var[1]  00920004 
   C0:  		ExecWait $Script_80222050 
   CC:  		ExecWait DoNormalHit 
   D8:  		Call     RandInt     	( 00000064 *Var[0] )
   EC:  		If  *Var[0]  <=  00000064 
   FC:  			ExecWait $Script_80222130 
  108:  			Return
  110:  		EndIf
  118:  	Case  ==  .Event:BurnHit
  124:  		SetConst  *Var[0]  00000001 
  134:  		SetConst  *Var[1]  00920001 
  144:  		SetConst  *Var[2]  00920001 
  154:  		ExecWait $Script_80222050 
  160:  		ExecWait DoNormalHit 
  16C:  		Call     RandInt     	( 00000064 *Var[0] )
  180:  		If  *Var[0]  <=  00000064 
  190:  			ExecWait $Script_80222130 
  19C:  			Return
  1A4:  		EndIf
  1AC:  	Case  ==  .Event:BurnDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00920001 
  1D8:  		SetConst  *Var[2]  00920001 
  1E8:  		ExecWait $Script_80222050 
  1F4:  		ExecWait DoNormalHit 
  200:  		If  00000064  >=  00000064 
  210:  			ExecWait $Script_80222130 
  21C:  			Return
  224:  		Else
  22C:  			SetConst  *Var[0]  00000001 
  23C:  			SetConst  *Var[1]  00920001 
  24C:  			ExecWait DoDeath 
  258:  			Return
  260:  		EndIf
  268:  	Case  ==  .Event:MultibounceHit
  274:  		SetConst  *Var[0]  00000001 
  284:  		SetConst  *Var[1]  00920001 
  294:  		ExecWait 8029B998 
  2A0:  		Call     RandInt     	( 00000064 *Var[0] )
  2B4:  		If  *Var[0]  <=  00000064 
  2C4:  			ExecWait $Script_80222130 
  2D0:  			Return
  2D8:  		EndIf
  2E0:  	Case  ==  .Event:MultibounceDeath
  2EC:  		SetConst  *Var[0]  00000001 
  2FC:  		SetConst  *Var[1]  00920001 
  30C:  		ExecWait 8029B998 
  318:  		If  00000064  >=  00000064 
  328:  			ExecWait $Script_80222130 
  334:  			Return
  33C:  		Else
  344:  			SetConst  *Var[0]  00000001 
  354:  			SetConst  *Var[1]  00920001 
  364:  			ExecWait DoDeath 
  370:  			Return
  378:  		EndIf
  380:  	Case  ==  .Event:ShockHit
  38C:  		SetConst  *Var[0]  00000001 
  39C:  		SetConst  *Var[1]  00920001 
  3AC:  		ExecWait DoShockHit 
  3B8:  		SetConst  *Var[0]  00000001 
  3C8:  		SetConst  *Var[1]  00920001 
  3D8:  		ExecWait 8029BD70 
  3E4:  		SetConst  *Var[0]  00000001 
  3F4:  		SetConst  *Var[1]  00920001 
  404:  		ExecWait DoReturnHome 
  410:  	Case  ==  .Event:ShockDeath
  41C:  		SetConst  *Var[0]  00000001 
  42C:  		SetConst  *Var[1]  00920001 
  43C:  		ExecWait DoShockHit 
  448:  		SetConst  *Var[0]  00000001 
  458:  		SetConst  *Var[1]  00920001 
  468:  		ExecWait DoDeath 
  474:  		Return
  47C:  	Case  ==  00000017
  488:  		SetConst  *Var[0]  00000001 
  498:  		SetConst  *Var[1]  00920001 
  4A8:  		ExecWait DoImmune 
  4B4:  	Case  ==  .Event:Immune
  4C0:  		SetConst  *Var[0]  00000001 
  4D0:  		SetConst  *Var[1]  00920001 
  4E0:  		ExecWait DoImmune 
  4EC:  		Call     RandInt     	( 00000064 *Var[0] )
  500:  		If  *Var[0]  <=  00000064 
  510:  			ExecWait $Script_80222130 
  51C:  			Return
  524:  		EndIf
  52C:  	Case  ==  .Event:AirLiftFailed
  538:  		SetConst  *Var[0]  00000001 
  548:  		SetConst  *Var[1]  00920001 
  558:  		ExecWait DoImmune 
  564:  		Call     RandInt     	( 00000064 *Var[0] )
  578:  		If  *Var[0]  <=  00000064 
  588:  			ExecWait $Script_80222130 
  594:  			Return
  59C:  		EndIf
  5A4:  	Case  ==  .Event:Death
  5B0:  		SetConst  *Var[0]  00000001 
  5C0:  		SetConst  *Var[1]  00920004 
  5D0:  		ExecWait $Script_80222050 
  5DC:  		ExecWait DoNormalHit 
  5E8:  		Wait     0000000A 
  5F4:  		If  00000064  >=  00000064 
  604:  			ExecWait $Script_80222130 
  610:  			Return
  618:  		Else
  620:  			SetConst  *Var[0]  00000001 
  630:  			SetConst  *Var[1]  00920001 
  640:  			ExecWait DoDeath 
  64C:  			Return
  654:  		EndIf
  65C:  	Case  ==  .Event:RecoverStatus
  668:  		SetConst  *Var[0]  00000001 
  678:  		SetConst  *Var[1]  00920001 
  688:  		ExecWait DoRecover 
  694:  	Case  ==  .Event:ScareAway
  6A0:  		SetConst  *Var[0]  00000001 
  6B0:  		SetConst  *Var[1]  00920001 
  6C0:  		SetConst  *Var[2]  00920001 
  6D0:  		ExecWait DoScareAway 
  6DC:  		Return
  6E4:  	Case  ==  .Event:BeginAirLift
  6F0:  		SetConst  *Var[0]  00000001 
  700:  		SetConst  *Var[1]  00920001 
  710:  		ExecWait DoAirLift 
  71C:  	Case  ==  .Event:BlowAway
  728:  		SetConst  *Var[0]  00000001 
  738:  		SetConst  *Var[1]  00920001 
  748:  		ExecWait DoBlowAway 
  754:  		Return
  75C:  	Default
  764:  EndSwitch
  76C:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  780:  Call     UseIdleAnimation 	( .Actor:Self .True )
  794:  Return
  79C:  End

% Origin: HINT
#new:Script $Script_TakeTurn_80222000
    0:  Call     RandInt     	( 00000064 *Var[0] )
   14:  If  *Var[0]  <=  00000064 
   24:  	ExecWait $Script_80222130 
   30:  	Return
   38:  EndIf
   40:  Return
   48:  End

% Origin: HINT
#new:Script $Script_80222050
    0:  Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
   18:  Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
   2C:  Thread
   34:  	Wait     0000000F 
   40:  	Call     SetAnimation 	( .Actor:Self 00000001 00920001 )
   58:  	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   74:  	Add  *Var[0]  00000005 
   84:  	Add  *Var[1]  00000014 
   94:  	Add  *Var[2]  0000000A 
   A4:  	Call     MakeItemEntity ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] 0000000C 00000000 )
   C8:  EndThread
   D0:  Return
   D8:  End

% Origin: HINT
#new:Script $Script_80222130
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
   3C:  Call     SetAnimation 	( .Actor:Self 00000001 00920003 )
   54:  Wait     00000028 
   60:  Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
   78:  If  *Var[0]  !=  00000000 
   88:  	Call     SetBattleFlagBits2 	( 10000000 .True )
   9C:  EndIf
   A4:  Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
   C0:  Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
   D8:  Call     RemoveActor 	( .Actor:Self )
   E8:  Return
   F0:  End

PADDING: 80222228 to 80222230 (004DA418 to 004DA420)
00000000 00000000 

#new:SJIS $SJIS_80222230
% koburon
83528375 838D8393 00000000 

#new:SJIS $SJIS_8022223C
% ge-ha-
8351815B 836E815B 00000000 

#new:SJIS $SJIS_80222248
% choropu-,shin'emon,choropu-
83608387 838D8376 815B2C83 56839383 47838283 932C8360 8387838D 8376815B 
00000000 

#new:SJIS $SJIS_8022226C
% choropu-x2,shin'emon
83608387 838D8376 815B7882 512C8356 83938347 83828393 00000000 

#new:SJIS $SJIS_80222288
% choropu-,shin'emon
83608387 838D8376 815B2C83 56839383 47838283 93000000 

#new:SJIS $SJIS_802222A0
% choropu-x4
83608387 838D8376 815B7882 53000000 

#new:SJIS $SJIS_802222B0
% choropu-x3
83608387 838D8376 815B7882 52000000 

#new:SJIS $SJIS_802222C0
% choropu-x2
83608387 838D8376 815B7882 51000000 

#new:SJIS $SJIS_802222D0
% choropu-
83608387 838D8376 815B0000 

#new:SJIS $SJIS_802222DC
% shin'emon,choropu-x2
83568393 83478382 83932C83 60838783 8D837681 5B788251 00000000 

#new:SJIS $SJIS_802222F8
% shin'emon,choropu-
83568393 83478382 83932C83 60838783 8D837681 5B000000 

#new:SJIS $SJIS_80222310
% shin'emonx3
83568393 83478382 83937882 52000000 

#new:SJIS $SJIS_80222320
% shin'emonx2
83568393 83478382 83937882 51000000 

#new:SJIS $SJIS_80222330
% shin'emon
83568393 83478382 83930000 

#new:ASCII $ASCII_8022233C
iwa_02

#new:ASCII $ASCII_80222344
iwa_01b

#new:ASCII $ASCII_8022234C
iwa_01

#new:ASCII $ASCII_80222354
iwa_bg

#new:ASCII $ASCII_8022235C
iwa_bt01_hit

#new:ASCII $ASCII_8022236C
iwa_bt01_shape

#new:ASCII $ASCII_8022237C
iwa_tex

#new:ASCII $ASCII_80222384
iwa_bg

#new:ASCII $ASCII_8022238C
iwa_bt01_hit

#new:ASCII $ASCII_8022239C
iwa_bt01_shape

#new:ASCII $ASCII_802223AC
iwa_tex

#new:ASCII $ASCII_802223B4
iwa_bg

#new:ASCII $ASCII_802223BC
iwa_bt02_hit

#new:ASCII $ASCII_802223CC
iwa_bt02_shape

#new:ASCII $ASCII_802223DC
iwa_tex

PADDING: 802223E4 to 802223F0 (004DA5D4 to 004DA5E0)
00000000 00000000 00000000 

