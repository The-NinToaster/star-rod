% Script File: 00 Area KMR Part 1.bscr
% Decoded from: 4309A0 to 439A90 (00 Area KMR Part 1)

#new:Function $Function_80218000
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       80028FF0
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  DADDU     A0, R0, R0
   44:  ADDIU     A2, R0, 5A
   48:  DADDU     A1, A0, R0
   4C:  LIA       A3, $FloatTable_8021A194
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  DADDU     A2, V1, R0
   90:  DADDU     A0, V1, R0
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021A194)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021A194)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  DADDU     V1, A2, R0
   F0:  DADDU     V1, A0, R0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  ADDIU     V0, R0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  ADDIU     V0, R0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28

#new:Function $Function_8021818C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  DADDU     A0, S4, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S0, V0, R0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  DADDU     A0, S4, R0
   50:  JAL       {Func:GetVariable}
   54:  DADDU     S1, V0, R0
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  DADDU     A0, S4, R0
   68:  JAL       {Func:GetVariable}
   6C:  SUBU      S3, S3, S0
   70:  DADDU     S0, V0, R0
   74:  DADDU     A0, S4, R0
   78:  LW        A1, 0 (S2)
   7C:  JAL       {Func:GetVariable}
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  DADDU     A0, S4, R0
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  DADDU     A2, V0, R0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218000
   B8:  CVT.S.W   F14, F14
   BC:  DADDU     A0, S4, R0
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       {Func:SetVariable}
   CC:  NOP
   D0:  ADDIU     V0, R0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28

#new:Function $Function_80218280
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       80028FF0
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  DADDU     A0, R0, R0
   44:  ADDIU     A2, R0, 5A
   48:  DADDU     A1, A0, R0
   4C:  LIA       A3, $FloatTable_8021BC70
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  DADDU     A2, V1, R0
   90:  DADDU     A0, V1, R0
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021BC70)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021BC70)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  DADDU     V1, A2, R0
   F0:  DADDU     V1, A0, R0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  ADDIU     V0, R0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  ADDIU     V0, R0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28

#new:Function $Function_8021840C
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  DADDU     A0, S4, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S0, V0, R0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  DADDU     A0, S4, R0
   50:  JAL       {Func:GetVariable}
   54:  DADDU     S1, V0, R0
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  DADDU     A0, S4, R0
   68:  JAL       {Func:GetVariable}
   6C:  SUBU      S3, S3, S0
   70:  DADDU     S0, V0, R0
   74:  DADDU     A0, S4, R0
   78:  LW        A1, 0 (S2)
   7C:  JAL       {Func:GetVariable}
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  DADDU     A0, S4, R0
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  DADDU     A2, V0, R0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218280
   B8:  CVT.S.W   F14, F14
   BC:  DADDU     A0, S4, R0
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       {Func:SetVariable}
   CC:  NOP
   D0:  ADDIU     V0, R0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28

#new:Function $Function_80218500
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       {Func:GetVariable}
   20:  ADDIU     S0, S0, 4
   24:  DADDU     A0, S1, R0
   28:  LW        A1, 0 (S0)
   2C:  JAL       {Func:GetVariable}
   30:  DADDU     S0, V0, R0
   34:  DADDU     A0, S0, R0
   38:  JAL       80028F08
   3C:  DADDU     A1, V0, R0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  ADDIU     V0, R0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20

#new:Function $Function_80218558
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       80028FF0
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  DADDU     A0, R0, R0
   44:  ADDIU     A2, R0, 5A
   48:  DADDU     A1, A0, R0
   4C:  LIA       A3, $FloatTable_8021EF6C
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  DADDU     A2, V1, R0
   90:  DADDU     A0, V1, R0
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021EF6C)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021EF6C)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  DADDU     V1, A2, R0
   F0:  DADDU     V1, A0, R0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  ADDIU     V0, R0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  ADDIU     V0, R0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28

#new:Function $Function_802186E4
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       {Func:GetVariable}
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  DADDU     A0, S4, R0
   3C:  JAL       {Func:GetVariable}
   40:  DADDU     S0, V0, R0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  DADDU     A0, S4, R0
   50:  JAL       {Func:GetVariable}
   54:  DADDU     S1, V0, R0
   58:  DADDU     S3, V0, R0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  DADDU     A0, S4, R0
   68:  JAL       {Func:GetVariable}
   6C:  SUBU      S3, S3, S0
   70:  DADDU     S0, V0, R0
   74:  DADDU     A0, S4, R0
   78:  LW        A1, 0 (S2)
   7C:  JAL       {Func:GetVariable}
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  DADDU     A0, S4, R0
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  DADDU     A2, V0, R0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218558
   B8:  CVT.S.W   F14, F14
   BC:  DADDU     A0, S4, R0
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       {Func:SetVariable}
   CC:  NOP
   D0:  ADDIU     V0, R0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28

PADDING: 802187D8 to 802187E0 (00431178 to 00431180)
00000000 00000000 

#new:Function $Function_802187E0
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       {Func:GetVariable}
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIO       AT, 40C90FD0
   70:  MTC1      AT, F20
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       {Func:SinRad}
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       {Func:SinRad}
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       {Func:CosRad}
   F8:  ADD.S     F24, F24, F26
   FC:  DADDU     A0, S4, R0
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  DADDU     A1, S1, R0
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       {Func:SetFloatVariable}
  128:  ADD.S     F20, F20, F2
  12C:  DADDU     A0, S4, R0
  130:  MFC1      A2, F24
  134:  JAL       {Func:SetFloatVariable}
  138:  DADDU     A1, S3, R0
  13C:  DADDU     A0, S4, R0
  140:  MFC1      A2, F20
  144:  JAL       {Func:SetFloatVariable}
  148:  DADDU     A1, S2, R0
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  DADDU     A2, R0, R0
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  ADDIU     A2, R0, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  DADDU     A0, S4, R0
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       {Func:SetVariable}
  228:  DADDU     A1, S0, R0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  ADDIU     V0, R0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58

PADDING: 80218A48 to 80218A50 (004313E8 to 004313F0)
00000000 00000000 

#new:Function $Function_80218A50
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       {Func:GetVariable}
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIO       AT, 40C90FD0
   70:  MTC1      AT, F20
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       {Func:SinRad}
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       {Func:SinRad}
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       {Func:CosRad}
   F8:  ADD.S     F24, F24, F26
   FC:  DADDU     A0, S4, R0
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  DADDU     A1, S1, R0
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       {Func:SetFloatVariable}
  128:  ADD.S     F20, F20, F2
  12C:  DADDU     A0, S4, R0
  130:  MFC1      A2, F24
  134:  JAL       {Func:SetFloatVariable}
  138:  DADDU     A1, S3, R0
  13C:  DADDU     A0, S4, R0
  140:  MFC1      A2, F20
  144:  JAL       {Func:SetFloatVariable}
  148:  DADDU     A1, S2, R0
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  DADDU     A2, R0, R0
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  ADDIU     A2, R0, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  DADDU     A0, S4, R0
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       {Func:SetVariable}
  228:  DADDU     A1, S0, R0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  ADDIU     V0, R0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58

PADDING: 80218CB8 to 80218CC0 (00431658 to 00431660)
00000000 00000000 

% Origin: HEURISTIC
#new:Function $Function_80218CC0
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       {Func:GetVariable}
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIO       AT, 40C90FD0
   70:  MTC1      AT, F20
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       {Func:SinRad}
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       {Func:SinRad}
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       {Func:CosRad}
   F8:  ADD.S     F24, F24, F26
   FC:  DADDU     A0, S4, R0
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  DADDU     A1, S1, R0
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       {Func:SetFloatVariable}
  128:  ADD.S     F20, F20, F2
  12C:  DADDU     A0, S4, R0
  130:  MFC1      A2, F24
  134:  JAL       {Func:SetFloatVariable}
  138:  DADDU     A1, S3, R0
  13C:  DADDU     A0, S4, R0
  140:  MFC1      A2, F20
  144:  JAL       {Func:SetFloatVariable}
  148:  DADDU     A1, S2, R0
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  DADDU     A2, R0, R0
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  ADDIU     A2, R0, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  DADDU     A0, S4, R0
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       {Func:SetVariable}
  228:  DADDU     A1, S0, R0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  ADDIU     V0, R0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58

PADDING: 80218F28 to 80218F30 (004318C8 to 004318D0)
00000000 00000000 

#new:Function $Function_80218F30
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  DADDU     S4, A0, R0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       {Func:GetVariable}
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIO       AT, 40C90FD0
   70:  MTC1      AT, F20
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       {Func:SinRad}
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       {Func:SinRad}
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       {Func:CosRad}
   F8:  ADD.S     F24, F24, F26
   FC:  DADDU     A0, S4, R0
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  DADDU     A1, S1, R0
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       {Func:SetFloatVariable}
  128:  ADD.S     F20, F20, F2
  12C:  DADDU     A0, S4, R0
  130:  MFC1      A2, F24
  134:  JAL       {Func:SetFloatVariable}
  138:  DADDU     A1, S3, R0
  13C:  DADDU     A0, S4, R0
  140:  MFC1      A2, F20
  144:  JAL       {Func:SetFloatVariable}
  148:  DADDU     A1, S2, R0
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  DADDU     A2, R0, R0
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  ADDIU     A2, R0, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  DADDU     A0, S4, R0
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       {Func:SetVariable}
  228:  DADDU     A1, S0, R0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  ADDIU     V0, R0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58

#new:Function $Function_80219198
    0:  ADDIU     SP, SP, FFE8
    4:  ADDIU     A0, R0, 3D4
    8:  SW        RA, 10 (SP)
    C:  JAL       8011BB74
   10:  ADDIU     A1, R0, 3E8
   14:  ADDIU     A0, R0, F
   18:  ADDIU     A1, R0, 5
   1C:  ADDIU     A2, R0, 37
   20:  JAL       8011BB88
   24:  ADDIU     A3, R0, FF
   28:  JAL       8011BB50
   2C:  NOP
   30:  LW        RA, 10 (SP)
   34:  ADDIU     V0, R0, 2
   38:  JR        RA
   3C:  ADDIU     SP, SP, 18

PADDING: 802191D8 to 802191E0 (00431B78 to 00431B80)
00000000 00000000 

#new:Formation $Formation_00
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Goomba 00000000 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000001 00000009 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$Goomba 00000000 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000001 00000009 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000008 00000000 00000000 00000000 00000000 
$Goomba 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$SpikedGoomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$Goomba 00000000 0000000A 00000000 00000000 00000000 00000000 
$Paragoomba 00000005 00000009 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000008 00000000 00000000 00000000 00000000 
$Paragoomba 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$Paragoomba 00000005 0000000A 00000000 00000000 00000000 00000000 
$Paragoomba 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$Paragoomba 00000004 0000000A 00000000 00000000 00000000 00000000 
$Paragoomba 00000005 00000009 00000000 00000000 00000000 00000000 
$Paragoomba 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$SpikedGoomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80220FD8 00000001 $Formation_00 $Stage_8022066C 00000000 
$SJIS_80220FCC 00000002 $Formation_01 $Stage_8022066C 00000000 
$SJIS_80220FC0 00000003 $Formation_02 $Stage_8022066C 00000000 
$SJIS_80220FA8 00000002 $Formation_03 $Stage_8022066C 00000000 % unused
$SJIS_80220F9C 00000004 $Formation_04 $Stage_8022066C 00000000 % unused
$SJIS_80220F84 00000002 $Formation_05 $Stage_8022066C 00000000 % unused
$SJIS_80220F58 00000004 $Formation_06 $Stage_8022066C 00000000 
$SJIS_80220F48 00000001 $Formation_07 $Stage_8022066C 00000000 % unused
$SJIS_80220F38 00000002 $Formation_08 $Stage_8022066C 00000000 
$SJIS_80220F28 00000003 $Formation_09 $Stage_8022066C 00000000 
$SJIS_80220F18 00000001 $Formation_0A $Stage_8022066C 00000000 
$SJIS_80220F00 00000002 $Formation_0B $Stage_8022066C 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_80221004 $Stage_8021FDD0 
$ASCII_80220FFC $Stage_8022021C 
$ASCII_80220FF4 $Stage_8022066C 
$ASCII_80220FEC $Stage_80220A78 
$ASCII_80220FE4 $Stage_80220ECC 
00000000 00000000 

PADDING: 80219608 to 80219610 (00431FA8 to 00431FB0)
00000000 00000000 

#new:DefenseTable $DefenseTable_80219610
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021961C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802196C8
00800000 01000000 001400FF $IdleAnimations_80219714 $DefenseTable_80219610 00000000 00000000 00F60000 00000000 

#new:Actor $Goomba
% stats
[Index]         7b 
[Level]         5`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021961C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802196C8 
[Script]      $Script_Init_802197AC 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80219714
.Status:Normal    00260001
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260001
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:IdleAnimations $IdleAnimations_80219760
.Status:Normal    00260003
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260003
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:Script $Script_Init_802197AC
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021A300 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_802197F8 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219AD4 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_802197F8
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219760 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027A264 ( FFFFFF81 00000000 )
  128:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219714 )
  140:  Loop     00000014 
  14C:  	Label    00000001 
  158:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  16C:  	If  *Var[1]  &  0035D000 
  17C:  		Wait     00000001 
  188:  		Goto     00000001 
  194:  	EndIf
  19C:  	Wait     00000001 
  1A8:  EndLoop
  1B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Sub  *Var[0]  00000005 
  1DC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219760 )
  208:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  224:  Call     8027A264 ( FFFFFF81 00000000 )
  238:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219714 )
  250:  Loop     00000050 
  25C:  	Label    00000002 
  268:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  27C:  	If  *Var[1]  &  0035D000 
  28C:  		Wait     00000001 
  298:  		Goto     00000002 
  2A4:  	EndIf
  2AC:  	Wait     00000001 
  2B8:  EndLoop
  2C0:  Goto     0000000A 
  2CC:  Return
  2D4:  End

#new:Script $Script_HandleEvent_80219AD4
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  00260005 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  00260009 
   DC:  		SetConst  *Var[2]  0026000A 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  00260009 
  124:  		SetConst  *Var[2]  0026000A 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  0026000A 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  00260005 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00260005 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00260006 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0026000E 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  00260005 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  344:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  0026000E 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00260006 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00260001 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  00260005 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00260006 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  00260001 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  00260003 
  5C4:  		SetConst  *Var[2]  00260005 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  00260003 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  00260005 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End

#new:FloatTable $FloatTable_8021A194
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021A300
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
   FC:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  118:  Wait     00000001 
  124:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  140:  Wait     00000005 
  14C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  168:  Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[0] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:  				Call     $Function_8021818C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  2E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260008 )
  3B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  3D0:  		Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  3F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  43C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  5B4:  			Loop     00000004 
  5C0:  				Sub  *Var[0]  0000002D 
  5D0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  5EC:  				Wait     00000001 
  5F8:  			EndLoop
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  658:  		Wait     00000005 
  664:  		Call     UseCamPreset 	( 00000002 )
  674:  		Call     8027D7F0 ( )
  680:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  754:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  838:  			Loop     00000010 
  844:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  860:  				Call     $Function_8021818C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  880:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  89C:  				Set  *Var[1]  *Var[4] 
  8AC:  				Set  *Var[2]  *Var[5] 
  8BC:  				Set  *Var[3]  *Var[6] 
  8CC:  				Wait     00000001 
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 0026000B )
  954:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  970:  		Wait     00000001 
  97C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseCamPreset 	( 00000002 )
  A08:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  A24:  		Wait     00000001 
  A30:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait     00000001 
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  BE4:  		Wait     00000003 
  BF0:  		Call     8027D7F0 ( )
  BFC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  C2C:  		Call     SetGoalToHome 	( .Actor:Self )
  C3C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  C50:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  C68:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CA4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CB8:  Return
  CC0:  End

PADDING: 8021AFC8 to 8021AFD0 (00433968 to 00433970)
00000000 00000000 

#new:DefenseTable $DefenseTable_8021AFD0
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021AFDC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     80`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear       80`
.Status:Static     80`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021B088
00800000 01000000 001800FF $IdleAnimations_8021B0D4 $DefenseTable_8021AFD0 00000010 00000000 00F40000 00000000 

#new:Actor $SpikedGoomba
% stats
[Index]         9b 
[Level]         6`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021AFDC 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021B088 
[Script]      $Script_Init_8021B16C 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]      95`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021B0D4
.Status:Normal    00270001
.Status:Stone     00270000
.Status:Sleep     0027000A
.Status:Poison    00270001
.Status:Stop      00270000
.Status:Static    00270001
.Status:Paralyze  00270000
.Status:Dizzy     00270009
.Status:Fear      00270009
.Status:End

#new:IdleAnimations $IdleAnimations_8021B120
.Status:Normal    00270003
.Status:Stone     00270000
.Status:Sleep     0027000A
.Status:Poison    00270001
.Status:Stop      00270000
.Status:Static    00270003
.Status:Paralyze  00270000
.Status:Dizzy     00270009
.Status:Fear      00270009
.Status:End

#new:Script $Script_Init_8021B16C
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021BDDC )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021B1B8 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021B494 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021B1B8
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021B120 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027A264 ( FFFFFF81 00000000 )
  128:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021B0D4 )
  140:  Loop     00000014 
  14C:  	Label    00000001 
  158:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  16C:  	If  *Var[1]  &  0035D000 
  17C:  		Wait     00000001 
  188:  		Goto     00000001 
  194:  	EndIf
  19C:  	Wait     00000001 
  1A8:  EndLoop
  1B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Sub  *Var[0]  00000005 
  1DC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021B120 )
  208:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  224:  Call     8027A264 ( FFFFFF81 00000000 )
  238:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021B0D4 )
  250:  Loop     00000050 
  25C:  	Label    00000002 
  268:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  27C:  	If  *Var[1]  &  0035D000 
  28C:  		Wait     00000001 
  298:  		Goto     00000002 
  2A4:  	EndIf
  2AC:  	Wait     00000001 
  2B8:  EndLoop
  2C0:  Goto     0000000A 
  2CC:  Return
  2D4:  End

#new:Script $Script_HandleEvent_8021B494
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  00270006 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  00270007 
   DC:  		SetConst  *Var[2]  00270008 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  00270007 
  124:  		SetConst  *Var[2]  00270008 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  00270008 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  00270006 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00270006 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00270005 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0027000C 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  00270006 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00270009 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  344:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  0027000C 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00270005 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00270001 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  00270006 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00270005 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00270003 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  00270001 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  00270003 
  5C4:  		SetConst  *Var[2]  00270006 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  00270003 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  00270006 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Case  ==  .Event:SpikeTaunt
  66C:  		Call     GetStatusFlags ( .Actor:Self *Var[0] )
  680:  		If  *Var[0]  !&  0035D000 
  690:  			Call     SetAnimation 	( .Actor:Self 00000001 0027000B )
  6A8:  		EndIf
  6B0:  		Wait     0000000A 
  6BC:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  6D8:  		Call     GetStatusFlags ( .Actor:Self *Var[3] )
  6EC:  		If  *Var[3]  &  00080000 
  6FC:  			Add  *Var[1]  0000000A 
  70C:  		Else
  714:  			Add  *Var[1]  0000001A 
  724:  		EndIf
  72C:  		Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  770:  		Wait     00000014 
  77C:  	Default
  784:  EndSwitch
  78C:  Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  7A4:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B8:  Call     UseIdleAnimation 	( .Actor:Self .True )
  7CC:  Return
  7D4:  End

#new:FloatTable $FloatTable_8021BC70
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021BDDC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00270003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
   FC:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  118:  Wait     00000001 
  124:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  140:  Wait     00000005 
  14C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  168:  Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[0] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:  				Call     $Function_8021840C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  2E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 0027000A )
  3B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  3D0:  		Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  3F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  43C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 00270006 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  5B4:  			Loop     00000004 
  5C0:  				Sub  *Var[0]  0000002D 
  5D0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  5EC:  				Wait     00000001 
  5F8:  			EndLoop
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 00270009 )
  658:  		Wait     00000005 
  664:  		Call     UseCamPreset 	( 00000002 )
  674:  		Call     8027D7F0 ( )
  680:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  754:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  838:  			Loop     00000010 
  844:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  860:  				Call     $Function_8021840C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  880:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  89C:  				Set  *Var[1]  *Var[4] 
  8AC:  				Set  *Var[2]  *Var[5] 
  8BC:  				Set  *Var[3]  *Var[6] 
  8CC:  				Wait     00000001 
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270004 )
  954:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  970:  		Wait     00000001 
  97C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseCamPreset 	( 00000002 )
  A08:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  A24:  		Wait     00000001 
  A30:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait     00000001 
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     GetLastDamage 	( .Actor:Player *Var[0] )
  BE0:  		If  *Var[0]  >  00000000 
  BF0:  			Call     SetAnimation 	( .Actor:Self 00000001 0027000B )
  C08:  			Wait     0000000F 
  C14:  		Else
  C1C:  			Call     SetAnimation 	( .Actor:Self 00000001 00270001 )
  C34:  			Wait     00000003 
  C40:  		EndIf
  C48:  		Call     8027D7F0 ( )
  C54:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  C6C:  		Call     SetAnimation 	( .Actor:Self 00000001 00270003 )
  C84:  		Call     SetGoalToHome 	( .Actor:Self )
  C94:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  CA8:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  CC0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  CD8:  	EndCaseGroup
  CE0:  EndSwitch
  CE8:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CFC:  Call     UseIdleAnimation 	( .Actor:Self .True )
  D10:  Return
  D18:  End

PADDING: 8021CAFC to 8021CB00 (0043549C to 004354A0)
00000000 

#new:DefenseTable $DefenseTable_8021CB00
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_8021CB0C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021CB18
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_8021CBC4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     80`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear       80`
.Status:Static     80`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021CC70
00020001 01000000 001400FF $IdleAnimations_8021E4EC $DefenseTable_8021CB00 00000000 00000000 00F60000 00000000 
00800000 02000000 001800FF $IdleAnimations_8021CD28 $DefenseTable_8021CB0C 00004000 00000000 00F60000 00000000 
00020001 03000000 F01800FF $IdleAnimations_8021CDC0 $DefenseTable_8021CB00 00000000 00000000 00F60000 00000000 
00020001 04000000 F01800FF $IdleAnimations_8021CDCC $DefenseTable_8021CB00 00000000 00000000 00F60000 00000000 

#new:Actor $Paragoomba
% stats
[Index]         8b 
[Level]         6`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021CBC4 
% ai
[SpriteCount]   4`s 
[SpriteTable] $SpriteTable_8021CC70 
[Script]      $Script_Init_8021CDD8 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]   100`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  26`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021CD28
.Status:Normal    00280001
.Status:Stone     00280000
.Status:Sleep     0028000B
.Status:Poison    00280001
.Status:Stop      00280000
.Status:Static    00280001
.Status:Paralyze  00280000
.Status:Dizzy     0028000C
.Status:Fear      0028000C
.Status:End

#new:IdleAnimations $IdleAnimations_8021CD74
.Status:Normal    00280004
.Status:Stone     00280000
.Status:Sleep     0028000B
.Status:Poison    00280001
.Status:Stop      00280000
.Status:Static    00280004
.Status:Paralyze  00280000
.Status:Dizzy     0028000C
.Status:Fear      0028000C
.Status:End

#new:IdleAnimations $IdleAnimations_8021CDC0
.Status:Normal    00280009
.Status:End

#new:IdleAnimations $IdleAnimations_8021CDCC
.Status:Normal    0028000A
.Status:End

#new:Script $Script_Init_8021CDD8
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D74C )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021CE24 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D158 )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021CE24
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[0.60058594] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021CD74 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027BBB8 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
  130:  Loop     00000014 
  13C:  	Label    00000001 
  148:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  15C:  	If  *Var[1]  &  0035D000 
  16C:  		Wait     00000001 
  178:  		Goto     00000001 
  184:  	EndIf
  18C:  	Wait     00000001 
  198:  EndLoop
  1A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1BC:  Sub  *Var[0]  00000005 
  1CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[0.60058594] )
  1E0:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  1FC:  Call     8027BBB8 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
  218:  Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021CD28 )
  230:  Loop     00000028 
  23C:  	Label    00000002 
  248:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  25C:  	If  *Var[1]  &  0035D000 
  26C:  		Wait     00000001 
  278:  		Goto     00000002 
  284:  	EndIf
  28C:  	Wait     00000001 
  298:  EndLoop
  2A0:  Goto     0000000A 
  2AC:  Return
  2B4:  End

#new:Script $Script_8021D0E0
    0:  Call     8026F6EC ( FFFFFF81 )
   10:  Call     SetGoalToHome 	( .Actor:Self )
   20:  Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
   34:  Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
   50:  Call     SetAnimation 	( .Actor:Self 00000002 00280001 )
   68:  Return
   70:  End

#new:Script $Script_HandleEvent_8021D158
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     GetEventType 	( .Actor:Self *Var[0] )
   3C:  Switch  *Var[0] 
   48:  	CaseOR  ==  .Event:HitCombo
   54:  	CaseOR  ==  .Event:Hit
   60:  		SetConst  *Var[0]  00000002 
   70:  		SetConst  *Var[1]  00280006 
   80:  		ExecWait DoNormalHit 
   8C:  		Call     GetBattlePhase ( *Var[0] )
   9C:  		If  *Var[0]  ==  .Phase:FirstStrike
   AC:  			Call     8027D7C4 ( *Var[0] )
   BC:  			If  *Var[0]  ==  00000004 
   CC:  				ExecWait $Script_8021DF64 
   D8:  			EndIf
   E0:  		EndIf
   E8:  	EndCaseGroup
   F0:  	Case  ==  .Event:BurnHit
   FC:  		SetConst  *Var[0]  00000002 
  10C:  		SetConst  *Var[1]  0028000D 
  11C:  		SetConst  *Var[2]  0028000E 
  12C:  		ExecWait DoBurnHit 
  138:  	Case  ==  .Event:BurnDeath
  144:  		SetConst  *Var[0]  00000002 
  154:  		SetConst  *Var[1]  0028000D 
  164:  		SetConst  *Var[2]  0028000E 
  174:  		ExecWait DoBurnHit 
  180:  		SetConst  *Var[0]  00000002 
  190:  		SetConst  *Var[1]  0028000E 
  1A0:  		ExecWait DoDeath 
  1AC:  		Return
  1B4:  	Case  ==  .Event:FallTrigger
  1C0:  		SetConst  *Var[0]  00000002 
  1D0:  		SetConst  *Var[1]  00280006 
  1E0:  		ExecWait DoNormalHit 
  1EC:  		ExecWait $Script_8021DF64 
  1F8:  	Case  ==  0000000F
  204:  		SetConst  *Var[0]  00000002 
  214:  		SetConst  *Var[1]  0028000D 
  224:  		SetConst  *Var[2]  0028000E 
  234:  		ExecWait DoBurnHit 
  240:  		ExecWait $Script_8021DF64 
  24C:  	Case  ==  .Event:ShockHit
  258:  		SetConst  *Var[0]  00000002 
  268:  		SetConst  *Var[1]  0028000F 
  278:  		ExecWait DoShockHit 
  284:  		SetConst  *Var[0]  00000002 
  294:  		SetConst  *Var[1]  00280006 
  2A4:  		ExecWait 8029BD70 
  2B0:  		Call     SetAnimation 	( .Actor:Self 00000002 0028000C )
  2C8:  		ExecWait $Script_8021D0E0 
  2D4:  	Case  ==  .Event:ShockDeath
  2E0:  		SetConst  *Var[0]  00000002 
  2F0:  		SetConst  *Var[1]  0028000F 
  300:  		ExecWait DoShockHit 
  30C:  		SetConst  *Var[0]  00000002 
  31C:  		SetConst  *Var[1]  00280007 
  32C:  		ExecWait DoDeath 
  338:  		Return
  340:  	Case  ==  .Event:StarBeam
  34C:  	CaseOR  ==  00000017
  358:  	CaseOR  ==  .Event:Immune
  364:  	CaseOR  ==  .Event:AirLiftFailed
  370:  		SetConst  *Var[0]  00000002 
  380:  		SetConst  *Var[1]  00280001 
  390:  		ExecWait DoImmune 
  39C:  	EndCaseGroup
  3A4:  	Case  ==  .Event:Death
  3B0:  		SetConst  *Var[0]  00000002 
  3C0:  		SetConst  *Var[1]  00280006 
  3D0:  		ExecWait DoNormalHit 
  3DC:  		Wait     0000000A 
  3E8:  		SetConst  *Var[0]  00000002 
  3F8:  		SetConst  *Var[1]  00280007 
  408:  		ExecWait DoDeath 
  414:  		Return
  41C:  	Case  ==  .Event:BeginFirstStrike
  428:  		Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
  444:  		Call     HPBarToCurrent ( .Actor:Self )
  454:  	Case  ==  .Event:EndFirstStrike
  460:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  478:  		ExecWait $Script_8021D0E0 
  484:  		Call     HPBarToHome 	( .Actor:Self )
  494:  	Case  ==  .Event:RecoverStatus
  4A0:  		SetConst  *Var[0]  00000002 
  4B0:  		SetConst  *Var[1]  00280001 
  4C0:  		ExecWait DoRecover 
  4CC:  	Case  ==  .Event:ScareAway
  4D8:  		Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  4F0:  		SetConst  *Var[0]  00000002 
  500:  		SetConst  *Var[1]  00280004 
  510:  		SetConst  *Var[2]  00280006 
  520:  		ExecWait DoScareAway 
  52C:  		Return
  534:  	Case  ==  .Event:BeginAirLift
  540:  		SetConst  *Var[0]  00000002 
  550:  		SetConst  *Var[1]  00280004 
  560:  		ExecWait DoAirLift 
  56C:  	Case  ==  .Event:BlowAway
  578:  		SetConst  *Var[0]  00000002 
  588:  		SetConst  *Var[1]  00280006 
  598:  		ExecWait DoBlowAway 
  5A4:  		Return
  5AC:  	Default
  5B4:  EndSwitch
  5BC:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  5D0:  Call     UseIdleAnimation 	( .Actor:Self .True )
  5E4:  Return
  5EC:  End

#new:Script $Script_TakeTurn_8021D74C
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     SetGoalToTarget 	( .Actor:Self )
   4C:  Call     UseCamPreset 	( 0000003F )
   5C:  Call     CamTargetActor ( .Actor:Self )
   6C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   84:  Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
   9C:  Call     SetGoalToTarget 	( .Actor:Self )
   AC:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   C8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   DC:  Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
   F8:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  11C:  Switch  *Var[0] 
  128:  	CaseOR  ==  00000006 
  134:  	CaseOR  ==  00000005 
  140:  		Set  *Var[A]  *Var[0] 
  150:  		Wait     0000000A 
  15C:  		Call     UseCamPreset 	( 00000042 )
  16C:  		Call     SetCamZoom  	( 0000012C )
  17C:  		Call     CamTargetActor ( .Actor:Self )
  18C:  		Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E0 )
  1B8:  		Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  1D4:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  1E8:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  1FC:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  214:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  230:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  24C:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  26C:  		Call     PlaySoundAtActor 	( .Actor:Self 000002C1 )
  280:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  29C:  		Call     SetGoalToTarget 	( .Actor:Self )
  2AC:  		Sub  *Var[0]  00000050 
  2BC:  		Set  *Var[1]  00000014 
  2CC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  2E8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2FC:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  314:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop     00000004 
  344:  				Call     PlaySoundAtActor 	( .Actor:Self 000020DF )
  358:  				Wait     00000004 
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call     SetAnimation 	( .Actor:Self 00000002 00280002 )
  38C:  		Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call     SetAnimationSpeed 	( .Actor:Self 00000002 *Fixed[3.0] )
  3C0:  		Wait     0000000A 
  3CC:  		If  *Var[A]  ==  00000005 
  3DC:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait     0000000A 
  414:  		Call     SetAnimationSpeed 	( .Actor:Self 00000002 *Fixed[1.0] )
  42C:  		Call     UseCamPreset 	( 00000002 )
  43C:  		Call     8026F6EC ( FFFFFF81 )
  44C:  		Call     8027D7F0 ( )
  458:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  470:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  484:  		ExecWait $Script_8021D0E0 
  490:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  4A4:  		Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
  4BC:  		Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  4D0:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait     0000000A 
  508:  		Call     UseCamPreset 	( 00000042 )
  518:  		Call     SetCamZoom  	( 0000012C )
  528:  		Call     CamTargetActor ( .Actor:Self )
  538:  		Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
  550:  		Call     PlaySoundAtActor 	( .Actor:Self 000020E0 )
  564:  		Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
  580:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
  594:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  5A8:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  5C0:  		Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5DC:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  5F8:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
  618:  		Call     PlaySoundAtActor 	( .Actor:Self 000002C1 )
  62C:  		Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
  648:  		Call     SetGoalToTarget 	( .Actor:Self )
  658:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  66C:  		Call     SetAnimation 	( .Actor:Self 00000002 00280005 )
  684:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait     00000002 
  6B4:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  6DC:  Switch  *Var[0] 
  6E8:  	CaseOR  ==  00000000 
  6F4:  	CaseOR  ==  00000002 
  700:  		Call     UseCamPreset 	( 00000002 )
  710:  		Call     SetGoalToTarget 	( .Actor:Self )
  720:  		Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
  73C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
  750:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  768:  		Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
  784:  		Call     8026F6EC ( FFFFFF81 )
  794:  		Wait     00000005 
  7A0:  		Call     8027D7F0 ( )
  7AC:  		Call     SetAnimation 	( .Actor:Self 00000002 00280004 )
  7C4:  		ExecWait $Script_8021D0E0 
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
  7F4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  808:  Return
  810:  End

#new:Script $Script_8021DF64
    0:  Call     8027D32C ( FFFFFF81 )
   10:  Call     SetSpriteFlags ( .Actor:Self 00000002 00020005 )
   28:  Call     SetSpriteFlags ( .Actor:Self 00000003 00120004 )
   40:  Call     SetSpriteFlags ( .Actor:Self 00000004 00120004 )
   58:  Call     SetSpriteFlags ( .Actor:Self 00000001 00800004 )
   70:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   8C:  Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
   AC:  Call     SetSpriteOffset 	( .Actor:Self 00000003 FFFFFFF7 00000007 FFFFFFFE )
   CC:  Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
   EC:  Call     SetSpriteOffset 	( .Actor:Self 00000004 0000000B 00000007 FFFFFFFE )
  10C:  Call     GetEventType 	( .Actor:Self *Var[0] )
  120:  If  *Var[0]  ==  0000000F
  130:  	Call     SetAnimation 	( .Actor:Self 00000001 0026000A )
  148:  Else
  150:  	Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  168:  EndIf
  170:  Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
  18C:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1A8:  Set  *Var[1]  00000000 
  1B8:  Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
  1CC:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1E8:  Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  208:  Call     $Function_80218500 ( 00000064 0000000A )
  21C:  Thread
  224:  	Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.30078125] )
  240:  EndThread
  248:  Call     8026F838 ( FFFFFF81 00000002 )
  25C:  Call     GetEventType 	( .Actor:Self *Var[3] )
  270:  If  *Var[3]  ==  0000000F
  280:  	Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  298:  	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
  2B4:  	Add  *Var[4]  0000000A 
  2C4:  	Add  *Var[5]  00000005 
  2D4:  	Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  EndIf
  320:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  33C:  Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  35C:  Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  378:  Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  398:  Loop     0000000A 
  3A4:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  3C0:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
  3DC:  	Wait     00000001 
  3E8:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
  404:  	Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .False )
  420:  	Wait     00000001 
  42C:  EndLoop
  434:  Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
  450:  Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
  46C:  Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
  480:  Mod  *Var[0]  00000004 
  490:  Call     SetGoalToIndex ( .Actor:Self *Var[0] )
  4A4:  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4C0:  Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  4DC:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  4F4:  Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
  50C:  Call     SetStatusTable ( .Actor:Self $StatusTable_8021CB18 )
  520:  Call     SetActorType 	( FFFFFF81 00000007 )
  534:  ExecWait $Script_8021E584 
  540:  Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
  558:  Call     HPBarToHome 	( .Actor:Self )
  568:  Call     8026F6EC ( FFFFFF81 )
  578:  Return
  580:  End

#new:IdleAnimations $IdleAnimations_8021E4EC
.Status:Normal    00260001
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260001
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:IdleAnimations $IdleAnimations_8021E538
.Status:Normal    00260003
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260003
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:Script $Script_8021E584
    0:  Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021F0D8 )
   14:  Call     BindIdle    	( .Actor:Self $Script_Idle_8021E5D0 )
   28:  Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E8AC )
   3C:  Return
   44:  End

#new:Script $Script_Idle_8021E5D0
    0:  Label    0000000A 
    C:  Call     RandInt     	( 00000050 *Var[0] )
   20:  Add  *Var[0]  00000050 
   30:  Loop     *Var[0] 
   3C:  	Label    00000000 
   48:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
   5C:  	If  *Var[1]  &  0035D000 
   6C:  		Wait     00000001 
   78:  		Goto     00000000 
   84:  	EndIf
   8C:  	Wait     00000001 
   98:  EndLoop
   A0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
   BC:  Add  *Var[0]  00000005 
   CC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
   E0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E538 )
   F8:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  114:  Call     8027A264 ( FFFFFF81 00000000 )
  128:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E4EC )
  140:  Loop     00000014 
  14C:  	Label    00000001 
  158:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  16C:  	If  *Var[1]  &  0035D000 
  17C:  		Wait     00000001 
  188:  		Goto     00000001 
  194:  	EndIf
  19C:  	Wait     00000001 
  1A8:  EndLoop
  1B0:  Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  1CC:  Sub  *Var[0]  00000005 
  1DC:  Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
  1F0:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E538 )
  208:  Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
  224:  Call     8027A264 ( FFFFFF81 00000000 )
  238:  Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E4EC )
  250:  Loop     00000050 
  25C:  	Label    00000002 
  268:  	Call     GetStatusFlags ( .Actor:Self *Var[1] )
  27C:  	If  *Var[1]  &  0035D000 
  28C:  		Wait     00000001 
  298:  		Goto     00000002 
  2A4:  	EndIf
  2AC:  	Wait     00000001 
  2B8:  EndLoop
  2C0:  Goto     0000000A 
  2CC:  Return
  2D4:  End

#new:Script $Script_HandleEvent_8021E8AC
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call     GetEventType 	( .Actor:Self *Var[0] )
   58:  Switch  *Var[0] 
   64:  	CaseOR  ==  .Event:HitCombo
   70:  	CaseOR  ==  .Event:Hit
   7C:  		SetConst  *Var[0]  00000001 
   8C:  		SetConst  *Var[1]  00260005 
   9C:  		ExecWait DoNormalHit 
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit
   BC:  		SetConst  *Var[0]  00000001 
   CC:  		SetConst  *Var[1]  00260009 
   DC:  		SetConst  *Var[2]  0026000A 
   EC:  		ExecWait DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath
  104:  		SetConst  *Var[0]  00000001 
  114:  		SetConst  *Var[1]  00260009 
  124:  		SetConst  *Var[2]  0026000A 
  134:  		ExecWait DoBurnHit 
  140:  		SetConst  *Var[0]  00000001 
  150:  		SetConst  *Var[1]  0026000A 
  160:  		ExecWait DoDeath 
  16C:  		Return
  174:  	Case  ==  .Event:MultibounceHit
  180:  		SetConst  *Var[0]  00000001 
  190:  		SetConst  *Var[1]  00260005 
  1A0:  		ExecWait 8029B998 
  1AC:  	Case  ==  .Event:MultibounceDeath
  1B8:  		SetConst  *Var[0]  00000001 
  1C8:  		SetConst  *Var[1]  00260005 
  1D8:  		ExecWait 8029B998 
  1E4:  		SetConst  *Var[0]  00000001 
  1F4:  		SetConst  *Var[1]  00260006 
  204:  		ExecWait DoDeath 
  210:  		Return
  218:  	Case  ==  .Event:ShockHit
  224:  		SetConst  *Var[0]  00000001 
  234:  		SetConst  *Var[1]  0026000E 
  244:  		ExecWait DoShockHit 
  250:  		SetConst  *Var[0]  00000001 
  260:  		SetConst  *Var[1]  00260005 
  270:  		ExecWait 8029BD70 
  27C:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  29C:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  2CC:  		Call     SetGoalToHome 	( .Actor:Self )
  2DC:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  2F0:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  308:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait     00000005 
  32C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  344:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  358:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  378:  	Case  ==  .Event:ShockDeath
  384:  		SetConst  *Var[0]  00000001 
  394:  		SetConst  *Var[1]  0026000E 
  3A4:  		ExecWait DoShockHit 
  3B0:  		SetConst  *Var[0]  00000001 
  3C0:  		SetConst  *Var[1]  00260006 
  3D0:  		ExecWait DoDeath 
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam
  3F0:  	CaseOR  ==  00000017
  3FC:  	CaseOR  ==  .Event:Immune
  408:  	CaseOR  ==  .Event:AirLiftFailed
  414:  		SetConst  *Var[0]  00000001 
  424:  		SetConst  *Var[1]  00260001 
  434:  		ExecWait DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death
  454:  		SetConst  *Var[0]  00000001 
  464:  		SetConst  *Var[1]  00260005 
  474:  		ExecWait DoNormalHit 
  480:  		Wait     0000000A 
  48C:  		SetConst  *Var[0]  00000001 
  49C:  		SetConst  *Var[1]  00260006 
  4AC:  		ExecWait DoDeath 
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike
  4CC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  4FC:  		Call     SetGoalToHome 	( .Actor:Self )
  50C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
  520:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  538:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call     HPBarToHome 	( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus
  56C:  		SetConst  *Var[0]  00000001 
  57C:  		SetConst  *Var[1]  00260001 
  58C:  		ExecWait DoRecover 
  598:  	Case  ==  .Event:ScareAway
  5A4:  		SetConst  *Var[0]  00000001 
  5B4:  		SetConst  *Var[1]  00260003 
  5C4:  		SetConst  *Var[2]  00260005 
  5D4:  		ExecWait DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift
  5F4:  		SetConst  *Var[0]  00000001 
  604:  		SetConst  *Var[1]  00260003 
  614:  		ExecWait DoAirLift 
  620:  	Case  ==  .Event:BlowAway
  62C:  		SetConst  *Var[0]  00000001 
  63C:  		SetConst  *Var[1]  00260005 
  64C:  		ExecWait DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  688:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  69C:  Call     UseIdleAnimation 	( .Actor:Self .True )
  6B0:  Return
  6B8:  End

#new:FloatTable $FloatTable_8021EF6C
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021F0D8
    0:  Call     UseIdleAnimation 	( .Actor:Self .False )
   14:  Call     EnableIdleScript 	( .Actor:Self 00000000 )
   28:  Call     SetTargetActor ( .Actor:Self .Actor:Player )
   3C:  Call     UseCamPreset 	( 0000003F )
   4C:  Call     CamTargetActor ( .Actor:Self )
   5C:  Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
   74:  Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
   8C:  Call     SetGoalToTarget 	( .Actor:Self )
   9C:  Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
   B8:  Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
   CC:  Call     RunToGoal   	( .Actor:Self 00000000 .False )
   E4:  Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
   FC:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
  118:  Wait     00000001 
  124:  Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  140:  Wait     00000005 
  14C:  Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  168:  Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  180:  Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
  1A4:  Switch  *Var[0] 
  1B0:  	CaseOR  ==  00000006 
  1BC:  	CaseOR  ==  00000005 
  1C8:  		Set  *Var[A]  *Var[0] 
  1D8:  		Call     SetGoalToTarget 	( .Actor:Self )
  1E8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  204:  		Sub  *Var[0]  0000000A 
  214:  		Set  *Var[1]  0000000A 
  224:  		Add  *Var[2]  00000003 
  234:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  250:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  264:  		Thread
  26C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  288:  			Set  *Var[0]  00000000 
  298:  			Loop     00000010 
  2A4:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  2C0:  				Call     $Function_802186E4 ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  2E0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  2FC:  				Set  *Var[1]  *Var[4] 
  30C:  				Set  *Var[2]  *Var[5] 
  31C:  				Set  *Var[3]  *Var[6] 
  32C:  				Wait     00000001 
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait     00000006 
  35C:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  374:  		EndThread
  37C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  39C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260008 )
  3B4:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  3D0:  		Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
  3EC:  		Wait     00000001 
  3F8:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
  430:  		Wait     00000001 
  43C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
  474:  		Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
  48C:  		Wait     00000005 
  498:  		If  *Var[A]  ==  00000005 
  4A8:  			Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait     00000005 
  4E0:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  4FC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  514:  		Call     SetGoalToTarget 	( .Actor:Self )
  524:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  540:  		Add  *Var[0]  00000014 
  550:  		Set  *Var[1]  00000000 
  560:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  57C:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait     00000004 
  5A4:  			Set  *Var[0]  000000B4 
  5B4:  			Loop     00000004 
  5C0:  				Sub  *Var[0]  0000002D 
  5D0:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  5EC:  				Wait     00000001 
  5F8:  			EndLoop
  600:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  618:  		EndThread
  620:  		Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
  640:  		Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
  658:  		Wait     00000005 
  664:  		Call     UseCamPreset 	( 00000002 )
  674:  		Call     8027D7F0 ( )
  680:  		Call     SetActorAngle 	( .Actor:Self 000000B4 )
  694:  		Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call     SetGoalToHome 	( .Actor:Self )
  6D8:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  6EC:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  704:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call     SetActorAngle 	( .Actor:Self 00000000 )
  730:  		Wait     00000005 
  73C:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  754:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
  768:  		Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
  788:  		Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
  7A0:  		Call     EnableIdleScript 	( .Actor:Self 00000001 )
  7B4:  		Call     UseIdleAnimation 	( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call     SetGoalToTarget 	( .Actor:Self )
  7F0:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
  804:  		Thread
  80C:  			Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
  828:  			Set  *Var[0]  00000000 
  838:  			Loop     00000010 
  844:  				Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
  860:  				Call     $Function_802186E4 ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
  880:  				Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
  89C:  				Set  *Var[1]  *Var[4] 
  8AC:  				Set  *Var[2]  *Var[5] 
  8BC:  				Set  *Var[3]  *Var[6] 
  8CC:  				Wait     00000001 
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait     00000006 
  8FC:  			Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
  914:  		EndThread
  91C:  		Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
  93C:  		Call     SetAnimation 	( .Actor:Self 00000001 0026000B )
  954:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  970:  		Wait     00000001 
  97C:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait     00000001 
  9A4:  EndSwitch
  9AC:  Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
  9D4:  Switch  *Var[0] 
  9E0:  	CaseOR  ==  00000000 
  9EC:  	CaseOR  ==  00000002 
  9F8:  		Call     UseCamPreset 	( 00000002 )
  A08:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
  A24:  		Wait     00000001 
  A30:  		Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait     00000001 
  A58:  		Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
  A90:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  AA8:  		Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  AC4:  		Add  *Var[0]  00000028 
  AD4:  		Set  *Var[1]  00000000 
  AE4:  		Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
  AF8:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B14:  		Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
  B34:  		Add  *Var[0]  0000001E 
  B44:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  B60:  		Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
  B80:  		Add  *Var[0]  00000014 
  B90:  		Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
  BAC:  		Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
  BCC:  		Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
  BE4:  		Wait     00000003 
  BF0:  		Call     8027D7F0 ( )
  BFC:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
  C2C:  		Call     SetGoalToHome 	( .Actor:Self )
  C3C:  		Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
  C50:  		Call     RunToGoal   	( .Actor:Self 00000000 .False )
  C68:  		Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call     EnableIdleScript 	( .Actor:Self 00000001 )
  CA4:  Call     UseIdleAnimation 	( .Actor:Self .True )
  CB8:  Return
  CC0:  End

#new:Script $Script_BeforeBattle_8021FDA0
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Return
   18:  End

#new:Script $Script_AfterBattle_8021FDC0
    0:  Return
    8:  End

#new:Stage $Stage_8021FDD0
$ASCII_80221024  % kmr_tex
$ASCII_80221014  % kmr_bt02_shape
00000000 
$Script_BeforeBattle_8021FDA0 
$Script_AfterBattle_8021FDC0 
$ASCII_8022100C  % kmr_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 8021FDF8 to 8021FE00 (00438798 to 004387A0)
00000000 00000000 

#new:Script $Script_8021FE00
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[7]  *Var[2] 
   20:  Mul  *Var[7]  0000000A 
   30:  Label    00000000 
   3C:  Add  *Var[7]  00000004 
   4C:  If  *Var[7]  >  00000E0F 
   5C:  	Sub  *Var[7]  00000E10 
   6C:  EndIf
   74:  Call     $Function_802187E0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   94:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   B0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
   D0:  Wait     00000001 
   DC:  Goto     00000000 
   E8:  Return
   F0:  End

% Origin: HEURISTIC
#new:Script $Script_8021FEF8
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[7]  *Var[2] 
   40:  Mul  *Var[7]  0000000A 
   50:  Label    00000000 
   5C:  Add  *Var[7]  00000004 
   6C:  If  *Var[7]  >  00000E0F 
   7C:  	Sub  *Var[7]  00000E10 
   8C:  EndIf
   94:  Call     $Function_802187E0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   B4:  AddF  *Var[1]  *Var[B] 
   C4:  AddF  *Var[2]  *Var[C] 
   D4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   F0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  110:  Wait     00000001 
  11C:  Goto     00000000 
  128:  Return
  130:  End

% Origin: HEURISTIC
#new:Script $Script_80220030
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[D]  *Var[5] 
   40:  Set  *Var[7]  *Var[2] 
   50:  Mul  *Var[7]  0000000A 
   60:  Label    00000000 
   6C:  Add  *Var[7]  00000004 
   7C:  If  *Var[7]  >  00000E0F 
   8C:  	Sub  *Var[7]  00000E10 
   9C:  EndIf
   A4:  Call     $Function_802187E0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   C4:  AddF  *Var[0]  *Var[B] 
   D4:  AddF  *Var[1]  *Var[C] 
   E4:  AddF  *Var[2]  *Var[D] 
   F4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  110:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  130:  Wait     00000001 
  13C:  Goto     00000000 
  148:  Return
  150:  End

#new:Script $Script_BeforeBattle_80220188
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Set  *Var[0]  00000001 
   20:  Set  *Var[2]  00000000 
   30:  Exec     $Script_8021FE00 
   3C:  Set  *Var[0]  00000004 
   4C:  Set  *Var[2]  00000046 
   5C:  Exec     $Script_8021FE00 
   68:  Return
   70:  End

#new:Script $Script_AfterBattle_80220200
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80220210
00000027 0000002B 00000000 

#new:Stage $Stage_8022021C
$ASCII_80221054  % kmr_tex
$ASCII_80221044  % kmr_bt03_shape
$ASCII_80221034  % kmr_bt03_hit
$Script_BeforeBattle_80220188 
$Script_AfterBattle_80220200 
$ASCII_8022102C  % kmr_bg
$ForegroundModelList_80220210 
00000000 
00000000 
00000000 

PADDING: 80220244 to 80220250 (00438BE4 to 00438BF0)
00000000 00000000 00000000 

#new:Script $Script_80220250
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[7]  *Var[2] 
   20:  Mul  *Var[7]  0000000A 
   30:  Label    00000000 
   3C:  Add  *Var[7]  00000004 
   4C:  If  *Var[7]  >  00000E0F 
   5C:  	Sub  *Var[7]  00000E10 
   6C:  EndIf
   74:  Call     $Function_80218A50 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   94:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   B0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
   D0:  Wait     00000001 
   DC:  Goto     00000000 
   E8:  Return
   F0:  End

% Origin: HEURISTIC
#new:Script $Script_80220348
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[7]  *Var[2] 
   40:  Mul  *Var[7]  0000000A 
   50:  Label    00000000 
   5C:  Add  *Var[7]  00000004 
   6C:  If  *Var[7]  >  00000E0F 
   7C:  	Sub  *Var[7]  00000E10 
   8C:  EndIf
   94:  Call     $Function_80218A50 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   B4:  AddF  *Var[1]  *Var[B] 
   C4:  AddF  *Var[2]  *Var[C] 
   D4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   F0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  110:  Wait     00000001 
  11C:  Goto     00000000 
  128:  Return
  130:  End

% Origin: HEURISTIC
#new:Script $Script_80220480
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[D]  *Var[5] 
   40:  Set  *Var[7]  *Var[2] 
   50:  Mul  *Var[7]  0000000A 
   60:  Label    00000000 
   6C:  Add  *Var[7]  00000004 
   7C:  If  *Var[7]  >  00000E0F 
   8C:  	Sub  *Var[7]  00000E10 
   9C:  EndIf
   A4:  Call     $Function_80218A50 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   C4:  AddF  *Var[0]  *Var[B] 
   D4:  AddF  *Var[1]  *Var[C] 
   E4:  AddF  *Var[2]  *Var[D] 
   F4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  110:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  130:  Wait     00000001 
  13C:  Goto     00000000 
  148:  Return
  150:  End

#new:Script $Script_BeforeBattle_802205D8
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Set  *Var[0]  00000001 
   20:  Set  *Var[2]  00000000 
   30:  Exec     $Script_80220250 
   3C:  Set  *Var[0]  00000004 
   4C:  Set  *Var[2]  00000046 
   5C:  Exec     $Script_80220250 
   68:  Return
   70:  End

#new:Script $Script_AfterBattle_80220650
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80220660
00000024 00000020 00000000 

#new:Stage $Stage_8022066C
$ASCII_80221084  % kmr_tex
$ASCII_80221074  % kmr_bt04_shape
$ASCII_80221064  % kmr_bt04_hit
$Script_BeforeBattle_802205D8 
$Script_AfterBattle_80220650 
$ASCII_8022105C  % kmr_bg
$ForegroundModelList_80220660 
00000000 
00000000 
00000000 

PADDING: 80220694 to 802206A0 (00439034 to 00439040)
00000000 00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_802206A0
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[7]  *Var[2] 
   20:  Mul  *Var[7]  0000000A 
   30:  Label    00000000 
   3C:  Add  *Var[7]  00000004 
   4C:  If  *Var[7]  >  00000E0F 
   5C:  	Sub  *Var[7]  00000E10 
   6C:  EndIf
   74:  Call     $Function_80218CC0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   94:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   B0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
   D0:  Wait     00000001 
   DC:  Goto     00000000 
   E8:  Return
   F0:  End

% Origin: HEURISTIC
#new:Script $Script_80220798
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[7]  *Var[2] 
   40:  Mul  *Var[7]  0000000A 
   50:  Label    00000000 
   5C:  Add  *Var[7]  00000004 
   6C:  If  *Var[7]  >  00000E0F 
   7C:  	Sub  *Var[7]  00000E10 
   8C:  EndIf
   94:  Call     $Function_80218CC0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   B4:  AddF  *Var[1]  *Var[B] 
   C4:  AddF  *Var[2]  *Var[C] 
   D4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   F0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  110:  Wait     00000001 
  11C:  Goto     00000000 
  128:  Return
  130:  End

% Origin: HEURISTIC
#new:Script $Script_802208D0
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[D]  *Var[5] 
   40:  Set  *Var[7]  *Var[2] 
   50:  Mul  *Var[7]  0000000A 
   60:  Label    00000000 
   6C:  Add  *Var[7]  00000004 
   7C:  If  *Var[7]  >  00000E0F 
   8C:  	Sub  *Var[7]  00000E10 
   9C:  EndIf
   A4:  Call     $Function_80218CC0 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   C4:  AddF  *Var[0]  *Var[B] 
   D4:  AddF  *Var[1]  *Var[C] 
   E4:  AddF  *Var[2]  *Var[D] 
   F4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  110:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  130:  Wait     00000001 
  13C:  Goto     00000000 
  148:  Return
  150:  End

#new:Script $Script_BeforeBattle_80220A28
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     EnableModel 	( 0000001B .False )
   24:  Return
   2C:  End

#new:Script $Script_AfterBattle_80220A5C
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80220A6C
00000020 00000024 00000000 

#new:Stage $Stage_80220A78
$ASCII_802210B4  % kmr_tex
$ASCII_802210A4  % kmr_bt05_shape
$ASCII_80221094  % kmr_bt05_hit
$Script_BeforeBattle_80220A28 
$Script_AfterBattle_80220A5C 
$ASCII_8022108C  % kmr_bg
$ForegroundModelList_80220A6C 
00000000 
00000000 
00000000 

#new:Script $Script_80220AA0
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[7]  *Var[2] 
   20:  Mul  *Var[7]  0000000A 
   30:  Label    00000000 
   3C:  Add  *Var[7]  00000004 
   4C:  If  *Var[7]  >  00000E0F 
   5C:  	Sub  *Var[7]  00000E10 
   6C:  EndIf
   74:  Call     $Function_80218F30 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   94:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   B0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
   D0:  Wait     00000001 
   DC:  Goto     00000000 
   E8:  Return
   F0:  End

% Origin: HEURISTIC
#new:Script $Script_80220B98
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[7]  *Var[2] 
   40:  Mul  *Var[7]  0000000A 
   50:  Label    00000000 
   5C:  Add  *Var[7]  00000004 
   6C:  If  *Var[7]  >  00000E0F 
   7C:  	Sub  *Var[7]  00000E10 
   8C:  EndIf
   94:  Call     $Function_80218F30 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   B4:  AddF  *Var[1]  *Var[B] 
   C4:  AddF  *Var[2]  *Var[C] 
   D4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
   F0:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  110:  Wait     00000001 
  11C:  Goto     00000000 
  128:  Return
  130:  End

% Origin: HEURISTIC
#new:Script $Script_80220CD0
    0:  Set  *Var[A]  *Var[0] 
   10:  Set  *Var[B]  *Var[3] 
   20:  Set  *Var[C]  *Var[4] 
   30:  Set  *Var[D]  *Var[5] 
   40:  Set  *Var[7]  *Var[2] 
   50:  Mul  *Var[7]  0000000A 
   60:  Label    00000000 
   6C:  Add  *Var[7]  00000004 
   7C:  If  *Var[7]  >  00000E0F 
   8C:  	Sub  *Var[7]  00000E10 
   9C:  EndIf
   A4:  Call     $Function_80218F30 ( *Var[7] *Var[0] *Var[1] *Var[2] *Var[3] )
   C4:  AddF  *Var[0]  *Var[B] 
   D4:  AddF  *Var[1]  *Var[C] 
   E4:  AddF  *Var[2]  *Var[D] 
   F4:  Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
  110:  Call     RotateModel 	( *Var[A] *Var[3] 00000000 00000001 00000000 )
  130:  Wait     00000001 
  13C:  Goto     00000000 
  148:  Return
  150:  End

#new:Script $Script_BeforeBattle_80220E28
    0:  Call     SetSpriteShading 	( FFFFFFFF )
   10:  Call     $Function_80219198 ( )
   1C:  Set  *Var[0]  00000001 
   2C:  Set  *Var[2]  00000000 
   3C:  Exec     $Script_80220AA0 
   48:  Set  *Var[0]  00000004 
   58:  Set  *Var[2]  00000046 
   68:  Exec     $Script_80220AA0 
   74:  Return
   7C:  End

#new:Script $Script_AfterBattle_80220EAC
    0:  Return
    8:  End

#new:ForegroundModelList $ForegroundModelList_80220EBC
0000001D 00000022 00000021 00000000 

#new:Stage $Stage_80220ECC
$ASCII_802210E4  % kmr_tex
$ASCII_802210D4  % kmr_bt06_shape
$ASCII_802210C4  % kmr_bt06_hit
$Script_BeforeBattle_80220E28 
$Script_AfterBattle_80220EAC 
$ASCII_802210BC  % kmr_bg
$ForegroundModelList_80220EBC 
00000000 
00000000 
00000000 

PADDING: 80220EF4 to 80220F00 (00439894 to 004398A0)
00000000 00000000 00000000 

#new:SJIS $SJIS_80220F00
% togekuribo-,kuribo-
83678351 834E838A 837B815B 8141834E 838A837B 815B0000 

#new:SJIS $SJIS_80220F18
% togekuribo-
83678351 834E838A 837B815B 00000000 

#new:SJIS $SJIS_80220F28
% patakuribo-x3
8370835E 834E838A 837B815B 78825200 

#new:SJIS $SJIS_80220F38
% patakuribo-x2
8370835E 834E838A 837B815B 78825100 

#new:SJIS $SJIS_80220F48
% patakuribo-
8370835E 834E838A 837B815B 00000000 

#new:SJIS $SJIS_80220F58
% kuribo-,patakuribo-,kuribo-,patakuribo-
834E838A 837B815B 2C837083 5E834E83 8A837B81 5B2C834E 838A837B 815B2C83 
70835E83 4E838A83 7B815B00 

#new:SJIS $SJIS_80220F84
% kuribo-,togekuribo-
834E838A 837B815B 2C836783 51834E83 8A837B81 5B000000 

#new:SJIS $SJIS_80220F9C
% kuribo-x4
834E838A 837B815B 78825300 

#new:SJIS $SJIS_80220FA8
% kuribo-,patakuribo-
834E838A 837B815B 81418370 835E834E 838A837B 815B0000 

#new:SJIS $SJIS_80220FC0
% kuribo-x3
834E838A 837B815B 78825200 

#new:SJIS $SJIS_80220FCC
% kuribo-x2
834E838A 837B815B 78825100 

#new:SJIS $SJIS_80220FD8
% kuribo-
834E838A 837B815B 00000000 

#new:ASCII $ASCII_80220FE4
kmr_06

#new:ASCII $ASCII_80220FEC
kmr_05

#new:ASCII $ASCII_80220FF4
kmr_04

#new:ASCII $ASCII_80220FFC
kmr_03

#new:ASCII $ASCII_80221004
kmr_02

#new:ASCII $ASCII_8022100C
kmr_bg

#new:ASCII $ASCII_80221014
kmr_bt02_shape

#new:ASCII $ASCII_80221024
kmr_tex

#new:ASCII $ASCII_8022102C
kmr_bg

#new:ASCII $ASCII_80221034
kmr_bt03_hit

#new:ASCII $ASCII_80221044
kmr_bt03_shape

#new:ASCII $ASCII_80221054
kmr_tex

#new:ASCII $ASCII_8022105C
kmr_bg

#new:ASCII $ASCII_80221064
kmr_bt04_hit

#new:ASCII $ASCII_80221074
kmr_bt04_shape

#new:ASCII $ASCII_80221084
kmr_tex

#new:ASCII $ASCII_8022108C
kmr_bg

#new:ASCII $ASCII_80221094
kmr_bt05_hit

#new:ASCII $ASCII_802210A4
kmr_bt05_shape

#new:ASCII $ASCII_802210B4
kmr_tex

#new:ASCII $ASCII_802210BC
kmr_bg

#new:ASCII $ASCII_802210C4
kmr_bt06_hit

#new:ASCII $ASCII_802210D4
kmr_bt06_shape

#new:ASCII $ASCII_802210E4
kmr_tex

PADDING: 802210EC to 802210F0 (00439A8C to 00439A90)
00000000 

