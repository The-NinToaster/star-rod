% Script File: kpa_63.mscr
% Decoded from: 0 to 12C0 (kpa_63)

#new:Function $Function_80240000
    0:  ADDIU     SP, SP, FFC0
    4:  SW        S1, 14 (SP)
    8:  DADDU     S1, A0, R0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  SDC1      F26, 38 (SP)
   18:  SDC1      F24, 30 (SP)
   1C:  SDC1      F22, 28 (SP)
   20:  SDC1      F20, 20 (SP)
   24:  BEQ       A1, R0, .oA0
   28:  LW        S0, C (S1)
   2C:  LW        A1, 0 (S0)
   30:  JAL       {Func:GetVariable}
   34:  ADDIU     S0, S0, 4
   38:  SW        V0, 70 (S1)
   3C:  LW        A1, 0 (S0)
   40:  ADDIU     S0, S0, 4
   44:  JAL       {Func:GetVariable}
   48:  DADDU     A0, S1, R0
   4C:  LW        A1, 0 (S0)
   50:  MTC1      V0, F26
   54:  NOP
   58:  CVT.S.W   F26, F26
   5C:  JAL       {Func:GetVariable}
   60:  DADDU     A0, S1, R0
   64:  LW        V1, 70 (S1)
   68:  MTC1      V0, F22
   6C:  NOP
   70:  CVT.S.W   F22, F22
   74:  BEQ       V1, R0, .o8C
   78:  ADDIU     V0, R0, 1
   7C:  BEQ       V1, V0, .o98
   80:  NOP
   84:  BEQ       R0, R0, .oA0
   88:  NOP
        .o8C
   8C:  MTC1      R0, F20
   90:  BEQ       R0, R0, .oA0
   94:  NOP
        .o98
   98:  LIF       F20, 5.0
        .oA0
   A0:  JAL       {Func:SinDeg}
   A4:  MOV.S     F12, F22
   A8:  MUL.S     F0, F0, F20
   AC:  NOP
   B0:  LIF       F2, -120.0
   B8:  NOP
   BC:  ADD.S     F24, F0, F2
   C0:  LIF       F0, 11.0
   C8:  NOP
   CC:  SUB.S     F26, F26, F0
   D0:  JAL       {Func:CosDeg}
   D4:  MOV.S     F12, F22
   D8:  MUL.S     F0, F0, F20
   DC:  NOP
   E0:  LIF       F2, 225.0
   E8:  LW        A0, 70 (S1)
   EC:  BEQ       A0, R0, .o108
   F0:  ADD.S     F20, F0, F2
   F4:  ADDIU     V0, R0, 1
   F8:  BEQ       A0, V0, .o120
   FC:  ADDIU     V0, R0, 2
  100:  BEQ       R0, R0, .o168
  104:  NOP
        .o108
  108:  LIA       V0, 8010EFC8
  110:  SWC1      F24, 28 (V0)
  114:  SWC1      F26, 2C (V0)
  118:  BEQ       R0, R0, .o164
  11C:  SWC1      F20, 30 (V0)
        .o120
  120:  JAL       8003AB48
  124:  ADDIU     A0, R0, FFFC
  128:  DADDU     A0, V0, R0
  12C:  BEQ       A0, R0, .o164
  130:  MOV.S     F0, F24
  134:  SWC1      F24, 38 (A0)
  138:  SWC1      F26, 3C (A0)
  13C:  MOV.S     F2, F26
  140:  SWC1      F20, 40 (A0)
  144:  MOV.S     F4, F20
  148:  LW        V0, 0 (A0)
  14C:  LUI       V1, 1
  150:  SWC1      F0, 6C (A0)
  154:  SWC1      F2, 70 (A0)
  158:  SWC1      F4, 74 (A0)
  15C:  OR        V0, V0, V1
  160:  SW        V0, 0 (A0)
        .o164
  164:  ADDIU     V0, R0, 2
        .o168
  168:  LW        RA, 18 (SP)
  16C:  LW        S1, 14 (SP)
  170:  LW        S0, 10 (SP)
  174:  LDC1      F26, 38 (SP)
  178:  LDC1      F24, 30 (SP)
  17C:  LDC1      F22, 28 (SP)
  180:  LDC1      F20, 20 (SP)
  184:  JR        RA
  188:  ADDIU     SP, SP, 40

PADDING: 8024018C to 80240190 (0000018C to 00000190)
00000000 

#new:EntryList $EntryList
{Vec4f:Entry0} %  160.0    0.0  240.0    0.0
{Vec4f:Entry1} %  -40.0    0.0  225.0   90.0

#new:Header $Header
00000000 00000000 00000000 00000000 
$Script_Main $EntryList 00000002 00000000 
00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00190156 

#new:Script $Script_802401F0
    0:  Call     GetLoadType 	( *Var[0] )
   10:  If  *Var[0]  ==  00000001 
   20:  	Call     SetMusicTrack 	( 00000000 .Song:BowsersCastle 00000000 00000008 )
   3C:  	Thread
   44:  		Wait     0000001E 
   50:  		Call     802D5FA4 ( 00000004 )
   60:  	EndThread
   68:  	Call     802D60E8 ( 000000FA )
   78:  	Call     UseDoorSounds 	( 00000001 )
   88:  	Return
   90:  EndIf
   98:  Call     GetEntryID  	( *Var[0] )
   A8:  If  *Var[0]  ==  00000000 
   B8:  	Call     SetMusicTrack 	( 00000000 .Song:BowsersCastle 00000000 00000008 )
   D4:  	Thread
   DC:  		Wait     0000001E 
   E8:  		Call     802D5FA4 ( 00000004 )
   F8:  	EndThread
  100:  EndIf
  108:  Call     802D60E8 ( 000000FA )
  118:  Call     UseDoorSounds 	( 00000001 )
  128:  Return
  130:  End

PADDING: 80240328 to 80240330 (00000328 to 00000330)
00000000 00000000 

#new:Script $Script_80240330
    0:  Call     MakeEntity  	( .Entity:SavePoint {Vec4d:Entity80240330} 80000000 )
   24:  Return
   2C:  End

PADDING: 80240364 to 80240370 (00000364 to 00000370)
00000000 00000000 00000000 

#new:Script $Script_80240370
    0:  Call     PlaySoundAtCollider 	( {Collider:tts} 000001DF 00000000 )
   18:  Call     MakeLerp    	( 00000064 00000000 00000014 00000002 )
   34:  Loop     
   40:  	Call     UpdateLerp  	( )
   4C:  	SetF  *Var[5]  *Var[0] 
   5C:  	MulF  *Var[5]  *Fixed[0.0107421875] 
   6C:  	Call     ScaleGroup  	( {Model:g75} *Var[5] 00000001 00000001 )
   88:  	Wait     00000001 
   94:  	If  *Var[1]  ==  00000000 
   A4:  		BreakLoop
   AC:  	EndIf
   B4:  EndLoop
   BC:  Return
   C4:  End

#new:Script $Script_8024043C
    0:  Call     MakeLerp    	( 00000000 00000064 00000014 00000002 )
   1C:  Loop     
   28:  	Call     UpdateLerp  	( )
   34:  	SetF  *Var[5]  *Var[0] 
   44:  	MulF  *Var[5]  *Fixed[0.0107421875] 
   54:  	Call     ScaleGroup  	( {Model:g75} *Var[5] 00000001 00000001 )
   70:  	Wait     00000001 
   7C:  	If  *Var[1]  ==  00000000 
   8C:  		BreakLoop
   94:  	EndIf
   9C:  EndLoop
   A4:  Call     PlaySoundAtCollider 	( {Collider:tts} 000001E0 00000000 )
   BC:  Return
   C4:  End

#new:Script $Script_80240508
    0:  SetGroup 0000001B 
    C:  Call     DisablePlayerInput 	( .True )
   1C:  Exec     $Script_80240370 
   28:  Wait     0000000F 
   34:  Call     UseExitHeading ( 0000003C 00000000 )
   48:  Exec     ExitWalk 
   54:  Call     GotoMap     	( $ASCII_802412B0 00000003 )
   68:  Wait     00000064 
   74:  Return
   7C:  End

#new:Script $Script_8024058C
    0:  Bind     $Script_80240508 .Trigger:WallPressA {Collider:tts} 00000001 00000000 
   1C:  Return
   24:  End

#new:Script $Script_802405B8
    0:  Call     GetLoadType 	( *Var[0] )
   10:  If  *Var[0]  ==  00000001 
   20:  	Exec     EnterSavePoint 
   2C:  	Exec     $Script_8024058C 
   38:  	Return
   40:  EndIf
   48:  Call     GetEntryID  	( *Var[0] )
   58:  If  *Var[0]  ==  00000001 
   68:  	Exec     $Script_80240E14 
   74:  	Exec     $Script_8024058C 
   80:  Else
   88:  	Exec     $Script_8024043C 
   94:  	Set  *Var[0]  $Script_8024058C 
   A4:  	Exec     EnterWalk 
   B0:  	Wait     00000001 
   BC:  EndIf
   C4:  Return
   CC:  End

#new:Script_Main $Script_Main
    0:  Set  *WorldMapLocation  00000016 
   10:  Call     SetSpriteShading 	( FFFFFFFF )
   20:  Call     SetCamPerspective 	( .Default 00000003 00000019 00000010 00001000 )
   40:  Call     SetCamBGColor 	( .Default 00000000 00000000 00000000 )
   5C:  Call     SetCamFlag4 	( .Default .False )
   70:  Call     SetCamFlag2 	( .Default .True )
   84:  Set  *Flag_MAP_1F  00000001 
   94:  ExecWait $Script_80240330 
   A0:  Exec     $Script_802405B8 
   AC:  Exec     $Script_802401F0 
   B8:  Bind     $Script_802409D8 .Trigger:FloorTouch {Collider:o400} 00000001 00000000 
   D4:  Exec     $Script_80241250 
   E0:  Return
   E8:  End

PADDING: 8024077C to 80240780 (0000077C to 00000780)
00000000 

#new:Script $Script_80240780
    0:  If  *MapVar[C]  ==  00000001 
   10:  	Call     $Function_80240000 ( 00000000 *Var[3] *MapVar[B] )
   28:  EndIf
   30:  If  *MapVar[D]  ==  00000001 
   40:  	Call     $Function_80240000 ( 00000001 *Var[3] *MapVar[B] )
   58:  EndIf
   60:  Return
   68:  End

#new:Script $Script_802407F0
    0:  Label    00000000 
    C:  Call     MakeLerp    	( 00000000 00000064 0000001E 0000000A )
   28:  Loop     
   34:  	Call     UpdateLerp  	( )
   40:  	SetF  *Var[3]  *Var[0] 
   50:  	MulF  *Var[3]  *Fixed[0.10058594] 
   60:  	AddF  *Var[3]  *MapVar[A] 
   70:  	Call     TranslateGroup ( {Model:g55} 00000000 *Var[3] 00000000 )
   8C:  	Call     RotateGroup 	( {Model:g55} *MapVar[B] 00000000 00000001 00000000 )
   AC:  	Exec     $Script_80240780 
   B8:  	Wait     00000001 
   C4:  	If  *Var[1]  ==  00000000 
   D4:  		BreakLoop
   DC:  	EndIf
   E4:  EndLoop
   EC:  Call     MakeLerp    	( 00000064 00000000 0000001E 0000000A )
  108:  Loop     
  114:  	Call     UpdateLerp  	( )
  120:  	SetF  *Var[3]  *Var[0] 
  130:  	MulF  *Var[3]  *Fixed[0.10058594] 
  140:  	AddF  *Var[3]  *MapVar[A] 
  150:  	Call     TranslateGroup ( {Model:g55} 00000000 *Var[3] 00000000 )
  16C:  	Call     RotateGroup 	( {Model:g55} *MapVar[B] 00000000 00000001 00000000 )
  18C:  	Exec     $Script_80240780 
  198:  	Wait     00000001 
  1A4:  	If  *Var[1]  ==  00000000 
  1B4:  		BreakLoop
  1BC:  	EndIf
  1C4:  EndLoop
  1CC:  Goto     00000000 
  1D8:  Return
  1E0:  End

#new:Script $Script_802409D8
    0:  Call     802D2B0C ( *Var[9] )
   10:  If  *Var[9]  !=  00000000 
   20:  	Return
   28:  EndIf
   30:  Call     DisablePlayerInput 	( .True )
   40:  Call     HidePlayerShadow 	( .True )
   50:  Call     GetModelCenter ( {Model:o308} )
   60:  Add  *Var[0]  FFFFFFFB 
   70:  Call     SetPlayerJumpscale 	( 00000000 )
   80:  Call     802D1920 ( *Var[0] *Var[1] *Var[2] 00000002 )
   9C:  Call     802D10D8 ( 0000000A )
   AC:  Set  *MapVar[C]  00000001 
   BC:  Call     InterpPlayerYaw 	( 000000E1 00000000 )
   D0:  Call     DisablePlayerPhysics 	( .True )
   E0:  Call     DisablePartnerAI 	( 00000000 )
   F0:  Add  *Var[2]  0000000A 
  100:  Call     SetNpcFlagBits ( .Npc:Partner 00000140 .True )
  118:  Call     SetNpcJumpscale 	( .Npc:Partner 00000001 )
  12C:  Call     NpcJump0    	( .Npc:Partner *Var[0] *Var[1] *Var[2] 0000000F )
  14C:  Call     SetNpcAnimation 	( .Npc:Partner 00000106 )
  160:  Set  *MapVar[D]  00000001 
  170:  Call     SetNpcFlagBits ( .Npc:Partner 00000200 .False )
  188:  Call     EnableNpcShadow 	( .Npc:Partner .False )
  19C:  Wait     0000000A 
  1A8:  Call     ShowMessage 	( 001D0188 000000A0 00000028 ) % Are you ready to take off? 
  1C0:  Call     ShowChoice  	( 001E000C ) % Yes No 
  1D0:  Call     802D0A98 ( )
  1DC:  If  *Var[0]  ==  00000001 
  1EC:  	Call     DisablePlayerPhysics 	( .False )
  1FC:  	Call     SetPlayerJumpscale 	( 00000002 )
  20C:  	Set  *MapVar[C]  00000000 
  21C:  	Call     PlayerJump  	( FFFFFFCE 00000000 000000E1 0000000D )
  238:  	Call     HidePlayerShadow 	( .False )
  248:  	Call     802D10D8 ( 0000000A )
  258:  	Set  *MapVar[D]  00000000 
  268:  	Call     802CFCE8 ( *Var[0] )
  278:  	If  *Var[0]  ==  00000001 
  288:  		Wait     0000000A 
  294:  		Call     SetNpcJumpscale 	( .Npc:Partner 00000002 )
  2A8:  		Call     NpcJump0    	( .Npc:Partner FFFFFFBF 00000000 000000E1 0000000D )
  2C8:  	EndIf
  2D0:  	Call     EnableNpcShadow 	( .Npc:Partner .True )
  2E4:  	Call     SetNpcFlagBits ( .Npc:Partner 00000040 .False )
  2FC:  	Call     EnablePartnerAI 	( )
  308:  	Call     DisablePlayerInput 	( .False )
  318:  	Return
  320:  EndIf
  328:  Call     SetMusicTrack 	( 00000000 .Song:StarshipTheme 00000001 00000008 )
  344:  Thread
  34C:  	Call     PlaySoundAtPlayer 	( 0000017E 00000000 )
  360:  	Set  *Var[2]  *MapVar[A] 
  370:  	Call     MakeLerp    	( 00000000 FFFFFF92 0000003C 00000004 )
  38C:  	Loop     
  398:  		Call     UpdateLerp  	( )
  3A4:  		Add  *Var[0]  *Var[2] 
  3B4:  		Set  *MapVar[A]  *Var[0] 
  3C4:  		Wait     00000001 
  3D0:  		If  *Var[1]  ==  00000000 
  3E0:  			BreakLoop
  3E8:  		EndIf
  3F0:  	EndLoop
  3F8:  EndThread
  400:  Wait     00000032 
  40C:  Call     GotoMap     	( $ASCII_802412B8 00000005 )
  420:  Wait     00000064 
  42C:  Return
  434:  End

#new:Script $Script_80240E14
    0:  Set  *MapVar[A]  FFFFFF9C 
   10:  Set  *MapVar[B]  000000B4 
   20:  Set  *MapVar[C]  00000001 
   30:  Set  *MapVar[D]  00000001 
   40:  Call     InterpPlayerYaw 	( 0000005A 00000000 )
   54:  Call     DisablePlayerInput 	( .True )
   64:  Call     DisablePlayerPhysics 	( .True )
   74:  Call     802D10D8 ( 0000000A )
   84:  Call     DisablePartnerAI 	( 00000000 )
   94:  Call     SetNpcFlagBits ( .Npc:Partner 00000200 .False )
   AC:  Call     UseSettingsFrom 	( .Default FFFFFF88 00000000 000000E6 )
   C8:  Call     SetPanTarget 	( .Default FFFFFF88 00000000 000000E6 )
   E4:  Call     SetCamSpeed 	( .Default *Fixed[90.0] )
   F8:  Call     PanToTarget 	( .Default 00000000 00000001 )
  110:  Call     HidePlayerShadow 	( .False )
  120:  Call     EnableNpcShadow 	( .Npc:Partner .True )
  134:  Exec     $Script_80240780 *Var[9] 
  144:  Call     PlaySoundAtPlayer 	( 0000017F 00000000 )
  158:  Thread
  160:  	Call     MakeLerp    	( FFFFFF9C 00000000 0000003C 00000004 )
  17C:  	Loop     
  188:  		Call     UpdateLerp  	( )
  194:  		Set  *MapVar[A]  *Var[0] 
  1A4:  		Wait     00000001 
  1B0:  		If  *Var[1]  ==  00000000 
  1C0:  			BreakLoop
  1C8:  		EndIf
  1D0:  	EndLoop
  1D8:  EndThread
  1E0:  Wait     00000014 
  1EC:  Thread
  1F4:  	Call     InterpPlayerYaw 	( 0000010E 00000028 )
  208:  EndThread
  210:  Call     MakeLerp    	( 000000B4 00000000 0000003C 00000004 )
  22C:  Loop     
  238:  	Call     UpdateLerp  	( )
  244:  	Set  *MapVar[B]  *Var[0] 
  254:  	Wait     00000001 
  260:  	If  *Var[1]  ==  00000000 
  270:  		BreakLoop
  278:  	EndIf
  280:  EndLoop
  288:  Kill     *Var[9] 
  294:  Call     SetPlayerJumpscale 	( 00000002 )
  2A4:  Set  *MapVar[C]  00000000 
  2B4:  Call     PlayerJump  	( FFFFFFCE 00000000 000000E1 0000000D )
  2D0:  Call     HidePlayerShadow 	( .False )
  2E0:  Call     DisablePlayerPhysics 	( .False )
  2F0:  Set  *MapVar[D]  00000000 
  300:  Call     802CFCE8 ( *Var[0] )
  310:  If  *Var[0]  ==  00000001 
  320:  	Wait     0000000A 
  32C:  	Call     SetNpcJumpscale 	( .Npc:Partner 00000002 )
  340:  	Call     NpcJump0    	( .Npc:Partner FFFFFFBF 00000000 000000E1 0000000D )
  360:  EndIf
  368:  Call     EnableNpcShadow 	( .Npc:Partner .True )
  37C:  Call     EnablePartnerAI 	( )
  388:  Call     PanToTarget 	( .Default 00000000 00000000 )
  3A0:  Wait     0000000A 
  3AC:  If  *StoryProgress  <  0000005E 
  3BC:  	Set  *StoryProgress  0000005E 
  3CC:  EndIf
  3D4:  Call     SetMusicTrack 	( 00000000 .Song:BowsersCastle 00000000 00000008 )
  3F0:  Thread
  3F8:  	Wait     0000001E 
  404:  	Call     802D5FA4 ( 00000004 )
  414:  EndThread
  41C:  Call     DisablePlayerInput 	( .False )
  42C:  Return
  434:  End

#new:Script $Script_80241250
    0:  Exec     $Script_802407F0 
    C:  Call     ParentColliderToModel 	( {Collider:o400} {Model:o308} )
   20:  Loop     
   2C:  	Call     UpdateColliderTransform 	( {Collider:o400} )
   3C:  	Wait     00000001 
   48:  EndLoop
   50:  Return
   58:  End

#new:ASCII $ASCII_802412B0
kpa_62

#new:ASCII $ASCII_802412B8
kpa_60

