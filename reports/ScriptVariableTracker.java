package reports;

import data.shared.struct.script.ScriptVariable;
import util.Logger;


public class ScriptVariableTracker
{
  private static boolean[] foundBytes = new boolean[ScriptVariable.GameByte.getMaxValue()];
  private static boolean[] foundFlags = new boolean[ScriptVariable.GameFlag.getMaxValue()];
  
  private static boolean[] machiBytes = new boolean[ScriptVariable.GameByte.getMaxValue()];
  private static boolean[] machiFlags = new boolean[ScriptVariable.GameFlag.getMaxValue()];
  





















  private static final String machiByteString
  





















  private static final String machiFlagString
  






















  static
  {
    for (int i = 0; i < machiBytes.length; i++) {
      machiBytes[i] = ("1110000000001111110000000001111111111111111111100000000011000000000100000000011110000000001000000000111000000000100000000011111000000011100000000010000000001111110000000001100000000011000000000100000000011000000000111111000000000100000000010000000001111110000000001111111110000000000111110000000001111111110000000001000000000110000000001000000000111111111100000000011111111111111111111111111111110000000001000000000100000000011000000000XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX".charAt(i) == '1' ? 1 : false);
    }
    for (int i = 0; i < machiFlags.length; i++) {
      machiFlags[icharAt(i) == '1' ? 1 : false);
    }
  }
  
  public static void foundByte(int i) {
    foundBytes[i] = true;
    
    if (machiBytes[i] == 0) {
      Logger.logWarning("BYTE CONFLICTS WITH MACHI: " + i);
    }
  }
  
  public static void foundFlag(int i) {
    foundFlags[i] = true;
    
    if (machiFlags[i] == 0) {
      Logger.logWarning("FLAG CONFLICTS WITH MACHI: " + i);
    }
  }
  
  public ScriptVariableTracker() {}
}
